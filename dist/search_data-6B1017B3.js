searchData={"items":[{"type":"module","title":"Bonfire.UI.Coordination","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows)","ref":"Bonfire.UI.Coordination.html"},{"type":"module","title":"Handy commands - Bonfire.UI.Coordination","doc":"","ref":"Bonfire.UI.Coordination.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.UI.Coordination","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Coordination.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.UI.Coordination.mailer/0","doc":"","ref":"Bonfire.UI.Coordination.html#mailer/0"},{"type":"function","title":"Bonfire.UI.Coordination.remote_tag_id/0","doc":"","ref":"Bonfire.UI.Coordination.html#remote_tag_id/0"},{"type":"function","title":"Bonfire.UI.Coordination.remote_tag_prefix/0","doc":"","ref":"Bonfire.UI.Coordination.html#remote_tag_prefix/0"},{"type":"function","title":"Bonfire.UI.Coordination.repo/0","doc":"","ref":"Bonfire.UI.Coordination.html#repo/0"},{"type":"module","title":"Bonfire.UI.Coordination.FeedLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.FeedLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.FeedLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.FeedLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.FeedLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.FeedLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.FeedLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.FeedLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.ProcessLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.ProcessesLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Coordination.Routes","doc":"","ref":"Bonfire.UI.Coordination.Routes.html"},{"type":"function","title":"Bonfire.UI.Coordination.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Coordination.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Coordination.TaskLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.TaskLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.TaskLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Coordination.TasksLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.TasksLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.TasksLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.TasksLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.TasksLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.TasksLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.TasksLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.TasksLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Coordination.TodoLive.GraphQL","doc":"","ref":"Bonfire.UI.Coordination.TodoLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Coordination.TodoLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Coordination.TodoLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Coordination.TodoLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Coordination.TodoLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Coordination.TodoLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Coordination.TodoLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Groups","doc":"Pages and UI components for groups in Bonfire.\n\nIt builds upon the schemas and functionality in `Bonfire.Classify` and `Bonfire.Tag`.","ref":"Bonfire.UI.Groups.html"},{"type":"module","title":"Roadmap - Bonfire.UI.Groups","doc":"[Group Milestone](https://github.com/bonfire-networks/bonfire-app/milestone/33)","ref":"Bonfire.UI.Groups.html#module-roadmap"},{"type":"module","title":"Sponsors - Bonfire.UI.Groups","doc":"[Nlnet](https://nlnet.nl/project/Bonfire-FederatedGroups/index.html) | [Become a sponsor](https://opencollective.com/bonfire-networks)","ref":"Bonfire.UI.Groups.html#module-sponsors"},{"type":"module","title":"📖 Documentation - Bonfire.UI.Groups","doc":"* [Website](https://bonfirenetworks.org) \n* [Set up an instance](docs/DEPLOY.md) - for testing and evaluation only!\n* [Hacking on Bonfire](docs/HACKING.md) \n* [Code documentation](https://doc.bonfirenetworks.org/api-reference.html#content) \n* [Community chat](https://matrix.to/#/%23bonfire-networks:matrix.org)","ref":"Bonfire.UI.Groups.html#module-documentation"},{"type":"module","title":"Copyright and License - Bonfire.UI.Groups","doc":"Copyright (c) 2020-2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Groups.html#module-copyright-and-license"},{"type":"module","title":"Bonfire.UI.Groups.LiveHandler","doc":"","ref":"Bonfire.UI.Groups.LiveHandler.html"},{"type":"function","title":"Bonfire.UI.Groups.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.UI.Groups.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.UI.Groups.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.UI.Groups.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.UI.Groups.Routes","doc":"","ref":"Bonfire.UI.Groups.Routes.html"},{"type":"function","title":"Bonfire.UI.Groups.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Groups.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Groups.RuntimeConfig","doc":"","ref":"Bonfire.UI.Groups.RuntimeConfig.html"},{"type":"function","title":"Bonfire.UI.Groups.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.UI.Groups.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.UI.Groups.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.UI.Groups.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.UI.Kanban","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for a kanban app","ref":"Bonfire.UI.Kanban.html"},{"type":"module","title":"Handy commands - Bonfire.UI.Kanban","doc":"","ref":"Bonfire.UI.Kanban.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.UI.Kanban","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Kanban.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.UI.Kanban.mailer/0","doc":"","ref":"Bonfire.UI.Kanban.html#mailer/0"},{"type":"function","title":"Bonfire.UI.Kanban.remote_tag_id/0","doc":"","ref":"Bonfire.UI.Kanban.html#remote_tag_id/0"},{"type":"function","title":"Bonfire.UI.Kanban.remote_tag_prefix/0","doc":"","ref":"Bonfire.UI.Kanban.html#remote_tag_prefix/0"},{"type":"function","title":"Bonfire.UI.Kanban.repo/0","doc":"","ref":"Bonfire.UI.Kanban.html#repo/0"},{"type":"module","title":"Bonfire.UI.Kanban.BoardLive.GraphQL","doc":"","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Kanban.BoardLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Kanban.BoardLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Kanban.HomeLive.GraphQL","doc":"","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Kanban.HomeLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Kanban.HomeLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Kanban.Routes","doc":"","ref":"Bonfire.UI.Kanban.Routes.html"},{"type":"function","title":"Bonfire.UI.Kanban.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Kanban.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Reflow.Integration","doc":"","ref":"Bonfire.UI.Reflow.Integration.html"},{"type":"function","title":"Bonfire.UI.Reflow.Integration.mailer/0","doc":"","ref":"Bonfire.UI.Reflow.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.UI.Reflow.Integration.repo/0","doc":"","ref":"Bonfire.UI.Reflow.Integration.html#repo/0"},{"type":"module","title":"Bonfire.UI.Reflow.InventoryLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.InventoryLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.InventoryLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.InventoryLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.InventoryLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.InventoryLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.InventoryLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.InventoryLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.MaterialsLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.MaterialsLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.ProcessLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.ProcessLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.ProcessLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.ProcessLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.ProcessLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.ProcessesLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.ProcessesLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.ProfileInventoryLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.ResourceLive.GraphQL","doc":"","ref":"Bonfire.UI.Reflow.ResourceLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.Reflow.ResourceLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.Reflow.ResourceLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.Reflow.ResourceLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.Reflow.ResourceLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.Reflow.ResourceLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.Reflow.ResourceLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.Reflow.Routes","doc":"","ref":"Bonfire.UI.Reflow.Routes.html"},{"type":"function","title":"Bonfire.UI.Reflow.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Reflow.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Topics","doc":"","ref":"Bonfire.UI.Topics.html"},{"type":"module","title":"Bonfire.UI.Topics.LiveHandler","doc":"","ref":"Bonfire.UI.Topics.LiveHandler.html"},{"type":"function","title":"Bonfire.UI.Topics.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.UI.Topics.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.UI.Topics.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.UI.Topics.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.UI.Topics.Routes","doc":"","ref":"Bonfire.UI.Topics.Routes.html"},{"type":"function","title":"Bonfire.UI.Topics.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Topics.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Topics.RuntimeConfig","doc":"","ref":"Bonfire.UI.Topics.RuntimeConfig.html"},{"type":"function","title":"Bonfire.UI.Topics.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.UI.Topics.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.UI.Topics.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.UI.Topics.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL","doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.ValueFlows.AddMilestoneLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler","doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.UI.ValueFlows.CreateEconomicEventLive.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.UI.ValueFlows.CreateResourceSpecForm","doc":"","ref":"Bonfire.UI.ValueFlows.CreateResourceSpecForm.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateResourceSpecForm.changeset/1","doc":"","ref":"Bonfire.UI.ValueFlows.CreateResourceSpecForm.html#changeset/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateResourceSpecForm.send/3","doc":"","ref":"Bonfire.UI.ValueFlows.CreateResourceSpecForm.html#send/3"},{"type":"module","title":"Bonfire.UI.ValueFlows.CreateUnitForm","doc":"","ref":"Bonfire.UI.ValueFlows.CreateUnitForm.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateUnitForm.changeset/1","doc":"","ref":"Bonfire.UI.ValueFlows.CreateUnitForm.html#changeset/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateUnitForm.send/3","doc":"","ref":"Bonfire.UI.ValueFlows.CreateUnitForm.html#send/3"},{"type":"module","title":"Bonfire.UI.ValueFlows.CreateValueCalculationForm","doc":"","ref":"Bonfire.UI.ValueFlows.CreateValueCalculationForm.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateValueCalculationForm.changeset/1","doc":"","ref":"Bonfire.UI.ValueFlows.CreateValueCalculationForm.html#changeset/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.CreateValueCalculationForm.send/3","doc":"","ref":"Bonfire.UI.ValueFlows.CreateValueCalculationForm.html#send/3"},{"type":"module","title":"Bonfire.UI.ValueFlows.Integration","doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.Integration.declared_extension/0","doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html#declared_extension/0"},{"type":"function","title":"Bonfire.UI.ValueFlows.Integration.mailer/0","doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.UI.ValueFlows.Integration.repo/0","doc":"","ref":"Bonfire.UI.ValueFlows.Integration.html#repo/0"},{"type":"module","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL","doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.ValueFlows.IntentCreateActivityFieldsLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.UI.ValueFlows.RuntimeConfig","doc":"","ref":"Bonfire.UI.ValueFlows.RuntimeConfig.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.UI.ValueFlows.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.UI.ValueFlows.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.UI.ValueFlows.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL","doc":"","ref":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.html"},{"type":"function","title":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.process/2","doc":"","ref":"Bonfire.UI.ValueFlows.SettingsLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.API.GraphQL","doc":"An library for [Bonfire](https://bonfire.cafe/) that contains:\n\n- GraphQL API utilities","ref":"Bonfire.API.GraphQL.html"},{"type":"module","title":"Handy commands - Bonfire.API.GraphQL","doc":"","ref":"Bonfire.API.GraphQL.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.API.GraphQL","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.API.GraphQL.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.API.GraphQL.admin_or/2","doc":"","ref":"Bonfire.API.GraphQL.html#admin_or/2"},{"type":"function","title":"Bonfire.API.GraphQL.admin_or_empty_page/1","doc":"","ref":"Bonfire.API.GraphQL.html#admin_or_empty_page/1"},{"type":"function","title":"Bonfire.API.GraphQL.admin_or_not_permitted/1","doc":"","ref":"Bonfire.API.GraphQL.html#admin_or_not_permitted/1"},{"type":"function","title":"Bonfire.API.GraphQL.cast_int_ulid_id/1","doc":"","ref":"Bonfire.API.GraphQL.html#cast_int_ulid_id/1"},{"type":"function","title":"Bonfire.API.GraphQL.cast_nonnegint/1","doc":"","ref":"Bonfire.API.GraphQL.html#cast_nonnegint/1"},{"type":"function","title":"Bonfire.API.GraphQL.cast_posint/1","doc":"","ref":"Bonfire.API.GraphQL.html#cast_posint/1"},{"type":"function","title":"Bonfire.API.GraphQL.cast_ulid/1","doc":"","ref":"Bonfire.API.GraphQL.html#cast_ulid/1"},{"type":"function","title":"Bonfire.API.GraphQL.current_account/1","doc":"","ref":"Bonfire.API.GraphQL.html#current_account/1"},{"type":"function","title":"Bonfire.API.GraphQL.current_user/1","doc":"","ref":"Bonfire.API.GraphQL.html#current_user/1"},{"type":"function","title":"Bonfire.API.GraphQL.current_user_or/2","doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or/2"},{"type":"function","title":"Bonfire.API.GraphQL.current_user_or_empty_page/1","doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_empty_page/1"},{"type":"function","title":"Bonfire.API.GraphQL.current_user_or_not_found/1","doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_not_found/1"},{"type":"function","title":"Bonfire.API.GraphQL.current_user_or_not_logged_in/1","doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_not_logged_in/1"},{"type":"function","title":"Bonfire.API.GraphQL.empty_page/0","doc":"","ref":"Bonfire.API.GraphQL.html#empty_page/0"},{"type":"function","title":"Bonfire.API.GraphQL.equals_or/4","doc":"","ref":"Bonfire.API.GraphQL.html#equals_or/4"},{"type":"function","title":"Bonfire.API.GraphQL.equals_or_not_permitted/2","doc":"","ref":"Bonfire.API.GraphQL.html#equals_or_not_permitted/2"},{"type":"function","title":"Bonfire.API.GraphQL.full_page_opts/3","doc":"","ref":"Bonfire.API.GraphQL.html#full_page_opts/3"},{"type":"function","title":"Bonfire.API.GraphQL.guest_only/1","doc":"","ref":"Bonfire.API.GraphQL.html#guest_only/1"},{"type":"function","title":"Bonfire.API.GraphQL.in_list?/1","doc":"Are we in a list (recursively)?","ref":"Bonfire.API.GraphQL.html#in_list?/1"},{"type":"function","title":"Bonfire.API.GraphQL.invalid_credential/0","doc":"","ref":"Bonfire.API.GraphQL.html#invalid_credential/0"},{"type":"function","title":"Bonfire.API.GraphQL.is_authenticated/1","doc":"","ref":"Bonfire.API.GraphQL.html#is_authenticated/1"},{"type":"function","title":"Bonfire.API.GraphQL.limit_page_opts/2","doc":"","ref":"Bonfire.API.GraphQL.html#limit_page_opts/2"},{"type":"function","title":"Bonfire.API.GraphQL.list_depth/1","doc":"How many lists are we in (recursively)?","ref":"Bonfire.API.GraphQL.html#list_depth/1"},{"type":"function","title":"Bonfire.API.GraphQL.not_found/0","doc":"","ref":"Bonfire.API.GraphQL.html#not_found/0"},{"type":"function","title":"Bonfire.API.GraphQL.not_in_list_or/2","doc":"","ref":"Bonfire.API.GraphQL.html#not_in_list_or/2"},{"type":"function","title":"Bonfire.API.GraphQL.not_in_list_or_empty_page/1","doc":"","ref":"Bonfire.API.GraphQL.html#not_in_list_or_empty_page/1"},{"type":"function","title":"Bonfire.API.GraphQL.not_logged_in/0","doc":"","ref":"Bonfire.API.GraphQL.html#not_logged_in/0"},{"type":"function","title":"Bonfire.API.GraphQL.not_permitted/1","doc":"","ref":"Bonfire.API.GraphQL.html#not_permitted/1"},{"type":"function","title":"Bonfire.API.GraphQL.parent_name/1","doc":"","ref":"Bonfire.API.GraphQL.html#parent_name/1"},{"type":"function","title":"Bonfire.API.GraphQL.predicated/1","doc":"","ref":"Bonfire.API.GraphQL.html#predicated/1"},{"type":"function","title":"Bonfire.API.GraphQL.predicated/2","doc":"","ref":"Bonfire.API.GraphQL.html#predicated/2"},{"type":"function","title":"Bonfire.API.GraphQL.reproject/2","doc":"","ref":"Bonfire.API.GraphQL.html#reproject/2"},{"type":"function","title":"Bonfire.API.GraphQL.reverse_path/1","doc":"","ref":"Bonfire.API.GraphQL.html#reverse_path/1"},{"type":"function","title":"Bonfire.API.GraphQL.validate_cursor/2","doc":"","ref":"Bonfire.API.GraphQL.html#validate_cursor/2"},{"type":"function","title":"Bonfire.API.GraphQL.wanted/2","doc":"","ref":"Bonfire.API.GraphQL.html#wanted/2"},{"type":"module","title":"Bonfire.API.GraphQL.Auth","doc":"","ref":"Bonfire.API.GraphQL.Auth.html"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.account_by/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#account_by/1"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.build_context/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#build_context/1"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.login/3","doc":"Resolver for login mutation for Bonfire.API.GraphQL.CommonSchema","ref":"Bonfire.API.GraphQL.Auth.html#login/3"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.select_user/3","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#select_user/3"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.set_context_from_resolution/2","doc":"Puts the account/user data in Absinthe context (runs after on `login/3` resolver)","ref":"Bonfire.API.GraphQL.Auth.html#set_context_from_resolution/2"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.set_session_from_context/2","doc":"Sets session cookie based on the Absinthe context set in `set_context_from_resolution/2` (called from router's `absinthe_before_send/2` )","ref":"Bonfire.API.GraphQL.Auth.html#set_session_from_context/2"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.token_new/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#token_new/1"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.token_verify/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#token_verify/1"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.user_by/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#user_by/1"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.user_by/2","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#user_by/2"},{"type":"function","title":"Bonfire.API.GraphQL.Auth.username/1","doc":"","ref":"Bonfire.API.GraphQL.Auth.html#username/1"},{"type":"module","title":"Bonfire.API.GraphQL.CommonResolver","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.canonical_url_edge/3","doc":"Returns the canonical url for a thing or character","ref":"Bonfire.API.GraphQL.CommonResolver.html#canonical_url_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.context_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#context_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.context_edges/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#context_edges/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.created_at_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#created_at_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.delete/2","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#delete/2"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.display_username_edge/3","doc":"Returns the username for a character","ref":"Bonfire.API.GraphQL.CommonResolver.html#display_username_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.fetch_context_edge/2","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#fetch_context_edge/2"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.fetch_context_edges/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#fetch_context_edges/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.is_deleted_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_deleted_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.is_disabled_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_disabled_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.is_hidden_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_hidden_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.is_local_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_local_edge/3"},{"type":"function","title":"Bonfire.API.GraphQL.CommonResolver.is_public_edge/3","doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_public_edge/3"},{"type":"module","title":"Bonfire.API.GraphQL.CommonSchema","doc":"","ref":"Bonfire.API.GraphQL.CommonSchema.html"},{"type":"module","title":"Bonfire.API.GraphQL.Cursor","doc":"","ref":"Bonfire.API.GraphQL.Cursor.html"},{"type":"module","title":"Bonfire.API.GraphQL.FetchFields","doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html"},{"type":"function","title":"Bonfire.API.GraphQL.FetchFields.run/1","doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html#run/1"},{"type":"type","title":"Bonfire.API.GraphQL.FetchFields.t/0","doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.FetchPage","doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html"},{"type":"function","title":"Bonfire.API.GraphQL.FetchPage.run/1","doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html#run/1"},{"type":"type","title":"Bonfire.API.GraphQL.FetchPage.t/0","doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.FetchPages","doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html"},{"type":"function","title":"Bonfire.API.GraphQL.FetchPages.run/1","doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html#run/1"},{"type":"type","title":"Bonfire.API.GraphQL.FetchPages.t/0","doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.Fields","doc":"","ref":"Bonfire.API.GraphQL.Fields.html"},{"type":"function","title":"Bonfire.API.GraphQL.Fields.get/3","doc":"Returns the result corresponding to the given key, or the given default (or nil).","ref":"Bonfire.API.GraphQL.Fields.html#get/3"},{"type":"function","title":"Bonfire.API.GraphQL.Fields.getter/2","doc":"Returns a post-batch callback function which calls get with the\nprovided key and optional default value (or nil).","ref":"Bonfire.API.GraphQL.Fields.html#getter/2"},{"type":"function","title":"Bonfire.API.GraphQL.Fields.new/2","doc":"Creates a new Fields from the data and a grouping function","ref":"Bonfire.API.GraphQL.Fields.html#new/2"},{"type":"function","title":"Bonfire.API.GraphQL.Fields.new/3","doc":"","ref":"Bonfire.API.GraphQL.Fields.html#new/3"},{"type":"type","title":"Bonfire.API.GraphQL.Fields.t/0","doc":"","ref":"Bonfire.API.GraphQL.Fields.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.JSON","doc":"The Json scalar type allows arbitrary JSON values to be passed in and out.\nRequires `{ :jason, \"~> 1.1\" }` package: https://github.com/michalmuskala/jason","ref":"Bonfire.API.GraphQL.JSON.html"},{"type":"module","title":"Bonfire.API.GraphQL.MastoCompatible.Router","doc":"","ref":"Bonfire.API.GraphQL.MastoCompatible.Router.html"},{"type":"macro","title":"Bonfire.API.GraphQL.MastoCompatible.Router.include_masto_api/0","doc":"","ref":"Bonfire.API.GraphQL.MastoCompatible.Router.html#include_masto_api/0"},{"type":"module","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors","doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.call/2","doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#call/2"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.collapse/1","doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#collapse/1"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.collapse/2","doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#collapse/2"},{"type":"module","title":"Bonfire.API.GraphQL.Middleware.Debug","doc":"","ref":"Bonfire.API.GraphQL.Middleware.Debug.html"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.Debug.call/2","doc":"","ref":"Bonfire.API.GraphQL.Middleware.Debug.html#call/2"},{"type":"module","title":"Bonfire.API.GraphQL.Middleware.RenderLists","doc":"","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.RenderLists.call/2","doc":"","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html#call/2"},{"type":"function","title":"Bonfire.API.GraphQL.Middleware.RenderLists.collapse/1","doc":"","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html#collapse/1"},{"type":"module","title":"Bonfire.API.GraphQL.Page","doc":"","ref":"Bonfire.API.GraphQL.Page.html"},{"type":"function","title":"Bonfire.API.GraphQL.Page.new/4","doc":"","ref":"Bonfire.API.GraphQL.Page.html#new/4"},{"type":"type","title":"Bonfire.API.GraphQL.Page.t/0","doc":"","ref":"Bonfire.API.GraphQL.Page.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.PageInfo","doc":"Information about this page's relation to a larger result set","ref":"Bonfire.API.GraphQL.PageInfo.html"},{"type":"function","title":"Bonfire.API.GraphQL.PageInfo.new/4","doc":"","ref":"Bonfire.API.GraphQL.PageInfo.html#new/4"},{"type":"type","title":"Bonfire.API.GraphQL.PageInfo.t/0","doc":"","ref":"Bonfire.API.GraphQL.PageInfo.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.Pages","doc":"","ref":"Bonfire.API.GraphQL.Pages.html"},{"type":"function","title":"Bonfire.API.GraphQL.Pages.get/2","doc":"Returns a Page for the given key, defaulting to an empty one","ref":"Bonfire.API.GraphQL.Pages.html#get/2"},{"type":"function","title":"Bonfire.API.GraphQL.Pages.getter/1","doc":"Returns a post-batch callback (i.e. the third argument to batch/3)\nfor a key which calls get() with the callback param and the key","ref":"Bonfire.API.GraphQL.Pages.html#getter/1"},{"type":"function","title":"Bonfire.API.GraphQL.Pages.new/4","doc":"Create a new pages from a data map, counts map, cursor function and page opts","ref":"Bonfire.API.GraphQL.Pages.html#new/4"},{"type":"function","title":"Bonfire.API.GraphQL.Pages.new/5","doc":"Create a new Pages from some data rows, count rows and a\ngrouping key. Groups the data by the grouping key on insertion and\nturns the counts into a map ready for lookup on a per-row basis.\n\nNote: if the grouping key is not present in the returned data rows,\nthis function will crash. Our intuition is that this would mean an\nerror in the calling code, so we would rather raise it early.","ref":"Bonfire.API.GraphQL.Pages.html#new/5"},{"type":"type","title":"Bonfire.API.GraphQL.Pages.counts/0","doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:counts/0"},{"type":"type","title":"Bonfire.API.GraphQL.Pages.data/0","doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:data/0"},{"type":"type","title":"Bonfire.API.GraphQL.Pages.t/0","doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.Pagination","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html"},{"type":"function","title":"Bonfire.API.GraphQL.Pagination.connection_paginate/3","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#connection_paginate/3"},{"type":"function","title":"Bonfire.API.GraphQL.Pagination.page/7","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#page/7"},{"type":"function","title":"Bonfire.API.GraphQL.Pagination.page_all/7","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#page_all/7"},{"type":"function","title":"Bonfire.API.GraphQL.Pagination.pages/8","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#pages/8"},{"type":"function","title":"Bonfire.API.GraphQL.Pagination.pagination_args_filter/1","doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#pagination_args_filter/1"},{"type":"module","title":"Bonfire.API.GraphQL.PlugPipelines","doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html"},{"type":"function","title":"Bonfire.API.GraphQL.PlugPipelines.default_pipeline/2","doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html#default_pipeline/2"},{"type":"function","title":"Bonfire.API.GraphQL.PlugPipelines.run/2","doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html#run/2"},{"type":"module","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext","doc":"GraphQL Plug to add current user to the context","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html"},{"type":"function","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext.call/2","doc":"","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html#call/2"},{"type":"function","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext.init/1","doc":"","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html#init/1"},{"type":"module","title":"Bonfire.API.GraphQL.QueryHelper","doc":"Helpful functions for preparing to query or test Absinthe applications.\n\nThese functions make it trivially easy to generate very large, comprehensive queries for our types in Absinthe that will resolve every field in that type (and any number of subtypes as well to a given level of depth)\n\nAdapted from https://github.com/devonestes/assertions (MIT license)","ref":"Bonfire.API.GraphQL.QueryHelper.html"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.apply_overrides/2","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#apply_overrides/2"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.camelize/1","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#camelize/1"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.do_format_fields/3","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#do_format_fields/3"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.document_for/4","doc":"Returns a document containing the fields in a type and any sub-types down to a limited depth of\nnesting (default `3`).\n\nThis is helpful for generating a document to use for testing your GraphQL API. This function\nwill always return all fields in the given type, ensuring that there aren't any accidental\nfields with resolver functions that aren't tested in at least some fashion.","ref":"Bonfire.API.GraphQL.QueryHelper.html#document_for/4"},{"type":"function","title":"Example - Bonfire.API.GraphQL.QueryHelper.document_for/4","doc":"iex> document_for(:user, 2)\n\n    ```\n    name\n    age\n    posts {\n      title\n      subtitle\n    }\n    comments {\n      body\n    }\n    ```","ref":"Bonfire.API.GraphQL.QueryHelper.html#document_for/4-example"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.fields_for/3","doc":"Returns all fields in a type and any sub-types down to a limited depth of nesting (default `3`).\n\nThis is helpful for converting a struct or map into an expected response that is a bare map\nand which can be used in some of the other assertions below.","ref":"Bonfire.API.GraphQL.QueryHelper.html#fields_for/3"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.format_fields/4","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#format_fields/4"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.get_fields/3","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#get_fields/3"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.maybe_debug_api/4","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#maybe_debug_api/4"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.padding/1","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#padding/1"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.query_with_id/4","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#query_with_id/4"},{"type":"function","title":"Bonfire.API.GraphQL.QueryHelper.run_query_id/6","doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#run_query_id/6"},{"type":"module","title":"Bonfire.API.GraphQL.ResolveField","doc":"Encapsulates the flow for resolving a field in the absence of\nmultiple parents.","ref":"Bonfire.API.GraphQL.ResolveField.html"},{"type":"function","title":"Bonfire.API.GraphQL.ResolveField.run/1","doc":"","ref":"Bonfire.API.GraphQL.ResolveField.html#run/1"},{"type":"module","title":"Bonfire.API.GraphQL.ResolveFields","doc":"Encapsulates the flow for resolving a field for potentially multiple\nparents.","ref":"Bonfire.API.GraphQL.ResolveFields.html"},{"type":"function","title":"Bonfire.API.GraphQL.ResolveFields.default_getter/2","doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#default_getter/2"},{"type":"function","title":"Bonfire.API.GraphQL.ResolveFields.run/1","doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#run/1"},{"type":"type","title":"Bonfire.API.GraphQL.ResolveFields.getter/0","doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#t:getter/0"},{"type":"type","title":"Bonfire.API.GraphQL.ResolveFields.t/0","doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#t:t/0"},{"type":"module","title":"Bonfire.API.GraphQL.ResolvePage","doc":"Encapsulates the flow of resolving a page in the presence of a\nsingle parent. We also currently use this as a stopgap while we\nfinish implementing some things, trading speed for correctness.","ref":"Bonfire.API.GraphQL.ResolvePage.html"},{"type":"function","title":"Bonfire.API.GraphQL.ResolvePage.run/1","doc":"","ref":"Bonfire.API.GraphQL.ResolvePage.html#run/1"},{"type":"module","title":"Bonfire.API.GraphQL.ResolvePages","doc":"Encapsulates the flow of resolving a page in the presence of a\nsingle parent. We also currently use this as a stopgap while we\nfinish implementing some things, trading speed for correctness.","ref":"Bonfire.API.GraphQL.ResolvePages.html"},{"type":"function","title":"Bonfire.API.GraphQL.ResolvePages.run/1","doc":"","ref":"Bonfire.API.GraphQL.ResolvePages.html#run/1"},{"type":"module","title":"Bonfire.API.GraphQL.ResolveRootPage","doc":"Encapsulates the flow of resolving a page in the absence of parents.","ref":"Bonfire.API.GraphQL.ResolveRootPage.html"},{"type":"function","title":"Bonfire.API.GraphQL.ResolveRootPage.run/1","doc":"","ref":"Bonfire.API.GraphQL.ResolveRootPage.html#run/1"},{"type":"module","title":"Bonfire.API.GraphQL.RestAdapter","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.endpoint/3","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#endpoint/3"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.error_fn/2","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#error_fn/2"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.return/4","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#return/4"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.success_fn/2","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#success_fn/2"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.transform_data/1","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#transform_data/1"},{"type":"function","title":"Bonfire.API.GraphQL.RestAdapter.transform_data/2","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.html#transform_data/2"},{"type":"module","title":"Bonfire.API.GraphQL.RestAdapter.EndpointConfig","doc":"","ref":"Bonfire.API.GraphQL.RestAdapter.EndpointConfig.html"},{"type":"module","title":"Bonfire.API.GraphQL.Router","doc":"","ref":"Bonfire.API.GraphQL.Router.html"},{"type":"module","title":"Bonfire.API.GraphQL.SchemaPipelines","doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html"},{"type":"function","title":"Bonfire.API.GraphQL.SchemaPipelines.pipeline/1","doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html#pipeline/1"},{"type":"function","title":"Bonfire.API.GraphQL.SchemaPipelines.run/2","doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html#run/2"},{"type":"module","title":"Bonfire.API.GraphQL.SchemaUtils","doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html"},{"type":"function","title":"Bonfire.API.GraphQL.SchemaUtils.context_types/0","doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html#context_types/0"},{"type":"function","title":"Bonfire.API.GraphQL.SchemaUtils.hydrations_merge/1","doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html#hydrations_merge/1"},{"type":"module","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_binary/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_binary/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_boolean/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_boolean/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_created_at/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_created_at/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_cursor/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_cursor/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_cursors/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_cursors/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_datetime/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_datetime/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_datetime/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_datetime/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_display_username/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_display_username/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_email/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_email/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_eq/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_eq/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_field/3","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_field/3"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_float/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_float/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_int/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_int/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_invalid_credential/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_invalid_credential/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/0","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/0"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_location/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_location/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/3","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/3"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/4","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/4"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/5","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/5"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_non_neg/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_non_neg/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_found/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_found/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_logged_in/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_logged_in/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_permitted/3","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_permitted/3"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_object/4","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_object/4"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_optional/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_optional/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_optional_field/3","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_optional_field/3"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/0","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/0"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/6","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/6"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page_info/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page_info/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_pos/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_pos/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_ulid/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_ulid/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_updated_at/2","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_updated_at/2"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_url/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_url/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_username/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_username/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_uuid/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_uuid/1"},{"type":"function","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.uncamel_map/1","doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#uncamel_map/1"},{"type":"module","title":"Bonfire.API.GraphQL.UserSocket","doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html"},{"type":"function","title":"Bonfire.API.GraphQL.UserSocket.build_context_from_params/2","doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html#build_context_from_params/2"},{"type":"function","title":"Bonfire.API.GraphQL.UserSocket.connect/2","doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html#connect/2"},{"type":"function","title":"Bonfire.API.GraphQL.UserSocket.id/1","doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html#id/1"},{"type":"module","title":"Bonfire.Files","doc":"File management extension for Bonfire.  \n\nBonfire Files wraps the `Entrepot` a file management library, \nadding support for media type checking, image resizing, and the like, \nalong with creating a [pointable][1] table for storage of file data.\n\n[1]: https://github.com/bonfire-networks/needle","ref":"Bonfire.Files.html"},{"type":"module","title":"Configuration - Bonfire.Files","doc":"","ref":"Bonfire.Files.html#module-configuration"},{"type":"module","title":"TODO's - Bonfire.Files","doc":"- Generate docs\n- More tests\n\n\nThis module contains general functions for handling files, and also an Ecto schema which is a multimixin for storing one or more media attached to a Pointable object.\n\nAn uploader definition must be provided for each upload, or will be automatically chosen based on the file type.\n\nA few definitions exist as defaults inside of this namespace, but you can also define\nyour own - a `Bonfire.Files.Definition` is an extension of `Waffle.Definition`,\nhowever the `allowed_media_types/0` and `max_file_size/0` callback are added,\nwith which you need to define what media types are accepted for these types of uploads.\n(You can also return `:all` to accept all media types).\n\nTo use the uploader:\n\n```\niex> {:ok, media} = Bonfire.Files.upload(MyUploader, creator_or_context, %{path: \"./150.png\"})\niex> media.media_type\n\"image/png\"\niex> Bonfire.Files.remote_url(MyUploader, media)\n\"/uploads/my/01F3AY6JV30G06BY4DR9BTW5EH\"\n```","ref":"Bonfire.Files.html#module-todo-s"},{"type":"function","title":"Bonfire.Files.ap_publish_activity/1","doc":"","ref":"Bonfire.Files.html#ap_publish_activity/1"},{"type":"function","title":"Bonfire.Files.ap_receive_attachments/2","doc":"","ref":"Bonfire.Files.html#ap_receive_attachments/2"},{"type":"function","title":"Bonfire.Files.data_url/2","doc":"","ref":"Bonfire.Files.html#data_url/2"},{"type":"function","title":"Bonfire.Files.extract_metadata/1","doc":"","ref":"Bonfire.Files.html#extract_metadata/1"},{"type":"function","title":"Bonfire.Files.file_extension/1","doc":"","ref":"Bonfire.Files.html#file_extension/1"},{"type":"function","title":"Bonfire.Files.file_extension_only/1","doc":"","ref":"Bonfire.Files.html#file_extension_only/1"},{"type":"function","title":"Bonfire.Files.full_url/2","doc":"","ref":"Bonfire.Files.html#full_url/2"},{"type":"function","title":"Bonfire.Files.normalise_size/2","doc":"","ref":"Bonfire.Files.html#normalise_size/2"},{"type":"function","title":"Bonfire.Files.remote_url/3","doc":"Return the URL that a local file has.","ref":"Bonfire.Files.html#remote_url/3"},{"type":"function","title":"Bonfire.Files.upload/5","doc":"Attempt to store a file, returning an upload, for any parent item that\nparticipates in the meta abstraction, providing the user/context of\nthe upload.","ref":"Bonfire.Files.html#upload/5"},{"type":"function","title":"Bonfire.Files.validate/3","doc":"","ref":"Bonfire.Files.html#validate/3"},{"type":"module","title":"Bonfire.Files.Acts.AttachMedia","doc":"Saves uploaded files as attachments to the post.\n\nAct Options:\n  * `:changeset` - key in assigns to find changeset, required\n  * `:attrs` - epic options key to find the attributes at, default: `:post_attrs`.\n  * `:uploads` - epic options key to find the uploaded media objects at, default: `:uploaded_media`.","ref":"Bonfire.Files.Acts.AttachMedia.html"},{"type":"function","title":"Bonfire.Files.Acts.AttachMedia.cast/2","doc":"","ref":"Bonfire.Files.Acts.AttachMedia.html#cast/2"},{"type":"function","title":"Bonfire.Files.Acts.AttachMedia.run/2","doc":"","ref":"Bonfire.Files.Acts.AttachMedia.html#run/2"},{"type":"module","title":"Bonfire.Files.Acts.URLPreviews","doc":"Fetch and save metadata of URLs\n\nAct Options:\n  * `:changeset` - key in assigns to find changeset, required\n  * `:attrs` - epic options key to find the attributes at, default: `:post_attrs`.\n  * `:uploads` - epic options key to find the uploaded media objects at, default: `:urls`.","ref":"Bonfire.Files.Acts.URLPreviews.html"},{"type":"function","title":"Bonfire.Files.Acts.URLPreviews.maybe_fetch_and_save/3","doc":"","ref":"Bonfire.Files.Acts.URLPreviews.html#maybe_fetch_and_save/3"},{"type":"function","title":"Bonfire.Files.Acts.URLPreviews.run/2","doc":"","ref":"Bonfire.Files.Acts.URLPreviews.html#run/2"},{"type":"module","title":"Bonfire.Files.BannerUploader","doc":"Uploader for larger images, for example, a profile page banner.\n\nDoes not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.BannerUploader.html"},{"type":"function","title":"Bonfire.Files.BannerUploader.acl/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.asset_host/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.async/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.attach/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.blurhash/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.blurred/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.bucket/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.bucket/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.default_url/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.default_url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.delete/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.filename/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.max_height/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#max_height/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.max_width/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#max_width/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.prepare/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.remote_url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.store/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.transform/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.upload/4","doc":"","ref":"Bonfire.Files.BannerUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/3","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.BannerUploader.urls/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.validate/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.Blurred","doc":"","ref":"Bonfire.Files.Blurred.html"},{"type":"function","title":"Bonfire.Files.Blurred.blurhash/2","doc":"","ref":"Bonfire.Files.Blurred.html#blurhash/2"},{"type":"function","title":"Bonfire.Files.Blurred.blurhash_cached/1","doc":"","ref":"Bonfire.Files.Blurred.html#blurhash_cached/1"},{"type":"function","title":"Bonfire.Files.Blurred.blurred/2","doc":"Create a blurred JPEG (deprecated in favour of blurhash)","ref":"Bonfire.Files.Blurred.html#blurred/2"},{"type":"function","title":"Bonfire.Files.Blurred.make_blurhash/1","doc":"","ref":"Bonfire.Files.Blurred.html#make_blurhash/1"},{"type":"module","title":"Bonfire.Files.CapsuleIntegration.Attacher","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.attach/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#attach/3"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.storages/2","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#storages/2"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.store/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#store/3"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.upload/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#upload/3"},{"type":"module","title":"Bonfire.Files.DOI","doc":"","ref":"Bonfire.Files.DOI.html"},{"type":"function","title":"Bonfire.Files.DOI.fetch/2","doc":"","ref":"Bonfire.Files.DOI.html#fetch/2"},{"type":"function","title":"Bonfire.Files.DOI.fetch_crossref/1","doc":"","ref":"Bonfire.Files.DOI.html#fetch_crossref/1"},{"type":"function","title":"Bonfire.Files.DOI.is_doi?/1","doc":"","ref":"Bonfire.Files.DOI.html#is_doi?/1"},{"type":"function","title":"Bonfire.Files.DOI.is_pub_id_or_uri_match?/1","doc":"","ref":"Bonfire.Files.DOI.html#is_pub_id_or_uri_match?/1"},{"type":"function","title":"Bonfire.Files.DOI.maybe_fetch/1","doc":"","ref":"Bonfire.Files.DOI.html#maybe_fetch/1"},{"type":"function","title":"Bonfire.Files.DOI.pub_id_and_uri_matchers/0","doc":"","ref":"Bonfire.Files.DOI.html#pub_id_and_uri_matchers/0"},{"type":"function","title":"Bonfire.Files.DOI.pub_id_matcher/1","doc":"","ref":"Bonfire.Files.DOI.html#pub_id_matcher/1"},{"type":"function","title":"Bonfire.Files.DOI.pub_id_matchers/0","doc":"","ref":"Bonfire.Files.DOI.html#pub_id_matchers/0"},{"type":"function","title":"Bonfire.Files.DOI.pub_uri_matchers/0","doc":"","ref":"Bonfire.Files.DOI.html#pub_uri_matchers/0"},{"type":"behaviour","title":"Bonfire.Files.Definition","doc":"Extension to Waffle.Definition, adding support for checking against media types\nparsed through magic bytes instead of file extensions, which can be modified by the user.\n\nYou can still use validate/2 and other waffle callbacks.","ref":"Bonfire.Files.Definition.html"},{"type":"callback","title":"Bonfire.Files.Definition.allowed_media_types/0","doc":"","ref":"Bonfire.Files.Definition.html#c:allowed_media_types/0"},{"type":"module","title":"Bonfire.Files.DocumentUploader","doc":"","ref":"Bonfire.Files.DocumentUploader.html"},{"type":"function","title":"Bonfire.Files.DocumentUploader.acl/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.asset_host/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.async/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.attach/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.blurhash/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.blurred/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.bucket/0","doc":"Definition for any type of document, allows most media types\nthat support documents, archives, video and audio.","ref":"Bonfire.Files.DocumentUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.bucket/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.default_url/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.default_url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.delete/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.filename/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.prepare/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.remote_url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.store/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.transform/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.upload/4","doc":"","ref":"Bonfire.Files.DocumentUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/3","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.DocumentUploader.urls/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.validate/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.EmojiUploader","doc":"","ref":"Bonfire.Files.EmojiUploader.html"},{"type":"function","title":"Bonfire.Files.EmojiUploader.acl/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.asset_host/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.async/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.attach/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.blurhash/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.blurred/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.bucket/0","doc":"Uploader for smaller image icons, usually used as avatars.\n\nTODO: Support resizing.","ref":"Bonfire.Files.EmojiUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.bucket/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.default_url/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.default_url/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.delete/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.filename/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.prepare/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.remote_url/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.EmojiUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.EmojiUploader.store/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.transform/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.upload/4","doc":"","ref":"Bonfire.Files.EmojiUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.EmojiUploader.url/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.EmojiUploader.url/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.url/3","doc":"","ref":"Bonfire.Files.EmojiUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.EmojiUploader.urls/2","doc":"","ref":"Bonfire.Files.EmojiUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.EmojiUploader.validate/1","doc":"","ref":"Bonfire.Files.EmojiUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.FaviconStore","doc":"","ref":"Bonfire.Files.FaviconStore.html"},{"type":"function","title":"Bonfire.Files.FaviconStore.acl/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#acl/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.allowed_media_types/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.asset_host/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.async/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#async/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.attach/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#attach/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.blurhash/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.blurred/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#blurred/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.bucket/0","doc":"Definition for storing media types for a URL","ref":"Bonfire.Files.FaviconStore.html#bucket/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.bucket/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#bucket/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.cached_or_async_fetch_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#cached_or_async_fetch_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.cached_or_fetch/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#cached_or_fetch/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.default_url/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.default_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.delete/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#delete/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.favicon_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#favicon_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.filename/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#filename/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.max_file_size/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.prefix_dir/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.prepare/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#prepare/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.remote_file_headers/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.remote_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.s3_object_headers/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.storage_dir/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.store/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#store/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.transform/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#transform/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.upload/4","doc":"","ref":"Bonfire.Files.FaviconStore.html#upload/4"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/3","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/3"},{"type":"function","title":"Bonfire.Files.FaviconStore.urls/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#urls/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.validate/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#validate/1"},{"type":"module","title":"Bonfire.Files.FileDenied","doc":"","ref":"Bonfire.Files.FileDenied.html"},{"type":"function","title":"Bonfire.Files.FileDenied.new/1","doc":"","ref":"Bonfire.Files.FileDenied.html#new/1"},{"type":"type","title":"Bonfire.Files.FileDenied.t/0","doc":"","ref":"Bonfire.Files.FileDenied.html#t:t/0"},{"type":"module","title":"Bonfire.Files.IconUploader","doc":"","ref":"Bonfire.Files.IconUploader.html"},{"type":"function","title":"Bonfire.Files.IconUploader.acl/2","doc":"","ref":"Bonfire.Files.IconUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.IconUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.IconUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.IconUploader.asset_host/0","doc":"","ref":"Bonfire.Files.IconUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.IconUploader.async/0","doc":"","ref":"Bonfire.Files.IconUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.IconUploader.attach/2","doc":"","ref":"Bonfire.Files.IconUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.IconUploader.blurhash/1","doc":"","ref":"Bonfire.Files.IconUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.IconUploader.blurred/1","doc":"","ref":"Bonfire.Files.IconUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.IconUploader.bucket/0","doc":"Uploader for smaller image icons, usually used as avatars.\n\nTODO: Support resizing.","ref":"Bonfire.Files.IconUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.IconUploader.bucket/1","doc":"","ref":"Bonfire.Files.IconUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.IconUploader.default_url/1","doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.IconUploader.default_url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.delete/1","doc":"","ref":"Bonfire.Files.IconUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.IconUploader.filename/2","doc":"","ref":"Bonfire.Files.IconUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.IconUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.IconUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.IconUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.IconUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.IconUploader.prepare/1","doc":"","ref":"Bonfire.Files.IconUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.IconUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.IconUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.IconUploader.remote_url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.IconUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.IconUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.IconUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.IconUploader.store/1","doc":"","ref":"Bonfire.Files.IconUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.IconUploader.transform/2","doc":"","ref":"Bonfire.Files.IconUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.IconUploader.upload/4","doc":"","ref":"Bonfire.Files.IconUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.IconUploader.url/1","doc":"","ref":"Bonfire.Files.IconUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.IconUploader.url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.url/3","doc":"","ref":"Bonfire.Files.IconUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.IconUploader.urls/2","doc":"","ref":"Bonfire.Files.IconUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.IconUploader.validate/1","doc":"","ref":"Bonfire.Files.IconUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.ImageUploader","doc":"Uploader for larger images, for example, a profile page banner.\n\nDoes not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.ImageUploader.html"},{"type":"function","title":"Bonfire.Files.ImageUploader.acl/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.asset_host/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.async/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.attach/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.blurhash/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.blurred/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.bucket/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.bucket/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.default_url/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.default_url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.delete/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.filename/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.max_width/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#max_width/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.prepare/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.remote_url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.store/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.transform/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.upload/4","doc":"","ref":"Bonfire.Files.ImageUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/3","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.ImageUploader.urls/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.validate/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.LiveHandler","doc":"","ref":"Bonfire.Files.LiveHandler.html"},{"type":"function","title":"Bonfire.Files.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Files.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Files.LiveHandler.handle_progress/3","doc":"","ref":"Bonfire.Files.LiveHandler.html#handle_progress/3"},{"type":"function","title":"Bonfire.Files.LiveHandler.set_fallback/5","doc":"","ref":"Bonfire.Files.LiveHandler.html#set_fallback/5"},{"type":"macro","title":"Bonfire.Files.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Files.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Files.Media","doc":"","ref":"Bonfire.Files.Media.html"},{"type":"function","title":"Bonfire.Files.Media.ap_publish_activity/3","doc":"","ref":"Bonfire.Files.Media.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Files.Media.ap_receive_activity/3","doc":"","ref":"Bonfire.Files.Media.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Files.Media.context_module/0","doc":"","ref":"Bonfire.Files.Media.html#context_module/0"},{"type":"function","title":"Bonfire.Files.Media.description/1","doc":"","ref":"Bonfire.Files.Media.html#description/1"},{"type":"function","title":"Bonfire.Files.Media.federation_module/0","doc":"","ref":"Bonfire.Files.Media.html#federation_module/0"},{"type":"function","title":"Bonfire.Files.Media.get_by_path/1","doc":"","ref":"Bonfire.Files.Media.html#get_by_path/1"},{"type":"function","title":"Bonfire.Files.Media.hard_delete/2","doc":"Delete an upload, removing any associated files.","ref":"Bonfire.Files.Media.html#hard_delete/2"},{"type":"function","title":"Bonfire.Files.Media.insert/4","doc":"","ref":"Bonfire.Files.Media.html#insert/4"},{"type":"function","title":"Bonfire.Files.Media.many/2","doc":"","ref":"Bonfire.Files.Media.html#many/2"},{"type":"function","title":"Bonfire.Files.Media.media_label/1","doc":"","ref":"Bonfire.Files.Media.html#media_label/1"},{"type":"function","title":"Bonfire.Files.Media.one/2","doc":"","ref":"Bonfire.Files.Media.html#one/2"},{"type":"function","title":"Bonfire.Files.Media.query_module/0","doc":"","ref":"Bonfire.Files.Media.html#query_module/0"},{"type":"function","title":"Bonfire.Files.Media.schema_module/0","doc":"","ref":"Bonfire.Files.Media.html#schema_module/0"},{"type":"function","title":"Bonfire.Files.Media.soft_delete/1","doc":"Delete an upload, removing it from indexing, but the files remain available.","ref":"Bonfire.Files.Media.html#soft_delete/1"},{"type":"function","title":"Bonfire.Files.Media.unwrap/1","doc":"","ref":"Bonfire.Files.Media.html#unwrap/1"},{"type":"function","title":"Bonfire.Files.Media.update/3","doc":"","ref":"Bonfire.Files.Media.html#update/3"},{"type":"function","title":"Bonfire.Files.Media.update_by/2","doc":"","ref":"Bonfire.Files.Media.html#update_by/2"},{"type":"type","title":"Bonfire.Files.Media.t/0","doc":"","ref":"Bonfire.Files.Media.html#t:t/0"},{"type":"module","title":"Bonfire.Files.Media.Queries","doc":"","ref":"Bonfire.Files.Media.Queries.html"},{"type":"function","title":"Bonfire.Files.Media.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Files.Media.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Files.Media.Queries.query/1","doc":"","ref":"Bonfire.Files.Media.Queries.html#query/1"},{"type":"function","title":"Bonfire.Files.Media.Queries.query/2","doc":"","ref":"Bonfire.Files.Media.Queries.html#query/2"},{"type":"module","title":"Bonfire.Files.MediaEdit","doc":"","ref":"Bonfire.Files.MediaEdit.html"},{"type":"function","title":"Bonfire.Files.MediaEdit.banner/3","doc":"","ref":"Bonfire.Files.MediaEdit.html#banner/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.blur/2","doc":"","ref":"Bonfire.Files.MediaEdit.html#blur/2"},{"type":"function","title":"Bonfire.Files.MediaEdit.dominant_color/3","doc":"Returns the dominant color of an image (given as path, binary, or stream) as HEX value.\n\n`bins` is an integer number of color frequency bins the image is divided into. The default is 10.","ref":"Bonfire.Files.MediaEdit.html#dominant_color/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.frame_to_scrub/3","doc":"","ref":"Bonfire.Files.MediaEdit.html#frame_to_scrub/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.image/3","doc":"","ref":"Bonfire.Files.MediaEdit.html#image/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.image_resize_thumbnail/4","doc":"","ref":"Bonfire.Files.MediaEdit.html#image_resize_thumbnail/4"},{"type":"function","title":"Bonfire.Files.MediaEdit.image_save_temp_file/3","doc":"","ref":"Bonfire.Files.MediaEdit.html#image_save_temp_file/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.thumbnail/2","doc":"","ref":"Bonfire.Files.MediaEdit.html#thumbnail/2"},{"type":"function","title":"Bonfire.Files.MediaEdit.thumbnail_pdf/1","doc":"","ref":"Bonfire.Files.MediaEdit.html#thumbnail_pdf/1"},{"type":"function","title":"Bonfire.Files.MediaEdit.thumbnail_video/3","doc":"","ref":"Bonfire.Files.MediaEdit.html#thumbnail_video/3"},{"type":"function","title":"Bonfire.Files.MediaEdit.video_convert/1","doc":"Converts video into a browser-supported format. NOTE: in dev mode on OSX, you can install ffmpeg with maximal features using https://gist.github.com/Piasy/b5dfd5c048eb69d1b91719988c0325d8?permalink_comment_id=3812563#gistcomment-3812563","ref":"Bonfire.Files.MediaEdit.html#video_convert/1"},{"type":"function","title":"Bonfire.Files.MediaEdit.video_image_thumbnail/4","doc":"","ref":"Bonfire.Files.MediaEdit.html#video_image_thumbnail/4"},{"type":"module","title":"Bonfire.Files.Prepare","doc":"","ref":"Bonfire.Files.Prepare.html"},{"type":"function","title":"Bonfire.Files.Prepare.prepare/2","doc":"","ref":"Bonfire.Files.Prepare.html#prepare/2"},{"type":"module","title":"Bonfire.Files.Queues.VideoTranscode","doc":"WIP https://github.com/bonfire-networks/bonfire-app/issues/920","ref":"Bonfire.Files.Queues.VideoTranscode.html"},{"type":"function","title":"Bonfire.Files.Queues.VideoTranscode.transcode/1","doc":"","ref":"Bonfire.Files.Queues.VideoTranscode.html#transcode/1"},{"type":"module","title":"Bonfire.Files.ResponsiveImage","doc":"Resizes images at compile time (when possible) or runtime:\n\n```\nuse Bonfire.Files.ResponsiveImage\n\n~H( )\nor\n~H( )\n\nor for paths only known at runtime:\n~H( )\nor\n~H( )\n```","ref":"Bonfire.Files.ResponsiveImage.html"},{"type":"macro","title":"Bonfire.Files.ResponsiveImage.compile_src/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#compile_src/2"},{"type":"macro","title":"Bonfire.Files.ResponsiveImage.compile_srcset/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#compile_srcset/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize/1","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize/1"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize_timed/1","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize_timed/1"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.src/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#src/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.srcset/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#srcset/2"},{"type":"module","title":"Bonfire.Files.Routes","doc":"","ref":"Bonfire.Files.Routes.html"},{"type":"module","title":"Bonfire.Files.RuntimeConfig","doc":"","ref":"Bonfire.Files.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Files.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Files.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Files.Simulation","doc":"","ref":"Bonfire.Files.Simulation.html"},{"type":"function","title":"Bonfire.Files.Simulation.cleanup/1","doc":"","ref":"Bonfire.Files.Simulation.html#cleanup/1"},{"type":"function","title":"Bonfire.Files.Simulation.fake_upload/2","doc":"","ref":"Bonfire.Files.Simulation.html#fake_upload/2"},{"type":"function","title":"Bonfire.Files.Simulation.geometry/1","doc":"","ref":"Bonfire.Files.Simulation.html#geometry/1"},{"type":"function","title":"Bonfire.Files.Simulation.icon_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#icon_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.image_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#image_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.pdf_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#pdf_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.text_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#text_file/0"},{"type":"module","title":"Bonfire.Files.Versions","doc":"","ref":"Bonfire.Files.Versions.html"},{"type":"module","title":"Bonfire.Files.VideoUploader","doc":"","ref":"Bonfire.Files.VideoUploader.html"},{"type":"function","title":"Bonfire.Files.VideoUploader.acl/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.asset_host/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.async/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.attach/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.blurhash/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.blurred/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.bucket/0","doc":"Uploader for smaller image icons, usually used as avatars.\n\nTODO: Support resizing.","ref":"Bonfire.Files.VideoUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.bucket/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.default_url/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.default_url/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.delete/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.filename/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.max_height/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#max_height/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.max_width/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#max_width/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.prepare/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.remote_url/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.store/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.transform/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.transform_timeout/0","doc":"","ref":"Bonfire.Files.VideoUploader.html#transform_timeout/0"},{"type":"function","title":"Bonfire.Files.VideoUploader.upload/4","doc":"","ref":"Bonfire.Files.VideoUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.VideoUploader.url/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.VideoUploader.url/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.url/3","doc":"","ref":"Bonfire.Files.VideoUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.VideoUploader.urls/2","doc":"","ref":"Bonfire.Files.VideoUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.VideoUploader.validate/1","doc":"","ref":"Bonfire.Files.VideoUploader.html#validate/1"},{"type":"module","title":"Bonfire.Web.Endpoint","doc":"","ref":"Bonfire.Web.Endpoint.html"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast/3","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast/3"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast!/3","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast!/3"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast_from/4","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast_from/4"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast_from!/4","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"Bonfire.Web.Endpoint.call/2","doc":"","ref":"Bonfire.Web.Endpoint.html#call/2"},{"type":"function","title":"Bonfire.Web.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"Bonfire.Web.Endpoint.html#child_spec/1"},{"type":"function","title":"Bonfire.Web.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"Bonfire.Web.Endpoint.html#config/2"},{"type":"function","title":"Bonfire.Web.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.Endpoint.html#config_change/2"},{"type":"function","title":"Bonfire.Web.Endpoint.generate_reverse_router!/1","doc":"(re)generates the reverse router (useful so it can be re-generated when extensions are enabled/disabled)","ref":"Bonfire.Web.Endpoint.html#generate_reverse_router!/1"},{"type":"function","title":"Bonfire.Web.Endpoint.halt_live_reload/2","doc":"","ref":"Bonfire.Web.Endpoint.html#halt_live_reload/2"},{"type":"function","title":"Bonfire.Web.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.Endpoint.html#host/0"},{"type":"function","title":"Bonfire.Web.Endpoint.include_assets/1","doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/1"},{"type":"function","title":"Bonfire.Web.Endpoint.include_assets/2","doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/2"},{"type":"function","title":"Bonfire.Web.Endpoint.init/1","doc":"","ref":"Bonfire.Web.Endpoint.html#init/1"},{"type":"function","title":"Bonfire.Web.Endpoint.local_broadcast/3","doc":"","ref":"Bonfire.Web.Endpoint.html#local_broadcast/3"},{"type":"function","title":"Bonfire.Web.Endpoint.local_broadcast_from/4","doc":"","ref":"Bonfire.Web.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"Bonfire.Web.Endpoint.log_ip/2","doc":"","ref":"Bonfire.Web.Endpoint.html#log_ip/2"},{"type":"function","title":"Bonfire.Web.Endpoint.node_name/0","doc":"","ref":"Bonfire.Web.Endpoint.html#node_name/0"},{"type":"function","title":"Bonfire.Web.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.Endpoint.html#path/1"},{"type":"function","title":"Bonfire.Web.Endpoint.publish_mutation/3","doc":"","ref":"Bonfire.Web.Endpoint.html#publish_mutation/3"},{"type":"function","title":"Bonfire.Web.Endpoint.publish_subscription/2","doc":"","ref":"Bonfire.Web.Endpoint.html#publish_subscription/2"},{"type":"function","title":"Bonfire.Web.Endpoint.reload!/1","doc":"","ref":"Bonfire.Web.Endpoint.html#reload!/1"},{"type":"function","title":"Bonfire.Web.Endpoint.script_name/0","doc":"Generates the script name.","ref":"Bonfire.Web.Endpoint.html#script_name/0"},{"type":"function","title":"Bonfire.Web.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"Bonfire.Web.Endpoint.html#server_info/1"},{"type":"function","title":"Bonfire.Web.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"Bonfire.Web.Endpoint.html#start_link/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.Endpoint.html#static_integrity/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"Bonfire.Web.Endpoint.html#static_lookup/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"Bonfire.Web.Endpoint.html#static_path/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"Bonfire.Web.Endpoint.html#static_url/0"},{"type":"function","title":"Bonfire.Web.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"Bonfire.Web.Endpoint.html#struct_url/0"},{"type":"function","title":"Bonfire.Web.Endpoint.subscribe/2","doc":"","ref":"Bonfire.Web.Endpoint.html#subscribe/2"},{"type":"function","title":"Bonfire.Web.Endpoint.unsubscribe/1","doc":"","ref":"Bonfire.Web.Endpoint.html#unsubscribe/1"},{"type":"function","title":"Bonfire.Web.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"Bonfire.Web.Endpoint.html#url/0"},{"type":"module","title":"Bonfire.Web.FakeRemoteEndpoint","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast!/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast!/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from!/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from!/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.call/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#call/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#child_spec/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config_change/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#host/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.init/1","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#init/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast_from/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast_from/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.log_ip/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#log_ip/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.node_name/0","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#node_name/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#path/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.publish_mutation/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#publish_mutation/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.publish_subscription/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#publish_subscription/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.script_name/0","doc":"Generates the script name.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#script_name/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"Bonfire.Web.FakeRemoteEndpoint.html#server_info/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#start_link/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_integrity/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_lookup/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_path/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_url/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#struct_url/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.subscribe/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#subscribe/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.unsubscribe/1","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#unsubscribe/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#url/0"},{"type":"module","title":"Bonfire.Web.Router","doc":"","ref":"Bonfire.Web.Router.html"},{"type":"function","title":"Bonfire.Web.Router.account_required/2","doc":"","ref":"Bonfire.Web.Router.html#account_required/2"},{"type":"function","title":"Bonfire.Web.Router.activity_json/2","doc":"","ref":"Bonfire.Web.Router.html#activity_json/2"},{"type":"function","title":"Bonfire.Web.Router.activity_json_or_html/2","doc":"","ref":"Bonfire.Web.Router.html#activity_json_or_html/2"},{"type":"function","title":"Bonfire.Web.Router.admin_required/2","doc":"","ref":"Bonfire.Web.Router.html#admin_required/2"},{"type":"function","title":"Bonfire.Web.Router.basic/2","doc":"","ref":"Bonfire.Web.Router.html#basic/2"},{"type":"function","title":"Bonfire.Web.Router.basic_html/2","doc":"","ref":"Bonfire.Web.Router.html#basic_html/2"},{"type":"function","title":"Bonfire.Web.Router.basic_json/2","doc":"","ref":"Bonfire.Web.Router.html#basic_json/2"},{"type":"function","title":"Bonfire.Web.Router.browser/2","doc":"","ref":"Bonfire.Web.Router.html#browser/2"},{"type":"function","title":"Bonfire.Web.Router.browser_unsafe/2","doc":"","ref":"Bonfire.Web.Router.html#browser_unsafe/2"},{"type":"function","title":"Bonfire.Web.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"Bonfire.Web.Router.html#call/2"},{"type":"function","title":"Bonfire.Web.Router.early_hints_authed/2","doc":"","ref":"Bonfire.Web.Router.html#early_hints_authed/2"},{"type":"function","title":"Bonfire.Web.Router.guest_only/2","doc":"","ref":"Bonfire.Web.Router.html#guest_only/2"},{"type":"function","title":"Bonfire.Web.Router.html_only/2","doc":"","ref":"Bonfire.Web.Router.html#html_only/2"},{"type":"function","title":"Bonfire.Web.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"Bonfire.Web.Router.html#init/1"},{"type":"function","title":"Bonfire.Web.Router.load_current_auth/2","doc":"","ref":"Bonfire.Web.Router.html#load_current_auth/2"},{"type":"function","title":"Bonfire.Web.Router.require_authenticated_user/2","doc":"","ref":"Bonfire.Web.Router.html#require_authenticated_user/2"},{"type":"function","title":"Bonfire.Web.Router.signed_activity_pub_fetch/2","doc":"","ref":"Bonfire.Web.Router.html#signed_activity_pub_fetch/2"},{"type":"function","title":"Bonfire.Web.Router.signed_activity_pub_incoming/2","doc":"","ref":"Bonfire.Web.Router.html#signed_activity_pub_incoming/2"},{"type":"function","title":"Bonfire.Web.Router.static/2","doc":"","ref":"Bonfire.Web.Router.html#static/2"},{"type":"function","title":"Bonfire.Web.Router.throttle_plug_attacks/2","doc":"","ref":"Bonfire.Web.Router.html#throttle_plug_attacks/2"},{"type":"function","title":"Bonfire.Web.Router.user_required/2","doc":"","ref":"Bonfire.Web.Router.html#user_required/2"},{"type":"function","title":"Bonfire.Web.Router.webfinger/2","doc":"","ref":"Bonfire.Web.Router.html#webfinger/2"},{"type":"function","title":"Bonfire.Web.Router.well_known_nodeinfo/2","doc":"","ref":"Bonfire.Web.Router.html#well_known_nodeinfo/2"},{"type":"module","title":"Bonfire.Web.Router.CORS","doc":"","ref":"Bonfire.Web.Router.CORS.html"},{"type":"function","title":"Bonfire.Web.Router.CORS.call/2","doc":"","ref":"Bonfire.Web.Router.CORS.html#call/2"},{"type":"function","title":"Bonfire.Web.Router.CORS.init/1","doc":"","ref":"Bonfire.Web.Router.CORS.html#init/1"},{"type":"function","title":"Bonfire.Web.Router.CORS.local_origin?/3","doc":"","ref":"Bonfire.Web.Router.CORS.html#local_origin?/3"},{"type":"module","title":"Bonfire.Web.Router.Reverse","doc":"","ref":"Bonfire.Web.Router.Reverse.html"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/2","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/2"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/3","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/3"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/4","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/4"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/5","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/5"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/6","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/6"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/7","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/7"},{"type":"module","title":"Bonfire.Web.Router.Routes","doc":"","ref":"Bonfire.Web.Router.Routes.html"},{"type":"module","title":"Bonfire.Web.ViewInventoryLive.GraphQL","doc":"","ref":"Bonfire.Web.ViewInventoryLive.GraphQL.html"},{"type":"function","title":"Bonfire.Web.ViewInventoryLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Web.ViewInventoryLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Web.ViewInventoryLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Web.ViewInventoryLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Web.ViewInventoryLive.GraphQL.process/2","doc":"","ref":"Bonfire.Web.ViewInventoryLive.GraphQL.html#process/2"},{"type":"module","title":"ValueFlows","doc":"`ValueFlows` is a [Bonfire](https://bonfire.cafe/) extension that implements [ValueFlows](https://valueflo.ws/) for federated networks to conduct economic activities.\n\nImplemented so far:\n\n- Intent\n- Proposal\n- Economic Event\n- Types of Action\n- Resource Specification\n- Economic Resource\n- Process Specification\n- Process\n- Claim (WIP)\n- Value Calculations (WIP)\n\nAs well as an optional GraphQL API for all of the above...","ref":"ValueFlows.html"},{"type":"module","title":"Handy commands - ValueFlows","doc":"","ref":"ValueFlows.html#module-handy-commands"},{"type":"module","title":"Copyright and License - ValueFlows","doc":"Copyright (c) 2021 ValueFlows, CommonsPub, Reflow & Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"ValueFlows.html#module-copyright-and-license"},{"type":"module","title":"ValueFlows.Agent.Agents","doc":"","ref":"ValueFlows.Agent.Agents.html"},{"type":"function","title":"ValueFlows.Agent.Agents.add_type/1","doc":"","ref":"ValueFlows.Agent.Agents.html#add_type/1"},{"type":"function","title":"ValueFlows.Agent.Agents.agent/2","doc":"","ref":"ValueFlows.Agent.Agents.html#agent/2"},{"type":"function","title":"ValueFlows.Agent.Agents.agent_location/1","doc":"","ref":"ValueFlows.Agent.Agents.html#agent_location/1"},{"type":"function","title":"ValueFlows.Agent.Agents.agent_to_character/1","doc":"","ref":"ValueFlows.Agent.Agents.html#agent_to_character/1"},{"type":"function","title":"ValueFlows.Agent.Agents.agents/1","doc":"","ref":"ValueFlows.Agent.Agents.html#agents/1"},{"type":"function","title":"ValueFlows.Agent.Agents.character_to_agent/1","doc":"","ref":"ValueFlows.Agent.Agents.html#character_to_agent/1"},{"type":"module","title":"ValueFlows.Agent.Organizations","doc":"","ref":"ValueFlows.Agent.Organizations.html"},{"type":"function","title":"ValueFlows.Agent.Organizations.organization/2","doc":"","ref":"ValueFlows.Agent.Organizations.html#organization/2"},{"type":"function","title":"ValueFlows.Agent.Organizations.organizations/1","doc":"","ref":"ValueFlows.Agent.Organizations.html#organizations/1"},{"type":"module","title":"ValueFlows.Agent.People","doc":"","ref":"ValueFlows.Agent.People.html"},{"type":"function","title":"ValueFlows.Agent.People.people/1","doc":"","ref":"ValueFlows.Agent.People.html#people/1"},{"type":"function","title":"ValueFlows.Agent.People.person/2","doc":"","ref":"ValueFlows.Agent.People.html#person/2"},{"type":"module","title":"ValueFlows.Agreement","doc":"","ref":"ValueFlows.Agreement.html"},{"type":"module","title":"ValueFlows.AllMigrations","doc":"Catch-all migrations intended to be used to initialise new Bonfire apps.\nAdd any new up/down ecto migrations in VF modules to the bottom of these two functions.","ref":"ValueFlows.AllMigrations.html"},{"type":"function","title":"ValueFlows.AllMigrations.down/0","doc":"","ref":"ValueFlows.AllMigrations.html#down/0"},{"type":"function","title":"ValueFlows.AllMigrations.up/0","doc":"","ref":"ValueFlows.AllMigrations.html#up/0"},{"type":"module","title":"ValueFlows.Claim","doc":"","ref":"ValueFlows.Claim.html"},{"type":"function","title":"ValueFlows.Claim.create_changeset/2","doc":"","ref":"ValueFlows.Claim.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Claim.create_changeset/4","doc":"","ref":"ValueFlows.Claim.html#create_changeset/4"},{"type":"function","title":"ValueFlows.Claim.measure_fields/0","doc":"","ref":"ValueFlows.Claim.html#measure_fields/0"},{"type":"function","title":"ValueFlows.Claim.update_changeset/2","doc":"","ref":"ValueFlows.Claim.html#update_changeset/2"},{"type":"function","title":"ValueFlows.Claim.validate_required/1","doc":"","ref":"ValueFlows.Claim.html#validate_required/1"},{"type":"type","title":"ValueFlows.Claim.t/0","doc":"","ref":"ValueFlows.Claim.html#t:t/0"},{"type":"module","title":"ValueFlows.Claim.Claims","doc":"","ref":"ValueFlows.Claim.Claims.html"},{"type":"function","title":"ValueFlows.Claim.Claims.ap_publish_activity/3","doc":"","ref":"ValueFlows.Claim.Claims.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Claim.Claims.ap_receive_activity/3","doc":"","ref":"ValueFlows.Claim.Claims.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Claim.Claims.create/2","doc":"","ref":"ValueFlows.Claim.Claims.html#create/2"},{"type":"function","title":"ValueFlows.Claim.Claims.create/4","doc":"","ref":"ValueFlows.Claim.Claims.html#create/4"},{"type":"function","title":"ValueFlows.Claim.Claims.federation_module/0","doc":"","ref":"ValueFlows.Claim.Claims.html#federation_module/0"},{"type":"function","title":"ValueFlows.Claim.Claims.many/1","doc":"","ref":"ValueFlows.Claim.Claims.html#many/1"},{"type":"function","title":"ValueFlows.Claim.Claims.one/1","doc":"","ref":"ValueFlows.Claim.Claims.html#one/1"},{"type":"function","title":"ValueFlows.Claim.Claims.preload_all/1","doc":"","ref":"ValueFlows.Claim.Claims.html#preload_all/1"},{"type":"function","title":"ValueFlows.Claim.Claims.soft_delete/1","doc":"","ref":"ValueFlows.Claim.Claims.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Claim.Claims.update/2","doc":"","ref":"ValueFlows.Claim.Claims.html#update/2"},{"type":"module","title":"ValueFlows.Claim.GraphQL","doc":"","ref":"ValueFlows.Claim.GraphQL.html"},{"type":"function","title":"ValueFlows.Claim.GraphQL.claim/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#claim/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.claims/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#claims/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.create_claim/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#create_claim/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.delete_claim/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#delete_claim/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.fetch_claim/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_claim/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.fetch_events/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_events/2"},{"type":"function","title":"ValueFlows.Claim.GraphQL.fetch_triggered_by_edge/3","doc":"","ref":"ValueFlows.Claim.GraphQL.html#fetch_triggered_by_edge/3"},{"type":"function","title":"ValueFlows.Claim.GraphQL.update_claim/2","doc":"","ref":"ValueFlows.Claim.GraphQL.html#update_claim/2"},{"type":"module","title":"ValueFlows.Claim.Queries","doc":"","ref":"ValueFlows.Claim.Queries.html"},{"type":"function","title":"ValueFlows.Claim.Queries.filter/2","doc":"","ref":"ValueFlows.Claim.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Claim.Queries.join_to/3","doc":"","ref":"ValueFlows.Claim.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Claim.Queries.queries/5","doc":"","ref":"ValueFlows.Claim.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Claim.Queries.query/1","doc":"","ref":"ValueFlows.Claim.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Claim.Queries.query/2","doc":"","ref":"ValueFlows.Claim.Queries.html#query/2"},{"type":"module","title":"ValueFlows.EconomicEvent","doc":"","ref":"ValueFlows.EconomicEvent.html"},{"type":"function","title":"ValueFlows.EconomicEvent.context_module/0","doc":"","ref":"ValueFlows.EconomicEvent.html#context_module/0"},{"type":"function","title":"ValueFlows.EconomicEvent.create_changeset/2","doc":"","ref":"ValueFlows.EconomicEvent.html#create_changeset/2"},{"type":"function","title":"ValueFlows.EconomicEvent.follow_filters/0","doc":"","ref":"ValueFlows.EconomicEvent.html#follow_filters/0"},{"type":"function","title":"ValueFlows.EconomicEvent.measure_fields/0","doc":"","ref":"ValueFlows.EconomicEvent.html#measure_fields/0"},{"type":"function","title":"ValueFlows.EconomicEvent.query_module/0","doc":"","ref":"ValueFlows.EconomicEvent.html#query_module/0"},{"type":"function","title":"ValueFlows.EconomicEvent.update_changeset/2","doc":"","ref":"ValueFlows.EconomicEvent.html#update_changeset/2"},{"type":"function","title":"ValueFlows.EconomicEvent.validate_changeset/1","doc":"","ref":"ValueFlows.EconomicEvent.html#validate_changeset/1"},{"type":"function","title":"ValueFlows.EconomicEvent.validate_create_changeset/1","doc":"","ref":"ValueFlows.EconomicEvent.html#validate_create_changeset/1"},{"type":"type","title":"ValueFlows.EconomicEvent.t/0","doc":"","ref":"ValueFlows.EconomicEvent.html#t:t/0"},{"type":"module","title":"ValueFlows.EconomicEvent.EconomicEvents","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.ap_publish_activity/3","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.ap_receive_activity/3","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.create/3","doc":"Create an event, and possibly linked resources","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#create/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.cursor/0","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#cursor/0"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.federation_module/0","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#federation_module/0"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.fields/2","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#fields/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.indexing_object_format/1","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.inputs_of/2","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#inputs_of/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#many/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#one/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.outputs_of/2","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#outputs_of/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.page/5","doc":"Retrieves an Page of events according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#page/5"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.pages/6","doc":"Retrieves an Pages of events according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#pages/6"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.preload_action/1","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#preload_action/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.preload_all/1","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#preload_all/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.prepare_attrs/2","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#prepare_attrs/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.prepare_create_attrs/2","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#prepare_create_attrs/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.soft_delete/1","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#soft_delete/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.test_cursor/0","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#test_cursor/0"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.trace/3","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#trace/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.track/3","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#track/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EconomicEvents.update/3","doc":"","ref":"ValueFlows.EconomicEvent.EconomicEvents.html#update/3"},{"type":"module","title":"ValueFlows.EconomicEvent.EventSideEffects","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html"},{"type":"function","title":"ValueFlows.EconomicEvent.EventSideEffects.event_side_effects/1","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#event_side_effects/1"},{"type":"function","title":"ValueFlows.EconomicEvent.EventSideEffects.measurement_effect/3","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#measurement_effect/3"},{"type":"function","title":"ValueFlows.EconomicEvent.EventSideEffects.quantity_effect/4","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#quantity_effect/4"},{"type":"function","title":"ValueFlows.EconomicEvent.EventSideEffects.return_updated_event/2","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#return_updated_event/2"},{"type":"function","title":"ValueFlows.EconomicEvent.EventSideEffects.return_updated_event/3","doc":"","ref":"ValueFlows.EconomicEvent.EventSideEffects.html#return_updated_event/3"},{"type":"module","title":"ValueFlows.EconomicEvent.GraphQL","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.agent_events/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#agent_events/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.agent_events_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#agent_events_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.all_events/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#all_events/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.create_event/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#create_event/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.delete_event/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#delete_event/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.event/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#event/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.events/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#events/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.events_filtered/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#events_filtered/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_agent_events_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_agent_events_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_event/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_event/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_events/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_events/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_input_of_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_input_of_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_output_of_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_output_of_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_resource_inventoried_as_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_resource_inventoried_as_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_to_resource_inventoried_as_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_to_resource_inventoried_as_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_trace/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_trace/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_track/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_track/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.fetch_triggered_by_edge/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#fetch_triggered_by_edge/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.list_events/4","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#list_events/4"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.simulate/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#simulate/2"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.trace/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#trace/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.track/3","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#track/3"},{"type":"function","title":"ValueFlows.EconomicEvent.GraphQL.update_event/2","doc":"","ref":"ValueFlows.EconomicEvent.GraphQL.html#update_event/2"},{"type":"module","title":"ValueFlows.EconomicEvent.LiveHandler","doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html"},{"type":"function","title":"ValueFlows.EconomicEvent.LiveHandler.handle_event/3","doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html#handle_event/3"},{"type":"function","title":"ValueFlows.EconomicEvent.LiveHandler.prepare_attrs/2","doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html#prepare_attrs/2"},{"type":"macro","title":"ValueFlows.EconomicEvent.LiveHandler.sigil_p/2","doc":"","ref":"ValueFlows.EconomicEvent.LiveHandler.html#sigil_p/2"},{"type":"module","title":"ValueFlows.EconomicEvent.Queries","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html"},{"type":"function","title":"ValueFlows.EconomicEvent.Queries.filter/2","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.EconomicEvent.Queries.join_to/3","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Queries.queries/5","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.EconomicEvent.Queries.query/1","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#query/1"},{"type":"function","title":"ValueFlows.EconomicEvent.Queries.query/2","doc":"","ref":"ValueFlows.EconomicEvent.Queries.html#query/2"},{"type":"module","title":"ValueFlows.EconomicEvent.Trace","doc":"","ref":"ValueFlows.EconomicEvent.Trace.html"},{"type":"function","title":"ValueFlows.EconomicEvent.Trace.event/3","doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#event/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Trace.process/3","doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#process/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Trace.resource/3","doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#resource/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Trace.trace/3","doc":"","ref":"ValueFlows.EconomicEvent.Trace.html#trace/3"},{"type":"module","title":"ValueFlows.EconomicEvent.Track","doc":"","ref":"ValueFlows.EconomicEvent.Track.html"},{"type":"function","title":"ValueFlows.EconomicEvent.Track.event/3","doc":"","ref":"ValueFlows.EconomicEvent.Track.html#event/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Track.process/3","doc":"","ref":"ValueFlows.EconomicEvent.Track.html#process/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Track.resource/3","doc":"","ref":"ValueFlows.EconomicEvent.Track.html#resource/3"},{"type":"function","title":"ValueFlows.EconomicEvent.Track.track/3","doc":"","ref":"ValueFlows.EconomicEvent.Track.html#track/3"},{"type":"module","title":"ValueFlows.EconomicResource","doc":"","ref":"ValueFlows.EconomicResource.html"},{"type":"function","title":"ValueFlows.EconomicResource.context_module/0","doc":"","ref":"ValueFlows.EconomicResource.html#context_module/0"},{"type":"function","title":"ValueFlows.EconomicResource.create_changeset/2","doc":"","ref":"ValueFlows.EconomicResource.html#create_changeset/2"},{"type":"function","title":"ValueFlows.EconomicResource.follow_filters/0","doc":"","ref":"ValueFlows.EconomicResource.html#follow_filters/0"},{"type":"function","title":"ValueFlows.EconomicResource.measure_fields/0","doc":"","ref":"ValueFlows.EconomicResource.html#measure_fields/0"},{"type":"function","title":"ValueFlows.EconomicResource.query_module/0","doc":"","ref":"ValueFlows.EconomicResource.html#query_module/0"},{"type":"function","title":"ValueFlows.EconomicResource.update_changeset/2","doc":"","ref":"ValueFlows.EconomicResource.html#update_changeset/2"},{"type":"type","title":"ValueFlows.EconomicResource.t/0","doc":"","ref":"ValueFlows.EconomicResource.html#t:t/0"},{"type":"module","title":"ValueFlows.EconomicResource.EconomicResources","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.ap_publish_activity/3","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.ap_receive_activity/3","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.create/2","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#create/2"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.cursor/0","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#cursor/0"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.federation_module/0","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#federation_module/0"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.fields/2","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#fields/2"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.indexing_object_format/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.inputs_of/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#inputs_of/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicResource.EconomicResources.html#many/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.many!/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#many!/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.EconomicResource.EconomicResources.html#one/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.outputs_of/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#outputs_of/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.page/5","doc":"Retrieves an Page of resources according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.EconomicResource.EconomicResources.html#page/5"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.pages/6","doc":"Retrieves an Pages of resources according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.EconomicResource.EconomicResources.html#pages/6"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.preload_all/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#preload_all/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.preload_state/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#preload_state/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.search/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#search/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.soft_delete/1","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#soft_delete/1"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.test_cursor/0","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#test_cursor/0"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.trace/3","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#trace/3"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.track/3","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#track/3"},{"type":"function","title":"ValueFlows.EconomicResource.EconomicResources.update/2","doc":"","ref":"ValueFlows.EconomicResource.EconomicResources.html#update/2"},{"type":"module","title":"ValueFlows.EconomicResource.LiveHandler","doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html"},{"type":"function","title":"ValueFlows.EconomicResource.LiveHandler.handle_event/3","doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html#handle_event/3"},{"type":"macro","title":"ValueFlows.EconomicResource.LiveHandler.sigil_p/2","doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html#sigil_p/2"},{"type":"function","title":"ValueFlows.EconomicResource.LiveHandler.to_tuple/1","doc":"","ref":"ValueFlows.EconomicResource.LiveHandler.html#to_tuple/1"},{"type":"module","title":"ValueFlows.EconomicResource.Queries","doc":"","ref":"ValueFlows.EconomicResource.Queries.html"},{"type":"function","title":"ValueFlows.EconomicResource.Queries.filter/2","doc":"","ref":"ValueFlows.EconomicResource.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.EconomicResource.Queries.join_to/3","doc":"","ref":"ValueFlows.EconomicResource.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.EconomicResource.Queries.queries/5","doc":"","ref":"ValueFlows.EconomicResource.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.EconomicResource.Queries.query/1","doc":"","ref":"ValueFlows.EconomicResource.Queries.html#query/1"},{"type":"function","title":"ValueFlows.EconomicResource.Queries.query/2","doc":"","ref":"ValueFlows.EconomicResource.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Knowledge.Action","doc":"","ref":"ValueFlows.Knowledge.Action.html"},{"type":"type","title":"ValueFlows.Knowledge.Action.t/0","doc":"","ref":"ValueFlows.Knowledge.Action.html#t:t/0"},{"type":"module","title":"ValueFlows.Knowledge.Action.Actions","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.action/1","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#action/1"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.action!/1","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#action!/1"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.actions_list/0","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#actions_list/0"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.actions_map/0","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#actions_map/0"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.default_actions/0","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#default_actions/0"},{"type":"function","title":"ValueFlows.Knowledge.Action.Actions.id/1","doc":"","ref":"ValueFlows.Knowledge.Action.Actions.html#id/1"},{"type":"module","title":"ValueFlows.Knowledge.ProcessSpecification","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.context_module/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#context_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.create_changeset/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.follow_filters/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.query_module/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#query_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.update_changeset/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#update_changeset/2"},{"type":"type","title":"ValueFlows.Knowledge.ProcessSpecification.t/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.html#t:t/0"},{"type":"module","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.all_process_specs/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#all_process_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.create_process_spec/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#create_process_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.creator_process_specs_edge/3","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#creator_process_specs_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.delete_process_spec/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#delete_process_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_creator_process_specs_edge/3","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_creator_process_specs_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_process_spec/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_process_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.fetch_process_specs/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#fetch_process_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.list_process_specs/4","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#list_process_specs/4"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_spec/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_specs/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.process_specs_filtered/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#process_specs_filtered/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.simulate/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#simulate/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.update_process_spec/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.GraphQL.html#update_process_spec/2"},{"type":"module","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.ap_publish_activity/3","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.ap_receive_activity/3","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.create/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#create/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.cursor/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#cursor/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.federation_module/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#federation_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.fields/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#fields/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.indexing_object_format/1","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#many/1"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#one/1"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.page/5","doc":"Retrieves an Page of process_specs according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#page/5"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.pages/6","doc":"Retrieves an Pages of process_specs according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#pages/6"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.soft_delete/1","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.test_cursor/0","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.update/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.ProcessSpecifications.html#update/2"},{"type":"module","title":"ValueFlows.Knowledge.ProcessSpecification.Queries","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.filter/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.join_to/3","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.queries/5","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.query/1","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Knowledge.ProcessSpecification.Queries.query/2","doc":"","ref":"ValueFlows.Knowledge.ProcessSpecification.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Knowledge.ResourceSpecification","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.context_module/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#context_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.create_changeset/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.create_changeset/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#create_changeset/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.follow_filters/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.query_module/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#query_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.update_changeset/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#update_changeset/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.update_changeset/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#update_changeset/3"},{"type":"type","title":"ValueFlows.Knowledge.ResourceSpecification.t/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.html#t:t/0"},{"type":"module","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.all_resource_specs/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#all_resource_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.create_resource_spec/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#create_resource_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.creator_resource_specs_edge/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#creator_resource_specs_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.delete_resource_spec/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#delete_resource_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_conforming_resources_edge/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_conforming_resources_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_creator_resource_specs_edge/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_creator_resource_specs_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_default_unit_of_effort_edge/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_default_unit_of_effort_edge/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_resource_spec/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_resource_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fetch_resource_specs/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fetch_resource_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.fields/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#fields/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.list_resource_specs/4","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#list_resource_specs/4"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.page/5","doc":"Retrieves an Page of resource_specs according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#page/5"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.pages/6","doc":"Retrieves an Pages of resource_specs according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#pages/6"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.resource_spec/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#resource_spec/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.resource_specs/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#resource_specs/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.simulate/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#simulate/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.update_resource_spec/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.GraphQL.html#update_resource_spec/2"},{"type":"module","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.changeset/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#changeset/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.create_in_autocomplete/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#create_in_autocomplete/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.handle_event/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#handle_event/3"},{"type":"macro","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.sigil_p/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#sigil_p/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.to_tuple/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.LiveHandler.html#to_tuple/1"},{"type":"module","title":"ValueFlows.Knowledge.ResourceSpecification.Queries","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.filter/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.join_to/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.queries/5","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.query/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.Queries.query/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.ap_publish_activity/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.ap_receive_activity/3","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.create/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#create/2"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.cursor/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#cursor/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.federation_module/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#federation_module/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.indexing_object_format/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#many/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.many!/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#many!/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.maybe_get/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#maybe_get/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#one/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.prepare_attrs/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#prepare_attrs/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.search/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#search/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.soft_delete/1","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.test_cursor/0","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.update/2","doc":"","ref":"ValueFlows.Knowledge.ResourceSpecification.ResourceSpecifications.html#update/2"},{"type":"module","title":"ValueFlows.Observe.Classifications","doc":"","ref":"ValueFlows.Observe.Classifications.html"},{"type":"function","title":"ValueFlows.Observe.Classifications.create/4","doc":"","ref":"ValueFlows.Observe.Classifications.html#create/4"},{"type":"function","title":"ValueFlows.Observe.Classifications.flatten/1","doc":"","ref":"ValueFlows.Observe.Classifications.html#flatten/1"},{"type":"function","title":"ValueFlows.Observe.Classifications.from_classification/1","doc":"","ref":"ValueFlows.Observe.Classifications.html#from_classification/1"},{"type":"function","title":"ValueFlows.Observe.Classifications.one/2","doc":"","ref":"ValueFlows.Observe.Classifications.html#one/2"},{"type":"function","title":"ValueFlows.Observe.Classifications.preload/2","doc":"","ref":"ValueFlows.Observe.Classifications.html#preload/2"},{"type":"function","title":"ValueFlows.Observe.Classifications.to_classification/2","doc":"","ref":"ValueFlows.Observe.Classifications.html#to_classification/2"},{"type":"function","title":"ValueFlows.Observe.Classifications.to_ecto_struct/2","doc":"","ref":"ValueFlows.Observe.Classifications.html#to_ecto_struct/2"},{"type":"function","title":"ValueFlows.Observe.Classifications.update/4","doc":"","ref":"ValueFlows.Observe.Classifications.html#update/4"},{"type":"module","title":"ValueFlows.Observe.Hydration","doc":"","ref":"ValueFlows.Observe.Hydration.html"},{"type":"function","title":"ValueFlows.Observe.Hydration.hydrate/0","doc":"","ref":"ValueFlows.Observe.Hydration.html#hydrate/0"},{"type":"module","title":"ValueFlows.Observe.Integration","doc":"","ref":"ValueFlows.Observe.Integration.html"},{"type":"module","title":"ValueFlows.Observe.ObservablePhenomenons","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenons.create/3","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#create/3"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenons.facet/0","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#facet/0"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenons.one/1","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#one/1"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenons.update/3","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenons.html#update/3"},{"type":"module","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.choice_of_edge/3","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#choice_of_edge/3"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.create_observable_phenomenon/2","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#create_observable_phenomenon/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.delete_observable_phenomenon/2","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#delete_observable_phenomenon/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.formula_quantifier_edge/3","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#formula_quantifier_edge/3"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.get/2","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#get/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.observable_phenomenons/2","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#observable_phenomenons/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.update_observable_phenomenon/2","doc":"","ref":"ValueFlows.Observe.ObservablePhenomenonsGraphQL.html#update_observable_phenomenon/2"},{"type":"module","title":"ValueFlows.Observe.ObservableProperties","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html"},{"type":"function","title":"ValueFlows.Observe.ObservableProperties.create/2","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#create/2"},{"type":"function","title":"ValueFlows.Observe.ObservableProperties.facet/0","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#facet/0"},{"type":"function","title":"ValueFlows.Observe.ObservableProperties.id/0","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#id/0"},{"type":"function","title":"ValueFlows.Observe.ObservableProperties.one/1","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#one/1"},{"type":"function","title":"ValueFlows.Observe.ObservableProperties.update/3","doc":"","ref":"ValueFlows.Observe.ObservableProperties.html#update/3"},{"type":"module","title":"ValueFlows.Observe.ObservablePropertiesGraphQL","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.create_observable_property/2","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#create_observable_property/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.delete_observable_property/2","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#delete_observable_property/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.observable_properties/2","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#observable_properties/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.observable_property/2","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#observable_property/2"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.phenomenons_edge/3","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#phenomenons_edge/3"},{"type":"function","title":"ValueFlows.Observe.ObservablePropertiesGraphQL.update_observable_property/2","doc":"","ref":"ValueFlows.Observe.ObservablePropertiesGraphQL.html#update_observable_property/2"},{"type":"module","title":"ValueFlows.Observe.Observation","doc":"","ref":"ValueFlows.Observe.Observation.html"},{"type":"function","title":"ValueFlows.Observe.Observation.context_module/0","doc":"","ref":"ValueFlows.Observe.Observation.html#context_module/0"},{"type":"function","title":"ValueFlows.Observe.Observation.create_changeset/2","doc":"","ref":"ValueFlows.Observe.Observation.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Observe.Observation.create_changeset_validate/1","doc":"","ref":"ValueFlows.Observe.Observation.html#create_changeset_validate/1"},{"type":"function","title":"ValueFlows.Observe.Observation.follow_filters/0","doc":"","ref":"ValueFlows.Observe.Observation.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Observe.Observation.query_module/0","doc":"","ref":"ValueFlows.Observe.Observation.html#query_module/0"},{"type":"function","title":"ValueFlows.Observe.Observation.update_changeset/2","doc":"","ref":"ValueFlows.Observe.Observation.html#update_changeset/2"},{"type":"type","title":"ValueFlows.Observe.Observation.t/0","doc":"","ref":"ValueFlows.Observe.Observation.html#t:t/0"},{"type":"module","title":"ValueFlows.Observe.Observation.Queries","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html"},{"type":"function","title":"ValueFlows.Observe.Observation.Queries.filter/2","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Observe.Observation.Queries.join_to/3","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Observe.Observation.Queries.queries/5","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Observe.Observation.Queries.query/1","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Observe.Observation.Queries.query/2","doc":"","ref":"ValueFlows.Observe.Observation.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Observe.Observations","doc":"","ref":"ValueFlows.Observe.Observations.html"},{"type":"function","title":"ValueFlows.Observe.Observations.create/2","doc":"Create an observation","ref":"ValueFlows.Observe.Observations.html#create/2"},{"type":"function","title":"ValueFlows.Observe.Observations.create/3","doc":"","ref":"ValueFlows.Observe.Observations.html#create/3"},{"type":"function","title":"ValueFlows.Observe.Observations.cursor/0","doc":"","ref":"ValueFlows.Observe.Observations.html#cursor/0"},{"type":"function","title":"ValueFlows.Observe.Observations.fields/2","doc":"","ref":"ValueFlows.Observe.Observations.html#fields/2"},{"type":"function","title":"ValueFlows.Observe.Observations.indexing_object_format/1","doc":"","ref":"ValueFlows.Observe.Observations.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Observe.Observations.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Observe.Observations.html#many/1"},{"type":"function","title":"ValueFlows.Observe.Observations.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Observe.Observations.html#one/1"},{"type":"function","title":"ValueFlows.Observe.Observations.page/5","doc":"Retrieves an Page of observations according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Observe.Observations.html#page/5"},{"type":"function","title":"ValueFlows.Observe.Observations.pages/6","doc":"Retrieves an Pages of observations according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Observe.Observations.html#pages/6"},{"type":"function","title":"ValueFlows.Observe.Observations.preload_all/1","doc":"","ref":"ValueFlows.Observe.Observations.html#preload_all/1"},{"type":"function","title":"ValueFlows.Observe.Observations.soft_delete/1","doc":"","ref":"ValueFlows.Observe.Observations.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Observe.Observations.test_cursor/0","doc":"","ref":"ValueFlows.Observe.Observations.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Observe.Observations.update/3","doc":"","ref":"ValueFlows.Observe.Observations.html#update/3"},{"type":"module","title":"ValueFlows.Observe.Observations.ObservationsResolvers","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.all_observations/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#all_observations/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.create_observation/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#create_observation/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.delete_observation/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#delete_observation/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.fetch_observation/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#fetch_observation/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.fetch_observations/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#fetch_observations/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.has_feature_of_interest/3","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#has_feature_of_interest/3"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.has_result_edge/3","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#has_result_edge/3"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.list_observations/4","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#list_observations/4"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.made_by_edge/3","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#made_by_edge/3"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.name_as_label/3","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#name_as_label/3"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.observation/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#observation/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.observations/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#observations/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observable_object_type/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observable_object_type/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observable_result_type/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observable_result_type/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.resolve_observer_type/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#resolve_observer_type/2"},{"type":"function","title":"ValueFlows.Observe.Observations.ObservationsResolvers.update_observation/2","doc":"","ref":"ValueFlows.Observe.Observations.ObservationsResolvers.html#update_observation/2"},{"type":"module","title":"ValueFlows.Observe.Seeds","doc":"","ref":"ValueFlows.Observe.Seeds.html"},{"type":"function","title":"ValueFlows.Observe.Seeds.down/1","doc":"","ref":"ValueFlows.Observe.Seeds.html#down/1"},{"type":"function","title":"ValueFlows.Observe.Seeds.up/1","doc":"","ref":"ValueFlows.Observe.Seeds.html#up/1"},{"type":"module","title":"ValueFlows.Observe.Simulate","doc":"","ref":"ValueFlows.Observe.Simulate.html"},{"type":"function","title":"ValueFlows.Observe.Simulate.fake_observable_phenomenon!/3","doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observable_phenomenon!/3"},{"type":"function","title":"ValueFlows.Observe.Simulate.fake_observable_property!/2","doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observable_property!/2"},{"type":"function","title":"ValueFlows.Observe.Simulate.fake_observation!/3","doc":"","ref":"ValueFlows.Observe.Simulate.html#fake_observation!/3"},{"type":"function","title":"ValueFlows.Observe.Simulate.observable_phenomenon/1","doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_phenomenon/1"},{"type":"function","title":"ValueFlows.Observe.Simulate.observable_phenomenon_input/2","doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_phenomenon_input/2"},{"type":"function","title":"ValueFlows.Observe.Simulate.observable_property/1","doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_property/1"},{"type":"function","title":"ValueFlows.Observe.Simulate.observable_property_input/1","doc":"","ref":"ValueFlows.Observe.Simulate.html#observable_property_input/1"},{"type":"function","title":"ValueFlows.Observe.Simulate.observation/4","doc":"","ref":"ValueFlows.Observe.Simulate.html#observation/4"},{"type":"function","title":"ValueFlows.Observe.Simulate.observation_input/2","doc":"","ref":"ValueFlows.Observe.Simulate.html#observation_input/2"},{"type":"function","title":"ValueFlows.Observe.Simulate.observation_with_req_fields/2","doc":"","ref":"ValueFlows.Observe.Simulate.html#observation_with_req_fields/2"},{"type":"module","title":"ValueFlows.Planning.Commitment","doc":"","ref":"ValueFlows.Planning.Commitment.html"},{"type":"function","title":"ValueFlows.Planning.Commitment.context_module/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#context_module/0"},{"type":"function","title":"ValueFlows.Planning.Commitment.create_changeset/2","doc":"","ref":"ValueFlows.Planning.Commitment.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.follow_filters/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Planning.Commitment.measure_fields/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#measure_fields/0"},{"type":"function","title":"ValueFlows.Planning.Commitment.query_module/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#query_module/0"},{"type":"function","title":"ValueFlows.Planning.Commitment.update_changeset/2","doc":"","ref":"ValueFlows.Planning.Commitment.html#update_changeset/2"},{"type":"type","title":"ValueFlows.Planning.Commitment.attrs/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#t:attrs/0"},{"type":"type","title":"ValueFlows.Planning.Commitment.t/0","doc":"","ref":"ValueFlows.Planning.Commitment.html#t:t/0"},{"type":"module","title":"ValueFlows.Planning.Commitment.Commitments","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.by_id/2","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#by_id/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.create/2","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#create/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.many/1","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#many/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.one/1","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#one/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.preload_action/1","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#preload_action/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.preload_all/1","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#preload_all/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.prep_attrs/2","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#prep_attrs/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.soft_delete/1","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.soft_delete/2","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#soft_delete/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.Commitments.update/3","doc":"","ref":"ValueFlows.Planning.Commitment.Commitments.html#update/3"},{"type":"module","title":"ValueFlows.Planning.Commitment.GraphQL","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.commitment/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#commitment/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.commitments_filtered/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#commitments_filtered/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.create_commitment/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#create_commitment/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.delete_commitment/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#delete_commitment/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_commitment/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_commitment/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_created/3","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_created/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_input_of_edge/3","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_input_of_edge/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_output_of_edge/3","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_output_of_edge/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_resource_inventoried_as_edge/3","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_resource_inventoried_as_edge/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.fetch_satisfies_edge/3","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#fetch_satisfies_edge/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.GraphQL.update_commitment/2","doc":"","ref":"ValueFlows.Planning.Commitment.GraphQL.html#update_commitment/2"},{"type":"module","title":"ValueFlows.Planning.Commitment.Queries","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.filter/2","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.filter/3","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#filter/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.join_to/3","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.queries/5","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.query/1","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Planning.Commitment.Queries.query/2","doc":"","ref":"ValueFlows.Planning.Commitment.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Planning.Intent","doc":"","ref":"ValueFlows.Planning.Intent.html"},{"type":"function","title":"ValueFlows.Planning.Intent.context_module/0","doc":"","ref":"ValueFlows.Planning.Intent.html#context_module/0"},{"type":"function","title":"ValueFlows.Planning.Intent.create_changeset/2","doc":"","ref":"ValueFlows.Planning.Intent.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Planning.Intent.follow_filters/0","doc":"","ref":"ValueFlows.Planning.Intent.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Planning.Intent.measure_fields/0","doc":"","ref":"ValueFlows.Planning.Intent.html#measure_fields/0"},{"type":"function","title":"ValueFlows.Planning.Intent.query_module/0","doc":"","ref":"ValueFlows.Planning.Intent.html#query_module/0"},{"type":"function","title":"ValueFlows.Planning.Intent.update_changeset/2","doc":"","ref":"ValueFlows.Planning.Intent.html#update_changeset/2"},{"type":"function","title":"ValueFlows.Planning.Intent.validate_changeset/1","doc":"","ref":"ValueFlows.Planning.Intent.html#validate_changeset/1"},{"type":"type","title":"ValueFlows.Planning.Intent.t/0","doc":"","ref":"ValueFlows.Planning.Intent.html#t:t/0"},{"type":"module","title":"ValueFlows.Planning.Intent.GraphQL","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.agent_intents/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#agent_intents/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.agent_intents_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#agent_intents_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.create_intent/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_intent/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.create_need/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_need/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.create_offer/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#create_offer/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.delete_intent/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#delete_intent/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_agent_intents_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_agent_intents_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_input_of_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_input_of_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_intent/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_intent/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_intents/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_intents/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_needs/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_needs/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_offers/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_offers/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_output_of_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_output_of_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_provider_intents_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_provider_intents_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_resource_inventoried_as_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_resource_inventoried_as_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.fetch_satisfied_by_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#fetch_satisfied_by_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.intent/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intent/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.intents/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intents/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.intents_filtered/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#intents_filtered/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.list_intents/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#list_intents/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.needs/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#needs/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.offers/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#offers/2"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.provider_intents/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#provider_intents/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.provider_intents_edge/3","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#provider_intents_edge/3"},{"type":"function","title":"ValueFlows.Planning.Intent.GraphQL.update_intent/2","doc":"","ref":"ValueFlows.Planning.Intent.GraphQL.html#update_intent/2"},{"type":"module","title":"ValueFlows.Planning.Intent.Intents","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.ap_publish_activity/3","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.ap_receive_activity/3","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.by_id/2","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#by_id/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.create/2","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#create/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.cursor/0","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#cursor/0"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.federation_module/0","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#federation_module/0"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.fields/2","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#fields/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.indexing_object_format/1","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Planning.Intent.Intents.html#many/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Planning.Intent.Intents.html#one/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.page/5","doc":"Retrieves an Page of intents according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Planning.Intent.Intents.html#page/5"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.pages/6","doc":"Retrieves an Pages of intents according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Planning.Intent.Intents.html#pages/6"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.preload_action/1","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#preload_action/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.preload_all/1","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#preload_all/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.prepare_attrs/2","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#prepare_attrs/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.soft_delete/1","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.soft_delete/2","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#soft_delete/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.test_cursor/0","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Planning.Intent.Intents.update/4","doc":"","ref":"ValueFlows.Planning.Intent.Intents.html#update/4"},{"type":"module","title":"ValueFlows.Planning.Intent.LiveHandler","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.assign_to/4","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#assign_to/4"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.create_from_list/6","doc":"Create intents from a markdown-formatted list of checkboxes","ref":"ValueFlows.Planning.Intent.LiveHandler.html#create_from_list/6"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.create_from_list/7","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#create_from_list/7"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.handle_event/3","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#handle_event/3"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.handle_param/3","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#handle_param/3"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.input_date/1","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#input_date/1"},{"type":"macro","title":"ValueFlows.Planning.Intent.LiveHandler.sigil_p/2","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#sigil_p/2"},{"type":"function","title":"ValueFlows.Planning.Intent.LiveHandler.update_verb/1","doc":"","ref":"ValueFlows.Planning.Intent.LiveHandler.html#update_verb/1"},{"type":"module","title":"ValueFlows.Planning.Intent.Queries","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.filter/2","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.filter/3","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#filter/3"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.join_to/3","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.queries/5","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.query/1","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Planning.Intent.Queries.query/2","doc":"","ref":"ValueFlows.Planning.Intent.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Planning.Satisfaction","doc":"","ref":"ValueFlows.Planning.Satisfaction.html"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.context_module/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#context_module/0"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.create_changeset/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.follow_filters/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.measure_fields/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#measure_fields/0"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.query_module/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#query_module/0"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.update_changeset/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#update_changeset/2"},{"type":"type","title":"ValueFlows.Planning.Satisfaction.attrs/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#t:attrs/0"},{"type":"type","title":"ValueFlows.Planning.Satisfaction.t/0","doc":"","ref":"ValueFlows.Planning.Satisfaction.html#t:t/0"},{"type":"module","title":"ValueFlows.Planning.Satisfaction.GraphQL","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.create/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#create/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.delete/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#delete/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.event_or_commitment_resolve_type/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#event_or_commitment_resolve_type/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfaction/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfaction/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfied_by_edge/3","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfied_by_edge/3"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.fetch_satisfies_edge/3","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#fetch_satisfies_edge/3"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.satisfaction/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#satisfaction/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.satisfactions_filtered/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#satisfactions_filtered/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.GraphQL.update/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.GraphQL.html#update/2"},{"type":"module","title":"ValueFlows.Planning.Satisfaction.Queries","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.filter/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.filter/3","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#filter/3"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.join_to/3","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.queries/5","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.query/1","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Queries.query/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Planning.Satisfaction.Satisfactions","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.by_id/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#by_id/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.create/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#create/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.many/1","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#many/1"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.one/1","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#one/1"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.preload_all/1","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#preload_all/1"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.soft_delete/2","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#soft_delete/2"},{"type":"function","title":"ValueFlows.Planning.Satisfaction.Satisfactions.update/3","doc":"","ref":"ValueFlows.Planning.Satisfaction.Satisfactions.html#update/3"},{"type":"module","title":"ValueFlows.Process","doc":"","ref":"ValueFlows.Process.html"},{"type":"function","title":"ValueFlows.Process.context_module/0","doc":"","ref":"ValueFlows.Process.html#context_module/0"},{"type":"function","title":"ValueFlows.Process.create_changeset/2","doc":"","ref":"ValueFlows.Process.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Process.follow_filters/0","doc":"","ref":"ValueFlows.Process.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Process.query_module/0","doc":"","ref":"ValueFlows.Process.html#query_module/0"},{"type":"function","title":"ValueFlows.Process.update_changeset/2","doc":"","ref":"ValueFlows.Process.html#update_changeset/2"},{"type":"function","title":"ValueFlows.Process.validate_changeset/1","doc":"","ref":"ValueFlows.Process.html#validate_changeset/1"},{"type":"type","title":"ValueFlows.Process.t/0","doc":"","ref":"ValueFlows.Process.html#t:t/0"},{"type":"module","title":"ValueFlows.Process.LiveHandler","doc":"","ref":"ValueFlows.Process.LiveHandler.html"},{"type":"function","title":"ValueFlows.Process.LiveHandler.changeset/1","doc":"","ref":"ValueFlows.Process.LiveHandler.html#changeset/1"},{"type":"function","title":"ValueFlows.Process.LiveHandler.do_update/3","doc":"","ref":"ValueFlows.Process.LiveHandler.html#do_update/3"},{"type":"function","title":"ValueFlows.Process.LiveHandler.handle_event/3","doc":"","ref":"ValueFlows.Process.LiveHandler.html#handle_event/3"},{"type":"macro","title":"ValueFlows.Process.LiveHandler.sigil_p/2","doc":"","ref":"ValueFlows.Process.LiveHandler.html#sigil_p/2"},{"type":"module","title":"ValueFlows.Process.Processes","doc":"","ref":"ValueFlows.Process.Processes.html"},{"type":"function","title":"ValueFlows.Process.Processes.ap_publish_activity/3","doc":"","ref":"ValueFlows.Process.Processes.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Process.Processes.ap_receive_activity/3","doc":"","ref":"ValueFlows.Process.Processes.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Process.Processes.create/2","doc":"","ref":"ValueFlows.Process.Processes.html#create/2"},{"type":"function","title":"ValueFlows.Process.Processes.cursor/0","doc":"","ref":"ValueFlows.Process.Processes.html#cursor/0"},{"type":"function","title":"ValueFlows.Process.Processes.federation_module/0","doc":"","ref":"ValueFlows.Process.Processes.html#federation_module/0"},{"type":"function","title":"ValueFlows.Process.Processes.fields/2","doc":"","ref":"ValueFlows.Process.Processes.html#fields/2"},{"type":"function","title":"ValueFlows.Process.Processes.indexing_object_format/1","doc":"","ref":"ValueFlows.Process.Processes.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Process.Processes.inputs/2","doc":"","ref":"ValueFlows.Process.Processes.html#inputs/2"},{"type":"function","title":"ValueFlows.Process.Processes.intended_inputs/2","doc":"","ref":"ValueFlows.Process.Processes.html#intended_inputs/2"},{"type":"function","title":"ValueFlows.Process.Processes.intended_outputs/2","doc":"","ref":"ValueFlows.Process.Processes.html#intended_outputs/2"},{"type":"function","title":"ValueFlows.Process.Processes.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Process.Processes.html#many/1"},{"type":"function","title":"ValueFlows.Process.Processes.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Process.Processes.html#one/1"},{"type":"function","title":"ValueFlows.Process.Processes.outputs/2","doc":"","ref":"ValueFlows.Process.Processes.html#outputs/2"},{"type":"function","title":"ValueFlows.Process.Processes.page/5","doc":"Retrieves an Page of processes according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Process.Processes.html#page/5"},{"type":"function","title":"ValueFlows.Process.Processes.pages/6","doc":"Retrieves an Pages of processes according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Process.Processes.html#pages/6"},{"type":"function","title":"ValueFlows.Process.Processes.preload_all/1","doc":"","ref":"ValueFlows.Process.Processes.html#preload_all/1"},{"type":"function","title":"ValueFlows.Process.Processes.prepare_attrs/1","doc":"","ref":"ValueFlows.Process.Processes.html#prepare_attrs/1"},{"type":"function","title":"ValueFlows.Process.Processes.soft_delete/1","doc":"","ref":"ValueFlows.Process.Processes.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Process.Processes.test_cursor/0","doc":"","ref":"ValueFlows.Process.Processes.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Process.Processes.trace/3","doc":"","ref":"ValueFlows.Process.Processes.html#trace/3"},{"type":"function","title":"ValueFlows.Process.Processes.track/3","doc":"","ref":"ValueFlows.Process.Processes.html#track/3"},{"type":"function","title":"ValueFlows.Process.Processes.update/2","doc":"","ref":"ValueFlows.Process.Processes.html#update/2"},{"type":"module","title":"ValueFlows.Process.Queries","doc":"","ref":"ValueFlows.Process.Queries.html"},{"type":"function","title":"ValueFlows.Process.Queries.filter/2","doc":"","ref":"ValueFlows.Process.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Process.Queries.join_to/3","doc":"","ref":"ValueFlows.Process.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Process.Queries.queries/5","doc":"","ref":"ValueFlows.Process.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Process.Queries.query/1","doc":"","ref":"ValueFlows.Process.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Process.Queries.query/2","doc":"","ref":"ValueFlows.Process.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Proposal","doc":"Schema for proposal, using `Needle.Pointable`","ref":"ValueFlows.Proposal.html"},{"type":"function","title":"ValueFlows.Proposal.context_module/0","doc":"","ref":"ValueFlows.Proposal.html#context_module/0"},{"type":"function","title":"ValueFlows.Proposal.create_changeset/2","doc":"","ref":"ValueFlows.Proposal.html#create_changeset/2"},{"type":"function","title":"ValueFlows.Proposal.follow_filters/0","doc":"","ref":"ValueFlows.Proposal.html#follow_filters/0"},{"type":"function","title":"ValueFlows.Proposal.query_module/0","doc":"","ref":"ValueFlows.Proposal.html#query_module/0"},{"type":"function","title":"ValueFlows.Proposal.update_changeset/2","doc":"","ref":"ValueFlows.Proposal.html#update_changeset/2"},{"type":"type","title":"ValueFlows.Proposal.t/0","doc":"","ref":"ValueFlows.Proposal.html#t:t/0"},{"type":"module","title":"ValueFlows.Proposal.GraphQL","doc":"","ref":"ValueFlows.Proposal.GraphQL.html"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.agent_proposals/3","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#agent_proposals/3"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.all_proposals/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#all_proposals/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.create_proposal/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#create_proposal/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.delete_proposal/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#delete_proposal/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.eligible_location_edge/3","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#eligible_location_edge/3"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.fetch_proposal/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#fetch_proposal/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.fetch_proposals/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#fetch_proposals/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.proposal/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposal/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.proposals/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposals/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.proposals_filtered/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#proposals_filtered/2"},{"type":"function","title":"ValueFlows.Proposal.GraphQL.update_proposal/2","doc":"","ref":"ValueFlows.Proposal.GraphQL.html#update_proposal/2"},{"type":"module","title":"ValueFlows.Proposal.Proposals","doc":"","ref":"ValueFlows.Proposal.Proposals.html"},{"type":"function","title":"ValueFlows.Proposal.Proposals.ap_publish_activity/3","doc":"","ref":"ValueFlows.Proposal.Proposals.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Proposal.Proposals.ap_receive_activity/3","doc":"","ref":"ValueFlows.Proposal.Proposals.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Proposal.Proposals.create/2","doc":"","ref":"ValueFlows.Proposal.Proposals.html#create/2"},{"type":"function","title":"ValueFlows.Proposal.Proposals.cursor/0","doc":"","ref":"ValueFlows.Proposal.Proposals.html#cursor/0"},{"type":"function","title":"ValueFlows.Proposal.Proposals.federation_module/0","doc":"","ref":"ValueFlows.Proposal.Proposals.html#federation_module/0"},{"type":"function","title":"ValueFlows.Proposal.Proposals.fields/2","doc":"","ref":"ValueFlows.Proposal.Proposals.html#fields/2"},{"type":"function","title":"ValueFlows.Proposal.Proposals.indexing_object_format/1","doc":"","ref":"ValueFlows.Proposal.Proposals.html#indexing_object_format/1"},{"type":"function","title":"ValueFlows.Proposal.Proposals.many/1","doc":"Retrieves a list of them by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Proposal.Proposals.html#many/1"},{"type":"function","title":"ValueFlows.Proposal.Proposals.one/1","doc":"Retrieves a single one by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for this (inc. tests)","ref":"ValueFlows.Proposal.Proposals.html#one/1"},{"type":"function","title":"ValueFlows.Proposal.Proposals.page/5","doc":"Retrieves an Page of proposals according to various filters\n\nUsed by:\n* GraphQL resolver single-parent resolution","ref":"ValueFlows.Proposal.Proposals.html#page/5"},{"type":"function","title":"ValueFlows.Proposal.Proposals.pages/6","doc":"Retrieves an Pages of proposals according to various filters\n\nUsed by:\n* GraphQL resolver bulk resolution","ref":"ValueFlows.Proposal.Proposals.html#pages/6"},{"type":"function","title":"ValueFlows.Proposal.Proposals.preload_all/1","doc":"","ref":"ValueFlows.Proposal.Proposals.html#preload_all/1"},{"type":"function","title":"ValueFlows.Proposal.Proposals.soft_delete/1","doc":"","ref":"ValueFlows.Proposal.Proposals.html#soft_delete/1"},{"type":"function","title":"ValueFlows.Proposal.Proposals.test_cursor/0","doc":"","ref":"ValueFlows.Proposal.Proposals.html#test_cursor/0"},{"type":"function","title":"ValueFlows.Proposal.Proposals.update/2","doc":"","ref":"ValueFlows.Proposal.Proposals.html#update/2"},{"type":"module","title":"ValueFlows.Proposal.ProposedIntent","doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntent.changeset/3","doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html#changeset/3"},{"type":"type","title":"ValueFlows.Proposal.ProposedIntent.t/0","doc":"","ref":"ValueFlows.Proposal.ProposedIntent.html#t:t/0"},{"type":"module","title":"ValueFlows.Proposal.ProposedIntentQueries","doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntentQueries.filter/2","doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#filter/2"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntentQueries.join_to/3","doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#join_to/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntentQueries.query/1","doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#query/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntentQueries.query/2","doc":"","ref":"ValueFlows.Proposal.ProposedIntentQueries.html#query/2"},{"type":"module","title":"ValueFlows.Proposal.ProposedIntents","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.ap_publish_activity/3","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.ap_receive_activity/3","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.create/2","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#create/2"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.delete/1","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#delete/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.federation_module/0","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#federation_module/0"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.many/1","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#many/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.one/1","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#one/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedIntents.propose_intent/3","doc":"","ref":"ValueFlows.Proposal.ProposedIntents.html#propose_intent/3"},{"type":"module","title":"ValueFlows.Proposal.ProposedTo","doc":"","ref":"ValueFlows.Proposal.ProposedTo.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedTo.changeset/2","doc":"","ref":"ValueFlows.Proposal.ProposedTo.html#changeset/2"},{"type":"type","title":"ValueFlows.Proposal.ProposedTo.t/0","doc":"","ref":"ValueFlows.Proposal.ProposedTo.html#t:t/0"},{"type":"module","title":"ValueFlows.Proposal.ProposedToQueries","doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedToQueries.filter/2","doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#filter/2"},{"type":"function","title":"ValueFlows.Proposal.ProposedToQueries.join_to/3","doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#join_to/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedToQueries.query/1","doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#query/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedToQueries.query/2","doc":"","ref":"ValueFlows.Proposal.ProposedToQueries.html#query/2"},{"type":"module","title":"ValueFlows.Proposal.ProposedTos","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.ap_publish_activity/3","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#ap_publish_activity/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.ap_receive_activity/3","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#ap_receive_activity/3"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.delete/1","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#delete/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.federation_module/0","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#federation_module/0"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.many/1","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#many/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.one/1","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#one/1"},{"type":"function","title":"ValueFlows.Proposal.ProposedTos.propose_to/2","doc":"","ref":"ValueFlows.Proposal.ProposedTos.html#propose_to/2"},{"type":"module","title":"ValueFlows.Proposal.Queries","doc":"","ref":"ValueFlows.Proposal.Queries.html"},{"type":"function","title":"ValueFlows.Proposal.Queries.filter/2","doc":"","ref":"ValueFlows.Proposal.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.Proposal.Queries.join_to/3","doc":"","ref":"ValueFlows.Proposal.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.Proposal.Queries.queries/5","doc":"","ref":"ValueFlows.Proposal.Queries.html#queries/5"},{"type":"function","title":"ValueFlows.Proposal.Queries.query/1","doc":"","ref":"ValueFlows.Proposal.Queries.html#query/1"},{"type":"function","title":"ValueFlows.Proposal.Queries.query/2","doc":"","ref":"ValueFlows.Proposal.Queries.html#query/2"},{"type":"module","title":"ValueFlows.Util","doc":"","ref":"ValueFlows.Util.html"},{"type":"function","title":"ValueFlows.Util.attr_get_agent/3","doc":"","ref":"ValueFlows.Util.html#attr_get_agent/3"},{"type":"function","title":"ValueFlows.Util.can?/3","doc":"","ref":"ValueFlows.Util.html#can?/3"},{"type":"function","title":"ValueFlows.Util.change_measures/3","doc":"","ref":"ValueFlows.Util.html#change_measures/3"},{"type":"function","title":"ValueFlows.Util.common_filters/2","doc":"","ref":"ValueFlows.Util.html#common_filters/2"},{"type":"function","title":"ValueFlows.Util.content_url_or_path/1","doc":"","ref":"ValueFlows.Util.html#content_url_or_path/1"},{"type":"function","title":"ValueFlows.Util.default_recurse_limit/0","doc":"","ref":"ValueFlows.Util.html#default_recurse_limit/0"},{"type":"function","title":"ValueFlows.Util.handle_changeset_errors/3","doc":"","ref":"ValueFlows.Util.html#handle_changeset_errors/3"},{"type":"function","title":"ValueFlows.Util.image_schema/0","doc":"","ref":"ValueFlows.Util.html#image_schema/0"},{"type":"function","title":"ValueFlows.Util.image_url/1","doc":"","ref":"ValueFlows.Util.html#image_url/1"},{"type":"function","title":"ValueFlows.Util.index_for_search/1","doc":"","ref":"ValueFlows.Util.html#index_for_search/1"},{"type":"function","title":"ValueFlows.Util.indexing_format_creator/1","doc":"","ref":"ValueFlows.Util.html#indexing_format_creator/1"},{"type":"function","title":"ValueFlows.Util.indexing_format_tags/1","doc":"","ref":"ValueFlows.Util.html#indexing_format_tags/1"},{"type":"function","title":"ValueFlows.Util.map_values/2","doc":"","ref":"ValueFlows.Util.html#map_values/2"},{"type":"function","title":"ValueFlows.Util.max_recurse_limit/0","doc":"","ref":"ValueFlows.Util.html#max_recurse_limit/0"},{"type":"function","title":"ValueFlows.Util.maybe_classification/2","doc":"lookup tag from URL(s), to support vf-graphql mode","ref":"ValueFlows.Util.html#maybe_classification/2"},{"type":"function","title":"ValueFlows.Util.maybe_classification_id/2","doc":"","ref":"ValueFlows.Util.html#maybe_classification_id/2"},{"type":"function","title":"ValueFlows.Util.maybe_search/2","doc":"","ref":"ValueFlows.Util.html#maybe_search/2"},{"type":"function","title":"ValueFlows.Util.org_schema/0","doc":"","ref":"ValueFlows.Util.html#org_schema/0"},{"type":"function","title":"ValueFlows.Util.parse_measurement_attrs/2","doc":"","ref":"ValueFlows.Util.html#parse_measurement_attrs/2"},{"type":"function","title":"ValueFlows.Util.prepare_opts_and_maybe_set_boundaries/3","doc":"","ref":"ValueFlows.Util.html#prepare_opts_and_maybe_set_boundaries/3"},{"type":"function","title":"ValueFlows.Util.publish/2","doc":"","ref":"ValueFlows.Util.html#publish/2"},{"type":"function","title":"ValueFlows.Util.publish/4","doc":"","ref":"ValueFlows.Util.html#publish/4"},{"type":"function","title":"ValueFlows.Util.search_for_matches/1","doc":"","ref":"ValueFlows.Util.html#search_for_matches/1"},{"type":"function","title":"ValueFlows.Util.try_tag_thing/3","doc":"","ref":"ValueFlows.Util.html#try_tag_thing/3"},{"type":"function","title":"ValueFlows.Util.user_or_org_schema/0","doc":"","ref":"ValueFlows.Util.html#user_or_org_schema/0"},{"type":"function","title":"ValueFlows.Util.user_schema/0","doc":"","ref":"ValueFlows.Util.html#user_schema/0"},{"type":"module","title":"ValueFlows.Util.Federation","doc":"","ref":"ValueFlows.Util.Federation.html"},{"type":"function","title":"ValueFlows.Util.Federation.activity_object_id/1","doc":"","ref":"ValueFlows.Util.Federation.html#activity_object_id/1"},{"type":"function","title":"ValueFlows.Util.Federation.ap_graphql_fields/2","doc":"","ref":"ValueFlows.Util.Federation.html#ap_graphql_fields/2"},{"type":"function","title":"ValueFlows.Util.Federation.ap_prepare_object/1","doc":"","ref":"ValueFlows.Util.Federation.html#ap_prepare_object/1"},{"type":"function","title":"ValueFlows.Util.Federation.ap_publish/3","doc":"","ref":"ValueFlows.Util.Federation.html#ap_publish/3"},{"type":"function","title":"ValueFlows.Util.Federation.ap_publish_activity/6","doc":"","ref":"ValueFlows.Util.Federation.html#ap_publish_activity/6"},{"type":"function","title":"ValueFlows.Util.Federation.ap_receive_activity/4","doc":"Incoming federation","ref":"ValueFlows.Util.Federation.html#ap_receive_activity/4"},{"type":"function","title":"ValueFlows.Util.Federation.fetch_api_object/4","doc":"","ref":"ValueFlows.Util.Federation.html#fetch_api_object/4"},{"type":"function","title":"ValueFlows.Util.Federation.maybe_create_nested_object/3","doc":"","ref":"ValueFlows.Util.Federation.html#maybe_create_nested_object/3"},{"type":"function","title":"ValueFlows.Util.Federation.maybe_id/2","doc":"","ref":"ValueFlows.Util.Federation.html#maybe_id/2"},{"type":"function","title":"ValueFlows.Util.Federation.struct_to_json/1","doc":"","ref":"ValueFlows.Util.Federation.html#struct_to_json/1"},{"type":"module","title":"ValueFlows.ValueCalculation","doc":"","ref":"ValueFlows.ValueCalculation.html"},{"type":"function","title":"ValueFlows.ValueCalculation.create_changeset/2","doc":"","ref":"ValueFlows.ValueCalculation.html#create_changeset/2"},{"type":"function","title":"ValueFlows.ValueCalculation.follow_filters/0","doc":"","ref":"ValueFlows.ValueCalculation.html#follow_filters/0"},{"type":"function","title":"ValueFlows.ValueCalculation.query_module/0","doc":"","ref":"ValueFlows.ValueCalculation.html#query_module/0"},{"type":"function","title":"ValueFlows.ValueCalculation.update_changeset/2","doc":"","ref":"ValueFlows.ValueCalculation.html#update_changeset/2"},{"type":"type","title":"ValueFlows.ValueCalculation.t/0","doc":"","ref":"ValueFlows.ValueCalculation.html#t:t/0"},{"type":"module","title":"ValueFlows.ValueCalculation.GraphQL","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.create_value_calculation/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#create_value_calculation/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.delete_value_calculation/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#delete_value_calculation/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.fetch_value_calculation/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#fetch_value_calculation/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.fetch_value_calculations/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#fetch_value_calculations/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.resource_conforms_to_edge/3","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#resource_conforms_to_edge/3"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.update_value_calculation/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#update_value_calculation/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.value_action_edge/3","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_action_edge/3"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.value_calculation/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_calculation/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.value_calculations/2","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_calculations/2"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.value_resource_conforms_to_edge/3","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_resource_conforms_to_edge/3"},{"type":"function","title":"ValueFlows.ValueCalculation.GraphQL.value_unit_edge/3","doc":"","ref":"ValueFlows.ValueCalculation.GraphQL.html#value_unit_edge/3"},{"type":"module","title":"ValueFlows.ValueCalculation.Queries","doc":"","ref":"ValueFlows.ValueCalculation.Queries.html"},{"type":"function","title":"ValueFlows.ValueCalculation.Queries.filter/2","doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#filter/2"},{"type":"function","title":"ValueFlows.ValueCalculation.Queries.join_to/3","doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#join_to/3"},{"type":"function","title":"ValueFlows.ValueCalculation.Queries.query/1","doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#query/1"},{"type":"function","title":"ValueFlows.ValueCalculation.Queries.query/2","doc":"","ref":"ValueFlows.ValueCalculation.Queries.html#query/2"},{"type":"module","title":"ValueFlows.ValueCalculation.ValueCalculations","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.apply_to/2","doc":"Apply the value calculation to a context","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#apply_to/2"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.create/2","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#create/2"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.many/1","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#many/1"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.one/1","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#one/1"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.preload_all/1","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#preload_all/1"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.soft_delete/1","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#soft_delete/1"},{"type":"function","title":"ValueFlows.ValueCalculation.ValueCalculations.update/2","doc":"","ref":"ValueFlows.ValueCalculation.ValueCalculations.html#update/2"},{"type":"module","title":"Bonfire.Classify","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Defining categories/topics\n- Defining relationships (parent or related) between categories to create taxonomies\n\nUse Bonfire.Tag if you want to tag/classify posts or other objects with these categories/topics.","ref":"Bonfire.Classify.html"},{"type":"module","title":"Handy commands - Bonfire.Classify","doc":"","ref":"Bonfire.Classify.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.Classify","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Classify.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Classify.arrange_categories_tree/1","doc":"","ref":"Bonfire.Classify.html#arrange_categories_tree/1"},{"type":"function","title":"Bonfire.Classify.ensure_update_allowed/2","doc":"","ref":"Bonfire.Classify.html#ensure_update_allowed/2"},{"type":"function","title":"Bonfire.Classify.maybe_index/1","doc":"","ref":"Bonfire.Classify.html#maybe_index/1"},{"type":"function","title":"Bonfire.Classify.maybe_unindex/1","doc":"","ref":"Bonfire.Classify.html#maybe_unindex/1"},{"type":"function","title":"Bonfire.Classify.my_followed_tree/2","doc":"","ref":"Bonfire.Classify.html#my_followed_tree/2"},{"type":"function","title":"Bonfire.Classify.publish/5","doc":"","ref":"Bonfire.Classify.html#publish/5"},{"type":"module","title":"Bonfire.Classify.Categories","doc":"","ref":"Bonfire.Classify.Categories.html"},{"type":"function","title":"Bonfire.Classify.Categories.ap_publish_activity/3","doc":"","ref":"Bonfire.Classify.Categories.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Classify.Categories.ap_receive_activity/3","doc":"","ref":"Bonfire.Classify.Categories.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Classify.Categories.attrs_prepare_tree/2","doc":"","ref":"Bonfire.Classify.Categories.html#attrs_prepare_tree/2"},{"type":"function","title":"Bonfire.Classify.Categories.attrs_with_username/1","doc":"","ref":"Bonfire.Classify.Categories.html#attrs_with_username/1"},{"type":"function","title":"Bonfire.Classify.Categories.by_username/2","doc":"","ref":"Bonfire.Classify.Categories.html#by_username/2"},{"type":"function","title":"Bonfire.Classify.Categories.clean_username/1","doc":"","ref":"Bonfire.Classify.Categories.html#clean_username/1"},{"type":"function","title":"Bonfire.Classify.Categories.create/3","doc":"Create a brand-new category object, with info stored in profile and character mixins","ref":"Bonfire.Classify.Categories.html#create/3"},{"type":"function","title":"Bonfire.Classify.Categories.create_remote/1","doc":"","ref":"Bonfire.Classify.Categories.html#create_remote/1"},{"type":"function","title":"Bonfire.Classify.Categories.federation_module/0","doc":"","ref":"Bonfire.Classify.Categories.html#federation_module/0"},{"type":"function","title":"Bonfire.Classify.Categories.format_actor/1","doc":"","ref":"Bonfire.Classify.Categories.html#format_actor/1"},{"type":"function","title":"Bonfire.Classify.Categories.get/2","doc":"","ref":"Bonfire.Classify.Categories.html#get/2"},{"type":"function","title":"Bonfire.Classify.Categories.indexing_object_format/1","doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Classify.Categories.indexing_object_format_name/1","doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_name/1"},{"type":"function","title":"Bonfire.Classify.Categories.indexing_object_format_parent/1","doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_parent/1"},{"type":"function","title":"Bonfire.Classify.Categories.list/2","doc":"","ref":"Bonfire.Classify.Categories.html#list/2"},{"type":"function","title":"Bonfire.Classify.Categories.list_tree/2","doc":"","ref":"Bonfire.Classify.Categories.html#list_tree/2"},{"type":"function","title":"Bonfire.Classify.Categories.moderators/1","doc":"","ref":"Bonfire.Classify.Categories.html#moderators/1"},{"type":"function","title":"Bonfire.Classify.Categories.name_already_taken?/1","doc":"","ref":"Bonfire.Classify.Categories.html#name_already_taken?/1"},{"type":"function","title":"Bonfire.Classify.Categories.one/2","doc":"","ref":"Bonfire.Classify.Categories.html#one/2"},{"type":"function","title":"Bonfire.Classify.Categories.put_attrs_with_parent_category/2","doc":"","ref":"Bonfire.Classify.Categories.html#put_attrs_with_parent_category/2"},{"type":"function","title":"Bonfire.Classify.Categories.put_generated_username/2","doc":"","ref":"Bonfire.Classify.Categories.html#put_generated_username/2"},{"type":"function","title":"Bonfire.Classify.Categories.query_module/0","doc":"","ref":"Bonfire.Classify.Categories.html#query_module/0"},{"type":"function","title":"Bonfire.Classify.Categories.schema_module/0","doc":"","ref":"Bonfire.Classify.Categories.html#schema_module/0"},{"type":"function","title":"Bonfire.Classify.Categories.soft_delete/2","doc":"","ref":"Bonfire.Classify.Categories.html#soft_delete/2"},{"type":"function","title":"Bonfire.Classify.Categories.try_several_usernames/4","doc":"","ref":"Bonfire.Classify.Categories.html#try_several_usernames/4"},{"type":"function","title":"Bonfire.Classify.Categories.update/4","doc":"","ref":"Bonfire.Classify.Categories.html#update/4"},{"type":"function","title":"Bonfire.Classify.Categories.update_local_actor/2","doc":"","ref":"Bonfire.Classify.Categories.html#update_local_actor/2"},{"type":"function","title":"Bonfire.Classify.Categories.update_remote_actor/2","doc":"","ref":"Bonfire.Classify.Categories.html#update_remote_actor/2"},{"type":"function","title":"Bonfire.Classify.Categories.username_with_parent/2","doc":"","ref":"Bonfire.Classify.Categories.html#username_with_parent/2"},{"type":"module","title":"Bonfire.Classify.Category","doc":"","ref":"Bonfire.Classify.Category.html"},{"type":"function","title":"Bonfire.Classify.Category.base_create_changeset/2","doc":"","ref":"Bonfire.Classify.Category.html#base_create_changeset/2"},{"type":"function","title":"Bonfire.Classify.Category.context_module/0","doc":"","ref":"Bonfire.Classify.Category.html#context_module/0"},{"type":"function","title":"Bonfire.Classify.Category.create_changeset/3","doc":"","ref":"Bonfire.Classify.Category.html#create_changeset/3"},{"type":"function","title":"Bonfire.Classify.Category.follow_filters/0","doc":"","ref":"Bonfire.Classify.Category.html#follow_filters/0"},{"type":"function","title":"Bonfire.Classify.Category.query_module/0","doc":"","ref":"Bonfire.Classify.Category.html#query_module/0"},{"type":"function","title":"Bonfire.Classify.Category.update_changeset/3","doc":"","ref":"Bonfire.Classify.Category.html#update_changeset/3"},{"type":"type","title":"Bonfire.Classify.Category.t/0","doc":"","ref":"Bonfire.Classify.Category.html#t:t/0"},{"type":"module","title":"Bonfire.Classify.Category.Queries","doc":"","ref":"Bonfire.Classify.Category.Queries.html"},{"type":"function","title":"Bonfire.Classify.Category.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Classify.Category.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Classify.Category.Queries.join_to/3","doc":"","ref":"Bonfire.Classify.Category.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Classify.Category.Queries.queries/4","doc":"","ref":"Bonfire.Classify.Category.Queries.html#queries/4"},{"type":"function","title":"Bonfire.Classify.Category.Queries.query/1","doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/1"},{"type":"function","title":"Bonfire.Classify.Category.Queries.query/2","doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/2"},{"type":"module","title":"Bonfire.Classify.LiveHandler","doc":"","ref":"Bonfire.Classify.LiveHandler.html"},{"type":"function","title":"Bonfire.Classify.LiveHandler.declared_extension/0","doc":"","ref":"Bonfire.Classify.LiveHandler.html#declared_extension/0"},{"type":"function","title":"Bonfire.Classify.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Classify.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Classify.LiveHandler.handle_params/3","doc":"","ref":"Bonfire.Classify.LiveHandler.html#handle_params/3"},{"type":"function","title":"Bonfire.Classify.LiveHandler.mounted/3","doc":"","ref":"Bonfire.Classify.LiveHandler.html#mounted/3"},{"type":"function","title":"Bonfire.Classify.LiveHandler.new/3","doc":"","ref":"Bonfire.Classify.LiveHandler.html#new/3"},{"type":"function","title":"Bonfire.Classify.LiveHandler.set_image/5","doc":"","ref":"Bonfire.Classify.LiveHandler.html#set_image/5"},{"type":"macro","title":"Bonfire.Classify.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Classify.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Classify.RuntimeConfig","doc":"","ref":"Bonfire.Classify.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Classify.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.Classify.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Classify.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Classify.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Classify.Simulate","doc":"","ref":"Bonfire.Classify.Simulate.html"},{"type":"function","title":"Bonfire.Classify.Simulate.category/1","doc":"","ref":"Bonfire.Classify.Simulate.html#category/1"},{"type":"function","title":"Bonfire.Classify.Simulate.fake_category!/3","doc":"","ref":"Bonfire.Classify.Simulate.html#fake_category!/3"},{"type":"module","title":"Bonfire.Classify.Tree","doc":"A mixin used to record parent/child relationships between categories (eg. a topic that belongs to a group) and between objects and categories (eg. a post was published in a topic)","ref":"Bonfire.Classify.Tree.html"},{"type":"function","title":"Bonfire.Classify.Tree.ancestor_ids/1","doc":"","ref":"Bonfire.Classify.Tree.html#ancestor_ids/1"},{"type":"function","title":"Bonfire.Classify.Tree.ancestors/1","doc":"","ref":"Bonfire.Classify.Tree.html#ancestors/1"},{"type":"function","title":"Bonfire.Classify.Tree.arrange/2","doc":"","ref":"Bonfire.Classify.Tree.html#arrange/2"},{"type":"function","title":"Bonfire.Classify.Tree.build_child/1","doc":"","ref":"Bonfire.Classify.Tree.html#build_child/1"},{"type":"function","title":"Bonfire.Classify.Tree.changeset/2","doc":"","ref":"Bonfire.Classify.Tree.html#changeset/2"},{"type":"function","title":"Bonfire.Classify.Tree.children/1","doc":"","ref":"Bonfire.Classify.Tree.html#children/1"},{"type":"function","title":"Bonfire.Classify.Tree.depth/1","doc":"","ref":"Bonfire.Classify.Tree.html#depth/1"},{"type":"function","title":"Bonfire.Classify.Tree.descendants/1","doc":"","ref":"Bonfire.Classify.Tree.html#descendants/1"},{"type":"function","title":"Bonfire.Classify.Tree.make_child_of/2","doc":"","ref":"Bonfire.Classify.Tree.html#make_child_of/2"},{"type":"function","title":"Bonfire.Classify.Tree.parent/1","doc":"","ref":"Bonfire.Classify.Tree.html#parent/1"},{"type":"function","title":"Bonfire.Classify.Tree.parent_id/1","doc":"","ref":"Bonfire.Classify.Tree.html#parent_id/1"},{"type":"function","title":"Bonfire.Classify.Tree.path/1","doc":"","ref":"Bonfire.Classify.Tree.html#path/1"},{"type":"function","title":"Bonfire.Classify.Tree.path_ids/1","doc":"","ref":"Bonfire.Classify.Tree.html#path_ids/1"},{"type":"function","title":"Bonfire.Classify.Tree.put_tree/3","doc":"","ref":"Bonfire.Classify.Tree.html#put_tree/3"},{"type":"function","title":"Bonfire.Classify.Tree.root/1","doc":"","ref":"Bonfire.Classify.Tree.html#root/1"},{"type":"function","title":"Bonfire.Classify.Tree.root?/1","doc":"","ref":"Bonfire.Classify.Tree.html#root?/1"},{"type":"function","title":"Bonfire.Classify.Tree.root_id/1","doc":"","ref":"Bonfire.Classify.Tree.html#root_id/1"},{"type":"function","title":"Bonfire.Classify.Tree.siblings/1","doc":"","ref":"Bonfire.Classify.Tree.html#siblings/1"},{"type":"function","title":"Bonfire.Classify.Tree.subtree/1","doc":"","ref":"Bonfire.Classify.Tree.html#subtree/1"},{"type":"function","title":"Bonfire.Classify.Tree.where_depth/2","doc":"","ref":"Bonfire.Classify.Tree.html#where_depth/2"},{"type":"module","title":"Bonfire.Geolocate","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Geolocation schema\n- Optional GraphQL API for geolocations\n- Geocoding of addresses\n- Reverse geocoding","ref":"Bonfire.Geolocate.html"},{"type":"module","title":"Usage - Bonfire.Geolocate","doc":"If you want to use the map LiveView component, you will need to `npm add leaflet --save --prefix assets/` in your app, and import","ref":"Bonfire.Geolocate.html#module-usage"},{"type":"module","title":"Handy commands - Bonfire.Geolocate","doc":"","ref":"Bonfire.Geolocate.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.Geolocate","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Geolocate.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Geolocate.start/2","doc":"","ref":"Bonfire.Geolocate.html#start/2"},{"type":"module","title":"Bonfire.Geolocate.Geocode","doc":"","ref":"Bonfire.Geolocate.Geocode.html"},{"type":"function","title":"Bonfire.Geolocate.Geocode.coordinates/1","doc":"","ref":"Bonfire.Geolocate.Geocode.html#coordinates/1"},{"type":"module","title":"Bonfire.Geolocate.Geolocation","doc":"","ref":"Bonfire.Geolocate.Geolocation.html"},{"type":"function","title":"Bonfire.Geolocate.Geolocation.context_module/0","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#context_module/0"},{"type":"function","title":"Bonfire.Geolocate.Geolocation.create_changeset/3","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#create_changeset/3"},{"type":"function","title":"Bonfire.Geolocate.Geolocation.follow_filters/0","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#follow_filters/0"},{"type":"function","title":"Bonfire.Geolocate.Geolocation.query_module/0","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#query_module/0"},{"type":"function","title":"Bonfire.Geolocate.Geolocation.update_changeset/2","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#update_changeset/2"},{"type":"type","title":"Bonfire.Geolocate.Geolocation.t/0","doc":"","ref":"Bonfire.Geolocate.Geolocation.html#t:t/0"},{"type":"module","title":"Bonfire.Geolocate.Geolocations","doc":"","ref":"Bonfire.Geolocate.Geolocations.html"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.ap_publish_activity/3","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.ap_receive_activity/3","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.create/2","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/2"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.create/3","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/3"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.cursor/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#cursor/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.federation_module/0","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#federation_module/0"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.indexing_object_format/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.many/1","doc":"Retrieves a list of geolocations by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#many/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.many!/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#many!/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.maybe_index/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#maybe_index/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.one/1","doc":"Retrieves a single geolocation by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#one/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.populate_coordinates/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_coordinates/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.populate_result/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_result/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.resolve_mappable_address/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#resolve_mappable_address/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.search/2","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#search/2"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.soft_delete/2","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#soft_delete/2"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.test_cursor/1","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#test_cursor/1"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.thing_add_location/3","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#thing_add_location/3"},{"type":"function","title":"Bonfire.Geolocate.Geolocations.update/3","doc":"","ref":"Bonfire.Geolocate.Geolocations.html#update/3"},{"type":"module","title":"Bonfire.Geolocate.GraphQL.Hydration","doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html"},{"type":"function","title":"Bonfire.Geolocate.GraphQL.Hydration.hydrate/0","doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html#hydrate/0"},{"type":"module","title":"Bonfire.Geolocate.LiveHandler","doc":"","ref":"Bonfire.Geolocate.LiveHandler.html"},{"type":"function","title":"Bonfire.Geolocate.LiveHandler.create_in_autocomplete/2","doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#create_in_autocomplete/2"},{"type":"function","title":"Bonfire.Geolocate.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.Geolocate.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Geolocate.LiveHandler.to_tuple/1","doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#to_tuple/1"},{"type":"module","title":"Bonfire.Geolocate.Places","doc":"","ref":"Bonfire.Geolocate.Places.html"},{"type":"function","title":"Bonfire.Geolocate.Places.fetch_place/2","doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place/2"},{"type":"function","title":"Bonfire.Geolocate.Places.fetch_place_things/2","doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place_things/2"},{"type":"function","title":"Bonfire.Geolocate.Places.fetch_places/1","doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_places/1"},{"type":"module","title":"Bonfire.Geolocate.Queries","doc":"","ref":"Bonfire.Geolocate.Queries.html"},{"type":"function","title":"Bonfire.Geolocate.Queries.filter/2","doc":"","ref":"Bonfire.Geolocate.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Geolocate.Queries.join_to/3","doc":"","ref":"Bonfire.Geolocate.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Geolocate.Queries.queries/5","doc":"","ref":"Bonfire.Geolocate.Queries.html#queries/5"},{"type":"function","title":"Bonfire.Geolocate.Queries.query/1","doc":"","ref":"Bonfire.Geolocate.Queries.html#query/1"},{"type":"function","title":"Bonfire.Geolocate.Queries.query/2","doc":"","ref":"Bonfire.Geolocate.Queries.html#query/2"},{"type":"module","title":"Bonfire.Geolocate.RuntimeConfig","doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Geolocate.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Geolocate.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Geolocate.Simulate","doc":"","ref":"Bonfire.Geolocate.Simulate.html"},{"type":"function","title":"Bonfire.Geolocate.Simulate.address/0","doc":"","ref":"Bonfire.Geolocate.Simulate.html#address/0"},{"type":"function","title":"Bonfire.Geolocate.Simulate.fake_geolocation!/3","doc":"","ref":"Bonfire.Geolocate.Simulate.html#fake_geolocation!/3"},{"type":"function","title":"Bonfire.Geolocate.Simulate.geolocation/1","doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation/1"},{"type":"function","title":"Bonfire.Geolocate.Simulate.geolocation_input/1","doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation_input/1"},{"type":"function","title":"Bonfire.Geolocate.Simulate.mappable_address/0","doc":"","ref":"Bonfire.Geolocate.Simulate.html#mappable_address/0"},{"type":"module","title":"Bonfire.Geolocate.Web.Routes","doc":"","ref":"Bonfire.Geolocate.Web.Routes.html"},{"type":"function","title":"Bonfire.Geolocate.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Geolocate.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Label","doc":"Bonfire.Label is a powerful and flexible extension designed to enhance content moderation and improve online safety. Inspired by the design principles outlined by Prosocial Design (specifically the [Label Misleading Content & Add Links to Reliable Related Content](https://www.prosocialdesign.org/library/label-misleading-content-add-links-to-reliable-related-content) pattern), this library enables the addition of custom labels and descriptions to user-generated posts. \n\nThis feature aids in identifying and marking potentially misleading, harmful, or unsafe content, while also providing users with links to reliable and related information.","ref":"Bonfire.Label.html"},{"type":"module","title":"Features - Bonfire.Label","doc":"- **Custom Labeling**: Easily add custom labels to posts, categorizing them based on content, reliability, and safety.\n- **Dynamic Descriptions**: Append descriptions to posts to provide context, warnings, or additional information.\n- **Link to Reliable Sources**: Option to include up to 3 links to authoritative sources for further reading or fact-checking.\n- **Configurable Settings**: Tailor the permission system to fit the specific governance of your platform.\n- **User-friendly Interface**: Intuitive tools for moderators and administrators to manage labels and descriptions.","ref":"Bonfire.Label.html#module-features"},{"type":"module","title":"Copyright and License - Bonfire.Label","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Label.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Label.changeset/2","doc":"","ref":"Bonfire.Label.html#changeset/2"},{"type":"module","title":"Bonfire.Label.Acts.LabelObject","doc":"Creates a changeset for publishing a page\n\nEpic Options:\n  * `:current_user` - user that will create the page, required.\n\nAct Options:\n  * `:as` - key to where we find the label(s) to add, and then assign changeset to, default: `:label`.\n  * `:object` (configurable) - id to use for the thing to label\n  * `:attrs` - epic options key to find the attributes at, default: `:attrs`.","ref":"Bonfire.Label.Acts.LabelObject.html"},{"type":"module","title":"Bonfire.Label.Fake","doc":"","ref":"Bonfire.Label.Fake.html"},{"type":"module","title":"Bonfire.Label.Labelling","doc":"","ref":"Bonfire.Label.Labelling.html"},{"type":"function","title":"Bonfire.Label.Labelling.ap_publish_activity/3","doc":"","ref":"Bonfire.Label.Labelling.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Label.Labelling.count/2","doc":"","ref":"Bonfire.Label.Labelling.html#count/2"},{"type":"function","title":"Bonfire.Label.Labelling.date_last_labelled/2","doc":"","ref":"Bonfire.Label.Labelling.html#date_last_labelled/2"},{"type":"function","title":"Bonfire.Label.Labelling.get/3","doc":"","ref":"Bonfire.Label.Labelling.html#get/3"},{"type":"function","title":"Bonfire.Label.Labelling.get!/3","doc":"","ref":"Bonfire.Label.Labelling.html#get!/3"},{"type":"function","title":"Bonfire.Label.Labelling.label_object/3","doc":"","ref":"Bonfire.Label.Labelling.html#label_object/3"},{"type":"function","title":"Bonfire.Label.Labelling.labelled?/2","doc":"","ref":"Bonfire.Label.Labelling.html#labelled?/2"},{"type":"function","title":"Bonfire.Label.Labelling.list_by/2","doc":"List labels by the user","ref":"Bonfire.Label.Labelling.html#list_by/2"},{"type":"function","title":"Bonfire.Label.Labelling.list_my/1","doc":"List current user's labels","ref":"Bonfire.Label.Labelling.html#list_my/1"},{"type":"function","title":"Bonfire.Label.Labelling.list_of/2","doc":"List label of an object","ref":"Bonfire.Label.Labelling.html#list_of/2"},{"type":"function","title":"Bonfire.Label.Labelling.list_paginated/2","doc":"","ref":"Bonfire.Label.Labelling.html#list_paginated/2"},{"type":"function","title":"Bonfire.Label.Labelling.query/2","doc":"","ref":"Bonfire.Label.Labelling.html#query/2"},{"type":"function","title":"Bonfire.Label.Labelling.query_module/0","doc":"","ref":"Bonfire.Label.Labelling.html#query_module/0"},{"type":"function","title":"Bonfire.Label.Labelling.run_epic/4","doc":"","ref":"Bonfire.Label.Labelling.html#run_epic/4"},{"type":"function","title":"Bonfire.Label.Labelling.schema_module/0","doc":"","ref":"Bonfire.Label.Labelling.html#schema_module/0"},{"type":"function","title":"Bonfire.Label.Labelling.unlabel/3","doc":"","ref":"Bonfire.Label.Labelling.html#unlabel/3"},{"type":"module","title":"Bonfire.Label.Labels","doc":"","ref":"Bonfire.Label.Labels.html"},{"type":"function","title":"Bonfire.Label.Labels.create/4","doc":"","ref":"Bonfire.Label.Labels.html#create/4"},{"type":"function","title":"Bonfire.Label.Labels.get/2","doc":"","ref":"Bonfire.Label.Labels.html#get/2"},{"type":"function","title":"Bonfire.Label.Labels.get_or_create/4","doc":"","ref":"Bonfire.Label.Labels.html#get_or_create/4"},{"type":"function","title":"Bonfire.Label.Labels.repo/0","doc":"","ref":"Bonfire.Label.Labels.html#repo/0"},{"type":"function","title":"Bonfire.Label.Labels.top_label_id/0","doc":"","ref":"Bonfire.Label.Labels.html#top_label_id/0"},{"type":"module","title":"Bonfire.Label.LiveHandler","doc":"","ref":"Bonfire.Label.LiveHandler.html"},{"type":"function","title":"Bonfire.Label.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Label.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Label.LiveHandler.maybe_tag/4","doc":"","ref":"Bonfire.Label.LiveHandler.html#maybe_tag/4"},{"type":"macro","title":"Bonfire.Label.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Label.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Label.RuntimeConfig","doc":"","ref":"Bonfire.Label.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Label.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.Label.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Label.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Label.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Label.Web.Routes","doc":"","ref":"Bonfire.Label.Web.Routes.html"},{"type":"function","title":"Bonfire.Label.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Label.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Localise","doc":"Runs at compile-time to include dynamic strings (like verb names and object types) in localisation string extraction.","ref":"Bonfire.Localise.html"},{"type":"module","title":"Bonfire.OpenID","doc":"An extension to enable:\n- authenticating on Bonfire using an external identity using OpenID Connect\n- using your Bonfire identity to authenticate in other apps with OpenID Connect 1.0 or OAuth 2.0","ref":"Bonfire.OpenID.html"},{"type":"module","title":"Copyright and License - Bonfire.OpenID","doc":"Powered by these libraries: \n- https://hex.pm/packages/boruta (MIT license)\n- https://hex.pm/packages/openid_connect (MIT license)\n\nExtension copyright (c) 2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.OpenID.html#module-copyright-and-license"},{"type":"module","title":"Bonfire.OpenID.Client","doc":"","ref":"Bonfire.OpenID.Client.html"},{"type":"function","title":"Bonfire.OpenID.Client.oauth2_providers/0","doc":"","ref":"Bonfire.OpenID.Client.html#oauth2_providers/0"},{"type":"function","title":"Bonfire.OpenID.Client.open_id_connect_providers/0","doc":"","ref":"Bonfire.OpenID.Client.html#open_id_connect_providers/0"},{"type":"function","title":"Bonfire.OpenID.Client.providers_authorization_urls/0","doc":"","ref":"Bonfire.OpenID.Client.html#providers_authorization_urls/0"},{"type":"module","title":"Bonfire.OpenID.Fake","doc":"","ref":"Bonfire.OpenID.Fake.html"},{"type":"function","title":"Bonfire.OpenID.Fake.fake_account!/2","doc":"","ref":"Bonfire.OpenID.Fake.html#fake_account!/2"},{"type":"function","title":"Bonfire.OpenID.Fake.fake_user!/2","doc":"","ref":"Bonfire.OpenID.Fake.html#fake_user!/2"},{"type":"module","title":"Bonfire.OpenID.Plugs.AuthRequired","doc":"","ref":"Bonfire.OpenID.Plugs.AuthRequired.html"},{"type":"function","title":"Bonfire.OpenID.Plugs.AuthRequired.require_auth/2","doc":"","ref":"Bonfire.OpenID.Plugs.AuthRequired.html#require_auth/2"},{"type":"module","title":"Bonfire.OpenID.Plugs.Authorize","doc":"","ref":"Bonfire.OpenID.Plugs.Authorize.html"},{"type":"function","title":"Bonfire.OpenID.Plugs.Authorize.authorize/2","doc":"","ref":"Bonfire.OpenID.Plugs.Authorize.html#authorize/2"},{"type":"function","title":"Bonfire.OpenID.Plugs.Authorize.load_authorization/2","doc":"","ref":"Bonfire.OpenID.Plugs.Authorize.html#load_authorization/2"},{"type":"function","title":"Bonfire.OpenID.Plugs.Authorize.maybe_load_authorization/2","doc":"","ref":"Bonfire.OpenID.Plugs.Authorize.html#maybe_load_authorization/2"},{"type":"module","title":"Bonfire.OpenID.Plugs.ClientID","doc":"","ref":"Bonfire.OpenID.Plugs.ClientID.html"},{"type":"function","title":"Bonfire.OpenID.Plugs.ClientID.validate_client_id/2","doc":"","ref":"Bonfire.OpenID.Plugs.ClientID.html#validate_client_id/2"},{"type":"module","title":"Bonfire.OpenID.Provider.ClientApps","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.get/1","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#get/1"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.get/2","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#get/2"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.get_or_new/1","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#get_or_new/1"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.get_or_new/2","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#get_or_new/2"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.init_test_client_app/0","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#init_test_client_app/0"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.list_active_tokens/0","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#list_active_tokens/0"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.list_clients/0","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#list_clients/0"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.list_scopes/0","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#list_scopes/0"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.new/1","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#new/1"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.new/2","doc":"Define an OAuth client app, providing a name and redirect URI(s)","ref":"Bonfire.OpenID.Provider.ClientApps.html#new/2"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.prepare_redirect_uri/1","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#prepare_redirect_uri/1"},{"type":"function","title":"Bonfire.OpenID.Provider.ClientApps.prepare_redirect_uris/1","doc":"","ref":"Bonfire.OpenID.Provider.ClientApps.html#prepare_redirect_uris/1"},{"type":"module","title":"Bonfire.OpenID.Provider.OAuth","doc":"","ref":"Bonfire.OpenID.Provider.OAuth.html"},{"type":"function","title":"Bonfire.OpenID.Provider.OAuth.redirect_uri_validate/1","doc":"","ref":"Bonfire.OpenID.Provider.OAuth.html#redirect_uri_validate/1"},{"type":"module","title":"Bonfire.OpenID.RuntimeConfig","doc":"","ref":"Bonfire.OpenID.RuntimeConfig.html"},{"type":"function","title":"Bonfire.OpenID.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs` line","ref":"Bonfire.OpenID.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.OpenID.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.OpenID.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.OpenID.Web.Routes","doc":"","ref":"Bonfire.OpenID.Web.Routes.html"},{"type":"function","title":"Bonfire.OpenID.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.OpenID.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.OpenScience","doc":"See https://bonfirenetworks.org/app/open-science/","ref":"Bonfire.OpenScience.html"},{"type":"module","title":"Copyright and License - Bonfire.OpenScience","doc":"Copyright (c) 2024 Bonfire and Open Science Network Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.OpenScience.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.OpenScience.repo/0","doc":"","ref":"Bonfire.OpenScience.html#repo/0"},{"type":"module","title":"Bonfire.OpenScience.APIs","doc":"","ref":"Bonfire.OpenScience.APIs.html"},{"type":"function","title":"Bonfire.OpenScience.APIs.fetch/2","doc":"","ref":"Bonfire.OpenScience.APIs.html#fetch/2"},{"type":"function","title":"Bonfire.OpenScience.APIs.fetch_crossref/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#fetch_crossref/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.fetch_orcid_data/2","doc":"","ref":"Bonfire.OpenScience.APIs.html#fetch_orcid_data/2"},{"type":"function","title":"Bonfire.OpenScience.APIs.fetch_orcid_works/3","doc":"","ref":"Bonfire.OpenScience.APIs.html#fetch_orcid_works/3"},{"type":"function","title":"Bonfire.OpenScience.APIs.fetch_orcid_works_all_known_users/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#fetch_orcid_works_all_known_users/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.is_doi?/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#is_doi?/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.is_pub_id_or_uri_match?/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#is_pub_id_or_uri_match?/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.maybe_fetch/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#maybe_fetch/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.pub_id_and_uri_matchers/0","doc":"","ref":"Bonfire.OpenScience.APIs.html#pub_id_and_uri_matchers/0"},{"type":"function","title":"Bonfire.OpenScience.APIs.pub_id_matcher/1","doc":"","ref":"Bonfire.OpenScience.APIs.html#pub_id_matcher/1"},{"type":"function","title":"Bonfire.OpenScience.APIs.pub_id_matchers/0","doc":"","ref":"Bonfire.OpenScience.APIs.html#pub_id_matchers/0"},{"type":"function","title":"Bonfire.OpenScience.APIs.pub_uri_matchers/0","doc":"","ref":"Bonfire.OpenScience.APIs.html#pub_uri_matchers/0"},{"type":"function","title":"Bonfire.OpenScience.APIs.trigger/3","doc":"","ref":"Bonfire.OpenScience.APIs.html#trigger/3"},{"type":"module","title":"Bonfire.OpenScience.Fake","doc":"","ref":"Bonfire.OpenScience.Fake.html"},{"type":"module","title":"Bonfire.OpenScience.RuntimeConfig","doc":"","ref":"Bonfire.OpenScience.RuntimeConfig.html"},{"type":"function","title":"Bonfire.OpenScience.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.OpenScience.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.OpenScience.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.OpenScience.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.OpenScience.Web.Routes","doc":"","ref":"Bonfire.OpenScience.Web.Routes.html"},{"type":"function","title":"Bonfire.OpenScience.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.OpenScience.Web.Routes.html#declare_routes/0"},{"type":"function","title":"Bonfire.OpenScience.Web.Routes.declared_extension/0","doc":"","ref":"Bonfire.OpenScience.Web.Routes.html#declared_extension/0"},{"type":"function","title":"Bonfire.OpenScience.Web.Routes.declared_nav/0","doc":"","ref":"Bonfire.OpenScience.Web.Routes.html#declared_nav/0"},{"type":"module","title":"Bonfire.Poll","doc":"An extensions for asking questions, collecting options, and conducting ranked voting on [Bonfire](https://bonfire.cafe/)","ref":"Bonfire.Poll.html"},{"type":"module","title":"Copyright and License - Bonfire.Poll","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Poll.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Poll.repo/0","doc":"","ref":"Bonfire.Poll.html#repo/0"},{"type":"module","title":"Bonfire.Poll.Acts.Choices.Upsert","doc":"Creates a changeset for publishing choice(s) for a question\n\nEpic Options:\n  * `:current_user` - user that will create the choice, required.\n  * `:choice_attrs` (configurable) - attrs to create the choice from, required.\n  * `:choice_id` (configurable) - id to use for the created choice (handy for creating\n    activitypub objects with an id representing their reported creation time)\n\nAct Options:\n  * `:id` - epic options key to find an id to force override with at, default: `:choice_id`\n  * `:as` - key to assign changeset to, default: `:choice`.\n  * `:attrs` - epic options key to find the attributes at, default: `:choice_attrs`.","ref":"Bonfire.Poll.Acts.Choices.Upsert.html"},{"type":"module","title":"Bonfire.Poll.Choice","doc":"","ref":"Bonfire.Poll.Choice.html"},{"type":"function","title":"Bonfire.Poll.Choice.changeset/2","doc":"","ref":"Bonfire.Poll.Choice.html#changeset/2"},{"type":"module","title":"Bonfire.Poll.Choices","doc":"","ref":"Bonfire.Poll.Choices.html"},{"type":"function","title":"Bonfire.Poll.Choices.put_choice/3","doc":"","ref":"Bonfire.Poll.Choices.html#put_choice/3"},{"type":"function","title":"Bonfire.Poll.Choices.simple_create_and_put/4","doc":"","ref":"Bonfire.Poll.Choices.html#simple_create_and_put/4"},{"type":"module","title":"Bonfire.Poll.Fake","doc":"","ref":"Bonfire.Poll.Fake.html"},{"type":"module","title":"Bonfire.Poll.LiveHandler","doc":"","ref":"Bonfire.Poll.LiveHandler.html"},{"type":"function","title":"Bonfire.Poll.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Poll.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Poll.LiveHandler.negative_score_info/0","doc":"","ref":"Bonfire.Poll.LiveHandler.html#negative_score_info/0"},{"type":"macro","title":"Bonfire.Poll.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Poll.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Poll.Question","doc":"","ref":"Bonfire.Poll.Question.html"},{"type":"module","title":"Bonfire.Poll.Question.Create","doc":"Creates a changeset for publishing a page\n\nEpic Options:\n  * `:current_user` - user that will create the page, required.\n  * `:page_attrs` (configurable) - attrs to create the page from, required.\n  * `:page_id` (configurable) - id to use for the created page (handy for creating\n    activitypub objects with an id representing their reported creation time)\n\nAct Options:\n  * `:id` - epic options key to find an id to force override with at, default: `:page_id`\n  * `:as` - key to assign changeset to, default: `:page`.\n  * `:attrs` - epic options key to find the attributes at, default: `:page_attrs`.","ref":"Bonfire.Poll.Question.Create.html"},{"type":"module","title":"Bonfire.Poll.Questions","doc":"","ref":"Bonfire.Poll.Questions.html"},{"type":"function","title":"Bonfire.Poll.Questions.changeset/2","doc":"","ref":"Bonfire.Poll.Questions.html#changeset/2"},{"type":"function","title":"Bonfire.Poll.Questions.create/1","doc":"","ref":"Bonfire.Poll.Questions.html#create/1"},{"type":"function","title":"Bonfire.Poll.Questions.create_simple/1","doc":"","ref":"Bonfire.Poll.Questions.html#create_simple/1"},{"type":"function","title":"Bonfire.Poll.Questions.list_by/2","doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Poll.Questions.html#list_by/2"},{"type":"function","title":"Bonfire.Poll.Questions.list_paginated/2","doc":"List posts with pagination","ref":"Bonfire.Poll.Questions.html#list_paginated/2"},{"type":"function","title":"Bonfire.Poll.Questions.query/2","doc":"","ref":"Bonfire.Poll.Questions.html#query/2"},{"type":"function","title":"Bonfire.Poll.Questions.query_paginated/2","doc":"Query posts with pagination","ref":"Bonfire.Poll.Questions.html#query_paginated/2"},{"type":"function","title":"Bonfire.Poll.Questions.read/2","doc":"","ref":"Bonfire.Poll.Questions.html#read/2"},{"type":"function","title":"Bonfire.Poll.Questions.run_epic/4","doc":"","ref":"Bonfire.Poll.Questions.html#run_epic/4"},{"type":"module","title":"Bonfire.Poll.RuntimeConfig","doc":"","ref":"Bonfire.Poll.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Poll.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.Poll.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Poll.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Poll.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Poll.Vote","doc":"","ref":"Bonfire.Poll.Vote.html"},{"type":"function","title":"Bonfire.Poll.Vote.changeset/2","doc":"","ref":"Bonfire.Poll.Vote.html#changeset/2"},{"type":"module","title":"Bonfire.Poll.Votes","doc":"","ref":"Bonfire.Poll.Votes.html"},{"type":"function","title":"Bonfire.Poll.Votes.by_voter/2","doc":"","ref":"Bonfire.Poll.Votes.html#by_voter/2"},{"type":"function","title":"Bonfire.Poll.Votes.calculate_total/3","doc":"","ref":"Bonfire.Poll.Votes.html#calculate_total/3"},{"type":"function","title":"Bonfire.Poll.Votes.count/2","doc":"","ref":"Bonfire.Poll.Votes.html#count/2"},{"type":"function","title":"Bonfire.Poll.Votes.get/3","doc":"","ref":"Bonfire.Poll.Votes.html#get/3"},{"type":"function","title":"Bonfire.Poll.Votes.get!/3","doc":"","ref":"Bonfire.Poll.Votes.html#get!/3"},{"type":"function","title":"Bonfire.Poll.Votes.get_average_base_score/2","doc":"","ref":"Bonfire.Poll.Votes.html#get_average_base_score/2"},{"type":"function","title":"Bonfire.Poll.Votes.get_average_emoji/4","doc":"","ref":"Bonfire.Poll.Votes.html#get_average_emoji/4"},{"type":"function","title":"Bonfire.Poll.Votes.get_score/2","doc":"","ref":"Bonfire.Poll.Votes.html#get_score/2"},{"type":"function","title":"Bonfire.Poll.Votes.query/2","doc":"","ref":"Bonfire.Poll.Votes.html#query/2"},{"type":"function","title":"Bonfire.Poll.Votes.register_vote_choice/4","doc":"","ref":"Bonfire.Poll.Votes.html#register_vote_choice/4"},{"type":"function","title":"Bonfire.Poll.Votes.scores/0","doc":"","ref":"Bonfire.Poll.Votes.html#scores/0"},{"type":"function","title":"Bonfire.Poll.Votes.send_vote_activity/4","doc":"","ref":"Bonfire.Poll.Votes.html#send_vote_activity/4"},{"type":"function","title":"Bonfire.Poll.Votes.vote/4","doc":"","ref":"Bonfire.Poll.Votes.html#vote/4"},{"type":"module","title":"Bonfire.Poll.Web.Routes","doc":"","ref":"Bonfire.Poll.Web.Routes.html"},{"type":"function","title":"Bonfire.Poll.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Poll.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Quantify","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Units\n- Measures","ref":"Bonfire.Quantify.html"},{"type":"module","title":"Handy commands - Bonfire.Quantify","doc":"","ref":"Bonfire.Quantify.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.Quantify","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Quantify.html#module-copyright-and-license"},{"type":"module","title":"Bonfire.Quantify.GraphQL.Hydration","doc":"","ref":"Bonfire.Quantify.GraphQL.Hydration.html"},{"type":"function","title":"Bonfire.Quantify.GraphQL.Hydration.hydrate/0","doc":"","ref":"Bonfire.Quantify.GraphQL.Hydration.html#hydrate/0"},{"type":"module","title":"Bonfire.Quantify.Measure","doc":"","ref":"Bonfire.Quantify.Measure.html"},{"type":"function","title":"Bonfire.Quantify.Measure.copy/1","doc":"Copy the attributes of a measure required to create a new one.","ref":"Bonfire.Quantify.Measure.html#copy/1"},{"type":"function","title":"Bonfire.Quantify.Measure.create_changeset/3","doc":"","ref":"Bonfire.Quantify.Measure.html#create_changeset/3"},{"type":"function","title":"Bonfire.Quantify.Measure.update_changeset/2","doc":"","ref":"Bonfire.Quantify.Measure.html#update_changeset/2"},{"type":"function","title":"Bonfire.Quantify.Measure.validate_changeset/2","doc":"","ref":"Bonfire.Quantify.Measure.html#validate_changeset/2"},{"type":"type","title":"Bonfire.Quantify.Measure.t/0","doc":"","ref":"Bonfire.Quantify.Measure.html#t:t/0"},{"type":"module","title":"Bonfire.Quantify.Measures","doc":"","ref":"Bonfire.Quantify.Measures.html"},{"type":"function","title":"Bonfire.Quantify.Measures.ap_publish_activity/3","doc":"","ref":"Bonfire.Quantify.Measures.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Quantify.Measures.ap_receive_activity/3","doc":"","ref":"Bonfire.Quantify.Measures.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Quantify.Measures.create/2","doc":"","ref":"Bonfire.Quantify.Measures.html#create/2"},{"type":"function","title":"Bonfire.Quantify.Measures.create/3","doc":"","ref":"Bonfire.Quantify.Measures.html#create/3"},{"type":"function","title":"Bonfire.Quantify.Measures.cursor/0","doc":"","ref":"Bonfire.Quantify.Measures.html#cursor/0"},{"type":"function","title":"Bonfire.Quantify.Measures.federation_module/0","doc":"","ref":"Bonfire.Quantify.Measures.html#federation_module/0"},{"type":"function","title":"Bonfire.Quantify.Measures.many/1","doc":"Retrieves a list of collections by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#many/1"},{"type":"function","title":"Bonfire.Quantify.Measures.one/1","doc":"Retrieves a single collection by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#one/1"},{"type":"function","title":"Bonfire.Quantify.Measures.test_cursor/0","doc":"","ref":"Bonfire.Quantify.Measures.html#test_cursor/0"},{"type":"function","title":"Bonfire.Quantify.Measures.update/2","doc":"","ref":"Bonfire.Quantify.Measures.html#update/2"},{"type":"module","title":"Bonfire.Quantify.Measures.Queries","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.filter/2","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.inc_quantity/2","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#inc_quantity/2"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.join_to/3","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.queries/5","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#queries/5"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.query/1","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/1"},{"type":"function","title":"Bonfire.Quantify.Measures.Queries.query/2","doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/2"},{"type":"module","title":"Bonfire.Quantify.Simulate","doc":"","ref":"Bonfire.Quantify.Simulate.html"},{"type":"function","title":"Bonfire.Quantify.Simulate.fake_measure!/3","doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_measure!/3"},{"type":"function","title":"Bonfire.Quantify.Simulate.fake_unit!/3","doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_unit!/3"},{"type":"function","title":"Bonfire.Quantify.Simulate.measure/1","doc":"","ref":"Bonfire.Quantify.Simulate.html#measure/1"},{"type":"function","title":"Bonfire.Quantify.Simulate.measure_input/2","doc":"","ref":"Bonfire.Quantify.Simulate.html#measure_input/2"},{"type":"function","title":"Bonfire.Quantify.Simulate.unit/1","doc":"","ref":"Bonfire.Quantify.Simulate.html#unit/1"},{"type":"function","title":"Bonfire.Quantify.Simulate.unit_input/1","doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_input/1"},{"type":"function","title":"Bonfire.Quantify.Simulate.unit_name/0","doc":"A unit","ref":"Bonfire.Quantify.Simulate.html#unit_name/0"},{"type":"function","title":"Bonfire.Quantify.Simulate.unit_symbol/0","doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_symbol/0"},{"type":"module","title":"Bonfire.Quantify.Unit","doc":"","ref":"Bonfire.Quantify.Unit.html"},{"type":"function","title":"Bonfire.Quantify.Unit.create_changeset/2","doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/2"},{"type":"function","title":"Bonfire.Quantify.Unit.create_changeset/3","doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/3"},{"type":"function","title":"Bonfire.Quantify.Unit.update_changeset/2","doc":"","ref":"Bonfire.Quantify.Unit.html#update_changeset/2"},{"type":"type","title":"Bonfire.Quantify.Unit.t/0","doc":"","ref":"Bonfire.Quantify.Unit.html#t:t/0"},{"type":"module","title":"Bonfire.Quantify.Units","doc":"","ref":"Bonfire.Quantify.Units.html"},{"type":"function","title":"Bonfire.Quantify.Units.ap_publish_activity/3","doc":"","ref":"Bonfire.Quantify.Units.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Quantify.Units.ap_receive_activity/3","doc":"","ref":"Bonfire.Quantify.Units.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Quantify.Units.create/2","doc":"","ref":"Bonfire.Quantify.Units.html#create/2"},{"type":"function","title":"Bonfire.Quantify.Units.create/3","doc":"","ref":"Bonfire.Quantify.Units.html#create/3"},{"type":"function","title":"Bonfire.Quantify.Units.cursor/0","doc":"","ref":"Bonfire.Quantify.Units.html#cursor/0"},{"type":"function","title":"Bonfire.Quantify.Units.federation_module/0","doc":"","ref":"Bonfire.Quantify.Units.html#federation_module/0"},{"type":"function","title":"Bonfire.Quantify.Units.get_or_create/2","doc":"","ref":"Bonfire.Quantify.Units.html#get_or_create/2"},{"type":"function","title":"Bonfire.Quantify.Units.many/1","doc":"Retrieves a list of collections by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#many/1"},{"type":"function","title":"Bonfire.Quantify.Units.one/1","doc":"Retrieves a single collection by arbitrary filters.\nUsed by:\n* Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#one/1"},{"type":"function","title":"Bonfire.Quantify.Units.soft_delete/1","doc":"","ref":"Bonfire.Quantify.Units.html#soft_delete/1"},{"type":"function","title":"Bonfire.Quantify.Units.test_cursor/0","doc":"","ref":"Bonfire.Quantify.Units.html#test_cursor/0"},{"type":"function","title":"Bonfire.Quantify.Units.update/2","doc":"","ref":"Bonfire.Quantify.Units.html#update/2"},{"type":"module","title":"Bonfire.Quantify.Units.Queries","doc":"","ref":"Bonfire.Quantify.Units.Queries.html"},{"type":"function","title":"Bonfire.Quantify.Units.Queries.filter/2","doc":"","ref":"Bonfire.Quantify.Units.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Quantify.Units.Queries.join_to/3","doc":"","ref":"Bonfire.Quantify.Units.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Quantify.Units.Queries.queries/5","doc":"","ref":"Bonfire.Quantify.Units.Queries.html#queries/5"},{"type":"function","title":"Bonfire.Quantify.Units.Queries.query/1","doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/1"},{"type":"function","title":"Bonfire.Quantify.Units.Queries.query/2","doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/2"},{"type":"module","title":"Bonfire.RuntimeConfig","doc":"","ref":"Bonfire.RuntimeConfig.html"},{"type":"function","title":"Bonfire.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs` line","ref":"Bonfire.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Seeder","doc":"A way to have data seeds that work similarly to migrations.\n\nTo generate a new seed: `mix phil_columns.gen.seed my_seed_name` will create a new module in `priv/repo/seeds`\n\nTo actually insert the seeds into your app, if that's not configured to be done automatically in your mix aliases, run `mix phil_columns.seed`\n\nTo roll-back: `mix phil_columns.rollback`","ref":"Bonfire.Seeder.html"},{"type":"module","title":"Bonfire.Tag","doc":"An extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Tagging posts or other things (i.e. with a Category from Bonfire.Classify or a location from Bonfire.Geolocate)\n- @ mentions (WIP)\n- Hashtags (WIP)","ref":"Bonfire.Tag.html"},{"type":"module","title":"Handy commands - Bonfire.Tag","doc":"","ref":"Bonfire.Tag.html#module-handy-commands"},{"type":"module","title":"Copyright and License - Bonfire.Tag","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Tag.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Tag.context_module/0","doc":"","ref":"Bonfire.Tag.html#context_module/0"},{"type":"function","title":"Bonfire.Tag.query_module/0","doc":"","ref":"Bonfire.Tag.html#query_module/0"},{"type":"function","title":"Bonfire.Tag.tag_things_changeset/2","doc":"Add things (Pointer objects) to a tag. You usually want to add tags to a thing instead, see `thing_tags_changeset`","ref":"Bonfire.Tag.html#tag_things_changeset/2"},{"type":"function","title":"Bonfire.Tag.thing_tags_changeset/2","doc":"Add tags to a thing (any Pointer object which defines a many_to_many relation to tag). This function applies to your object schema but is here for convenience.","ref":"Bonfire.Tag.html#thing_tags_changeset/2"},{"type":"module","title":"Bonfire.Tag.Acts.Tag","doc":"","ref":"Bonfire.Tag.Acts.Tag.html"},{"type":"function","title":"Bonfire.Tag.Acts.Tag.run/2","doc":"","ref":"Bonfire.Tag.Acts.Tag.html#run/2"},{"type":"module","title":"Bonfire.Tag.Autocomplete","doc":"","ref":"Bonfire.Tag.Autocomplete.html"},{"type":"function","title":"Bonfire.Tag.Autocomplete.api_tag_lookup/3","doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup/3"},{"type":"function","title":"Bonfire.Tag.Autocomplete.api_tag_lookup_public/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup_public/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.filter_results/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#filter_results/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.find_all_tags/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#find_all_tags/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.maybe_find_tags/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_find_tags/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.maybe_search/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_search/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.prefix_index/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#prefix_index/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_or_lookup/3","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_or_lookup/3"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_prefix/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_prefix/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_type/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_type/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_add_field/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_add_field/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_lookup_public/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_lookup_public/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search_from_tags/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_tags/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search_from_text/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_text/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tags_split/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tags_split/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_all_prefixes/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_all_prefixes/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_prefixes/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_prefixes/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_tag_search/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_tag_search/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/2"},{"type":"module","title":"Bonfire.Tag.GraphQL.TagResolver","doc":"GraphQL tag/category queries","ref":"Bonfire.Tag.GraphQL.TagResolver.html"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.fetch_tag/2","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#fetch_tag/2"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.name/3","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#name/3"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.summary/3","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#summary/3"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.tag/2","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag/2"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.tag_prepare/3","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_prepare/3"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.tag_something/2","doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_something/2"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.tagged_things_edges/3","doc":"Things associated with a Tag","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tagged_things_edges/3"},{"type":"function","title":"Bonfire.Tag.GraphQL.TagResolver.tags_edges/3","doc":"Tags associated with a Thing","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tags_edges/3"},{"type":"module","title":"Bonfire.Tag.Hashtag","doc":"","ref":"Bonfire.Tag.Hashtag.html"},{"type":"function","title":"Bonfire.Tag.Hashtag.changeset/2","doc":"","ref":"Bonfire.Tag.Hashtag.html#changeset/2"},{"type":"function","title":"Bonfire.Tag.Hashtag.normalize_name/1","doc":"","ref":"Bonfire.Tag.Hashtag.html#normalize_name/1"},{"type":"module","title":"Bonfire.Tag.LiveHandler","doc":"","ref":"Bonfire.Tag.LiveHandler.html"},{"type":"function","title":"Bonfire.Tag.LiveHandler.declared_extension/0","doc":"","ref":"Bonfire.Tag.LiveHandler.html#declared_extension/0"},{"type":"function","title":"Bonfire.Tag.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Tag.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Tag.LiveHandler.maybe_tag/4","doc":"","ref":"Bonfire.Tag.LiveHandler.html#maybe_tag/4"},{"type":"macro","title":"Bonfire.Tag.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Tag.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Tag.Queries","doc":"","ref":"Bonfire.Tag.Queries.html"},{"type":"function","title":"Bonfire.Tag.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Tag.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Tag.Queries.join_to/3","doc":"","ref":"Bonfire.Tag.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Tag.Queries.list_trending/3","doc":"","ref":"Bonfire.Tag.Queries.html#list_trending/3"},{"type":"function","title":"Bonfire.Tag.Queries.queries/4","doc":"","ref":"Bonfire.Tag.Queries.html#queries/4"},{"type":"function","title":"Bonfire.Tag.Queries.query/1","doc":"","ref":"Bonfire.Tag.Queries.html#query/1"},{"type":"function","title":"Bonfire.Tag.Queries.query/2","doc":"","ref":"Bonfire.Tag.Queries.html#query/2"},{"type":"module","title":"Bonfire.Tag.Simulate","doc":"","ref":"Bonfire.Tag.Simulate.html"},{"type":"module","title":"Bonfire.Tag.Tagged","doc":"A mixin used for adding tags to an object","ref":"Bonfire.Tag.Tagged.html"},{"type":"function","title":"Bonfire.Tag.Tagged.all/0","doc":"","ref":"Bonfire.Tag.Tagged.html#all/0"},{"type":"function","title":"Bonfire.Tag.Tagged.changeset/2","doc":"","ref":"Bonfire.Tag.Tagged.html#changeset/2"},{"type":"function","title":"Bonfire.Tag.Tagged.latest/1","doc":"Get the latest tag added to a thing","ref":"Bonfire.Tag.Tagged.html#latest/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_tag/1","doc":"List the things tagged with a certain tag","ref":"Bonfire.Tag.Tagged.html#q_with_tag/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_thing/1","doc":"List the tags of a thing","ref":"Bonfire.Tag.Tagged.html#q_with_thing/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_type/1","doc":"List by type of tagged thing","ref":"Bonfire.Tag.Tagged.html#q_with_type/1"},{"type":"function","title":"Bonfire.Tag.Tagged.search_query/2","doc":"","ref":"Bonfire.Tag.Tagged.html#search_query/2"},{"type":"function","title":"Bonfire.Tag.Tagged.thing_tags_insert/2","doc":"","ref":"Bonfire.Tag.Tagged.html#thing_tags_insert/2"},{"type":"function","title":"Bonfire.Tag.Tagged.with_tag/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_tag/1"},{"type":"function","title":"Bonfire.Tag.Tagged.with_thing/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_thing/1"},{"type":"function","title":"Bonfire.Tag.Tagged.with_type/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_type/1"},{"type":"module","title":"Bonfire.Tag.Tags","doc":"","ref":"Bonfire.Tag.Tags.html"},{"type":"function","title":"Bonfire.Tag.Tags.cast/4","doc":"For using on changesets (eg in epics)","ref":"Bonfire.Tag.Tags.html#cast/4"},{"type":"function","title":"Bonfire.Tag.Tags.find/2","doc":"","ref":"Bonfire.Tag.Tags.html#find/2"},{"type":"function","title":"Bonfire.Tag.Tags.get/2","doc":"","ref":"Bonfire.Tag.Tags.html#get/2"},{"type":"function","title":"Bonfire.Tag.Tags.get_hashtag/1","doc":"","ref":"Bonfire.Tag.Tags.html#get_hashtag/1"},{"type":"function","title":"Bonfire.Tag.Tags.get_or_create_hashtag/1","doc":"","ref":"Bonfire.Tag.Tags.html#get_or_create_hashtag/1"},{"type":"function","title":"Bonfire.Tag.Tags.indexing_object_format/1","doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Tag.Tags.indexing_object_format_name/1","doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format_name/1"},{"type":"function","title":"Bonfire.Tag.Tags.list_trending/2","doc":"","ref":"Bonfire.Tag.Tags.html#list_trending/2"},{"type":"function","title":"Bonfire.Tag.Tags.list_trending_reset/2","doc":"","ref":"Bonfire.Tag.Tags.html#list_trending_reset/2"},{"type":"function","title":"Bonfire.Tag.Tags.many/2","doc":"Retrieves a list of tags by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#many/2"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_find_tag/3","doc":"Try to find one (best-match) tag","ref":"Bonfire.Tag.Tags.html#maybe_find_tag/3"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_find_tags/3","doc":"Search / autocomplete for tags by name","ref":"Bonfire.Tag.Tags.html#maybe_find_tags/3"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_lookup_tag/2","doc":"Lookup a single for a tag by its name/username","ref":"Bonfire.Tag.Tags.html#maybe_lookup_tag/2"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_put_tree_parent/3","doc":"","ref":"Bonfire.Tag.Tags.html#maybe_put_tree_parent/3"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_tag/4","doc":"Maybe tag something","ref":"Bonfire.Tag.Tags.html#maybe_tag/4"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_taxonomy_tag/2","doc":"","ref":"Bonfire.Tag.Tags.html#maybe_taxonomy_tag/2"},{"type":"function","title":"Bonfire.Tag.Tags.one/2","doc":"Retrieves a single tag by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#one/2"},{"type":"function","title":"Bonfire.Tag.Tags.search_hashtag/2","doc":"","ref":"Bonfire.Tag.Tags.html#search_hashtag/2"},{"type":"function","title":"Bonfire.Tag.Tags.search_hashtag_query/2","doc":"","ref":"Bonfire.Tag.Tags.html#search_hashtag_query/2"},{"type":"function","title":"Bonfire.Tag.Tags.tag_ids/1","doc":"","ref":"Bonfire.Tag.Tags.html#tag_ids/1"},{"type":"function","title":"Bonfire.Tag.Tags.tag_something/4","doc":"tag existing thing with one or multiple Tags, Needle, or anything that can be made into a tag","ref":"Bonfire.Tag.Tags.html#tag_something/4"},{"type":"module","title":"Bonfire.Tag.TextContent.Formatter","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.escape_mention_handler/4","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#escape_mention_handler/4"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.linkify/2","doc":"Parses a text and replace plain text links with HTML. Returns a tuple with a result text, mentions, and hashtags.\n\nIf the 'safe_mention' option is given, only consecutive mentions at the start the post are actually mentioned.","ref":"Bonfire.Tag.TextContent.Formatter.html#linkify/2"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.nothing_handler/3","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#nothing_handler/3"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.tag_handler/4","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#tag_handler/4"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.url_handler/3","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#url_handler/3"},{"type":"module","title":"Bonfire.Tag.TextContent.Process","doc":"","ref":"Bonfire.Tag.TextContent.Process.html"},{"type":"function","title":"Bonfire.Tag.TextContent.Process.html_escape/2","doc":"","ref":"Bonfire.Tag.TextContent.Process.html#html_escape/2"},{"type":"function","title":"Bonfire.Tag.TextContent.Process.process/3","doc":"For use for things like a bio, where we want links but not to actually trigger mentions.","ref":"Bonfire.Tag.TextContent.Process.html#process/3"},{"type":"module","title":"Bonfire.Tag.Web.Routes","doc":"","ref":"Bonfire.Tag.Web.Routes.html"},{"type":"function","title":"Bonfire.Tag.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Tag.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Tags.Acts.AutoBoost","doc":"","ref":"Bonfire.Tags.Acts.AutoBoost.html"},{"type":"function","title":"Bonfire.Tags.Acts.AutoBoost.run/2","doc":"","ref":"Bonfire.Tags.Acts.AutoBoost.html#run/2"},{"type":"module","title":"Bonfire.Telemetry","doc":"","ref":"Bonfire.Telemetry.html"},{"type":"function","title":"Bonfire.Telemetry.handle_event/4","doc":"","ref":"Bonfire.Telemetry.html#handle_event/4"},{"type":"function","title":"Bonfire.Telemetry.setup/2","doc":"","ref":"Bonfire.Telemetry.html#setup/2"},{"type":"function","title":"Bonfire.Telemetry.setup_oban/0","doc":"","ref":"Bonfire.Telemetry.html#setup_oban/0"},{"type":"function","title":"Bonfire.Telemetry.setup_opentelemetry/2","doc":"","ref":"Bonfire.Telemetry.html#setup_opentelemetry/2"},{"type":"module","title":"Bonfire.Telemetry.Metrics","doc":"","ref":"Bonfire.Telemetry.Metrics.html"},{"type":"function","title":"Bonfire.Telemetry.Metrics.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Telemetry.Metrics.html#child_spec/1"},{"type":"function","title":"Bonfire.Telemetry.Metrics.metrics/0","doc":"","ref":"Bonfire.Telemetry.Metrics.html#metrics/0"},{"type":"function","title":"Bonfire.Telemetry.Metrics.oban_worker_memory/0","doc":"","ref":"Bonfire.Telemetry.Metrics.html#oban_worker_memory/0"},{"type":"function","title":"Bonfire.Telemetry.Metrics.start_link/1","doc":"","ref":"Bonfire.Telemetry.Metrics.html#start_link/1"},{"type":"module","title":"Bonfire.Telemetry.Storage","doc":"","ref":"Bonfire.Telemetry.Storage.html"},{"type":"function","title":"Bonfire.Telemetry.Storage.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Telemetry.Storage.html#child_spec/1"},{"type":"function","title":"Bonfire.Telemetry.Storage.handle_event/4","doc":"","ref":"Bonfire.Telemetry.Storage.html#handle_event/4"},{"type":"function","title":"Bonfire.Telemetry.Storage.metrics_history/1","doc":"","ref":"Bonfire.Telemetry.Storage.html#metrics_history/1"},{"type":"function","title":"Bonfire.Telemetry.Storage.start_link/1","doc":"","ref":"Bonfire.Telemetry.Storage.html#start_link/1"},{"type":"module","title":"Bonfire.Telemetry.SystemMonitor","doc":"","ref":"Bonfire.Telemetry.SystemMonitor.html"},{"type":"function","title":"Bonfire.Telemetry.SystemMonitor.format_percent/1","doc":"Formats percent.","ref":"Bonfire.Telemetry.SystemMonitor.html#format_percent/1"},{"type":"function","title":"Bonfire.Telemetry.SystemMonitor.handle_alarm/2","doc":"","ref":"Bonfire.Telemetry.SystemMonitor.html#handle_alarm/2"},{"type":"function","title":"Bonfire.Telemetry.SystemMonitor.handle_event/2","doc":"","ref":"Bonfire.Telemetry.SystemMonitor.html#handle_event/2"},{"type":"function","title":"Bonfire.Telemetry.SystemMonitor.init/1","doc":"","ref":"Bonfire.Telemetry.SystemMonitor.html#init/1"},{"type":"module","title":"Bonfire.Testing","doc":"","ref":"Bonfire.Testing.html"},{"type":"function","title":"Bonfire.Testing.configure_start_test/1","doc":"","ref":"Bonfire.Testing.html#configure_start_test/1"},{"type":"module","title":"Bonfire.Testing.InsecurePW","doc":"","ref":"Bonfire.Testing.InsecurePW.html"},{"type":"function","title":"Bonfire.Testing.InsecurePW.no_user_verify/0","doc":"","ref":"Bonfire.Testing.InsecurePW.html#no_user_verify/0"},{"type":"module","title":"Bonfire.Upcycle","doc":"Upcycle supports a network of high school fablabs in Milwaukee that receive contributions of materials from organizations in the community and share these with each other. It is implemented as a UI for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows), which are both available as extensions for [Bonfire](https://bonfire.cafe/). Upcycle was initially created for [LearnDeep](https://learndeep.org/) by students at [MSOE](https://www.msoe.edu/), and is now being maintained by the Bonfire team.","ref":"Bonfire.Upcycle.html"},{"type":"module","title":"Set up - Bonfire.Upcycle","doc":"Upcycle is packaged as part of the `cooperation` flavour of Bonfire. Check out the development or deployment [docs](https://doc.bonfirenetworks.org/readme.html) to get started.","ref":"Bonfire.Upcycle.html#module-set-up"},{"type":"module","title":"Copyright and License - Bonfire.Upcycle","doc":"Copyright (c) 2022 all contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Upcycle.html#module-copyright-and-license"},{"type":"function","title":"Bonfire.Upcycle.format_date/1","doc":"","ref":"Bonfire.Upcycle.html#format_date/1"},{"type":"function","title":"Bonfire.Upcycle.involved?/2","doc":"","ref":"Bonfire.Upcycle.html#involved?/2"},{"type":"function","title":"Bonfire.Upcycle.mailer/0","doc":"","ref":"Bonfire.Upcycle.html#mailer/0"},{"type":"function","title":"Bonfire.Upcycle.remote_tag_id/0","doc":"","ref":"Bonfire.Upcycle.html#remote_tag_id/0"},{"type":"function","title":"Bonfire.Upcycle.remote_tag_prefix/0","doc":"","ref":"Bonfire.Upcycle.html#remote_tag_prefix/0"},{"type":"function","title":"Bonfire.Upcycle.units/0","doc":"","ref":"Bonfire.Upcycle.html#units/0"},{"type":"module","title":"Bonfire.Upcycle.IntentLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.IntentLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.IntentLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.IntentLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.IntentLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.IntentLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.IntentLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.IntentLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.Upcycle.MapLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.MapLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.MapLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.MapLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.MapLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.MapLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.MapLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.MapLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.Upcycle.ResourceLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.ResourceLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.ResourceLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.ResourceLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.ResourceLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.ResourceLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.ResourceLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.ResourceLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.Upcycle.Web.HomeLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.Web.HomeLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.Web.HomeLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.Web.HomeLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.Web.HomeLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.Web.HomeLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.Web.HomeLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.Web.HomeLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.Upcycle.Web.InventoryLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.Web.InventoryLive.GraphQL.html#process/2"},{"type":"module","title":"Bonfire.Upcycle.Web.Routes","doc":"","ref":"Bonfire.Upcycle.Web.Routes.html"},{"type":"function","title":"Bonfire.Upcycle.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Upcycle.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Upcycle.Web.TransfersLive.GraphQL","doc":"","ref":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.html"},{"type":"function","title":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.lookup_schema/1","doc":"","ref":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.html#lookup_schema/1"},{"type":"function","title":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.pipeline/1","doc":"Determine the remaining pipeline for an request with a pre-compiled\ndocument.\n\nUsually this can be changed simply by setting `@compilation_pipeline` in\nyour document provider. This may need to be overridden if your compilation\nphase is not a subset of the full pipeline.","ref":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.html#pipeline/1"},{"type":"function","title":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.process/2","doc":"","ref":"Bonfire.Upcycle.Web.TransfersLive.GraphQL.html#process/2"},{"type":"module","title":"ActivityPub","doc":"ActivityPub Library for elixir.\n\n**WORK IN PROGRESS, TESTING FEDERATION WITH DIFFERENT IMPLEMENTATIONS IS UNDERWAY**","ref":"ActivityPub.html"},{"type":"module","title":"Installation - ActivityPub","doc":"1. Add this library to your dependencies in `mix.exs`\n\n```\ndefp deps do\n  [...]\n  {:activity_pub, git: \"https://github.com/bonfire-networks/activity_pub.git\", branch: \"stable\"} # branch can \"stable\", or \"develop\" for the bleeding edge\nend\n```\n\n2. Create an adapter module. To start, one created at\n   `lib/my_app/adapter.ex` might look like\n\n```elixir\ndefmodule MyApp.Adapter do\n  @moduledoc \"\"\"\n  Adapter functions delegated from the `ActivityPub` Library\n  \"\"\"\n\n  @behaviour ActivityPub.Federator.Adapter\nend\n```\n\nNote that, due to the defined `@behavior`, Elixir will warn you that\nthe required functions\n\n  * `base_url/0`\n  * `get_actor_by_id/1`\n  * `get_actor_by_username/1`\n  * `get_follower_local_ids/1`\n  * `get_following_local_ids/1`\n  * `get_redirect_url/1`\n  * `handle_activity/1`\n  * `maybe_create_remote_actor/1`\n  * `maybe_publish_object/2`\n  * `update_local_actor/2`\n  * `update_remote_actor/1`\n\nhave not yet been implemented though you will be able to start your\napp. Defining these allows `ActivityPub` to handle ActivityPub HTTP\nand database calls and operations. An example of an implemented\nadaptor can be found\n[here](https://github.com/bonfire-networks/bonfire_federate_activitypub/tree/main/lib/adapter\n\"Link to file hosted on GitHub\").\n\nThen set it in config\n\n```\nconfig :activity_pub, :adapter, MyApp.Adapter\n```\n\n3. Set your application repo in config\n\n```\nconfig :activity_pub, :repo, MyApp.Repo\n```\n\n4. Create a new ecto migration and call `ActivityPub.Migration.up/0` from it\n\n5. Inject AP routes to your router by adding `use ActivityPub.Web.Router` to your app's router module\n\n6. Copy the default AP config to your app's confix.exs\n\n```\nconfig :activity_pub, :mrf_simple,\n  media_removal: [],\n  media_nsfw: [],\n  report_removal: [],\n  accept: [],\n  avatar_removal: [],\n  banner_removal: []\n\nconfig :activity_pub, :instance,\n  hostname: \"example.com\",\n  federation_publisher_modules: [ActivityPub.Federator.APPublisher],\n  federation_reachability_timeout_days: 7,\n  federating: true,\n  rewrite_policy: []\n\nconfig :activity_pub, :http,\n  proxy_url: nil,\n  user_agent: \"Your app name\",\n  send_user_agent: true,\n  adapter: [\n    ssl_options: [\n      # Workaround for remote server certificate chain issues\n      partial_chain: &:hackney_connect.partial_chain/1,\n      # We don't support TLS v1.3 yet\n      versions: [:tlsv1, :\"tlsv1.1\", :\"tlsv1.2\"]\n    ]\n  ]\n  ```\n\n7. Change the hostname value in the instance config block to your instance's hostname \n\n8. If you don't already have Oban set up, follow the [Oban installation intructions](https://hexdocs.pm/oban/installation.html#content) and add the AP queues:\n\n```\nconfig :my_app, Oban, queues: [federator_incoming: 50, federator_outgoing: 50, remote_fetcher: 20]\n```\n\nNow you should be able to compile and run your app and move over to integration.\n\n\nThis module is the entrypoint to the ActivityPub API for processing incoming and outgoing federated objects (normalising, saving the the Object storage, passing them to the adapter, and queueing outgoing activities to be pushed out).\n\nIn general, the functions in this module take object-like map.\nThat includes a struct as the input for actor parameters.  Use the functions in the `ActivityPub.Actor` module (`ActivityPub.Actor.get_cached/1` for example) to retrieve those.","ref":"ActivityPub.html#module-installation"},{"type":"function","title":"ActivityPub.accept/1","doc":"Generates and federates an Accept activity via the data passed through `params`.","ref":"ActivityPub.html#accept/1"},{"type":"function","title":"ActivityPub.accept_activity/1","doc":"","ref":"ActivityPub.html#accept_activity/1"},{"type":"function","title":"ActivityPub.announce/1","doc":"","ref":"ActivityPub.html#announce/1"},{"type":"function","title":"ActivityPub.block/1","doc":"","ref":"ActivityPub.html#block/1"},{"type":"function","title":"ActivityPub.create/1","doc":"Generates and federates a Create activity via the data passed through `params`.","ref":"ActivityPub.html#create/1"},{"type":"function","title":"ActivityPub.delete/3","doc":"","ref":"ActivityPub.html#delete/3"},{"type":"function","title":"ActivityPub.flag/1","doc":"","ref":"ActivityPub.html#flag/1"},{"type":"function","title":"ActivityPub.follow/1","doc":"Generates and federates a Follow activity.\n\nNote: the follow should be reflected as a Follow on the host database side only after receiving an `Accept` activity in response (though you could register it as a Request if your app has that concept)","ref":"ActivityPub.html#follow/1"},{"type":"function","title":"ActivityPub.like/1","doc":"Record a Like","ref":"ActivityPub.html#like/1"},{"type":"function","title":"ActivityPub.move/4","doc":"","ref":"ActivityPub.html#move/4"},{"type":"function","title":"ActivityPub.reject/1","doc":"Generates and federates a Reject activity via the data passed through `params`.","ref":"ActivityPub.html#reject/1"},{"type":"function","title":"ActivityPub.unannounce/1","doc":"","ref":"ActivityPub.html#unannounce/1"},{"type":"function","title":"ActivityPub.unblock/1","doc":"","ref":"ActivityPub.html#unblock/1"},{"type":"function","title":"ActivityPub.unfollow/1","doc":"Generates and federates an Unfollow activity.","ref":"ActivityPub.html#unfollow/1"},{"type":"function","title":"ActivityPub.unlike/1","doc":"","ref":"ActivityPub.html#unlike/1"},{"type":"function","title":"ActivityPub.update/1","doc":"","ref":"ActivityPub.html#update/1"},{"type":"module","title":"ActivityPub.Actor","doc":"An ActivityPub Actor type and functions for dealing with actors.\n\nSee [4. Actors](https://www.w3.org/TR/activitypub/#actors) in the\nActivityPub specification for more information on Actors.","ref":"ActivityPub.Actor.html"},{"type":"function","title":"ActivityPub.Actor.actor?/1","doc":"","ref":"ActivityPub.Actor.html#actor?/1"},{"type":"function","title":"ActivityPub.Actor.actor_url/1","doc":"","ref":"ActivityPub.Actor.html#actor_url/1"},{"type":"function","title":"ActivityPub.Actor.also_known_as?/2","doc":"","ref":"ActivityPub.Actor.html#also_known_as?/2"},{"type":"function","title":"ActivityPub.Actor.check_actor_is_active/1","doc":"","ref":"ActivityPub.Actor.html#check_actor_is_active/1"},{"type":"function","title":"ActivityPub.Actor.deactivate/1","doc":"","ref":"ActivityPub.Actor.html#deactivate/1"},{"type":"function","title":"ActivityPub.Actor.delete/2","doc":"","ref":"ActivityPub.Actor.html#delete/2"},{"type":"function","title":"ActivityPub.Actor.fetch_by_username/2","doc":"Fetches a remote actor by username in `username@domain.tld` format","ref":"ActivityPub.Actor.html#fetch_by_username/2"},{"type":"function","title":"ActivityPub.Actor.format_remote_actor/1","doc":"","ref":"ActivityPub.Actor.html#format_remote_actor/1"},{"type":"function","title":"ActivityPub.Actor.format_username/1","doc":"","ref":"ActivityPub.Actor.html#format_username/1"},{"type":"function","title":"ActivityPub.Actor.format_username/2","doc":"","ref":"ActivityPub.Actor.html#format_username/2"},{"type":"function","title":"ActivityPub.Actor.get_cached/1","doc":"Fetches an actor given its AP ID / URI, or username@domain, or by a pointer id \n\nRemote actors are just checked if they exist in AP or adapter's database and are NOT fetched remotely if they don't.\n\nRemote actors are also automatically updated every X hours (defaults to 24h).","ref":"ActivityPub.Actor.html#get_cached/1"},{"type":"function","title":"ActivityPub.Actor.get_cached!/1","doc":"","ref":"ActivityPub.Actor.html#get_cached!/1"},{"type":"function","title":"ActivityPub.Actor.get_cached_or_fetch/1","doc":"Tries to get a local actor by username or tries to fetch it remotely if username is provided in `username@domain.tld` format.","ref":"ActivityPub.Actor.html#get_cached_or_fetch/1"},{"type":"function","title":"ActivityPub.Actor.get_external_followers/1","doc":"","ref":"ActivityPub.Actor.html#get_external_followers/1"},{"type":"function","title":"ActivityPub.Actor.get_followers/1","doc":"","ref":"ActivityPub.Actor.html#get_followers/1"},{"type":"function","title":"ActivityPub.Actor.get_followings/1","doc":"","ref":"ActivityPub.Actor.html#get_followings/1"},{"type":"function","title":"ActivityPub.Actor.get_non_cached/1","doc":"","ref":"ActivityPub.Actor.html#get_non_cached/1"},{"type":"function","title":"ActivityPub.Actor.invalidate_cache/1","doc":"","ref":"ActivityPub.Actor.html#invalidate_cache/1"},{"type":"function","title":"ActivityPub.Actor.maybe_create_actor_from_object/1","doc":"","ref":"ActivityPub.Actor.html#maybe_create_actor_from_object/1"},{"type":"function","title":"ActivityPub.Actor.reactivate/1","doc":"","ref":"ActivityPub.Actor.html#reactivate/1"},{"type":"function","title":"ActivityPub.Actor.save_actor_tombstone/2","doc":"","ref":"ActivityPub.Actor.html#save_actor_tombstone/2"},{"type":"function","title":"ActivityPub.Actor.set_cache/1","doc":"","ref":"ActivityPub.Actor.html#set_cache/1"},{"type":"function","title":"ActivityPub.Actor.swap_or_create_actor_tombstone/1","doc":"","ref":"ActivityPub.Actor.html#swap_or_create_actor_tombstone/1"},{"type":"function","title":"ActivityPub.Actor.update_actor/1","doc":"Updates an existing actor struct by its AP ID.","ref":"ActivityPub.Actor.html#update_actor/1"},{"type":"function","title":"ActivityPub.Actor.update_actor/2","doc":"","ref":"ActivityPub.Actor.html#update_actor/2"},{"type":"type","title":"ActivityPub.Actor.ap_id/0","doc":"The ActivityPub ID of an object, which must be a publicly-dereferencable URI,\nor `nil` if the object is anonymous.\n\nNote that since the URI must be publicly-dereferencable,\nyou should set this value to `ActivityPub.Federator.Adapter.base_url() <> ~p\"/pub/actors/#{username}\"`.\nThis path is defined in `ActivityPub.Web.Endpoint` and serves data provided\nby the functions in `ActivityPub.Federator.Adapter`.\n\nSee section [3.1 Object Identifiers](https://www.w3.org/TR/activitypub/#obj-id)\nin the ActivityPub spec for more information on the format.","ref":"ActivityPub.Actor.html#t:ap_id/0"},{"type":"type","title":"Examples - ActivityPub.Actor.ap_id/0","doc":"\"https://kenzoishii.example.com/\"\n\n    \"http://localhost:4000/pub/actors/rosa\"","ref":"ActivityPub.Actor.html#t:ap_id/0-examples"},{"type":"type","title":"ActivityPub.Actor.id/0","doc":"Your app's internal ID for an `Actor`.","ref":"ActivityPub.Actor.html#t:id/0"},{"type":"type","title":"Examples - ActivityPub.Actor.id/0","doc":"\"c1688a22-4e9c-42d7-935b-1f17e1d0cf58\"\n\n    \"1234\"","ref":"ActivityPub.Actor.html#t:id/0-examples"},{"type":"type","title":"ActivityPub.Actor.pointer/0","doc":"An association (by default a `Needle.Pointer`) that references an `Actor`.\n\nPointers consist of a table ID, referencing a database table,\nand a pointer ID, referencing a row in that table.\nTable and pointer IDs are both `Pointers.ULID` strings, which is UUID-like.","ref":"ActivityPub.Actor.html#t:pointer/0"},{"type":"type","title":"ActivityPub.Actor.pointer_id/0","doc":"A ULID ID (eg. using the `Needle.ULID`library) that links an `Actor` to its object in the app's database.","ref":"ActivityPub.Actor.html#t:pointer_id/0"},{"type":"type","title":"ActivityPub.Actor.t/0","doc":"An ActivityPub Actor.","ref":"ActivityPub.Actor.html#t:t/0"},{"type":"type","title":"ActivityPub.Actor.username/0","doc":"An `Actor`'s user name, used as part of its ActivityPub ID.","ref":"ActivityPub.Actor.html#t:username/0"},{"type":"type","title":"Examples - ActivityPub.Actor.username/0","doc":"\"alyssa\"\n\n    \"ben\"","ref":"ActivityPub.Actor.html#t:username/0-examples"},{"type":"module","title":"ActivityPub.Config","doc":"","ref":"ActivityPub.Config.html"},{"type":"function","title":"ActivityPub.Config.actors_and_collections/0","doc":"","ref":"ActivityPub.Config.html#actors_and_collections/0"},{"type":"function","title":"ActivityPub.Config.collection_types/0","doc":"","ref":"ActivityPub.Config.html#collection_types/0"},{"type":"function","title":"ActivityPub.Config.delete/1","doc":"","ref":"ActivityPub.Config.html#delete/1"},{"type":"function","title":"ActivityPub.Config.env/0","doc":"","ref":"ActivityPub.Config.html#env/0"},{"type":"function","title":"ActivityPub.Config.federating?/0","doc":"","ref":"ActivityPub.Config.html#federating?/0"},{"type":"function","title":"ActivityPub.Config.get/1","doc":"","ref":"ActivityPub.Config.html#get/1"},{"type":"function","title":"ActivityPub.Config.get/2","doc":"","ref":"ActivityPub.Config.html#get/2"},{"type":"function","title":"ActivityPub.Config.get!/1","doc":"","ref":"ActivityPub.Config.html#get!/1"},{"type":"macro","title":"ActivityPub.Config.is_in/2","doc":"For matching against the above list in guards TODO: use runtime config","ref":"ActivityPub.Config.html#is_in/2"},{"type":"function","title":"ActivityPub.Config.public_uri/0","doc":"","ref":"ActivityPub.Config.html#public_uri/0"},{"type":"function","title":"ActivityPub.Config.public_uris/0","doc":"","ref":"ActivityPub.Config.html#public_uris/0"},{"type":"function","title":"ActivityPub.Config.put/2","doc":"","ref":"ActivityPub.Config.html#put/2"},{"type":"function","title":"ActivityPub.Config.supported_activity_types/0","doc":"","ref":"ActivityPub.Config.html#supported_activity_types/0"},{"type":"function","title":"ActivityPub.Config.supported_actor_types/0","doc":"","ref":"ActivityPub.Config.html#supported_actor_types/0"},{"type":"exception","title":"ActivityPub.Config.Error","doc":"","ref":"ActivityPub.Config.Error.html"},{"type":"module","title":"ActivityPub.Federator","doc":"","ref":"ActivityPub.Federator.html"},{"type":"function","title":"ActivityPub.Federator.perform/3","doc":"","ref":"ActivityPub.Federator.html#perform/3"},{"type":"function","title":"ActivityPub.Federator.publish/2","doc":"","ref":"ActivityPub.Federator.html#publish/2"},{"type":"module","title":"ActivityPub.Federator.APPublisher","doc":"","ref":"ActivityPub.Federator.APPublisher.html"},{"type":"function","title":"ActivityPub.Federator.APPublisher.determine_inbox/4","doc":"Determine a user inbox to use based on heuristics.  These heuristics\nare based on an approximation of the ``sharedInbox`` rules in the\n[ActivityPub specification][ap-sharedinbox].\n\n   [ap-sharedinbox]: https://www.w3.org/TR/activitypub/#shared-inbox-delivery","ref":"ActivityPub.Federator.APPublisher.html#determine_inbox/4"},{"type":"function","title":"ActivityPub.Federator.APPublisher.gather_webfinger_links/1","doc":"","ref":"ActivityPub.Federator.APPublisher.html#gather_webfinger_links/1"},{"type":"function","title":"ActivityPub.Federator.APPublisher.is_representable?/1","doc":"","ref":"ActivityPub.Federator.APPublisher.html#is_representable?/1"},{"type":"function","title":"ActivityPub.Federator.APPublisher.maybe_federate_to_search_index/2","doc":"If you put the URL of the shared inbox of an ActivityPub instance in the following env variable, all public content will be pushed there via AP federation for search indexing purposes: PUSH_ALL_PUBLIC_CONTENT_TO_INSTANCE\n#TODO: move to adapter","ref":"ActivityPub.Federator.APPublisher.html#maybe_federate_to_search_index/2"},{"type":"function","title":"ActivityPub.Federator.APPublisher.publish/3","doc":"","ref":"ActivityPub.Federator.APPublisher.html#publish/3"},{"type":"function","title":"ActivityPub.Federator.APPublisher.publish_one/1","doc":"Publish a single message to a peer.  Takes a struct with the following\nparameters set:\n\n* `inbox`: the inbox to publish to\n* `json`: the JSON message body representing the ActivityPub message\n* `actor`: the actor which is signing the message\n* `id`: the ActivityStreams URI of the message","ref":"ActivityPub.Federator.APPublisher.html#publish_one/1"},{"type":"behaviour","title":"ActivityPub.Federator.Adapter","doc":"Contract for ActivityPub module adapters","ref":"ActivityPub.Federator.Adapter.html"},{"type":"function","title":"ActivityPub.Federator.Adapter.adapter/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#adapter/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.base_url/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#base_url/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.base_url/0","doc":"The base URL of the application serving `ActivityPub.Web.Endpoint`.","ref":"ActivityPub.Federator.Adapter.html#c:base_url/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.call_or/3","doc":"Run function from adapter if defined, otherwise return fallback value","ref":"ActivityPub.Federator.Adapter.html#call_or/3"},{"type":"function","title":"ActivityPub.Federator.Adapter.external_followers_for_activity/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#external_followers_for_activity/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.external_followers_for_activity/2","doc":"Compute and return a subset of followers that should receive a specific activity (optional)","ref":"ActivityPub.Federator.Adapter.html#c:external_followers_for_activity/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.federate_actor?/3","doc":"Whether this (local or remote) actor has federation enabled and/or is blocked on this instance\n\nactor: the actor to check (eg. Alice)\ndirection: :in or :out - whether we're dealing with incoming federation or outgoing (optional)\nby_actor: optionally another actor (eg. if Alice is sending something to Bob, this would be Bob)","ref":"ActivityPub.Federator.Adapter.html#federate_actor?/3"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_ap_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_ap_id/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_ap_id/1","doc":"Fetch an `Actor` by its full ActivityPub ID.","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_ap_id/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_id/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_id/1","doc":"Fetch an `Actor` by its ID in the host application database.","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_id/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_username/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_username/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_username/1","doc":"Fetch an `Actor` given its preferred username","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_username/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_follower_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_follower_local_ids/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_follower_local_ids/1","doc":"Get the host application IDs for all `Actor`s following the given `Actor`.","ref":"ActivityPub.Federator.Adapter.html#c:get_follower_local_ids/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_following_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_following_local_ids/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_following_local_ids/1","doc":"Get the host application IDs for all `Actor`s that the given `Actor` is following.","ref":"ActivityPub.Federator.Adapter.html#c:get_following_local_ids/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_locale/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_locale/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_locale/0","doc":"Get the default locale of the host application.","ref":"ActivityPub.Federator.Adapter.html#c:get_locale/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_or_create_service_actor/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_or_create_service_actor/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_or_create_service_actor/0","doc":"Creates an internal service actor by username, if missing.","ref":"ActivityPub.Federator.Adapter.html#c:get_or_create_service_actor/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_redirect_url/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_redirect_url/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_redirect_url/1","doc":"Gets local url of an AP object to redirect in browser. Can take pointer id or an actor username.","ref":"ActivityPub.Federator.Adapter.html#c:get_redirect_url/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.handle_activity/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#handle_activity/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.handle_activity/1","doc":"Passes data to be handled by the host application","ref":"ActivityPub.Federator.Adapter.html#c:handle_activity/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_create_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_create_remote_actor/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.maybe_create_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:maybe_create_remote_actor/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_handle_activity/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_handle_activity/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_publish_object/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_publish_object/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.maybe_publish_object/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:maybe_publish_object/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_local_actor/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_local_actor/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.update_local_actor/2","doc":"Commit new fields to the host application database for the given `Actor`.","ref":"ActivityPub.Federator.Adapter.html#c:update_local_actor/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_remote_actor/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.update_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:update_remote_actor/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_remote_actor/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_remote_actor/2"},{"type":"module","title":"ActivityPub.Federator.Fetcher","doc":"Handles fetching AS2 objects from remote instances.","ref":"ActivityPub.Federator.Fetcher.html"},{"type":"function","title":"ActivityPub.Federator.Fetcher.allowed_recursion?/2","doc":"Returns `true` if the distance to target object does not exceed max configured value.\nServes to prevent fetching of very long threads, especially useful on smaller instances.\nAddresses memory leaks on recursive replies fetching.\nApplies to fetching of both ancestor (reply-to) and child (reply) objects.","ref":"ActivityPub.Federator.Fetcher.html#allowed_recursion?/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.cache_fetch_error/1","doc":"","ref":"ActivityPub.Federator.Fetcher.html#cache_fetch_error/1"},{"type":"function","title":"ActivityPub.Federator.Fetcher.enqueue_fetch/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#enqueue_fetch/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_collection/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_collection/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_fresh_object_from_id/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_fresh_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_object_from_id/2","doc":"Checks if an object exists in the AP and Adapter databases and fetches and creates it if not.","ref":"ActivityPub.Federator.Fetcher.html#fetch_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_objects_from_id/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_objects_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_outbox/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_outbox/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_remote_object_from_id/2","doc":"Fetches an AS2 object from remote AP ID.","ref":"ActivityPub.Federator.Fetcher.html#fetch_remote_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_replies/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_replies/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_thread/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_thread/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.get_cached_object_or_fetch_ap_id/2","doc":"Checks if an object exists in the AP database and fetches it if not (but does not send to Adapter).","ref":"ActivityPub.Federator.Fetcher.html#get_cached_object_or_fetch_ap_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.get_cached_object_or_fetch_pointer_id/2","doc":"Checks if an object exists in the AP database and prepares it if not (local objects only).","ref":"ActivityPub.Federator.Fetcher.html#get_cached_object_or_fetch_pointer_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.maybe_fetch/2","doc":"Fetch a list of objects within recursion limits. Used for reply_to/context, and replies or similar collections.","ref":"ActivityPub.Federator.Fetcher.html#maybe_fetch/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.maybe_parse_header_url/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#maybe_parse_header_url/2"},{"type":"module","title":"ActivityPub.Federator.HTTP","doc":"Module for building and performing HTTP requests.","ref":"ActivityPub.Federator.HTTP.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.delete/4","doc":"Makes a DELETE request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#delete/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.get/3","doc":"Makes a GET request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#get/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.http_request/5","doc":"Builds and perform http request.\n\n# Arguments:\n`method` - :get, :post, :put, :delete\n`url`\n`body`\n`headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n`options` - custom, per-request middleware or adapter options\n\n# Returns:\n`{:ok, %Tesla.Env{}}` or `{:error, error}`","ref":"ActivityPub.Federator.HTTP.html#http_request/5"},{"type":"function","title":"ActivityPub.Federator.HTTP.post/4","doc":"Makes a POST request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#post/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.put/4","doc":"Makes a PUT request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#put/4"},{"type":"type","title":"ActivityPub.Federator.HTTP.t/0","doc":"","ref":"ActivityPub.Federator.HTTP.html#t:t/0"},{"type":"module","title":"ActivityPub.Federator.HTTP.Connection","doc":"Specifies connection options for HTTP requests","ref":"ActivityPub.Federator.HTTP.Connection.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.Connection.adapter_options/2","doc":"","ref":"ActivityPub.Federator.HTTP.Connection.html#adapter_options/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.Connection.new/1","doc":"","ref":"ActivityPub.Federator.HTTP.Connection.html#new/1"},{"type":"module","title":"ActivityPub.Federator.HTTP.RateLimit","doc":"Rate limit middleware for Tesla using Hammer\nBased on `TeslaExtra.RateLimit` and `TeslaExtra.RetryAfter`","ref":"ActivityPub.Federator.HTTP.RateLimit.html"},{"type":"module","title":"ActivityPub.Federator.HTTP.RequestBuilder","doc":"Helper functions for building HTTP requests","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.add_param/4","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#add_param/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.headers/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#headers/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.method/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#method/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.opts/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#opts/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.url/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#url/2"},{"type":"module","title":"ActivityPub.Federator.HTTP.RetryAfter","doc":"Takes into account the Retry-After header returned by the server when the rate limit is exceeded.\n\nBased on `TeslaExtra.RetryAfter`","ref":"ActivityPub.Federator.HTTP.RetryAfter.html"},{"type":"module","title":"ActivityPub.Federator.HTTP.Tesla","doc":"","ref":"ActivityPub.Federator.HTTP.Tesla.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#delete/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#delete!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#get/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#get!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#head/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#head!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#options/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#options!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#patch/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#patch!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#post/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#post!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#put/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#put!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.request/2","doc":"Perform a request.","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2"},{"type":"function","title":"Options - ActivityPub.Federator.HTTP.Tesla.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2-options"},{"type":"function","title":"Examples - ActivityPub.Federator.HTTP.Tesla.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2-examples"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"ActivityPub.Federator.HTTP.Tesla.html#request!/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#trace/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#trace!/3"},{"type":"type","title":"ActivityPub.Federator.HTTP.Tesla.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"ActivityPub.Federator.HTTP.Tesla.html#t:option/0"},{"type":"behaviour","title":"ActivityPub.Federator.Publisher","doc":"Defines the contract used by federation implementations to publish messages to\ntheir peers.\n# TODO: why not use `APPublisher` directly instead?","ref":"ActivityPub.Federator.Publisher.html"},{"type":"function","title":"ActivityPub.Federator.Publisher.enqueue_one/2","doc":"Enqueue publishing a single activity.","ref":"ActivityPub.Federator.Publisher.html#enqueue_one/2"},{"type":"function","title":"ActivityPub.Federator.Publisher.gather_webfinger_links/1","doc":"","ref":"ActivityPub.Federator.Publisher.html#gather_webfinger_links/1"},{"type":"callback","title":"ActivityPub.Federator.Publisher.gather_webfinger_links/1","doc":"Gathers links used by an outgoing federation module for WebFinger output.","ref":"ActivityPub.Federator.Publisher.html#c:gather_webfinger_links/1"},{"type":"callback","title":"ActivityPub.Federator.Publisher.is_representable?/1","doc":"Determine whether an activity can be relayed using the federation module.","ref":"ActivityPub.Federator.Publisher.html#c:is_representable?/1"},{"type":"function","title":"ActivityPub.Federator.Publisher.publish/2","doc":"","ref":"ActivityPub.Federator.Publisher.html#publish/2"},{"type":"callback","title":"ActivityPub.Federator.Publisher.publish/2","doc":"Relays an activity to all specified peers.","ref":"ActivityPub.Federator.Publisher.html#c:publish/2"},{"type":"callback","title":"ActivityPub.Federator.Publisher.publish_one/1","doc":"Relays an activity to a specified peer, determined by the parameters.  The\nparameters used are controlled by the federation module.","ref":"ActivityPub.Federator.Publisher.html#c:publish_one/1"},{"type":"module","title":"ActivityPub.Federator.Transformer","doc":"This module normalises outgoing data to conform with AS2/AP specs\nand handles incoming objects and activities","ref":"ActivityPub.Federator.Transformer.html"},{"type":"function","title":"ActivityPub.Federator.Transformer.add_emoji_tags/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#add_emoji_tags/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_actor/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_actor/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_addressing/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_addressing/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_attachments/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_attachments/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_content_map/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_content_map/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_context/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_context/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_emoji/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_emoji/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_in_reply_to/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_in_reply_to/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_object/2","doc":"Modifies an incoming AP object (mastodon format) to our internal format.","ref":"ActivityPub.Federator.Transformer.html#fix_object/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_quote_url/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_quote_url/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_replies/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_replies/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_summary/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_summary/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_tag/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_tag/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_url/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_url/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.format_input/3","doc":"","ref":"ActivityPub.Federator.Transformer.html#format_input/3"},{"type":"function","title":"ActivityPub.Federator.Transformer.handle_incoming/2","doc":"Handles incoming data, inserts it into the database and triggers side effects if the data is a supported activity type.","ref":"ActivityPub.Federator.Transformer.html#handle_incoming/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.maybe_handle_other_activity/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#maybe_handle_other_activity/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.prepare_outgoing/1","doc":"Translates MN Entity to an AP compatible format","ref":"ActivityPub.Federator.Transformer.html#prepare_outgoing/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.preserve_privacy_of_outgoing/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#preserve_privacy_of_outgoing/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.replies/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#replies/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.set_replies/1","doc":"Serialized Mastodon-compatible `replies` collection containing _self-replies_.\nBased on Mastodon's ActivityPub::NoteSerializer#replies.","ref":"ActivityPub.Federator.Transformer.html#set_replies/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.take_emoji_tags/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#take_emoji_tags/1"},{"type":"module","title":"ActivityPub.Federator.WebFinger","doc":"Serves and fetches data (mainly actor URI) necessary for federation when only the username and host is known.","ref":"ActivityPub.Federator.WebFinger.html"},{"type":"function","title":"ActivityPub.Federator.WebFinger.base_url/1","doc":"","ref":"ActivityPub.Federator.WebFinger.html#base_url/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.finger/1","doc":"Fetches webfinger data for an account given in \"@username@domain.tld\" format.","ref":"ActivityPub.Federator.WebFinger.html#finger/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.output/1","doc":"Serves a webfinger response for the requested username.","ref":"ActivityPub.Federator.WebFinger.html#output/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.represent_user/1","doc":"Formats gathered data into a JRD format.","ref":"ActivityPub.Federator.WebFinger.html#represent_user/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.webfinger_from_json/1","doc":"","ref":"ActivityPub.Federator.WebFinger.html#webfinger_from_json/1"},{"type":"module","title":"ActivityPub.Federator.Worker","doc":"Helpers for workers to `use`","ref":"ActivityPub.Federator.Worker.html"},{"type":"function","title":"ActivityPub.Federator.Worker.worker_args/1","doc":"","ref":"ActivityPub.Federator.Worker.html#worker_args/1"},{"type":"module","title":"ActivityPub.Federator.Workers.PublisherWorker","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.PublisherWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.PublisherWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Federator.Workers.ReceiverWorker","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.ReceiverWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.ReceiverWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Fixtures","doc":"","ref":"ActivityPub.Fixtures.html"},{"type":"function","title":"ActivityPub.Fixtures.file/1","doc":"","ref":"ActivityPub.Fixtures.html#file/1"},{"type":"function","title":"ActivityPub.Fixtures.fixtures/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures/0"},{"type":"function","title":"ActivityPub.Fixtures.fixtures_generic/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures_generic/0"},{"type":"function","title":"ActivityPub.Fixtures.fixtures_get/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures_get/0"},{"type":"function","title":"ActivityPub.Fixtures.get/4","doc":"","ref":"ActivityPub.Fixtures.html#get/4"},{"type":"function","title":"ActivityPub.Fixtures.head/4","doc":"","ref":"ActivityPub.Fixtures.html#head/4"},{"type":"function","title":"ActivityPub.Fixtures.insert/1","doc":"","ref":"ActivityPub.Fixtures.html#insert/1"},{"type":"function","title":"ActivityPub.Fixtures.insert_all/0","doc":"","ref":"ActivityPub.Fixtures.html#insert_all/0"},{"type":"function","title":"ActivityPub.Fixtures.insert_file/1","doc":"","ref":"ActivityPub.Fixtures.html#insert_file/1"},{"type":"function","title":"ActivityPub.Fixtures.insert_json/1","doc":"","ref":"ActivityPub.Fixtures.html#insert_json/1"},{"type":"function","title":"ActivityPub.Fixtures.maybe_get_local/4","doc":"","ref":"ActivityPub.Fixtures.html#maybe_get_local/4"},{"type":"function","title":"ActivityPub.Fixtures.mock_global/1","doc":"","ref":"ActivityPub.Fixtures.html#mock_global/1"},{"type":"function","title":"ActivityPub.Fixtures.none/4","doc":"","ref":"ActivityPub.Fixtures.html#none/4"},{"type":"function","title":"ActivityPub.Fixtures.post/4","doc":"","ref":"ActivityPub.Fixtures.html#post/4"},{"type":"function","title":"ActivityPub.Fixtures.request/1","doc":"","ref":"ActivityPub.Fixtures.html#request/1"},{"type":"module","title":"ActivityPub.Instances","doc":"Instances context.","ref":"ActivityPub.Instances.html"},{"type":"function","title":"ActivityPub.Instances.filter_reachable/1","doc":"","ref":"ActivityPub.Instances.html#filter_reachable/1"},{"type":"function","title":"ActivityPub.Instances.host/1","doc":"","ref":"ActivityPub.Instances.html#host/1"},{"type":"function","title":"ActivityPub.Instances.reachability_datetime_threshold/0","doc":"","ref":"ActivityPub.Instances.html#reachability_datetime_threshold/0"},{"type":"function","title":"ActivityPub.Instances.reachable?/1","doc":"","ref":"ActivityPub.Instances.html#reachable?/1"},{"type":"function","title":"ActivityPub.Instances.set_consistently_unreachable/1","doc":"","ref":"ActivityPub.Instances.html#set_consistently_unreachable/1"},{"type":"function","title":"ActivityPub.Instances.set_reachable/1","doc":"","ref":"ActivityPub.Instances.html#set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.set_unreachable/2","doc":"","ref":"ActivityPub.Instances.html#set_unreachable/2"},{"type":"module","title":"ActivityPub.Instances.Instance","doc":"Instance.","ref":"ActivityPub.Instances.Instance.html"},{"type":"function","title":"ActivityPub.Instances.Instance.changeset/2","doc":"","ref":"ActivityPub.Instances.Instance.html#changeset/2"},{"type":"function","title":"ActivityPub.Instances.Instance.do_set_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#do_set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.filter_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#filter_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.host/1","doc":"","ref":"ActivityPub.Instances.Instance.html#host/1"},{"type":"function","title":"ActivityPub.Instances.Instance.reachable?/1","doc":"","ref":"ActivityPub.Instances.Instance.html#reachable?/1"},{"type":"function","title":"ActivityPub.Instances.Instance.set_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.set_unreachable/2","doc":"","ref":"ActivityPub.Instances.Instance.html#set_unreachable/2"},{"type":"behaviour","title":"ActivityPub.MRF","doc":"","ref":"ActivityPub.MRF.html"},{"type":"function","title":"ActivityPub.MRF.filter/2","doc":"","ref":"ActivityPub.MRF.html#filter/2"},{"type":"callback","title":"ActivityPub.MRF.filter/2","doc":"","ref":"ActivityPub.MRF.html#c:filter/2"},{"type":"function","title":"ActivityPub.MRF.filter/3","doc":"","ref":"ActivityPub.MRF.html#filter/3"},{"type":"function","title":"ActivityPub.MRF.get_policies/0","doc":"","ref":"ActivityPub.MRF.html#get_policies/0"},{"type":"function","title":"ActivityPub.MRF.subdomain_match?/2","doc":"","ref":"ActivityPub.MRF.html#subdomain_match?/2"},{"type":"function","title":"ActivityPub.MRF.subdomains_regex/1","doc":"","ref":"ActivityPub.MRF.html#subdomains_regex/1"},{"type":"module","title":"ActivityPub.MRF.SimplePolicy","doc":"Filter activities depending on their origin instance","ref":"ActivityPub.MRF.SimplePolicy.html"},{"type":"function","title":"ActivityPub.MRF.SimplePolicy.check_reject/2","doc":"","ref":"ActivityPub.MRF.SimplePolicy.html#check_reject/2"},{"type":"module","title":"ActivityPub.Object","doc":"","ref":"ActivityPub.Object.html"},{"type":"function","title":"ActivityPub.Object.actor_from_data/1","doc":"","ref":"ActivityPub.Object.html#actor_from_data/1"},{"type":"function","title":"ActivityPub.Object.actor_id_from_data/1","doc":"","ref":"ActivityPub.Object.html#actor_id_from_data/1"},{"type":"function","title":"ActivityPub.Object.all/1","doc":"","ref":"ActivityPub.Object.html#all/1"},{"type":"function","title":"ActivityPub.Object.changeset/1","doc":"","ref":"ActivityPub.Object.html#changeset/1"},{"type":"function","title":"ActivityPub.Object.changeset/2","doc":"","ref":"ActivityPub.Object.html#changeset/2"},{"type":"function","title":"ActivityPub.Object.common_changeset/1","doc":"","ref":"ActivityPub.Object.html#common_changeset/1"},{"type":"function","title":"ActivityPub.Object.delete/1","doc":"","ref":"ActivityPub.Object.html#delete/1"},{"type":"function","title":"ActivityPub.Object.do_insert/1","doc":"","ref":"ActivityPub.Object.html#do_insert/1"},{"type":"function","title":"ActivityPub.Object.do_update_existing/2","doc":"","ref":"ActivityPub.Object.html#do_update_existing/2"},{"type":"function","title":"ActivityPub.Object.fetch_latest_block/2","doc":"","ref":"ActivityPub.Object.html#fetch_latest_block/2"},{"type":"function","title":"ActivityPub.Object.fetch_latest_follow/2","doc":"","ref":"ActivityPub.Object.html#fetch_latest_follow/2"},{"type":"function","title":"ActivityPub.Object.get_activity_for_object_ap_id/2","doc":"","ref":"ActivityPub.Object.html#get_activity_for_object_ap_id/2"},{"type":"function","title":"ActivityPub.Object.get_ap_id/1","doc":"","ref":"ActivityPub.Object.html#get_ap_id/1"},{"type":"function","title":"ActivityPub.Object.get_cached/1","doc":"","ref":"ActivityPub.Object.html#get_cached/1"},{"type":"function","title":"ActivityPub.Object.get_cached!/1","doc":"","ref":"ActivityPub.Object.html#get_cached!/1"},{"type":"function","title":"ActivityPub.Object.get_existing_announce/2","doc":"Retruns an existing announce activity if the notice has already been announced","ref":"ActivityPub.Object.html#get_existing_announce/2"},{"type":"function","title":"ActivityPub.Object.get_existing_like/2","doc":"Returns an existing like if a user already liked an object","ref":"ActivityPub.Object.html#get_existing_like/2"},{"type":"function","title":"ActivityPub.Object.get_follow_activity/2","doc":"","ref":"ActivityPub.Object.html#get_follow_activity/2"},{"type":"function","title":"ActivityPub.Object.get_inbox/2","doc":"","ref":"ActivityPub.Object.html#get_inbox/2"},{"type":"function","title":"ActivityPub.Object.get_outbox_for_actor/2","doc":"","ref":"ActivityPub.Object.html#get_outbox_for_actor/2"},{"type":"function","title":"ActivityPub.Object.get_outbox_for_instance/1","doc":"","ref":"ActivityPub.Object.html#get_outbox_for_instance/1"},{"type":"function","title":"ActivityPub.Object.get_uncached/1","doc":"","ref":"ActivityPub.Object.html#get_uncached/1"},{"type":"function","title":"ActivityPub.Object.hard_delete/1","doc":"","ref":"ActivityPub.Object.html#hard_delete/1"},{"type":"function","title":"ActivityPub.Object.hashtags/1","doc":"","ref":"ActivityPub.Object.html#hashtags/1"},{"type":"function","title":"ActivityPub.Object.invalidate_cache/1","doc":"","ref":"ActivityPub.Object.html#invalidate_cache/1"},{"type":"function","title":"ActivityPub.Object.is_deleted?/1","doc":"","ref":"ActivityPub.Object.html#is_deleted?/1"},{"type":"function","title":"ActivityPub.Object.make_tombstone/2","doc":"","ref":"ActivityPub.Object.html#make_tombstone/2"},{"type":"function","title":"ActivityPub.Object.maybe_fetch/2","doc":"","ref":"ActivityPub.Object.html#maybe_fetch/2"},{"type":"function","title":"ActivityPub.Object.maybe_upsert/3","doc":"","ref":"ActivityPub.Object.html#maybe_upsert/3"},{"type":"function","title":"ActivityPub.Object.normalise_tos/1","doc":"","ref":"ActivityPub.Object.html#normalise_tos/1"},{"type":"function","title":"ActivityPub.Object.normalize/3","doc":"","ref":"ActivityPub.Object.html#normalize/3"},{"type":"function","title":"ActivityPub.Object.normalize_actors/1","doc":"","ref":"ActivityPub.Object.html#normalize_actors/1"},{"type":"function","title":"ActivityPub.Object.normalize_params/3","doc":"","ref":"ActivityPub.Object.html#normalize_params/3"},{"type":"function","title":"ActivityPub.Object.object_url/1","doc":"","ref":"ActivityPub.Object.html#object_url/1"},{"type":"function","title":"ActivityPub.Object.prepare_data/4","doc":"Prepares a struct to be inserted into the objects table","ref":"ActivityPub.Object.html#prepare_data/4"},{"type":"function","title":"ActivityPub.Object.query/1","doc":"","ref":"ActivityPub.Object.html#query/1"},{"type":"function","title":"ActivityPub.Object.self_replies_ids/2","doc":"","ref":"ActivityPub.Object.html#self_replies_ids/2"},{"type":"function","title":"ActivityPub.Object.set_cache/1","doc":"","ref":"ActivityPub.Object.html#set_cache/1"},{"type":"function","title":"ActivityPub.Object.swap_object_with_tombstone/1","doc":"","ref":"ActivityPub.Object.html#swap_object_with_tombstone/1"},{"type":"function","title":"ActivityPub.Object.update_and_set_cache/1","doc":"","ref":"ActivityPub.Object.html#update_and_set_cache/1"},{"type":"function","title":"ActivityPub.Object.update_changeset/2","doc":"","ref":"ActivityPub.Object.html#update_changeset/2"},{"type":"function","title":"ActivityPub.Object.update_existing/2","doc":"","ref":"ActivityPub.Object.html#update_existing/2"},{"type":"function","title":"ActivityPub.Object.update_state/3","doc":"Updates a follow activity's state (for locked accounts).","ref":"ActivityPub.Object.html#update_state/3"},{"type":"type","title":"ActivityPub.Object.t/0","doc":"","ref":"ActivityPub.Object.html#t:t/0"},{"type":"module","title":"ActivityPub.Pruner","doc":"Prunes objects from the database.","ref":"ActivityPub.Pruner.html"},{"type":"function","title":"ActivityPub.Pruner.prune_all/1","doc":"","ref":"ActivityPub.Pruner.html#prune_all/1"},{"type":"function","title":"ActivityPub.Pruner.prune_deletes/1","doc":"","ref":"ActivityPub.Pruner.html#prune_deletes/1"},{"type":"function","title":"ActivityPub.Pruner.prune_objects/1","doc":"","ref":"ActivityPub.Pruner.html#prune_objects/1"},{"type":"function","title":"ActivityPub.Pruner.prune_orphaned_activities/0","doc":"","ref":"ActivityPub.Pruner.html#prune_orphaned_activities/0"},{"type":"function","title":"ActivityPub.Pruner.prune_removes/1","doc":"","ref":"ActivityPub.Pruner.html#prune_removes/1"},{"type":"function","title":"ActivityPub.Pruner.prune_stale_follow_requests/1","doc":"","ref":"ActivityPub.Pruner.html#prune_stale_follow_requests/1"},{"type":"function","title":"ActivityPub.Pruner.prune_tombstones/1","doc":"","ref":"ActivityPub.Pruner.html#prune_tombstones/1"},{"type":"function","title":"ActivityPub.Pruner.prune_undos/1","doc":"","ref":"ActivityPub.Pruner.html#prune_undos/1"},{"type":"function","title":"ActivityPub.Pruner.remove_embedded_objects/0","doc":"","ref":"ActivityPub.Pruner.html#remove_embedded_objects/0"},{"type":"module","title":"ActivityPub.Pruner.PruneDatabaseWorker","doc":"The worker to prune old data from the database.","ref":"ActivityPub.Pruner.PruneDatabaseWorker.html"},{"type":"module","title":"ActivityPub.Queries","doc":"Contains queries for Object.","ref":"ActivityPub.Queries.html"},{"type":"function","title":"ActivityPub.Queries.activity_by_object_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#activity_by_object_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.by_actor/2","doc":"","ref":"ActivityPub.Queries.html#by_actor/2"},{"type":"function","title":"ActivityPub.Queries.by_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#by_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.by_id/2","doc":"","ref":"ActivityPub.Queries.html#by_id/2"},{"type":"function","title":"ActivityPub.Queries.by_object_id/2","doc":"","ref":"ActivityPub.Queries.html#by_object_id/2"},{"type":"function","title":"ActivityPub.Queries.by_object_in_reply_to_id/3","doc":"","ref":"ActivityPub.Queries.html#by_object_in_reply_to_id/3"},{"type":"function","title":"ActivityPub.Queries.by_type/2","doc":"","ref":"ActivityPub.Queries.html#by_type/2"},{"type":"function","title":"ActivityPub.Queries.exclude_type/2","doc":"","ref":"ActivityPub.Queries.html#exclude_type/2"},{"type":"function","title":"ActivityPub.Queries.find_by_object_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#find_by_object_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.last_follow/2","doc":"","ref":"ActivityPub.Queries.html#last_follow/2"},{"type":"function","title":"ActivityPub.Queries.ordered/1","doc":"","ref":"ActivityPub.Queries.html#ordered/1"},{"type":"function","title":"ActivityPub.Queries.replies/2","doc":"","ref":"ActivityPub.Queries.html#replies/2"},{"type":"function","title":"ActivityPub.Queries.self_replies/1","doc":"","ref":"ActivityPub.Queries.html#self_replies/1"},{"type":"function","title":"ActivityPub.Queries.with_joined_activity/3","doc":"","ref":"ActivityPub.Queries.html#with_joined_activity/3"},{"type":"function","title":"ActivityPub.Queries.with_joined_object/2","doc":"","ref":"ActivityPub.Queries.html#with_joined_object/2"},{"type":"function","title":"ActivityPub.Queries.with_preloaded_object/2","doc":"","ref":"ActivityPub.Queries.html#with_preloaded_object/2"},{"type":"type","title":"ActivityPub.Queries.query/0","doc":"","ref":"ActivityPub.Queries.html#t:query/0"},{"type":"module","title":"ActivityPub.Safety.Containment","doc":"This module contains some useful functions for containing objects to specific\norigins and determining those origins.  They previously lived in the\nActivityPub `Transformer` module.\n\nObject containment is an important step in validating remote objects to prevent\nspoofing, therefore removal of object containment functions is NOT recommended.","ref":"ActivityPub.Safety.Containment.html"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_child/1","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_child/1"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_origin/2","doc":"Checks that an imported AP object's actor matches the host it came from.","ref":"ActivityPub.Safety.Containment.html#contain_origin/2"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_origin_from_id/2","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_origin_from_id/2"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_uri/2","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_uri/2"},{"type":"function","title":"ActivityPub.Safety.Containment.get_object/1","doc":"","ref":"ActivityPub.Safety.Containment.html#get_object/1"},{"type":"function","title":"ActivityPub.Safety.Containment.restrict_unauthenticated_access?/1","doc":"","ref":"ActivityPub.Safety.Containment.html#restrict_unauthenticated_access?/1"},{"type":"function","title":"ActivityPub.Safety.Containment.restrict_unauthenticated_access?/2","doc":"","ref":"ActivityPub.Safety.Containment.html#restrict_unauthenticated_access?/2"},{"type":"function","title":"ActivityPub.Safety.Containment.visible_for_user?/2","doc":"","ref":"ActivityPub.Safety.Containment.html#visible_for_user?/2"},{"type":"module","title":"ActivityPub.Safety.Keys","doc":"Handles RSA keys for Actors & helpers for HTTP signatures","ref":"ActivityPub.Safety.Keys.html"},{"type":"function","title":"ActivityPub.Safety.Keys.add_public_key/2","doc":"","ref":"ActivityPub.Safety.Keys.html#add_public_key/2"},{"type":"function","title":"ActivityPub.Safety.Keys.cast_uri/1","doc":"","ref":"ActivityPub.Safety.Keys.html#cast_uri/1"},{"type":"function","title":"ActivityPub.Safety.Keys.ensure_keys_present/1","doc":"Checks if an actor struct has a non-nil keys field and generates a PEM if it doesn't.","ref":"ActivityPub.Safety.Keys.html#ensure_keys_present/1"},{"type":"function","title":"ActivityPub.Safety.Keys.fetch_public_key_for_ap_id/1","doc":"Fetches the remote public key for given actor AP ID.","ref":"ActivityPub.Safety.Keys.html#fetch_public_key_for_ap_id/1"},{"type":"function","title":"ActivityPub.Safety.Keys.generate_rsa_pem/0","doc":"","ref":"ActivityPub.Safety.Keys.html#generate_rsa_pem/0"},{"type":"function","title":"ActivityPub.Safety.Keys.get_public_key_for_ap_id/1","doc":"Get the public key for given actor AP ID.","ref":"ActivityPub.Safety.Keys.html#get_public_key_for_ap_id/1"},{"type":"function","title":"ActivityPub.Safety.Keys.http_host/1","doc":"","ref":"ActivityPub.Safety.Keys.html#http_host/1"},{"type":"function","title":"ActivityPub.Safety.Keys.key_id_to_actor_id/1","doc":"","ref":"ActivityPub.Safety.Keys.html#key_id_to_actor_id/1"},{"type":"function","title":"ActivityPub.Safety.Keys.keypair_from_pem/1","doc":"","ref":"ActivityPub.Safety.Keys.html#keypair_from_pem/1"},{"type":"function","title":"ActivityPub.Safety.Keys.maybe_add_fetch_signature_headers/3","doc":"","ref":"ActivityPub.Safety.Keys.html#maybe_add_fetch_signature_headers/3"},{"type":"function","title":"ActivityPub.Safety.Keys.public_key_decode/1","doc":"","ref":"ActivityPub.Safety.Keys.html#public_key_decode/1"},{"type":"function","title":"ActivityPub.Safety.Keys.public_key_from_data/1","doc":"","ref":"ActivityPub.Safety.Keys.html#public_key_from_data/1"},{"type":"function","title":"ActivityPub.Safety.Keys.sign/2","doc":"","ref":"ActivityPub.Safety.Keys.html#sign/2"},{"type":"module","title":"ActivityPub.Safety.Signatures","doc":"Implementation for behaviour from `HTTPSignatures` library","ref":"ActivityPub.Safety.Signatures.html"},{"type":"function","title":"ActivityPub.Safety.Signatures.fetch_fresh_public_key/1","doc":"Fetch public key from remote actor","ref":"ActivityPub.Safety.Signatures.html#fetch_fresh_public_key/1"},{"type":"function","title":"ActivityPub.Safety.Signatures.fetch_public_key/1","doc":"Get or fetch public key from local cache/DB","ref":"ActivityPub.Safety.Signatures.html#fetch_public_key/1"},{"type":"function","title":"ActivityPub.Safety.Signatures.get_public_key/1","doc":"Get public key from local cache/DB","ref":"ActivityPub.Safety.Signatures.html#get_public_key/1"},{"type":"module","title":"ActivityPub.Utils","doc":"Misc functions used for federation","ref":"ActivityPub.Utils.html"},{"type":"function","title":"ActivityPub.Utils.activitypub_object_headers/0","doc":"","ref":"ActivityPub.Utils.html#activitypub_object_headers/0"},{"type":"function","title":"ActivityPub.Utils.adapter_fallback/0","doc":"","ref":"ActivityPub.Utils.html#adapter_fallback/0"},{"type":"function","title":"ActivityPub.Utils.ap_base_url/0","doc":"","ref":"ActivityPub.Utils.html#ap_base_url/0"},{"type":"function","title":"ActivityPub.Utils.ap_id/1","doc":"","ref":"ActivityPub.Utils.html#ap_id/1"},{"type":"function","title":"ActivityPub.Utils.as_local_public/0","doc":"","ref":"ActivityPub.Utils.html#as_local_public/0"},{"type":"function","title":"ActivityPub.Utils.cache_clear/0","doc":"","ref":"ActivityPub.Utils.html#cache_clear/0"},{"type":"function","title":"ActivityPub.Utils.cachex_fetch/4","doc":"","ref":"ActivityPub.Utils.html#cachex_fetch/4"},{"type":"function","title":"ActivityPub.Utils.error_json/3","doc":"","ref":"ActivityPub.Utils.html#error_json/3"},{"type":"function","title":"ActivityPub.Utils.format_date/1","doc":"","ref":"ActivityPub.Utils.html#format_date/1"},{"type":"function","title":"ActivityPub.Utils.generate_id/1","doc":"","ref":"ActivityPub.Utils.html#generate_id/1"},{"type":"function","title":"ActivityPub.Utils.generate_object_id/0","doc":"","ref":"ActivityPub.Utils.html#generate_object_id/0"},{"type":"function","title":"ActivityPub.Utils.get_with_cache/4","doc":"","ref":"ActivityPub.Utils.html#get_with_cache/4"},{"type":"function","title":"ActivityPub.Utils.has_as_public?/1","doc":"","ref":"ActivityPub.Utils.html#has_as_public?/1"},{"type":"function","title":"ActivityPub.Utils.is_ulid?/1","doc":"","ref":"ActivityPub.Utils.html#is_ulid?/1"},{"type":"function","title":"ActivityPub.Utils.is_uuid?/1","doc":"Takes a string and returns true if it is a valid UUID (Universally Unique Identifier)","ref":"ActivityPub.Utils.html#is_uuid?/1"},{"type":"function","title":"ActivityPub.Utils.json_with_cache/6","doc":"","ref":"ActivityPub.Utils.html#json_with_cache/6"},{"type":"function","title":"ActivityPub.Utils.label_in_collection?/2","doc":"","ref":"ActivityPub.Utils.html#label_in_collection?/2"},{"type":"function","title":"ActivityPub.Utils.make_date/0","doc":"","ref":"ActivityPub.Utils.html#make_date/0"},{"type":"function","title":"ActivityPub.Utils.make_json_ld_header/1","doc":"","ref":"ActivityPub.Utils.html#make_json_ld_header/1"},{"type":"function","title":"ActivityPub.Utils.maybe_put/3","doc":"conditionally update a map","ref":"ActivityPub.Utils.html#maybe_put/3"},{"type":"function","title":"ActivityPub.Utils.maybe_to_atom/1","doc":"","ref":"ActivityPub.Utils.html#maybe_to_atom/1"},{"type":"function","title":"ActivityPub.Utils.maybe_to_string/1","doc":"Handles multiple cases where the input value is of a different type (atom, list, tuple, etc.) and returns a string representation of it.","ref":"ActivityPub.Utils.html#maybe_to_string/1"},{"type":"function","title":"ActivityPub.Utils.ok_unwrap/2","doc":"","ref":"ActivityPub.Utils.html#ok_unwrap/2"},{"type":"function","title":"ActivityPub.Utils.public?/1","doc":"","ref":"ActivityPub.Utils.html#public?/1"},{"type":"function","title":"ActivityPub.Utils.public?/2","doc":"Determines if an object or an activity is public.","ref":"ActivityPub.Utils.html#public?/2"},{"type":"function","title":"ActivityPub.Utils.put_if_present/4","doc":"","ref":"ActivityPub.Utils.html#put_if_present/4"},{"type":"function","title":"ActivityPub.Utils.repo/0","doc":"","ref":"ActivityPub.Utils.html#repo/0"},{"type":"function","title":"ActivityPub.Utils.request_ip/1","doc":"","ref":"ActivityPub.Utils.html#request_ip/1"},{"type":"function","title":"ActivityPub.Utils.return_json/4","doc":"","ref":"ActivityPub.Utils.html#return_json/4"},{"type":"function","title":"ActivityPub.Utils.safe_put_in/3","doc":"","ref":"ActivityPub.Utils.html#safe_put_in/3"},{"type":"function","title":"ActivityPub.Utils.service_actor/0","doc":"","ref":"ActivityPub.Utils.html#service_actor/0"},{"type":"function","title":"ActivityPub.Utils.service_actor!/0","doc":"","ref":"ActivityPub.Utils.html#service_actor!/0"},{"type":"function","title":"ActivityPub.Utils.set_repo/1","doc":"","ref":"ActivityPub.Utils.html#set_repo/1"},{"type":"function","title":"ActivityPub.Utils.single_ap_id/1","doc":"","ref":"ActivityPub.Utils.html#single_ap_id/1"},{"type":"function","title":"ActivityPub.Utils.single_ap_id_or_object/1","doc":"","ref":"ActivityPub.Utils.html#single_ap_id_or_object/1"},{"type":"function","title":"ActivityPub.Utils.stringify_keys/2","doc":"Takes a map or keyword list, and returns a map with any atom keys converted to string keys. It can optionally do so recursively.","ref":"ActivityPub.Utils.html#stringify_keys/2"},{"type":"function","title":"ActivityPub.Utils.ulid/1","doc":"","ref":"ActivityPub.Utils.html#ulid/1"},{"type":"module","title":"ActivityPub.Web","doc":"The entrypoint for defining your web interface, such\nas controllers, views, channels and so on.\n\nThis can be used in your application as:\n\n    use ActivityPub.Web, :controller\n    use ActivityPub.Web, :view\n\nThe definitions below will be executed for every view,\ncontroller, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define any helper function in modules\nand import those modules here.","ref":"ActivityPub.Web.html"},{"type":"macro","title":"ActivityPub.Web.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"ActivityPub.Web.html#__using__/1"},{"type":"function","title":"ActivityPub.Web.base_url/0","doc":"","ref":"ActivityPub.Web.html#base_url/0"},{"type":"function","title":"ActivityPub.Web.channel/0","doc":"","ref":"ActivityPub.Web.html#channel/0"},{"type":"function","title":"ActivityPub.Web.controller/0","doc":"","ref":"ActivityPub.Web.html#controller/0"},{"type":"function","title":"ActivityPub.Web.rate_limit_reached/2","doc":"","ref":"ActivityPub.Web.html#rate_limit_reached/2"},{"type":"function","title":"ActivityPub.Web.router/0","doc":"","ref":"ActivityPub.Web.html#router/0"},{"type":"function","title":"ActivityPub.Web.view/0","doc":"","ref":"ActivityPub.Web.html#view/0"},{"type":"module","title":"ActivityPub.Web.ActivityPubController","doc":"Endpoints for serving objects and collections, so the ActivityPub API can be used to read information from the server.\n\nEven though we store the data in AS format, some changes need to be applied to the entity before serving it in the AP REST response. This is done in `ActivityPub.Web.ActivityPubView`.","ref":"ActivityPub.Web.ActivityPubController.html"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.actor/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#actor/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.ap_route_helper/1","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#ap_route_helper/1"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.followers/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#followers/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.following/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#following/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.json_object_with_cache/3","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#json_object_with_cache/3"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.maybe_inbox/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#maybe_inbox/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.object/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#object/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.outbox/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#outbox/2"},{"type":"module","title":"ActivityPub.Web.ActorView","doc":"","ref":"ActivityPub.Web.ActorView.html"},{"type":"function","title":"ActivityPub.Web.ActorView.actor_json/1","doc":"","ref":"ActivityPub.Web.ActorView.html#actor_json/1"},{"type":"function","title":"ActivityPub.Web.ActorView.collection/4","doc":"","ref":"ActivityPub.Web.ActorView.html#collection/4"},{"type":"function","title":"ActivityPub.Web.ActorView.render/2","doc":"","ref":"ActivityPub.Web.ActorView.html#render/2"},{"type":"module","title":"ActivityPub.Web.Endpoint","doc":"","ref":"ActivityPub.Web.Endpoint.html"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast!/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast!/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast_from/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast_from/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast_from!/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.call/2","doc":"","ref":"ActivityPub.Web.Endpoint.html#call/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"ActivityPub.Web.Endpoint.html#child_spec/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"ActivityPub.Web.Endpoint.html#config/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"ActivityPub.Web.Endpoint.html#config_change/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"ActivityPub.Web.Endpoint.html#host/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.init/1","doc":"","ref":"ActivityPub.Web.Endpoint.html#init/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.local_broadcast/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#local_broadcast/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.local_broadcast_from/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"ActivityPub.Web.Endpoint.html#path/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.script_name/0","doc":"Generates the script name.","ref":"ActivityPub.Web.Endpoint.html#script_name/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"ActivityPub.Web.Endpoint.html#server_info/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"ActivityPub.Web.Endpoint.html#start_link/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"ActivityPub.Web.Endpoint.html#static_integrity/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"ActivityPub.Web.Endpoint.html#static_lookup/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"ActivityPub.Web.Endpoint.html#static_path/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"ActivityPub.Web.Endpoint.html#static_url/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"ActivityPub.Web.Endpoint.html#struct_url/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.subscribe/2","doc":"","ref":"ActivityPub.Web.Endpoint.html#subscribe/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.unsubscribe/1","doc":"","ref":"ActivityPub.Web.Endpoint.html#unsubscribe/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"ActivityPub.Web.Endpoint.html#url/0"},{"type":"module","title":"ActivityPub.Web.ErrorHelpers","doc":"Conveniences for translating and building error messages.","ref":"ActivityPub.Web.ErrorHelpers.html"},{"type":"function","title":"ActivityPub.Web.ErrorHelpers.error_tag/2","doc":"Generates tag for inlined form input errors.","ref":"ActivityPub.Web.ErrorHelpers.html#error_tag/2"},{"type":"module","title":"ActivityPub.Web.ErrorView","doc":"Standard error view","ref":"ActivityPub.Web.ErrorView.html"},{"type":"function","title":"ActivityPub.Web.ErrorView.render/2","doc":"","ref":"ActivityPub.Web.ErrorView.html#render/2"},{"type":"function","title":"ActivityPub.Web.ErrorView.template_not_found/2","doc":"By default, Phoenix returns the status message from the template name. For example, \"404.html\" becomes \"Not Found\".","ref":"ActivityPub.Web.ErrorView.html#template_not_found/2"},{"type":"module","title":"ActivityPub.Web.IncomingActivityPubController","doc":"Endpoints for the ActivityPub inbox","ref":"ActivityPub.Web.IncomingActivityPubController.html"},{"type":"function","title":"ActivityPub.Web.IncomingActivityPubController.inbox/2","doc":"","ref":"ActivityPub.Web.IncomingActivityPubController.html#inbox/2"},{"type":"function","title":"ActivityPub.Web.IncomingActivityPubController.outbox_info/2","doc":"","ref":"ActivityPub.Web.IncomingActivityPubController.html#outbox_info/2"},{"type":"module","title":"ActivityPub.Web.LayoutView","doc":"","ref":"ActivityPub.Web.LayoutView.html"},{"type":"function","title":"ActivityPub.Web.LayoutView.render/2","doc":"","ref":"ActivityPub.Web.LayoutView.html#render/2"},{"type":"module","title":"ActivityPub.Web.ObjectView","doc":"","ref":"ActivityPub.Web.ObjectView.html"},{"type":"function","title":"ActivityPub.Web.ObjectView.collection/4","doc":"","ref":"ActivityPub.Web.ObjectView.html#collection/4"},{"type":"function","title":"ActivityPub.Web.ObjectView.render/2","doc":"","ref":"ActivityPub.Web.ObjectView.html#render/2"},{"type":"module","title":"ActivityPub.Web.Plugs.DigestPlug","doc":"","ref":"ActivityPub.Web.Plugs.DigestPlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.DigestPlug.read_body/2","doc":"","ref":"ActivityPub.Web.Plugs.DigestPlug.html#read_body/2"},{"type":"module","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug","doc":"Ensures HTTP signature has been validated by previous plugs on ActivityPub requests.","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.ignore/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#ignore/1"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#init/1"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.maybe_reject!/2","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#maybe_reject!/2"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.unauthorized/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#unauthorized/1"},{"type":"module","title":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug","doc":"","ref":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.FetchHTTPSignaturePlug.html#init/1"},{"type":"module","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html#init/1"},{"type":"module","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html#init/1"},{"type":"module","title":"ActivityPub.Web.RedirectController","doc":"","ref":"ActivityPub.Web.RedirectController.html"},{"type":"function","title":"ActivityPub.Web.RedirectController.actor/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#actor/2"},{"type":"function","title":"ActivityPub.Web.RedirectController.object/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#object/2"},{"type":"function","title":"ActivityPub.Web.RedirectController.remote_interaction/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#remote_interaction/2"},{"type":"module","title":"ActivityPub.Web.Router","doc":"","ref":"ActivityPub.Web.Router.html"},{"type":"module","title":"ActivityPub.Web.Telemetry","doc":"","ref":"ActivityPub.Web.Telemetry.html"},{"type":"function","title":"ActivityPub.Web.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"ActivityPub.Web.Telemetry.html#child_spec/1"},{"type":"function","title":"ActivityPub.Web.Telemetry.metrics/0","doc":"","ref":"ActivityPub.Web.Telemetry.html#metrics/0"},{"type":"function","title":"ActivityPub.Web.Telemetry.start_link/1","doc":"","ref":"ActivityPub.Web.Telemetry.html#start_link/1"},{"type":"module","title":"ActivityPub.Web.UserSocket","doc":"","ref":"ActivityPub.Web.UserSocket.html"},{"type":"module","title":"ActivityPub.Web.WebFingerController","doc":"","ref":"ActivityPub.Web.WebFingerController.html"},{"type":"function","title":"ActivityPub.Web.WebFingerController.webfinger/2","doc":"","ref":"ActivityPub.Web.WebFingerController.html#webfinger/2"},{"type":"module","title":"Iconify.MaterialSymbols.CalendarMonth","doc":"","ref":"Iconify.MaterialSymbols.CalendarMonth.html"},{"type":"function","title":"Iconify.MaterialSymbols.CalendarMonth.render/1","doc":"","ref":"Iconify.MaterialSymbols.CalendarMonth.html#render/1"},{"type":"behaviour","title":"AbsintheClient","doc":"Supports use of GraphQL documents from with app containing the Absinthe schema","ref":"AbsintheClient.html"},{"type":"behaviour","title":"Example - AbsintheClient","doc":"First, `use AbsintheClient`, passing your `schema` and\nnotifying Absinthe to operate in `internal` mode:\n\n```elixir\ndefmodule MyAppWeb.UserController do\n  use MyAppWeb, :controller\n  use AbsintheClient, schema: MyAppWeb.Schema, action: [mode: :internal]\n\n  # ... actions\n\nend\n```\n\nFor each action you want Absinthe to process, provide a GraphQL document using\nthe `@graphql` module attribute (before the action):\n\n```\n@graphql \"\"\"\n  query ($filter: UserFilter) {\n    users(filter: $filter, limit: 10)\n  }\n\"\"\"\ndef index(conn_or_socket, %{data: data}) do\n  render conn_or_socket, \"index.html\", data\nend\n```\n\nThe params for the action will be intercepted by the\n`AbsintheClient.Action` plug, and used as variables for\nthe GraphQL document you've specified.\n\nFor instance, given a definition for a `:user_filter` input object\ntype like this:\n\n```\ninput_object :user_filter do\n  field :name_matches, :string\n  field :age_above, :integer\n  field :age_below, :integer\nend\n```\n\nAnd a query that looks like this (assuming you have the normal\n`Plug.Parsers` configuration for param parsing):\n\n```\n?filter[name_matches]=joe&filter[age_above]=42\n```\n\nThen Absinthe will receive variable definitions of:\n\n```\n%{\"filter\" => %{\"name_matches\" => \"joe\", \"age_above\" => 42}}\n```\n\n(For how the string `\"42\"` was converted into `42`, see `cast_param/3`).\n\nThe params on the `conn_or_socket` will then be replaced by the result of the\nexecution by Absinthe. The action function can then match against\nthat result to respond correctly to the user:\n\nIt's up to you to handle the three possible results:\n\n- When there's `:data` but no `:errors`, everything went perfectly.\n- When there's `:errors` but no `:data`, a validation error occurred and the document could not be\n  executed.\n- When there's `:data` and `:errors`, partial data is available but some fields reported errors\n  during execution.\n\nNotice the keys are atoms, not strings as in normal Phoenix action invocations.","ref":"AbsintheClient.html#module-example"},{"type":"behaviour","title":"Differences with the GraphQL Specification - AbsintheClient","doc":"There are some important differences between GraphQL documents as\nprocessed in an HTTP API and the GraphQL documents that this module\nsupports.\n\nIn an effort to make use of GraphQL ergonomic in Elixir,\nAbsinthe supports some slight structural modifications to\nthe GraphQL documents provided using the `@graphql` module attribute\nin controller modules.\n\nIn a way, you can think of these changes as a specialized GraphQL\ndialect. The following are the differences you need to keep in mind.","ref":"AbsintheClient.html#module-differences-with-the-graphql-specification"},{"type":"behaviour","title":"Objects can be leaf nodes - AbsintheClient","doc":"Let's look at the `users` example mentioned before:\n\n```\n@graphql \"\"\"\n  query ($filter: UserFilter) {\n    users(filter: $filter, limit: 10)\n  }\n\"\"\"\n```\n\nYou'll notice that in the above example, `users` doesn't have an\naccompanying _selection set_ (that is, a set of child fields bounded\nby `{ ... }`). The GraphQL specification dictates that only scalar\nvalues can be \"leaf nodes\" in a GraphQL document... but to support\nunmodified struct values being returned (for example, Ecto schemas),\nif no selection set is provided for an object value (or list\nthereof), the entire value is returned.\n\nThe template can then use `users` as needed:\n\n```\n \n  <%= for user <- @users do %>\n     <%= link user.full_name, to: user_path(@conn_or_socket, :show, user) %> \n  <% end %>\n \n```\n\nThis is useful for `Phoenix.HTML` helper functions that expect\nstructs with specific fields (especially `form_for`).\n\nOne way to think of this change is that, for objects, no selection\nset is equivalent to a \"splat\" operator (except, of course, even\nfields not defined in your GraphQL schema are returned as part of\nthe value).\n\nBut, never fear, nothing is stopping you from ignoring this behavior\nand providing a selection set if you want a traditionally narrow set\nof fields:\n\n```\n@graphql \"\"\"\n  query ($filter: UserFilter) {\n    users(filter: $filter, limit: 10) {\n      id\n      full_name\n    }\n  }\n\"\"\"\n```","ref":"AbsintheClient.html#module-objects-can-be-leaf-nodes"},{"type":"behaviour","title":"Scalar values aren't serialized - AbsintheClient","doc":"To remove the need for reparsing values, scalar values aren't serialized;\nPhoenix actions receive the original, unserialized values of GraphQL fields.\n\nThis is especially useful for custom scalar types. Using a couple of the\nadditional types packaged in `Absinthe.Type.Custom`, for example:\n\n- `:decimal` values are returned as `%Decimal{}` structs, not strings.\n- `:datetime` values are returned as `%DateTime{}` structs, not strings.\n\nIn short, GraphQL used in controllers is a query language to retrieve the values requested---there's no need to serialize the\nvalues to send them across HTTP.","ref":"AbsintheClient.html#module-scalar-values-aren-t-serialized"},{"type":"behaviour","title":"Fields use snake_case - AbsintheClient","doc":"Unlike in the GraphQL notation scheme we prefer for GraphQL APIs (that is,\n`camelCase` fields, which better match up with the expectations of JavaScript\nclients), fields used in documents provided as `@graphql` should use\n`snake_case` naming, as Elixir conventions use that notation style for atoms,\netc.","ref":"AbsintheClient.html#module-fields-use-snake_case"},{"type":"behaviour","title":"Atom keys - AbsintheClient","doc":"Because you are writing the GraphQL document in your controller and Absinthe\nis validating the document against your schema, atom keys are returned for\nfield names.","ref":"AbsintheClient.html#module-atom-keys"},{"type":"callback","title":"AbsintheClient.absinthe_pipeline/2","doc":"Customize the Absinthe processing pipeline.\n\nOnly implement this function if you need to change the pipeline used\nto process documents.","ref":"AbsintheClient.html#c:absinthe_pipeline/2"},{"type":"callback","title":"AbsintheClient.cast_param/3","doc":"Cast string param values to values Absinthe expects for variable input.\n\nSome scalar types, like `:integer` (GraphQL `Int`) require that raw,\nincoming value be a non-string type. This isn't a problem in\nGraphQL-over-HTTP because the variable values are provided as a JSON\npayload (which supports, i.e., integer values).\n\nTo support converting incoming param values to the format that\ncertain scalars expect, we support a `cast_param/3` callback\nfunction that takes a raw value, target type (e.g., the scalar\ntype), and the schema, and returns the transformed\nvalue. `cast_param/3` is overridable and the implementation already\nsupports `:integer` and `:float` types.\n\nIf you override `cast_param/3`, make sure you super or handle lists,\nnon-nulls, and input object values yourself; they're also processed\nusing the function.\n\nImportant: In the event that a value is _invalid_, just return it\nunchanged so that Absinthe's usual validation logic can report it as\ninvalid.","ref":"AbsintheClient.html#c:cast_param/3"},{"type":"function","title":"AbsintheClient.default_pipeline/2","doc":"","ref":"AbsintheClient.html#default_pipeline/2"},{"type":"function","title":"AbsintheClient.variables/1","doc":"","ref":"AbsintheClient.html#variables/1"},{"type":"module","title":"AbsintheClient.Helpers","doc":"","ref":"AbsintheClient.Helpers.html"},{"type":"function","title":"AbsintheClient.Helpers.assign/3","doc":"","ref":"AbsintheClient.Helpers.html#assign/3"},{"type":"function","title":"AbsintheClient.Helpers.error/2","doc":"","ref":"AbsintheClient.Helpers.html#error/2"},{"type":"function","title":"AbsintheClient.Helpers.maybe_to_atom/1","doc":"","ref":"AbsintheClient.Helpers.html#maybe_to_atom/1"},{"type":"module","title":"EctoSparkles","doc":"","ref":"EctoSparkles.html"},{"type":"macro","title":"EctoSparkles.join_preload/2","doc":"`join_preload` is a helper for preloading associations using joins.\n\nBy default, Ecto preloads associations using a separate query for each association, which can degrade performance.\nYou could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see example below).\n\nWith `EctoSparkles`, you can accomplish this with just one line of code.","ref":"EctoSparkles.html#join_preload/2"},{"type":"macro","title":"Example using just Ecto - EctoSparkles.join_preload/2","doc":"```\nimport Ecto.Query\nInvoice\n|> join(:left, [i], assoc(i, :customer), as: :customer)\n|> join(:left, [i, c], assoc(c, :account), as: :account)\n|> join(:left, [i], assoc(i, :lines), as: :lines)\n|> preload([lines: v, customers: c, account: a], lines: v, customer: {c, [a: account]})\n|> Repo.all()\n```","ref":"EctoSparkles.html#join_preload/2-example-using-just-ecto"},{"type":"macro","title":"Example using `join_preload` - EctoSparkles.join_preload/2","doc":"```\nimport EctoSparkles\nInvoice\n|> join_preload([:customer, :account])\n|> join_preload([:lines])\n|> Repo.all()\n```","ref":"EctoSparkles.html#join_preload/2-example-using-join_preload"},{"type":"macro","title":"EctoSparkles.proload/3","doc":"AKA `join_preload++`. It's more powerful, but it does it with more (and different!) syntax.\n\ne.g.\n```\nproload(query, activity: [\n  :verb, :boost_count, :like_count, :replied,\n  # relations under object will have their aliases prefixed with object_, i.e.\n  # :object_message, :object_post, :object_post_content\n  # the original names will still be used for the associations.\n  object: {\"object_\", [:message, :post, :post_content]}\n])\n```","ref":"EctoSparkles.html#proload/3"},{"type":"macro","title":"EctoSparkles.reusable_join/5","doc":"`reusable_join` is similar to `Ecto.Query.join/{4,5}`, but can be called multiple times with the same alias.\n\nNote that only the first join operation is performed, the subsequent ones that use the same alias\nare just ignored. Also note that because of this behaviour, it is mandatory to specify an alias when\nusing this function.\n\nThis is helpful when you need to perform a join while building queries one filter at a time,\nbecause the same filter could be used multiple times or you could have multiple filters that\nrequire the same join, which poses a problem with how the `filter/3` callback work, as you\nneed to return a dynamic with the filtering, which means that the join must have an alias,\nand by default Ecto raises an error when you add multiple joins with the same alias.\n\nTo solve this, it is recommended to use this macro instead of the default `Ecto.Query.join/{4,5}`,\nin which case there will be only one join in the query that can be reused by multiple filters.","ref":"EctoSparkles.html#reusable_join/5"},{"type":"module","title":"EctoSparkles.AutoMigrator","doc":"Runs ecto migrations automatically on startup (add this to your app's supervision tree)","ref":"EctoSparkles.AutoMigrator.html"},{"type":"function","title":"EctoSparkles.AutoMigrator.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"EctoSparkles.AutoMigrator.html#child_spec/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.init/1","doc":"","ref":"EctoSparkles.AutoMigrator.html#init/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.start_link/1","doc":"","ref":"EctoSparkles.AutoMigrator.html#start_link/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.startup_migrations/0","doc":"","ref":"EctoSparkles.AutoMigrator.html#startup_migrations/0"},{"type":"module","title":"EctoSparkles.Changesets.Errors","doc":"","ref":"EctoSparkles.Changesets.Errors.html"},{"type":"function","title":"EctoSparkles.Changesets.Errors.changeset_errors_string/2","doc":"","ref":"EctoSparkles.Changesets.Errors.html#changeset_errors_string/2"},{"type":"function","title":"EctoSparkles.Changesets.Errors.error/2","doc":"","ref":"EctoSparkles.Changesets.Errors.html#error/2"},{"type":"behaviour","title":"EctoSparkles.DataMigration","doc":"A behaviour implemented by our data migrations (generally backfills).\n\nBased on [A microframework for backfill migrations in Elixir's Ecto](https://tylerayoung.com/2023/08/13/migrations/), in turn based on David Bernheisel's [template for deterministic backfills](https://fly.io/phoenix-files/backfilling-data/#batching-deterministic-data).\n\nA data migration using this behaviour may look like this (which you can put simply put in Ecto migrations, eg. `priv/repo/migrations/priv/repo/migrations/20231019004944_data_onboarding_step.exs`):\n\n```elixir\ndefmodule MyApp.Repo.Migrations.BackfillOnboardingStep do\n  alias EctoSparkles.DataMigration\n  use DataMigration\n  \n  @impl DataMigration\n  def base_query do\n    # NOTE: This works in cases where:\n    # 1. The data can be queried with a condition that not longer applies after the migration ran, so you can repeatedly query the data and update the data until the query result is empty. For example, if a column is currently null and will be updated to not be null, then you can query for the null records and pick up where you left off.\n    # 2. The migration is written in such a way that it can be ran several times on the same data without causing data loss or duplication (or crashing).\n\n    from(u in \"users\", # Notice how we do not use Ecto schemas here.\n      where: is_nil(u.onboarding_step),\n      select: %{id: u.id}\n    )\n  end\n\n  @impl DataMigration\n  def config do\n    %DataMigration.Config{batch_size: 100, throttle_ms: 1_000, repo: MyApp.Repo}\n  end\n\n  @impl DataMigration\n  def migrate(results) do\n    Enum.each(results, fn %{id: user_id} ->\n      # hooks into a context module, which is more likely to be kept up to date as the app evolves, to avoid having to update old migrations\n      user_id\n      |> MyApp.Users.set_onboarding_step!()\n    end)\n  end\nend\n```","ref":"EctoSparkles.DataMigration.html"},{"type":"callback","title":"EctoSparkles.DataMigration.base_query/0","doc":"The core of the query you want to use to SELECT a map of your data.\nThe `DataMigration.Runner` will take care of limiting this to a batch size, ordering\nit by row ID, and restricting it to rows you haven't yet handled.\nThe query *must* select a map, and that map must have an `:id` key for the\nmigration runner to reference as the last-modified row in your table.","ref":"EctoSparkles.DataMigration.html#c:base_query/0"},{"type":"callback","title":"EctoSparkles.DataMigration.config/0","doc":"","ref":"EctoSparkles.DataMigration.html#c:config/0"},{"type":"callback","title":"EctoSparkles.DataMigration.migrate/1","doc":"The callback to operate on a result set from your query.\nImplementers should `raise` an error if you're unable to process the batch.","ref":"EctoSparkles.DataMigration.html#c:migrate/1"},{"type":"module","title":"EctoSparkles.DataMigration.Config","doc":"Configuration for a `DataMigration` behaviour module, used by the `DataMigration.Runner`.\n\nbatch size: how many elements from your table to migrate at a time. \n\nthrottle time: the amount of downtime the runner should sleep between batches.\n\nasync: Whether to run the migration in an async process, meaning the execution of the rest of the migrations (and the app startup if you're auto-migrating on start) won't be delayed. WARNING: this means the migration will be marked as done as soon as it starts, so if the process is interrupted it won't be re-run automatically.\n\nfirst_id: The very first ID when sorting UUIDs in ascending order. If you use integer IDs instead, this would be 0.","ref":"EctoSparkles.DataMigration.Config.html"},{"type":"module","title":"EctoSparkles.DataMigration.Runner","doc":"Runs a `DataMigration`","ref":"EctoSparkles.DataMigration.Runner.html"},{"type":"function","title":"EctoSparkles.DataMigration.Runner.run/1","doc":"","ref":"EctoSparkles.DataMigration.Runner.html#run/1"},{"type":"module","title":"EctoSparkles.ErlangTermBinary","doc":"A custom Ecto type for handling the serialization of arbitrary\ndata types stored as binary data in the database. Requires the\nunderlying DB field to be a binary.","ref":"EctoSparkles.ErlangTermBinary.html"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.cast/1","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#cast/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.cast/2","doc":"Provides custom casting rules for params. Nothing changes here.\nWe only need to handle deserialization.","ref":"EctoSparkles.ErlangTermBinary.html#cast/2"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.dump/1","doc":"Converting the data structure to binary for storage.","ref":"EctoSparkles.ErlangTermBinary.html#dump/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.embed_as/1","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#embed_as/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.equal?/2","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#equal?/2"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.load/1","doc":"Convert the raw binary value from the database back to\nthe desired term.\n\nUses `Plug.Crypto.non_executable_binary_to_term/2` - a restricted version of `:erlang.binary_to_term/2` that forbids executable terms, such as anonymous functions.\n\nThis function restricts atoms, with the [:safe] option set, so only existing (and loaded) atoms will be deserialized.","ref":"EctoSparkles.ErlangTermBinary.html#load/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.type/0","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#type/0"},{"type":"module","title":"EctoSparkles.JSONSerdeData","doc":"A custom Ecto type for handling the serialization of arbitrary\ndata types stored as JSON data in the database. Requires the\nunderlying DB field to be :map (eg. JSONB field).","ref":"EctoSparkles.JSONSerdeData.html"},{"type":"function","title":"EctoSparkles.JSONSerdeData.cast/1","doc":"","ref":"EctoSparkles.JSONSerdeData.html#cast/1"},{"type":"function","title":"EctoSparkles.JSONSerdeData.cast/2","doc":"Provides custom casting rules for params. Nothing changes here.\nWe only need to handle deserialization.","ref":"EctoSparkles.JSONSerdeData.html#cast/2"},{"type":"function","title":"EctoSparkles.JSONSerdeData.dump/1","doc":"Converting the data structure to a JSON binary for storage.","ref":"EctoSparkles.JSONSerdeData.html#dump/1"},{"type":"function","title":"EctoSparkles.JSONSerdeData.embed_as/1","doc":"","ref":"EctoSparkles.JSONSerdeData.html#embed_as/1"},{"type":"function","title":"EctoSparkles.JSONSerdeData.equal?/2","doc":"","ref":"EctoSparkles.JSONSerdeData.html#equal?/2"},{"type":"function","title":"EctoSparkles.JSONSerdeData.load/1","doc":"Convert the JSON binary value from the database back to the desired term.","ref":"EctoSparkles.JSONSerdeData.html#load/1"},{"type":"function","title":"EctoSparkles.JSONSerdeData.type/0","doc":"","ref":"EctoSparkles.JSONSerdeData.html#type/0"},{"type":"module","title":"EctoSparkles.Log","doc":"Log Ecto queries, and output warnings for slow or possible n+1 queries\n\nTo set up, simply add `EctoSparkles.Log.setup(YourApp.Repo)` in your app's main `Application.start/2` module.","ref":"EctoSparkles.Log.html"},{"type":"function","title":"EctoSparkles.Log.check_if_n_plus_1/1","doc":"","ref":"EctoSparkles.Log.html#check_if_n_plus_1/1"},{"type":"function","title":"EctoSparkles.Log.format_log/4","doc":"","ref":"EctoSparkles.Log.html#format_log/4"},{"type":"function","title":"EctoSparkles.Log.handle_event/4","doc":"","ref":"EctoSparkles.Log.html#handle_event/4"},{"type":"function","title":"EctoSparkles.Log.inline_params/3","doc":"","ref":"EctoSparkles.Log.html#inline_params/3"},{"type":"function","title":"EctoSparkles.Log.log_query/4","doc":"","ref":"EctoSparkles.Log.html#log_query/4"},{"type":"function","title":"EctoSparkles.Log.setup/1","doc":"","ref":"EctoSparkles.Log.html#setup/1"},{"type":"module","title":"EctoSparkles.Migrator","doc":"","ref":"EctoSparkles.Migrator.html"},{"type":"function","title":"EctoSparkles.Migrator.create/0","doc":"","ref":"EctoSparkles.Migrator.html#create/0"},{"type":"function","title":"EctoSparkles.Migrator.create/2","doc":"","ref":"EctoSparkles.Migrator.html#create/2"},{"type":"function","title":"EctoSparkles.Migrator.migrate/0","doc":"","ref":"EctoSparkles.Migrator.html#migrate/0"},{"type":"function","title":"EctoSparkles.Migrator.migrate/1","doc":"","ref":"EctoSparkles.Migrator.html#migrate/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback/2","doc":"","ref":"EctoSparkles.Migrator.html#rollback/2"},{"type":"function","title":"EctoSparkles.Migrator.rollback_all/0","doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/0"},{"type":"function","title":"EctoSparkles.Migrator.rollback_all/1","doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback_to/1","doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback_to/2","doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/2"},{"type":"function","title":"EctoSparkles.Migrator.status/0","doc":"Print the migration status for configured Repos' migrations.","ref":"EctoSparkles.Migrator.html#status/0"},{"type":"module","title":"EctoSparkles.NPlus1Detector","doc":"Checks a query against the previous one and increments counter of collisions or swaps previous query with the last one.","ref":"EctoSparkles.NPlus1Detector.html"},{"type":"function","title":"EctoSparkles.NPlus1Detector.check/1","doc":"","ref":"EctoSparkles.NPlus1Detector.html#check/1"},{"type":"function","title":"EctoSparkles.NPlus1Detector.do_check/2","doc":"","ref":"EctoSparkles.NPlus1Detector.html#do_check/2"},{"type":"module","title":"EctoSparkles.SanitiseStrings","doc":"Provides functions for sanitising input on `Ecto.Changeset` string fields.","ref":"EctoSparkles.SanitiseStrings.html"},{"type":"function","title":"EctoSparkles.SanitiseStrings.clean_html/2","doc":"","ref":"EctoSparkles.SanitiseStrings.html#clean_html/2"},{"type":"function","title":"EctoSparkles.SanitiseStrings.sanitise_strings/2","doc":"","ref":"EctoSparkles.SanitiseStrings.html#sanitise_strings/2"},{"type":"function","title":"EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"Sanitises all changes in the given changeset that apply to field which are of the `:string` `Ecto` type.\n\nBy default it uses the `HtmlSanitizeEx.strip_tags/1` function on any change that satisfies all of the following conditions:\n1. The field associated with the change is of the type `:string`.\n2. The field associated with the change is not in the blacklisted_fields list of `opts` as defined using the `:except` key in `opts`.\nNote that this function will change the value in the `:changes` map of an\n`%Ecto.Changeset{}` struct if the given changes are sanitized.","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2"},{"type":"function","title":"Examples - EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"iex> attrs = %{string_field: \" Bad \"}\n    iex> result_changeset =\n    ...>   attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.strip_all_tags()\n    iex> result_changeset.changes\n    %{string_field: \"Bad\"}\nFields can be exempted from sanitization via the `:except` option.\n    iex> attrs = %{string_field: \" Bad \"}\n    iex> result_changeset =\n    ...>   attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.strip_all_tags(except: [:string_field])\n    iex> result_changeset.changes\n    %{string_field: \" Bad \"}","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2-examples"},{"type":"function","title":"You can also specify a specific scrubber (by passing a function as reference): - EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"ies> attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.sanitise_strings(scrubber: HtmlSanitizeEx.Scrubber.html5/1)","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2-you-can-also-specify-a-specific-scrubber-by-passing-a-function-as-reference"},{"type":"extras","title":"Bonfire Networks","doc":"<!--      -->\n\n\n# Bonfire Networks \n\n[Bonfire](https://bonfirenetworks.org/) is an open-source framework for building federated digital spaces where people can gather, interact, and form communities online.\n\n![Bonfire wallpaper](https://i.imgur.com/dbRT0Z1.png)\n\n> #### Info {: .info}\n>\n> This project is in the beta stage - you're welcome to try out it out (specifically the social features in the classic flavour), but APIs may still change and no guarantees are given about stability. You can keep track of progress [in our milestones](https://github.com/bonfire-networks/bonfire-app/milestones?direction=asc&sort=due_date&state=open)","ref":"readme.html"},{"type":"extras","title":"Main features - Bonfire Networks","doc":"1. **Modular architecture**: Bonfire consists of extensions that shape the functionality and user experience of each digital space. Communities can enable or disable these extensions to customize their space according to their needs and vision.\n2. **Extensibility**: Developers can create new extensions to expand the capabilities of digital spaces, such as adding new activities or introducing innovative user experiences for existing functions.\n3. **Federation**: Bonfire allows digital spaces to connect and communicate with each other, enabling users to interact across different communities while maintaining their unique identities and preferences.\n4. **Flexibility**: Whether you're an individual developer or part of a larger team, Bonfire provides a flexible framework for building and customizing digital spaces that cater to a wide range of communities and purposes.\n\nBonfire empowers developers and communities to create engaging, customizable, and interconnected digital spaces that foster collaboration, creativity, and social interaction online.","ref":"readme.html#main-features"},{"type":"extras","title":"🔥 Flavours - Bonfire Networks","doc":"This repo includes configurations to run a few main [flavours of Bonfire](https://bonfirenetworks.org/apps/) you can choose from:\n* [Classic](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/classic) for basic social networking (beta)\n* [Community](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/community) with groups and topics functionality (alpha)\n* [Open Science](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/open-science) building the next generation of open science platforms (pre-alpha)\n* [Coordination](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/coordination) for organising work and collaborating around projects and tasks (pre-alpha)\n* [Cooperation](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/cooperation) for cooperative production, distribution, and exchange of economic resources (pre-alpha)\n\n<!-- As well as app flavours being built by others, including: \n* [Haha Academy](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/haha) by haha.academy \n* [Upcycle](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/upcycle) by MSOE \n* [Reflow](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/reflow) by reflowproject.eu and dyne.org -->","ref":"readme.html#flavours"},{"type":"extras","title":"How to get the most out of the documentation - Bonfire Networks","doc":"There are different types of persona who can be interested in reading these docs:\n\n- **Developers**: You'll probably be interested in understanding how to build on Bonfire. The [Installation](/docs/DEPLOY.md) will guide you through the installation of bonfire on your local machine. In the [Just commands](/docs/just-commands.md) page you will gain familiarities with the basic Bonfire Cli commands and the project structure. From there you may want to continue [developing a new extension](/docs/building/create-a-new-extension.md), or learning more about the internalities and the [bonfire architecture](/docs/topics/ARCHITECTURE.md).\n- **Users**: Wheter you are a user who is looking for an existing digital place to join, or want to understand more about how Bonfire works and how to get the most out of it, the [Community Manual](https://bonfirenetworks.org) is a good place to start. There you will learn about how to customize your experience, what boundaries are and how to experience a new and safer way to interact with federated social networks.\n- **Sysadmin & Community moderator**: Ready to launch your digital space? We got you covered on our [Hosting guide](/docs/DEPLOY.md). If you want to dig deeper into how bonfire roles and boundaries work you can read [Bonfire Boundaries](/docs/topics/ARCHITECTURE.md).","ref":"readme.html#how-to-get-the-most-out-of-the-documentation"},{"type":"extras","title":"Prerequisite knowledge - Bonfire Networks","doc":"Bonfire aims to be beginner-friendly, but to keep the documentation focused on the framework's functionalities, we assume a basic understanding of the following technologies:\n\n- **Elixir**: If you're new to Elixir or need a refresher, start with the [Elixir Getting Started guide](https://elixir-lang.org/).\n- **Phoenix/LiveView**: Bonfire's official client is built with Phoenix LiveView. If you're unfamiliar with LiveView, check out the [Phoenix LiveView Getting Started guide](https://hexdocs.pm/phoenix_live_view/Phoenix) or the [Phoenix LiveView - Getting Started video course](https://pragmaticstudio.com/phoenix-liveview) by Pragmatic Studio.\n- **PostgreSQL**: Bonfire uses PostgreSQL as its primary database. Basic knowledge of SQL and PostgreSQL is helpful.\n\nBonfire also provides a [GraphQL API](/docs/topics/GRAPHQL.md) for developers who want to build custom frontends.\n\nThroughout the documentation, we'll make sure to provide links to relevant resources when introducing new concepts to help you along the way. We have a strong affinity for Elixir and believe it's a powerful language for building scalable and maintainable social networks.","ref":"readme.html#prerequisite-knowledge"},{"type":"extras","title":"Join our community - Bonfire Networks","doc":"If you have questions about anything related to Bonfire, you're always welcome to ask our community on [Matrix](https://matrix.to/#/#bonfire-networks:matrix.org), [Slack](https://join.slack.com/t/elixir-lang/shared_invite/zt-2ko4792lz-28XosraCTaYZKOyuZ80hrg), [Elixir Forum](https://elixirforum.com) and the [Fediverse](https://indieweb.social/@bonfire) or send us an email at team@bonfire.cafe.","ref":"readme.html#join-our-community"},{"type":"extras","title":"Copyright and License - Bonfire Networks","doc":"Copyright (c) 2020-2024 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"readme.html#copyright-and-license"},{"type":"extras","title":"Installation","doc":"# Installation\n\n> #### Info {: .info}\n>\n> These instructions are for hacking on Bonfire. If you wish to deploy in production, please refer to our deployment guide instead.\n\n\n\nHello, potential contributor! :-)\n\nThis is a work in progress guide to getting up and running as a developer. Please ask questions in the issue tracker if something is not clear and we'll try to improve it.\n\nHappy hacking!","ref":"hacking.html"},{"type":"extras","title":"Status: beta - have fun and provide feedback 🙏 - Installation","doc":"Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances (meaning not using it for your primary fediverse identity) yet because it's not quite ready for that today.","ref":"hacking.html#status-beta-have-fun-and-provide-feedback"},{"type":"extras","title":"System Requirements - Installation","doc":"- [Just](https://github.com/casey/just#packages): a handy tool (a `make` alternative) to run commands defined in `./justfile`.","ref":"hacking.html#system-requirements"},{"type":"extras","title":"Download - Installation","doc":"Either way, you need to first clone this repository and change into the directory and then do some configuration:\n\n```sh\n$ git clone https://github.com/bonfire-networks/bonfire-app bonfire\n$ cd bonfire\n```","ref":"hacking.html#download"},{"type":"extras","title":"Configure - Installation","doc":"","ref":"hacking.html#configure"},{"type":"extras","title":"Pick a flavour - Installation","doc":"Bonfire is a flexible platform that powers a variety of social networks. The first thing you have to choose is which app (or \"flavour\") you want to hack on:\n\n- `classic` (\"Bonfire Social\", a basic social network that interoperates with the fediverse)\n- `community` (for topics and groups)\n- `open-science` (for next-gen scientific communities)\n- `coordination` (for coordinating around tasks and projects)\n- `cooperation` (for building cooperative economic networks)\n\nNote that at the current time, the core team are focusing most of their efforts on the `classic` flavour and this is where we **recommend** you start.\n\n\nSo for example if you want to run the `classic` flavour run:\n\n```sh\nexport FLAVOUR=classic\n``` \n\nYou may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time (eg. `~/.bashrc` or `~/.zshrc`)","ref":"hacking.html#pick-a-flavour"},{"type":"extras","title":"Choose your development environment - Installation","doc":"You can choose to run bonfire in a variety of ways, from fully managed via docker-compose, to bare metal with local postgres and elixir, to a combination of the two, we also offer the possibility to run Bonfire with nix.\n\n<!-- tabs-open -->","ref":"hacking.html#choose-your-development-environment"},{"type":"extras","title":"Total - Installation","doc":"The entry-way is fully managed via docker-compose, recommended when you're first exploring\n\n#### Dependencies \n\n- Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n- Make sure you've set the environment variable to indicate your choice:\n\n```bash\nexport WITH_DOCKER=total\n```","ref":"hacking.html#total"},{"type":"extras","title":"Easy - Installation","doc":"The easy way consist in using bare-metal elixir, and docker-managed tooling, database & search index, recommended for active development.\n\n> #### Info {: .info}\n>\n> Note: you can use a tool like [mise](https://mise.jdx.dev/) or asdf to setup the environment (run `mise install` in the root directory).\n\n\n#### Dependencies:\n  - Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n  - [yarn](https://yarnpkg.com)\n  - Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n\n- Make sure you've set the env to indicate your choice\n\n```bash\nexport WITH_DOCKER=easy\n```","ref":"hacking.html#easy"},{"type":"extras","title":"Partial - Installation","doc":"The partial way consist in using bare-metal elixir and tooling, and docker-managed database & search index.\n\n> #### Info {: .info}\n>\n> Note: you can use a tool like [mise](https://mise.jdx.dev/) or asdf to setup the environment (run `mise install` in the root directory).\n\n\n#### Dependencies:\n\n- Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n- Recent versions of [Rust](https://www.rust-lang.org/tools/install) and Cargo\n- [yarn](https://yarnpkg.com)\n- Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n\n- Make sure you've set the environment variable to indicate your choice\n\n```bash\nexport WITH_DOCKER=partial\n```","ref":"hacking.html#partial"},{"type":"extras","title":"No Docker - Installation","doc":"> #### Info {: .info}\n>\n> Note: you can use a tool like [mise](https://mise.jdx.dev/) or asdf to setup the environment (run `mise install` in the root directory). You will still need to install Postgres and Meili seperately though.\n\n- Dependencies:\n  - Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n  - Recent versions of [Rust](https://www.rust-lang.org/tools/install) and Cargo\n  - [yarn](https://yarnpkg.com)\n  - Postgres 12+ (or rather [Postgis](https://postgis.net/install/) if using the bonfire_geolocate extension)\n  - [Meili Search](https://docs.meilisearch.com/learn/getting_started/installation.html) (optional)\n\n- If you want search capabilities, you'll also need to setup a Meili server and set the relevant env variables as well.\n\n- Make sure you've set the environment variable to indicate your choice\n\n```bash\nexport WITH_DOCKER=no\n```","ref":"hacking.html#no-docker"},{"type":"extras","title":"The nix way - Installation","doc":"You can also choose to use nix to setup your development environment.\n\n#### Dependencies:\n\n- Run a recent version of Nix or NixOS: https://nixos.org/download.html\n- Enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes\n- Install [direnv](https://direnv.net/) through nix if you don't have the tool already: `nix profile install nixpkgs#direnv` and add it to your shell: https://direnv.net/docs/hook.html\n- Clone the bonfire-app repo if you haven't already and allow direnv to use environment variables:\n  ```bash\n  git clone https://github.com/bonfire-networks/bonfire-app\n  cd `bonfire-app`\n  direnv allow\n  ```\n\nThe tool direnv is necessary for the nix setup as the nix shell environment will use variables defined on `.envrc` to set itself up.\n\nNote: when you run `direnv allow` on the bonfire-app directory for the first time, nix will automatically fetch the dependencies for bonfire. The process will take a while as it's downloading everything needed to use the development environment. Afterwards you will be able to use just fine. Proceeding times you enter the directory, the shell with automatically set up for your use without downloading the packages again.\n\nYou will need to update the db directory which is automatically created by nix the first time you initialized the shell with `direnv allow`. You can do so with the following steps:\n- Update `props.nix` to the settings you want.\n- Run `just nix-db-init` to create the database and user for postgres defined on `props.nix`.\n- Modify the `.env` file to comment out all `POSTGRES_*` variables. These are populated automatically by nix. So if the variables are set here, you may get issues with overriding your settings in `props.nix` when using bonfire.\n- You can now proceed to Hello World!\n\nNote: if you ever want to shut off the postgres server in nix, simply run the nix-db targets in just:\n\n```\n# stop postgres server running locally\njust nix-db stop\n# start postgres server running locally\njust nix-db start\n```\n\n<!-- tabs-close -->","ref":"hacking.html#the-nix-way"},{"type":"extras","title":"Configure - Installation","doc":"Edit the config (especially the secrets) for the current flavour in `./.env`\n\nThe only required config to startup bonfire are the secrets for sessions/cookies (`SECRET_KEY_BASE`, `SIGNING_SALT`, `ENCRYPTION_SALT`), you can generate strings for these by running:\n\n```sh\njust secrets\n```\n\n(You need to manually copy/paste the value on the `.env` file, we will soon automatize this task)\n\n\nThen run `just config` to initialise the needed config.\n\n```sh\njust config\n```","ref":"hacking.html#configure"},{"type":"extras","title":"Light a fire! - Installation","doc":"From a fresh checkout of this repository, this command will fetch the app's dependencies and setup the database (the same commands apply for all three options above):\n\n```\njust setup-dev\n```\n\nThis command will take a while to complete. Soon we will streamiline the setup process to be more lightway, bear with us for the moment.\n\nYou should now be able to run the app with:\n\n```\njust dev\n```\n\nRead more about the available `just` commands in the [`just` commands](./just-commands) page.","ref":"hacking.html#light-a-fire"},{"type":"extras","title":"Onboarding - Installation","doc":"","ref":"hacking.html#onboarding"},{"type":"extras","title":"Getting Started - Installation","doc":"The back-end server runs on port 4000 (TCP) by default. Access it by navigating to http://localhost:4000/ in your web browser.","ref":"hacking.html#getting-started"},{"type":"extras","title":"Creating an Account - Installation","doc":"To create an account, go to http://localhost:4000/signup and enter your email address and password.\nWhen running the server locally, you won't receive a confirmation email. However, you can find the confirmation link in the server logs.\nSearch for a link starting with https://localhost:4000/signup/email/confirm/ in the logs and follow the complete link to confirm your account.","ref":"hacking.html#creating-an-account"},{"type":"extras","title":"Admin Permissions - Installation","doc":"The first user registered on the platform is automatically granted Admin permissions.","ref":"hacking.html#admin-permissions"},{"type":"extras","title":"Successful Onboarding - Installation","doc":"After successfully creating and confirming your account, you should see an empty dashboard.\n\nThat's it! You have now successfully onboarded and can start using the application.","ref":"hacking.html#successful-onboarding"},{"type":"extras","title":"The Bonfire Environment - Installation","doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of conveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back.\n\n- [Architecture](./ARCHITECTURE.md) - an overview of the stack and code structure.\n- [Bonfire-flavoured Elixir](./BONFIRE-FLAVOURED-ELIXIR.md) - an introduction to the way we write Elixir.\n- [Bonfire's Database: an Introduction](./DATABASE.md) - an overview of how our database is designed.\n- [Boundaries](./BOUNDARIES.md) - an introduction to our access control system.\n\nNote: these are still at the early draft stage, we expect to gradually improve documentation over time.","ref":"hacking.html#the-bonfire-environment"},{"type":"extras","title":"Documentation - Installation","doc":"The code is somewhat documented inline. You can generate HTML docs (using `Exdoc`) by running `just docs`.","ref":"hacking.html#documentation"},{"type":"extras","title":"Additional information - Installation","doc":"- `messctl` is a little utility for programmatically updating the .deps files from which the final elixir dependencies list is compiled by the mess script. The only use of it is in the dep-\\* tasks of the Makefile. It is used by some of the project developers and the build does not rely on it.\n\n- `./extensions/` is used to hack on local copies of Bonfire extensions. You can clone an extension from its git repo and use the local version during development, eg: `just dep-clone-local bonfire_me https://github.com/bonfire-networks/bonfire_me`\n\n- `./forks/` is used to hack on local copies of any other dependencies.\n\n- You can migrate the DB when the app is running (also runs automatically on startup): `Bonfire.Common.Repo.migrate`\n\n- You can generate a dependency graph using `just xref-graph` which will generate a DOT file at `docs/` (if Graphviz is installed it will also generate an SVG visualisation using `dot`).","ref":"hacking.html#additional-information"},{"type":"extras","title":"Usage under Windows (WSL, MSYS or CYGWIN) - Installation","doc":"By default, the `justfile` requires symlinks, which can be enabled with the help of [this link](https://stackoverflow.com/a/59761201).\n\nSee the [pull request adding WSL support](https://github.com/bonfire-networks/bonfire-app/pull/111) for details about usage without symlinks.","ref":"hacking.html#usage-under-windows-wsl-msys-or-cygwin"},{"type":"extras","title":"Troubleshooting - Installation","doc":"","ref":"hacking.html#troubleshooting"},{"type":"extras","title":"EACCES Permissions Error - Installation","doc":"If you get a permissions error when following any of the steps, run the following command and it should be fixed:\n\n```shell\ncd bonfire && sudo chown -R yourusername:yourusername .\n```\n\nNote that the command should be modified so your shell is pointing to wherever you have bonfire installed. If you are already in the bonfire directory then you only need to worry about running the `chown` portion of the command.","ref":"hacking.html#eacces-permissions-error"},{"type":"extras","title":"Unable to access Postgres database - Installation","doc":"If you are getting any `:nxdomain` errors, check if you have any firewalls that may be blocking the port on your system.\n\nFor example, if you are running UFW (a lot of Linux distros do), run the following command to allow access to port 4000:\n\n```shell\nsudo ufw allow 4000\n```\n\n### (Mix) Package fetch failed\n\nExample:\n\n```\n** (Mix) Package fetch failed and no cached copy available (https://repo.hex.pm/tarballs/distillery-2.0.12.tar)\n```\n\nIn this case, distillery (as an example of a dependency) made a new release and retired the old release from hex. The new version (`2.0.14`) is quite close to the version we were depending on (`2.0.12`), so we chose to upgrade:\n\n```shell\nmix deps.update distillery\n```\n\nThis respects the version bounds in `mix.exs` (`~> 2.0`), so increment that if required.\n\n### `(DBConnection.ConnectionError) tcp recv: closed`\n\nExample:\n\n```\n** (DBConnection.ConnectionError) tcp recv: closed (the connection was closed by the pool, possibly due to a timeout or because the pool has been terminated)\n```\n\nIn this case, the seeds were unable to complete because a query took too long to execute on your machine. You can configure the timeout to be larger in the `dev` environment:\n\n1. Open `config/dev.exs` in your editor.\n2. Find the database configuration (search for `Bonfire.Common.Repo`).\n3. Add `timeout: 60_000` to the list of options:\n\n```\nconfig :bonfire, Bonfire.Common.Repo,\n  timeout: 60_000,\n  [...]\n```","ref":"hacking.html#unable-to-access-postgres-database"},{"type":"extras","title":"Just commands","doc":"# Just commands\n\nWelcome to this guide on navigating the world of Bonfire development, is crafted especially for people taking their first steps in Bonfire or looking to refine their workflow.","ref":"just-commands.html"},{"type":"extras","title":"General Setup Related Commands - Just commands","doc":"As you dive into developing your own extension or app with the Bonfire framework, you'll quickly encounter an array of dependencies and extensions to deal with. An extension that uses a function or a component from a different extension is not an exception, but rather a common pattern.\n\nThis setup means you might likely soon find yourself contributing to multiple extensions simultaneously. Navigating this landscape can be intimidating at first, but Bonfire provides tools to streamline the process.\n\nThey help you effortlessly synchronize the latest updates across different extensions or efficiently push your updates to all relevant repositories. Understanding these facilities is key to a smooth and productive development experience in the Bonfire ecosystem.\n      \nMost of these tools are driven by [just](https://github.com/casey/just#just) and their code can be seen in the [justfile](https://github.com/bonfire-networks/bonfire-app/blob/main/justfile) (which is quite similar to a `Makefile`). Below is a small selection of the most used commands.\n      \n      \n        \n`just`\n- Print a list of all possible `just` commands a short explanation for each. \n\n`just update`\n- Update the app and all extensions/forks, and run migrations. Use this command to ensure you're in sync with the most recent changes across your development environment. \n\n`just update-app`\n- This command updates the app along with Bonfire extensions located in `./deps`. It's ideal for updating the app while excluding the extensions currently under development located in `./extensions`.\n\n`just dep-clone *[dep]* *[repo]*`\n- Clone a git dependency and use the local version, eg: `just dep-clone-local bonfire_me https://github.com/bonfire-networks/bonfire_me`. Active extensions need to be added in `./config/deps.path` (see [the tutorial on how to fork an extension](/courses/how_to_fork_extension/)). To switch between local and remote dependencies, simply comment or uncomment the corresponding lines in this file.\n\n`just contrib`\n- Push all changes to the app and extensions in `./forks` and `./extensions`.\n\n`just contrib-release`\n- Push all changes to the app and extensions in `./forks`, increment the app version number, and push a new version/release\n\n`just test`\n- Run tests of all extensions, or only specific tests, eg: `just test extensions/bonfire_social` or `just test extensions/bonfire_social/test/social/boosts_test.exs`\n\n`just test-watch *[path]*`\n- Run stale tests, and wait for changes to any module code, and re-run affected tests. \n\n`just test-federation-in-extensions *[path]*`\n- Test federation integration in your extension.","ref":"just-commands.html#general-setup-related-commands"},{"type":"extras","title":"Hosting guide","doc":"# Hosting guide\n\nA short guide to running Bonfire in a production environment and setting up a digital space connected to the fediverse.\n\n> #### Warning {: .warning}\n>\n> Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances yet (meaning not using it for your primary fediverse identity) because it's not quite ready for that today. \n\n\n_These instructions are for setting up Bonfire in production. If you want to run the backend in development, please refer to our [Installation guide](./hacking) instead._","ref":"deploy.html"},{"type":"extras","title":"Security Warning - Hosting guide","doc":"We recommend only granting an account to people you trust to minimise the attack surface. Accordingly, Bonfire ships with public registration disabled. The admin panel has an `invite` facility. \n\n---","ref":"deploy.html#security-warning"},{"type":"extras","title":"Step - 0 - Decide how you want to deploy and manage the app - Hosting guide","doc":"<!-- tabs-open -->","ref":"deploy.html#step-0-decide-how-you-want-to-deploy-and-manage-the-app"},{"type":"extras","title":"Co-op Cloud - Hosting guide","doc":"Install using [Co-op Cloud](https://coopcloud.tech) (recommended) which is an alternative to corporate cloud services built by tech co-ops, and provides handy tools for setting up and managing many self-hosted free software tools using ready-to-use \"recipes\". Very useful if you'd like to host Bonfire alongside other open and/or federated projects.","ref":"deploy.html#co-op-cloud"},{"type":"extras","title":"Docker - Hosting guide","doc":"Install using Docker containers \n  * Option B1 - Using pre-built Docker images (easy mode)\n  * Option B2 - Building your own Docker image (if you want to make code changes or add your own extensions)","ref":"deploy.html#docker"},{"type":"extras","title":"Manual - Hosting guide","doc":"Install without Docker\n\n<!-- tabs-close -->","ref":"deploy.html#manual"},{"type":"extras","title":"Step 1 - Download and configure the app - Hosting guide","doc":"","ref":"deploy.html#step-1-download-and-configure-the-app"},{"type":"extras","title":"Option A - Install using Co-op Cloud (recommended) - Hosting guide","doc":"1. Install [Abra](https://docs.coopcloud.tech/abra/) on your machine\n2. [Set up a server with co-op cloud](https://docs.coopcloud.tech/operators/) \n3. Use the [Bonfire recipe](https://recipes.coopcloud.tech/bonfire) and follow the instructions there. \n4. [Done!](#step-4-run)","ref":"deploy.html#option-a-install-using-co-op-cloud-recommended"},{"type":"extras","title":"Options B and C - Hosting guide","doc":"1. Install dependencies. \nYou may need to install [just](https://github.com/casey/just#packages), and other requirements such as Docker (check the exact list of requirements based on the option you choose in step 2.)\n\n2. Clone this repository and change into the directory:\n\n```sh\ngit clone --depth 1 https://github.com/bonfire-networks/bonfire-app.git bonfire && cd bonfire\n```\n\n3. Specify what flavour you want to run in production:\n\nThe first thing to do is choose what flavour of Bonfire (eg. classic, community, or cooperation) you want to deploy, as each flavour uses different Docker images and set of configs. For example if you want to run the `classic` flavour:\n\n- `export MIX_ENV=prod FLAVOUR=classic` \n\nYou may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time (eg. `~/.bashrc` or `~/.zshrc`)\n\nIf you're not planning on using Docker, you'll also need:\n\n- `export WITH_DOCKER=no`\n\n## Step 2- Prepare the config\n\n* **Option A**: if deploying with co-op cloud, edit the env file at `~/.abra/servers/your_server/your_app.env` instead.\n\n* **Option B and C**: \n- Run `just config` to initialise some default config and then edit the config in the `./.env` file.","ref":"deploy.html#options-b-and-c"},{"type":"extras","title":"Config keys you should pay special attention to: - Hosting guide","doc":"The app needs these environment variables to be configured in order to work.\n\n- `FLAVOUR` should reflect your chosen flavour\n- `HOSTNAME` (your domain name, eg: `bonfire.example.com`)\n- `PUBLIC_PORT` (usually 443)\n- `MAIL_DOMAIN` and `MAIL_KEY` and related keys to configure transactional email, for example set `MAIL_BACKEND=mailgun` and sign up at [Mailgun](https://www.mailgun.com/) and then configure the domain name and key (you may also need to set `MAIL_BASE_URI` if your domain is not setup in EU, as the default `MAIL_BASE_URI` is set as `https://api.eu.mailgun.net/v3`). \n- SMTP is supported as well, through the following env vars \n```\nMAIL_SERVER (smtp domain of the mail server)\nMAIL_DOMAIN (the bit after the @ in your email)\nMAIL_USER\nMAIL_PASSWORD\nMAIL_FROM\nMAIL_PORT (optional)\nMAIL_SSL (optional)\n```\n- `UPLOADS_S3_BUCKET` and the related API key and secret for uploads. WARNING: If you want to store uploads in an object storage rather than directly on your server (which you probably want, to not run out of space), you need to configure that up front, otherwise URLs will break if you change it later. See `config/runtime.exs` for extra variables to set if you're not using the default service and region (which is [Scaleway](https://www.scaleway.com/en/object-storage/) Paris).","ref":"deploy.html#config-keys-you-should-pay-special-attention-to"},{"type":"extras","title":"Secret keys for which you should put random secrets. - Hosting guide","doc":"You can run `just secrets` to generate some for you.\n\n- `SECRET_KEY_BASE`\n- `SIGNING_SALT`\n- `ENCRYPTION_SALT`\n- `POSTGRES_PASSWORD`\n- `MEILI_MASTER_KEY`","ref":"deploy.html#secret-keys-for-which-you-should-put-random-secrets"},{"type":"extras","title":"Further information on config - Hosting guide","doc":"In the `./config/` (which is a symbolic link to the config of the flavour you choose to run) directory of the codebase, there are following config files:\n\n- `config.exs`: default base configuration, which itself loads many other config files, such as one for each installed Bonfire extension.\n- `prod.exs`: default extra configuration for `MIX_ENV=prod`\n- `runtime.exs`: extra configuration which is loaded at runtime (vs the others which are only loaded once at compile time, i.e. when you build a release)\n- `bonfire_*.exs`: configs specific to different extensions, which are automatically imported by `config.exs`\n\nYou should *not* have to modify the files above. Instead, overload any settings from the above files using env variables or in `./.env`. If any settings in the `.exs` config files are not available in env or in the instance settings UI, please open an issue or PR.","ref":"deploy.html#further-information-on-config"},{"type":"extras","title":"Step 3 - Install - Hosting guide","doc":"","ref":"deploy.html#step-3-install"},{"type":"extras","title":"Option A - Install using Co-op Cloud (recommended) - Hosting guide","doc":"Follow the instructions in the coop-cloud recipe readme.","ref":"deploy.html#option-a-install-using-co-op-cloud-recommended"},{"type":"extras","title":"Option B - Install using Docker containers (easy mode) - Hosting guide","doc":"The easiest way to launch the docker image is using the just commands.\nThe `docker-compose.release.yml` uses `config/prod/.env` to launch a container with the necessary environment variables along with its dependencies, currently that means an extra postgres container, along with a reverse proxy (Caddy server, which you may want to replace with nginx or whatever you prefer).\n\nMake sure you have [Docker](https://www.docker.com/), with the [compose](https://docs.docker.com/compose/install/#install-compose) plugin, and [just](https://github.com/casey/just#packages) installed:\n\n```sh\n$ docker version\nDocker Engine - Community - 23.0.1\n\n$ docker compose version\nDocker Compose version v2.16.0\n\n$ just --version\njust 1.13.0\n...\n```\n\nNow that your tooling is set up, you have the choice of using pre-built images or building your own. For example if your flavour does not have a prebuilt image on Docker Hub, or if you want to customise any of the extensions, you can build one yourself - see option B2 below. \n\n#### Option B1 - Using pre-built Docker images (recommended to start with)\n\n- The `image` entry in `docker-compose.release.yml` will by default use the image on Docker Hub which corresponds to your chosen flavour (see step 1 above for choosing your flavour).\n\nYou can see the images available per flavour, version (we currently recommend using the `latest` tag), and architecture at https://hub.docker.com/r/bonfirenetworks/bonfire/tags \n\n- Start the docker containers with docker-compose:\n\n```\njust rel-run\n```\n\nRun this at the prompt: \n\n`bin/bonfire remote` to enter Elixir's iex environment\n`Bonfire.Common.Repo.migrate` to initialise your database\n\nThe backend should now be running at [http://localhost:4000/](http://localhost:4000/).\n\n- If that worked, start the app as a daemon next time:\n\n```\njust rel-run-bg\n```\n\n(Alternatively, `just rel-run-bg db` if you want to run the backend + db but not the web proxy, or `just rel-run-bg db search` if you want to run the full-text search index.)\n\n#### Docker-related handy commands\n\n- `just update` to update to the latest release of Bonfire \n- `just rel-run`                        Run the app in Docker, in the foreground\n- `just rel-run-bg`                     Run the app in Docker, and keep running in the background\n- `just rel-stop`                       Stop the running release\n- `just rel-shell`                      Runs a simple shell inside of the container, useful to explore the image \n\nOnce in the shell, you can run `bin/bonfire` with the following commands:\nUsage: `bonfire COMMAND [ARGS]`\n\nThe known commands are:\n- `start`          Starts the system\n- `start_iex`      Starts the system with IEx attached\n- `daemon`         Starts the system as a daemon\n- `daemon_iex`     Starts the system as a daemon with IEx attached\n- `eval \"EXPR\"`    Executes the given expression on a new, non-booted system\n- `rpc \"EXPR\"`     Executes the given expression remotely on the running system\n- `remote`         Connects to the running system via a IEx remote shell\n- `restart`        Restarts the running system via a remote command\n- `stop`           Stops the running system via a remote command\n- `pid`            Prints the operating system PID of the running system via a remote command\n- `version`        Prints the release name and version to be booted\n\nThere are some useful database-related release tasks under `EctoSparkles.Migrator.` that can be run in an `iex` console (which you get to with `just rel.shell` followed by `bin/bonfire remote`, assuming the app is already running):\n\n- `migrate` runs all up migrations\n- `rollback(step)` roll back to step X\n- `rollback_to(version)` roll back to a specific version\n- `rollback_all` rolls back all migrations back to zero (caution: this means losing all data)\n\nYou can also directly call some functions in the code from the command line, for example:\n- to migrate: `docker exec bonfire_web bin/bonfire rpc 'Bonfire.Common.Repo.migrate'`\n- to just yourself an admin: `docker exec bonfire_web bin/bonfire rpc 'Bonfire.Me.Users.make_admin(\"my_username\")'`\n\n#### Option B2 - Building your own Docker image\n\n`Dockerfile.release` uses the [multistage build](https://docs.docker.com/develop/develop-images/multistage-build/) feature to just the image as small as possible. It generates the OTP release which is later copied into the final image packaged in an Alpine linux container.\n\nThere is a `justfile` with relevant commands (make sure set the `MIX_ENV=prod` env variable):\n\n- `just rel-build-release` which builds the docker image of the latest release\n- `just rel-build` which builds the docker image, including local changes to any cloned extensions in `./extensions/` \n- `just rel-tag` adds the \"latest\" tag to your last build, so that it will be used when running\n\nOnce you've built and tagged your image, you may need to update the `image` name in `docker-compose.release.release.yml` to match (either your local image name if running on the same machine you used for the build, or a remote image on Docker Hub if you pushed it) and then follow the same steps as for option A1.\n\nFor production, we recommend to set up a CI workflow to automate this, for an example you can look at the one [we currently use](../github/workflows/release.yaml).\n\n---","ref":"deploy.html#option-b-install-using-docker-containers-easy-mode"},{"type":"extras","title":"Option C - Manual installation (without Docker) - Hosting guide","doc":"#### Dependencies\n\n- Postgres (or Postgis) version 12 or newer\n- [just](https://github.com/casey/just#packages)\n- Elixir version 1.15+ with OTP 25+. If your distribution only has an old version available, check [Elixir's install page](https://elixir-lang.org/install.html) or use a tool like [mise](https://github.com/jdx/mise) (run `mise install` in this directory) or asdf.\n\n1. Building the release\n\n- Make sure you have erlang and elixir installed (check `Dockerfile` for what version we're currently using)\n\n- `export WITH_DOCKER=no` OR add `WITH_DOCKER=no` to the end of `.env` and source it with `source .env`\n\n- Run `just rel-build` to create an elixir release. This will create an executable in your `_build/prod/rel/bonfire` directory. Note that you will need `just` to pass in the `.env` file to the executable, like so: `just cmd _build/prod/rel/bonfire/bin/bonfire  `. Alternatively, this file can be sourced by `source .env` instead. We will be using the `bin/bonfire` executable as called from `just` from here on. \n\n2. Running the release\n\n- Create a database, and a user, fill out the `.env` with your credentials and secrets\n\n- You will need to use `just` in order to pass the `.env` file to the executable. This can be accomplished by running `just cmd _build/prod/rel/bonfire/bin/bonfire  `. Just works from the root directory of the `justfile`, not your current directory.\n\n- If you’re using RDS or some other locked down DB, you may need to run `CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;` on your database with elevated privileges.\n\n- You can check if your instance is configured correctly and get to the iex console by running `bin/bonfire start`\n\n- The migrations should automatically run on first boot, but if you run into troubles the migration command is: `Bonfire.Common.Repo.migrate()` in the iex console. \n\n- To run the instance as a daemon, use `bin/bonfire start daemon`.\n\n---","ref":"deploy.html#option-c-manual-installation-without-docker"},{"type":"extras","title":"Option D - with Nix - Hosting guide","doc":"This repo is a Flake and includes a Nix module.\n\nHere are the detailed steps to deploy it:\n\n- run a recent version of Nix or NixOS: https://nixos.wiki\n- enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes\n- add `sandbox = false` in your nix.conf\n- fetch and build the app and dependencies: `nix run github:bonfire-networks/bonfire-app start_iex`\n- add it as an input to your system flake.\n- add an overlay to just the package available\n- add the required configuration in your system\n\nYour `flake.nix` file would look like the following. Remember to replace `myHostName` with your actual hostname or however your deployed system is called.\n\n```nix\n{\n  inputs.bonfire.url = \"github:bonfire-networks/bonfire-app/main\";\n  outputs = { self, nixpkgs, bonfire }: {\n    overlay = final: prev: with final;{\n      # a package named bonfire already exists on nixpkgs so we put it under a different name\n      elixirBonfire = bonfire.packages.x86_64-linux.default;\n    };\n    nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem {\n      system = \"x86_64-linux\";\n      modules = [\n        {\n          environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ];\n          nixpkgs.overlays = [ self.overlay ];\n        }\n        ./myHostName.nix\n        bonfire.nixosModules.bonfire\n      ];\n    };\n  };\n}\n```\n\nThen your `myHostName.nix` would look like the following:\n\n```nix\n{ config, lib, pkgs, ... }:\n\n{\n  services.bonfire = {\n    # you will additionally need to expose bonfire with a reverse proxy, for example caddy\n    port = 4000;\n    package = pkgs.elixirBonfire;\n    dbName = \"bonfire\";\n    # the environment should contain a minimum of\n    #   SECRET_KEY_BASE\n    #   SIGNING_SALT\n    #   ENCRYPTION_SALT\n    #   RELEASE_COOKIE\n    # have a look into nix/module.nix for more details\n    # the way to deploy secrets is beyond this readme, but I would recommend agenix\n    environmentFile = \"/run/secrets/bonfireEnv\";\n    dbSocketDir = \"/var/run/postgresql\";\n  };\n\t\n\t# this is specifically for a reverse proxy, which is primarily used for SSL certs\n\tservices.ngnix = {\n\t\tenable = true;\n\t\tforceSSL = true;\n\t\tenableACME = true;\n\t\tvirtualHosts.\"myHostName\".locations.proxyPass = \"http://localhost:4000\";\n\t};\n\t\n\t# You will need to accept ACME's terms and conditions if you haven't elsewhere in your configuration\n\tsecurity.acme.defaults.email = \"you@myHostName.com\";\n\tsecurity.acme.acceptTerms = true;\n\n  # this is uniquely for database backup purposes\n  # replace myBackupUserName with the user name that will do the backups\n  # if you want to do backups differently, feel free to remove this part of the config\n  services.postgresql = {\n    ensureDatabases = [ \"bonfire\" ];\n    ensureUsers = [{\n      name = \"myBackupUserName\";\n      ensurePermissions = { \"DATABASE bonfire\" = \"ALL PRIVILEGES\"; };\n    }];\n  };\n}\n```","ref":"deploy.html#option-d-with-nix"},{"type":"extras","title":"Step 4 - Run - Hosting guide","doc":"By default, the backend listens on port 4000 (TCP), so you can access it on http://localhost:4000/ (if you are on the same machine). In case of an error it will restart automatically.\n\nOnce you've signed up, you will automatically be an instance admin if you were the first to register.\n\n> NOTE: If you are running in a restricted environment such as Amazon RDS, you will need to execute some sql against the database before migrations can run: `CREATE EXTENSION IF NOT EXISTS citext;`\n\n\n#### Step 5 - Adding HTTPS\n\nThe common and convenient way for adding HTTPS is by using a reverse proxy like Nginx or Caddyserver (the latter of which is bundled as part of the docker compose setup).\n\nCaddyserver and other servers can handle generating and setting up HTTPS certificates automatically, but if you need TLS/SSL certificates for nginx, you can look get some for free with [letsencrypt](https://letsencrypt.org/). The simplest way to obtain and install a certificate is to use [Certbot.](https://certbot.eff.org). Depending on your specific setup, certbot may be able to get a certificate and configure your web server automatically.\n\nIf you've built from source, you should point the nginx root directory to be `_build/prod/rel/bonfire/lib/bonfire-[current-version]/priv/static`","ref":"deploy.html#step-4-run"},{"type":"extras","title":"Admin tools - Hosting guide","doc":"- LiveDashboard for viewing real-time metrics and logs at `/admin/system/`\n- Oban logs for viewing queued jobs (e.g. for processing federated activities) `/admin/system/oban_queues`\n- LiveAdmin for browsing data in the database at `/admin/system/data`\n- Orion for dynamic distributed performance profiling at `/admin/system/orion`\n- Web Observer as an alternative way to view metrics at `/admin/system/wobserver`","ref":"deploy.html#admin-tools"},{"type":"extras","title":"Troubleshooting - Hosting guide","doc":"Some common issues that may arise during deployment and our suggestions for resolving them.\n\n#### WebSocket connections not establishing behind a reverse proxy\n\nIf you are running Bonfire behind your own reverse proxy (e.g. nginx), you might experience issues with WebSocket connections not establishing. WebSocket connections require specific configuration to work, in nginx the following configuration is necessary for websockets to work:\n\n```\nlocation /live/websocket {\n    proxy_pass http://127.0.0.1:4000;\n    \n    # these configurations are necessary to proxy WebSocket requests\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n}\n```","ref":"deploy.html#troubleshooting"},{"type":"extras","title":"Bonfire Changelog","doc":"# Bonfire Changelog\n\n## [0.3.5-beta (2022-09-23)]","ref":"changelog.html"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Coordination MVP [#445](https://github.com/bonfire-networks/bonfire-app/issues/445) by mayel & ivanminutillo\n- UI to enable/disable extensions in settings [#448](https://github.com/bonfire-networks/bonfire-app/issues/448) \n- Static page generator [#444](https://github.com/bonfire-networks/bonfire-app/issues/444) \n- Publish creation of sub-topic in the topic's feed [#439](https://github.com/bonfire-networks/bonfire-app/issues/439) by mayel","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Refactor navs/sidebars to use dynamic navigation & widgets provided by extensions [#447](https://github.com/bonfire-networks/bonfire-app/issues/447)","ref":"changelog.html#changed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- When I reply to a task, the activity in the feed does not show the parent activity [#449](https://github.com/bonfire-networks/bonfire-app/issues/449) \n- Use same composer for create post / topic / create a new list / create task\n\n## [0.3.4-beta.8 (2022-08-26)]","ref":"changelog.html#other"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Remember position in timeline [#392](https://github.com/bonfire-networks/bonfire-app/issues/392) by mayel\n- Should be able to click on a notification to see the related activity [#412](https://github.com/bonfire-networks/bonfire-app/issues/412) by mayel\n- Actions when someone clicks on follow/boost/like/reply buttons on a profile or feed while logged out [#441](https://github.com/bonfire-networks/bonfire-app/issues/441) \n- Combine duplicate posts [#396](https://github.com/bonfire-networks/bonfire-app/issues/396) by mayel","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- User preferences missing a consistent UX structure [#430](https://github.com/bonfire-networks/bonfire-app/issues/430) \n- Bug: pop-ups from compose box are hidden if close to edge [#394](https://github.com/bonfire-networks/bonfire-app/issues/394) \n- reset the CW field after posting [#378](https://github.com/bonfire-networks/bonfire-app/issues/378) \n- On mobile, there should be an obvious way to reply to a single post when viewing it by itself [#371](https://github.com/bonfire-networks/bonfire-app/issues/371) \n- Alerts and feedback messages need to adopt a solid pattern [#305](https://github.com/bonfire-networks/bonfire-app/issues/305)","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- i can't see what i'm typing past a certain amount of text. Like rivht now i dont' see what i'm typing. Might be some typos then^^ [#425](https://github.com/bonfire-networks/bonfire-app/issues/425) \n- Bug: When you switch user it *sometimes* stays on the switch user page [#377](https://github.com/bonfire-networks/bonfire-app/issues/377) by mayel","ref":"changelog.html#fixed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- Make push notification system more solid [#180](https://github.com/bonfire-networks/bonfire-app/issues/180) \n- Test/fix/improve graceful degradation (usage without JS, or without a LiveView websocket, i.e. when logged out) [#365](https://github.com/bonfire-networks/bonfire-app/issues/365) by mayel\n- use @prop in Surface views/components instead of e(assigns, :prop, default) and declare defaults in props or mount/1 [#414](https://github.com/bonfire-networks/bonfire-app/issues/414) \n\n\n## [0.3.4-beta.6 (2022-08-19)]","ref":"changelog.html#other"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- 3 options for smart input (sidebar, modal, floating) and improve responsive (modal on small screens) [#443](https://github.com/bonfire-networks/bonfire-app/issues/443) \n- Improve feeds async loading [#437](https://github.com/bonfire-networks/bonfire-app/issues/437) by mayel\n- Improve media/link attachments [#440](https://github.com/bonfire-networks/bonfire-app/issues/440)","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- Show and count only local users in user directory [#438](https://github.com/bonfire-networks/bonfire-app/issues/438) by mayel\n\n## [0.3.4 (2022-08-09)]","ref":"changelog.html#fixed"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Define & implement granular role & permission system for instance administration and moderation [#406](https://github.com/bonfire-networks/bonfire-app/issues/406) \n\n## [0.3.3 (2022-08-02)]","ref":"changelog.html#added"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Define & implement granular role & permission system for instance administration and moderation [#406](https://github.com/bonfire-networks/bonfire-app/issues/406) \n\n## [0.3.2 (2022-07-30)]","ref":"changelog.html#added"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Pagination topics list & feeds within topics [#431](https://github.com/bonfire-networks/bonfire-app/issues/431) \n- Check boundaries of a topic when tagging and if allowed auto-boost the tagged object in the topic's outbox [#428](https://github.com/bonfire-networks/bonfire-app/issues/428) \n- Show followed topics on a list [#424](https://github.com/bonfire-networks/bonfire-app/issues/424) \n- Topic settings [#423](https://github.com/bonfire-networks/bonfire-app/issues/423) \n- Topic activity preview [#422](https://github.com/bonfire-networks/bonfire-app/issues/422) \n- Browse topics [#421](https://github.com/bonfire-networks/bonfire-app/issues/421) \n- Tag something (eg. post/user) with a topic at any time (depending on boundaries) [#416](https://github.com/bonfire-networks/bonfire-app/issues/416) \n- Tag a post with a topic when writing a new post (or reply) [#415](https://github.com/bonfire-networks/bonfire-app/issues/415) \n- CRUD topics [#410](https://github.com/bonfire-networks/bonfire-app/issues/410) \n- Create a users directory [#159](https://github.com/bonfire-networks/bonfire-app/issues/159)","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Optimise LiveView rendering [#426](https://github.com/bonfire-networks/bonfire-app/issues/426) \n- Allow us to scroll from anywhere [#391](https://github.com/bonfire-networks/bonfire-app/issues/391)","ref":"changelog.html#changed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- Add unique key to encircle [#248](https://github.com/bonfire-networks/bonfire-app/issues/248) \n- Database Question [#3](https://github.com/bonfire-networks/activity_pub/issues/3) \n- Being able to change activity type from the composer [#429](https://github.com/bonfire-networks/bonfire-app/issues/429) \n- use created and extra_info mixins on Category [#433](https://github.com/bonfire-networks/bonfire-app/issues/433) \n- check boundaries for edit and archive topic [#434](https://github.com/bonfire-networks/bonfire-app/issues/434)","ref":"changelog.html#other"},{"type":"extras","title":"0.3.1-beta.9 (2022-07-22) - Bonfire Changelog","doc":"","ref":"changelog.html#0-3-1-beta-9-2022-07-22"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- BUG:Responsive, navigation goes under the mobile bottom tab [#420](https://github.com/bonfire-networks/bonfire-app/issues/420) by ivanminutillo","ref":"changelog.html#fixed"},{"type":"extras","title":"0.3.1-beta (2022-07-19) - Bonfire Changelog","doc":"","ref":"changelog.html#0-3-1-beta-2022-07-19"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Circles & flexible boundaries [#223](https://github.com/bonfire-networks/bonfire-app/issues/223) by mayel & ivanminutillo\n- Compose box at the bottom of the screen as an alternative to the standard microblogging input box [#419](https://github.com/bonfire-networks/bonfire-app/issues/419) \n- \"Compact layout\" in user preferences [#418](https://github.com/bonfire-networks/bonfire-app/issues/418) \n- Fetch metadata of links included in a post and show previews (of images, videos, etc) in feeds [#314](https://github.com/bonfire-networks/bonfire-app/issues/314)","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Pasting images into the editor should upload them [#411](https://github.com/bonfire-networks/bonfire-app/issues/411) \n- Bug: When starting from the feed page, clicking back would exit the site [#400](https://github.com/bonfire-networks/bonfire-app/issues/400) \n- /write page was missing the boundary selector [#398](https://github.com/bonfire-networks/bonfire-app/issues/398) \n- Keep me logged in [#395](https://github.com/bonfire-networks/bonfire-app/issues/395) \n- Font size is too small in compose window [#388](https://github.com/bonfire-networks/bonfire-app/issues/388) \n- UI: moved topbar in the header to sidebar [#362](https://github.com/bonfire-networks/bonfire-app/issues/362) \n- Improved responsive UI for use on small screens","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- Bug: some notifications / live feed updates were making all other activities in the feed disappear [#383](https://github.com/bonfire-networks/bonfire-app/issues/383) by mayel\n- Bug: followed/followers pages remained empty despite having followed people [#373](https://github.com/bonfire-networks/bonfire-app/issues/373) by mayel\n- Bug: followed activity missing the person (in main feeds) [#372](https://github.com/bonfire-networks/bonfire-app/issues/372) by mayel\n- Bug: follow notification clears the home feed except for the \"new follow\" post [#366](https://github.com/bonfire-networks/bonfire-app/issues/366) by mayel\n- Bug: images attached to a post should appear in the feed [#364](https://github.com/bonfire-networks/bonfire-app/issues/364)","ref":"changelog.html#fixed"},{"type":"extras","title":"Project structure","doc":"# Project structure\n\nTODO","ref":"project-structure.html"},{"type":"extras","title":"What is a Bonfire extension","doc":"# What is a Bonfire extension\n\nExtensions in Bonfire are collections of code that introduce new features and enhance the platform's functionality, or explore a different user experience for an existing feature.\n\nThey can range from adding entirely new pages, such as [bonfire_invite_links]() which lets admins create and share invites with usage limit and expiration date, to implementing specific components or widgets.\nAn example is [bonfire_editor_milkdown](), which integrates a markdown-first editor for publishing activities.\n\nExtensions are versatile, they can implement their own schema, database, logic, and components, or they can leverage existing fields, context functions, and UI components, or more commonly, a combination of both.","ref":"extensions-overview.html"},{"type":"extras","title":"Using extensions - What is a Bonfire extension","doc":"In order to make changes to extensions, you need to clone them locally. As you may imagine, we have a `just` command for that.\n\n```\njust dep-clone-local **[extension name]** **[extension url]**\n```\n\nThis command (eg. `just dep-clone-local bonfire_ui_social https://github.com/bonfire-app/bonfire_ui_social`) will create a local copy of the extension in `./extensions/bonfire_ui_social`.\n\nIf the extension is enabled locally, you will see an entry in `config/deps.flavour.path` with the path to the local extension: \n\n```\nbonfire_ui_social = \"extensions/bonfire_ui_social\"\n```\n\nIf you want to disable the extension, you can remove the entry from `config/deps.flavour.path`\n\n> #### Info {: .info}\n>\n> `config/deps.flavour.path` is a symlink of the file `flavours/[flavour]/deps.flavour.path`. Ensure this file exist in the flavour you are working on, or create one to begin use your extensions locally.\n\n\nWhen the extension is enabled, Bonfire will use the code in `extensions/` instead of the one in `deps/`.\n\nWe will dive more into the creation and the lifecycle of extensions in the next sections.","ref":"extensions-overview.html#using-extensions"},{"type":"extras","title":"Extension helpers - What is a Bonfire extension","doc":"Given Bonfire modularity, you will likely find yourself combining functions from several extensions when using the framework.\nA significant portion of its codebase is included in extensions, each serving specific purposes.\nMoreover, extensions often utilise code from other extensions.\nFor instance, [bonfire_common](https://github.com/bonfire-networks/bonfire_common) and [bonfire_ui_common](https://github.com/bonfire-networks/bonfire_ui_common) provide a suite of helpers to ease a good amount of tasks.\n\nWhen using extensions functions, we need a way to ensure the app will not break if the extension is not enabled.\n\nBonfire provides a few built-in components that allows users to optionally inject components or functions from different extensions.\n\n`Bonfire.Common.Utils.maybe_apply`\n\n- Helpers for calling hypothetical functions in other modules. Returns the result of calling a function with the given arguments, or the result of fallback function if the primary function is not defined (by default just logging an error message).\n\n```elixir\nBonfire.Common.Utils.maybe_apply(Bonfire.Social.Graph, :maybe_applications, [],\n          fallback_return: []\n        )\n```\n\n`Bonfire.UI.Common.Modular.StatefulComponent`\n\n- A built-in component that allows users to optionally inject dynamic live components into a Surface template.\n  Based on `Surface.Components.Dynamic.LiveComponent` to which it adds the ability to check if a module is enabled and even to swap it out for another in settings.\n\n```elixir\n \n```\n\n`Bonfire.UI.Common.Modular.StatelessComponent`\n\n- A built-in component that allows users to optionally inject dynamic functional components into a Surface template.\n  Based on `Surface.Components.Dynamic.Component` to which it adds the ability to check if a module is enabled and even to swap it out for another in settings.\n\n```elixir\n \n```","ref":"extensions-overview.html#extension-helpers"},{"type":"extras","title":"Routing","doc":"# Routing\n\nThe Bonfire routing system provides a modular and extensible way to define routes for different parts of your application. \nIt allows developers to include routes directly from their extensions based on their availability and configuration. \nThe routes are organized into pipelines and scopes to handle authentication and authorization requirements.\n\nThe Router module is declared in the [router.ex](https://github.com/bonfire-networks/bonfire_spark/blob/main/lib/web/router.ex) file in the [bonfire_spark](https://github.com/bonfire-networks/bonfire_spark) extension.\n\nThe `Bonfire.Web.Router.Routes` module defines all the routes for active Bonfire extensions that will be included in the Bonfire app. It also includes routes for GraphQl and AcitvityPub specific endpoints.\n\n\nIn order to add a new route to Bonfire, you need to create a Routes module in your extension. It is usually named as `Project.ExtensionName.Web.Routes` eg. [Bonfire.UI.Social.Routes](https://github.com/bonfire-networks/bonfire_social/blob/main/lib/bonfire_social_web/routes.ex)\n\nThe Routes file follows the standard Phoenix/Liveview syntax and structure.","ref":"routing.html"},{"type":"extras","title":"Add a new route - Routing","doc":"To add a new routes to the Router, you need to add include it to the main Router. \n\nYou need to clone and enable `bonfire_spark` locally.\n\n> #### Info {: .info}\n>\n> You need a workaround to be able to enable bonfire_spark locally. We have an open issue about it. You need to clone or rename the extesion from bonfire_spark to bonfire in your extensions folder and subsequentally rename it as bonfire in your deps.flavour.path file.\n\nOnce you have bonfire_spark enabled locally, include your new extension router with `use_if_enabled(Project.ExtensionName.Web.Routes)` in the [Bonfire.Web.Router.Routes](https://github.com/bonfire-networks/bonfire_spark/blob/main/lib/web/router.ex) file.","ref":"routing.html#add-a-new-route"},{"type":"extras","title":"Create a new extension","doc":"# Create a new extension\n    \nExtensions in Bonfire are powerful tools that allow you to extend the functionality and features of your application.\nThis guide is perfect for developers who are looking to contribute new features or capabilities to the Bonfire ecosystem.\nBy the end of this page, you should have a solid understanding of how to develop and integrate a new extension in Bonfire, leveraging its modular architecture.","ref":"create-a-new-extension.html"},{"type":"extras","title":"Create your Bonfire extension - Create a new extension","doc":"To start building your own extension, you can utilise our custom mix generator task. Simply navigate to the Bonfire app root folder in your terminal and type:\n        \n```\nmix extension.new *your_extension_name*\n```\n\nThis command creates a new directory in `./extensions` named `*your_extension_name*`, complete with all the necessary files and scaffolding.\nOnce your extension folder is set up, you're ready to dive into coding. If your extension includes new pages, you need to link them in the main router. To do this, include `use_if_enabled(Bonfire.ExtensionTemplate.Web.Routes)` within your app's Router module.\n\n> #### Info {: .info}\n>\n> The Bonfire main router lives in bonfire_spark extension. Refer to the [Routing](/docs/building/routing/) page to learn how to add new routes.\n\nAdditionally, consider these steps to enhance your extension:\n\n- Implement extension-specific fake functions for testing purposes.\n- Create extension-specific database migrations.\n- Add dependencies to deps.git and/or deps.hex.\n        \n        \n Simultaneously, begin tracking your extension’s development with Git. Initialize a new Git repository directly within your extension’s directory:\n        \n```\ngit init    \n```\nAfter coding your initial features, create an empty repository on your preferred Git platform. Then, commit and push your local changes to make your work accessible and open for collaboration:\n\n```\ngit add .\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin {your-remote-repository}\ngit push -u origin main\n```\n\nRemember to add your extension to `./config/deps.git` (including the branch name), allowing others without access to your fork to utilise it and to `.config/deps.flavour.path` to enable it locally.\nAnd just like that, you've successfully created and prepared your first Bonfire extension and shared with the community 🔥!","ref":"create-a-new-extension.html#create-your-bonfire-extension"},{"type":"extras","title":"Make changes to an extension","doc":"# Make changes to an extension\n  \nThis tutorial guides you through the process of editing an existing Bonfire extension. We'll cover how to clone, enable, and contribute to an extension, ensuring you can test and implement your changes effectively.\nIdeal for developers looking to modify and enhance Bonfire's functionalities.\nBy the end, you'll be adept at including and working with extensions in the Bonfire development environment.\n\n      \nIn Bonfire, in order to edit an existing extension and test the changes you need to set up the extension in your development environment. The process is quite straightforward:","ref":"edit-an-existing-extension.html"},{"type":"extras","title":"Fork the extension - Make changes to an extension","doc":"If you want to share your changes to the extension, you may want to first fork it on Github.\n\nUse `just dep-clone-local *[dep]* *[repo]*` to clone an extension from its Git repository. Replace  dep  with the extension name and  repo  with the full URL of your fork. The cloned extension will be cloned in `./extensions`:\n       \n```\njust dep-clone-local bonfire_social https://github.com/bonfire-networks/bonfire_social\n```","ref":"edit-an-existing-extension.html#fork-the-extension"},{"type":"extras","title":"Enable the extension - Make changes to an extension","doc":"After cloning, choose to use the local version by editing `./config/deps.flavour.path` (create the file in the `./flavours/[flavour]/config/` directory if it doesn’t exist). \nThe format to follow is the following: `dep_name = \"dep_path\"`.\nTo disable a local extension, comment or delete its line in `./config/deps.flavour.path`.\nUse just dev to run the app with changes hot-reloading.\n\n```\n# ./config/deps.flavour.path\nbonfire_me = \"./extensions/bonfire_me\"\n# bonfire_boundaries = \"./extensions/bonfire_boundaries\" # disabled local copy\n```","ref":"edit-an-existing-extension.html#enable-the-extension"},{"type":"extras","title":"Make and test your changes - Make changes to an extension","doc":"You can now make your edits to the `./extensions`, run the app with `just dev` and run tests with `just test-watch`.","ref":"edit-an-existing-extension.html#make-and-test-your-changes"},{"type":"extras","title":"Push changes - Make changes to an extension","doc":"You can push your changes remotely, use Bonfire's helpers like `just contrib` if you need to commit files that belong to multiple extensions or `just update-dep *dep*` for a specific one (e.g.` just update-dep bonfire_me`).","ref":"edit-an-existing-extension.html#push-changes"},{"type":"extras","title":"Great works 🎉🎉🎉 - Make changes to an extension","doc":"You're now equipped to contribute to Bonfire extensions, enhancing the framework's capabilities. You can do so by opening a PR on Github from your forked extension. Your contributions are vital to the Bonfire community, and we encourage you to keep exploring and improving the project.","ref":"edit-an-existing-extension.html#great-works"},{"type":"extras","title":"Create a new page","doc":"# Create a new page\n\nTODO","ref":"create-a-new-page.html"},{"type":"extras","title":"Add a new widget","doc":"# Add a new widget\n\nWidgets are reusable components that encapsulate data and provide context-specific information to users based on the pages they are currently visiting. They are typically placed in the right sidebar ( refers to the [Design Guidelines](topics/design_guidelines.md) section to learn more about Bonfire user experience), and developers can define which widgets should appear on each page and in what order. \n\nDevelopers can include options for users to enable, disable, or rearrange the order of widgets when possible.\n\nA widget usually consists of a title and data formatted in various ways, such as links, data visualizations, actions, or information fetched from third-party apps. In this section, we will create a new widget that utilizes the user's location (if provided) and the [bonfire_geolocate](https://github.com/bonfire-networks/bonfire_geolocate) library to obtain the correct coordinates. These coordinates will then be used to retrieve the location's weather information using an external library. Additionally, we will create a setting that allows users to optionally include the widget on their profile.\n\nThis example is simple yet meaningful because it touches upon different parts of the Bonfire framework during the tutorial. The code for this widget is available [here](https://github.com/bonfire-networks/bonfire_geolocate/tree/main/lib/web/components/widgets).\n\n![weather widget](https://i.imgur.com/S6OaPGg.png)","ref":"add-a-new-widget.html"},{"type":"extras","title":"Let’s code! - Add a new widget","doc":"The first step is to identify the most appropriate extension for this widget. In this case, we can include the widget in the `bonfire_geolocate` extension, which already handles all the necessary logic for dealing with geolocations.\n\nWidgets are typically included in `lib/web/components/widgets`. Bonfire uses Surface on the frontend, so we'll create two files:\n\n- `widget_forecast_live.ex`\n- `widget_forecast_live.sface`\n\nThis forecast widget is a stateless component, meaning it won't handle any internal state. Therefore, the `widget_forecast_live.ex` code will be quite basic:\n\n```elixir\ndefmodule Bonfire.Geolocate.WidgetForecastLive do\n  use Bonfire.UI.Common.Web, :stateless_component\n\n  prop location, :string, default: nil\nend\n\n```\n\nWe use `:stateless_component`, a [function](https://github.com/bonfire-networks/bonfire_ui_common/blob/main/lib/web.ex#L543) that wraps the `Surface.Component` and includes a list of [helpers](https://github.com/bonfire-networks/bonfire_ui_common/blob/main/lib/web.ex#L575) widely used across most components.\n\nSince we want to include the widget on the user profile, we can gather the location data from there, so we define the `location` prop.\n\nWidgets are wrapped in a [WidgetBlockLive](https://github.com/bonfire-networks/bonfire_ui_common/blob/main/lib/components/widgets/widget_block_live.ex) component that takes care of injecting a style and the basic prop as the title. The initial implementation of our `widget_forecast_live.sface` looks like this:\n\n```elixir\n \n  hello world\n \n\n```\n\nTo see our widget, we need to include it in a page. Widgets are included in our right sidebar and are defined within a prop called `sidebar_widgets`, which is a list that includes guest and user lists (respectively, the widgets to show when the user is visiting a page while not logged in or when the user is logged in).\n\nWe'll include our widget in the logged list, specifying it is in the secondary widget section. The final look of our `sidebar_widget` prop looks like this:\n\n```elixir\nsidebar_widgets = [\n  users: [\n    secondary: [\n      Bonfire.Geolocate.WidgetForecastLive, [location: \"Naples, Italy\"]\n    ]\n  ]\n]\n\n```\n\nWe'll include our widget in the user profile page, located in the [Bonfire.UI.Me](https://github.com/bonfire-networks/bonfire_ui_me) extension, a library that deals with all the views related to user profiles and settings.\n\nThe `Bonfire.UI.Me.ProfileLive` [mount function](https://github.com/bonfire-networks/bonfire_ui_me/blob/main/lib/views/profile/profile_live.ex#L34) looks like:\n\n```elixir\n  def mount(_params, _session, socket) do\n    {:ok,\n     socket\n     |> assign(LiveHandler.default_assigns(is_nil(current_user_id(socket.assigns))))}\n  end\n\n```\n\nThe `default_assigns` function includes data needed for dealing with multiple kinds of interactions and permissions. It also fetches the user from the database and ensures all the data is loaded correctly. The location data is fetched in [profiles_live_handler.ex:95](https://github.com/bonfire-networks/bonfire_ui_me/blob/main/lib/live_handlers/profiles_live_handler.ex#L95), and the widget is included in [profiles_live_handler.ex:274](https://github.com/bonfire-networks/bonfire_ui_me/blob/main/lib/live_handlers/profiles_live_handler.ex#L274).","ref":"add-a-new-widget.html#let-s-code"},{"type":"extras","title":"Adding Settings - Add a new widget","doc":"To ensure the user can decide whether they want to include the widget when visiting any user page, we're creating a new setting that optionally shows the widget based on user input.\n\nIn `profiles_live_handler.ex:274`, the widget is preceded by `weather_widget_enabled`, a boolean that controls whether the widget should be displayed or not. It makes use of the `Settings.get` function. You can learn more about defining and returning settings in our [Add an Extension Settings](/building/add-an-extension-settings.md) section.\n\nWe're adding the settings in the [edit_profile_info_live.sface](https://github.com/bonfire-networks/bonfire_ui_me/blob/main/lib/components/settings/profile/edit_profile_info_live.sface#L99) component (we may later refactor this to add the setting in the defined extension, but this is still a work in progress):\n\n```elixir\n \n     \n   \n\n```\n\nAt this point, we should be able to see our basic weather widget on our profile page and decide to switch it on and off.\n\nWhat remains is to include the logic for returning and displaying the weather. We will use the Forecastr library, which is already used in our application and added in the [bonfire_spark](https://github.com/bonfire-networks/bonfire_spark) extension.\n\nThe Forecastr library makes use of the Pirate Weather service, so we need a Pirate Weather API KEY. You can generate one on [pirateweather.net](http://pirateweather.net/) and add it at the bottom of your `.env` file:\n\n```elixir\nPIRATE_WEATHER_API=***********************\n\n```\n\nThe final component code looks like:\n\n```elixir\n{#if e(@location, nil)}\n   \n    {#case Forecastr.forecast(:today, e(@location, nil),\n        units: :metric,\n        renderer: Forecastr.Renderer.JSON\n      )}\n      {#match {:ok,\n           %{\n             \"description\" => weather,\n             \"id\" => weather_id,\n             \"temp\" => temp,\n             \"name\" => weather_location\n           }}}\n         \n           \n           \n             {temp}° \n             {weather} \n           \n         \n      {#match _}\n    {/case}\n   \n{/if}\n\n```","ref":"add-a-new-widget.html#adding-settings"},{"type":"extras","title":"Next Steps - Add a new widget","doc":"Although this weather widget is relatively basic, it significantly enhances the user experience by providing relevant metadata fetched from external services. This example demonstrates the potential for integrating additional information and functionality into widgets to create a more engaging and informative user interface.\nTo further improve this widget, developers can consider including more data points, such as:\n\n- Current moon position and phase\n- Daily amount of daylight hours\n- Sunrise and sunset times\n- Extended weather forecasts\n- Weather alerts and notifications\n\nBy incorporating these additional features, the widget can provide users with a more comprehensive overview of their location's weather and astronomical information, making it a valuable addition to their profile page.","ref":"add-a-new-widget.html#next-steps"},{"type":"extras","title":"Add a new page to the sidebar","doc":"# Add a new page to the sidebar\n\nTODO","ref":"add-a-page-to-the-sidebar.html"},{"type":"extras","title":"Add a new extension settings","doc":"# Add a new extension settings\n\nBonfire extensions can define settings that will be available to the users of the extension. These settings can be used to configure the behavior of the extension.\n\nTODO","ref":"add-an-extension-settings.html"},{"type":"extras","title":"Bonfire Architecture","doc":"# Bonfire Architecture","ref":"architecture.html"},{"type":"extras","title":"Hacking - Bonfire Architecture","doc":"Bonfire is an unusual piece of software, developed in an unusual way. It originally started as a project to create a generic federation library/framework, while building an app for educators to share and collaborate on learning resources with their peers, and has been forked and evolved a lot since then. \n\nHacking on it is actually pretty fun. The codebase has a unique feeling to work with and we've relentlessly refactored to manage the ever-growing complexity that a distributed social networking toolkit implies. That said, it is not easy to understand without context, which is what this document is here to provide.","ref":"architecture.html#hacking"},{"type":"extras","title":"Design Decisions - Bonfire Architecture","doc":"Feature goals:\n\n- Flexibility for developers and users.\n- Extreme configurability and extensibility.\n- Integrated federation with the existing fediverse.\n\nOperational goals:\n\n- Easy to set up and run.\n- Light on resources for small deployments.\n- Scalable for large deployments.","ref":"architecture.html#design-decisions"},{"type":"extras","title":"Stack - Bonfire Architecture","doc":"Our main implementation language is [Elixir](https://www.elixir-lang.org/), which is designed for building reliable systems. We have almost [our own dialect](./BONFIRE-FLAVOURED-ELIXIR.md).\n\nWe use the [Phoenix](https://www.phoenixframework.org/) web framework with [LiveView](https://hexdocs.pm/phoenix_live_view/) and [Surface](https://surface-ui.org/documentation) for UI components and views.\n\nSurface is a different syntax for LiveView that is designed to be more convenient and understandable to frontend developers, with extra compile time checks. Surface views and components are compiled into LiveView code (so once you hit runtime, Surface in effect doesn't exist any more).\n\nSome extensions use the [Absinthe](https://absinthe-graphql.org/) GraphQL library to expose an API.","ref":"architecture.html#stack"},{"type":"extras","title":"The Bonfire Environment - Bonfire Architecture","doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of conveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back.","ref":"architecture.html#the-bonfire-environment"},{"type":"extras","title":"Code Structure - Bonfire Architecture","doc":"The code is broadly composed namespaces such as these, many of which are packaged as \"extensions\" which live in separate git repositories, which are included in the app by way of mix dependencies:\n\n- `Bonfire.*` - Core application logic (very little code).\n- `Bonfire.*.*` - Bonfire extensions (eg `Bonfire.Posts`) containing mostly context modules, APIs, and routes\n- `Bonfire.Data.*` - Extensions containing database schemas and migrations \n- `Bonfire.UI.*` - UI component extensions\n- `Bonfire.*.*.LiveHandler` - Backend logic to handle events in the frontend\n- `Bonfire.Editor.*` (pluggable text editors, eg. CKEditor for WYSIWYG markdown input)\n- `Bonfire.GraphQL.*` - Optional GraphQL API\n- `Bonfire.Federate.*` - Optional Federation hooks\n- `ActivityPub` - ActivityPub S2S models, logic and various helper modules \n- `ActivityPub.Web` - ActivityPub S2S REST endpoints, activity ingestion and push federation facilities \n- `ValueFlows.*` - economic extensions implementing the [ValueFlows vocabulary](https://www.valueflo.ws)\n\n\nContexts are were we put any core logic. A context often is circumscribed to providing logic for a particular object type (e. g. `Bonfire.Posts` implements `Bonfire.Data.Social.Post`). \n\nAll Bonfire objects use an ULID as their primary key. We use the `Needle` library (with extra logic in `Bonfire.Common.Needles`) to reference any object by its primary key without knowing what type it is beforehand. This is very useful as it allows for example following or liking many different types of objects (as opposed to say only a user or a post) and this approach allows us to store the context of the like/follow by only storing its primary key (see `Bonfire.Data.Social.Follow`) for an example.\n\nContext modules usually have `one/2`, `many/2`, and `many_paginated/1` functions for fetching objects, which in turn call a `query/2` function. These take a keyword list as filters (and an optional `opts` argument) allowing objects to be fetched by arbitrary criteria.\n\nExamples:\n\n```\nUsers.one(username: \"bob\") # Fetching by username\nPosts.many_paginated(by: \"01E9TQP93S8XFSV2ZATX1FQ528\") # List a page of posts by its author\nEconomicResources.many(deleted: true) # List any deleted resources\n```\n\nContext modules also have functions for creating, updating and deleting objects, as well as hooks for federating or indexing in the search engine.\n\nHere is an incomplete sample of some of current extensions and modules:\n\n- `Bonfire.Me.Accounts` (for managing and querying local user accounts)\n- `Bonfire.Me.Users` (for managing and querying both local and remote user identities and profiles)\n- `Bonfire.Boundaries` (for managing and querying circles, ACLs, permissions...)\n- `Bonfire.Social.FeedActivities`, `Bonfire.Social.Feeds` and `Bonfire.Social.Activities` (for managing and querying activities and feeds)\n- `Bonfire.Posts` and `Bonfire.Social.PostContents` (for managing and querying posts)\n- `Bonfire.Social.Threads` (for managing and querying threads and comments)\n- `Bonfire.Social.Flags` (for managing and querying flags)\n- `Bonfire.Social.Graph.Follows` (for managing and querying follows)\n- `Bonfire.Classify` (for managing and querying categories, topics, and the like)\n- `Bonfire.Tag` (for managing and querying tags and mentions)\n- `Bonfire.Geolocate` (for managing and querying locations and geographical coordinates)\n- `Bonfire.Quantify` (for managing and querying units and measures)\n\n#### Additional extensions, libraries, and modules\n\n- `Bonfire.Common` and `Bonfire.Common.Utils` (stuff that gets used everywhere)\n- `Bonfire.Application` (OTP application)\n- `Bonfire.Me.Characters` (a shared abstraction over users, organisations, categories, and other objects that need to have feeds and behave as an actor in ActivityPub land)\n- `Bonfire.Federate.ActivityPub` and `ActivityPub` (ActivityPub integration)\n- `Bonfire.Search` (local search indexing and search API, powered by Meili)\n- `Bonfire.Mailer`, `Bonfire.Me.Mails`, and `Bamboo` (for rendering and sending emails)\n- `Bonfire.Files`, `Waffle`, `TreeMagic` and `TwinkleStar` (for managing uploaded content)\n- `Bonfire.GraphQL` (GraphQL API abstractions)\n- `Queery` and `Bonfire.Repo.Query` (Helpers for making queries on the database)\n- `Bonfire.Repo` (Ecto repository)\n- `Exto` (to extend DB schemas in config, especially useful for adding associations)\n- `AbsintheClient` (for querying the API from within the server)","ref":"architecture.html#code-structure"},{"type":"extras","title":"General structure - Bonfire Architecture","doc":"- Bonfire app\n  - A [flavour](../README.md#flavours) running `Bonfire.Application` as supervisor\n    - Configs assembled from extensions at `flavour/$FLAVOUR/config`\n    - Phoenix at `Bonfire.Web.Endpoint`\n      - Routes assembled from extensions at `Bonfire.Web.Router` \n    - GraphQL schema assembled from extensions at `Bonfire.GraphQL.Schema`\n    - Database migrations assembled from extensions at `flavour/$FLAVOUR/repo/migrations`\n    - Data seeds assembled from extensions at `flavour/$FLAVOUR/repo/seeds`\n    - Extensions and libraries as listed in `flavour/$FLAVOUR/config/deps.*`\n      - Extensions defining schemas and migrations (usually `Bonfire.Data.*`)\n        - Schemas\n        - Migrations defined as functions in the schema modules in `lib/`\n        - Migration templates calling those functions in `priv/repo/migrations` which are then copied into an app flavour's migrations\n      - Extensions implementing features or groups of features (eg. `Bonfire.Me`)\n        - Config template which is then copied into an app flavour's config (eg `config/bonfire_me.exs`)\n        - Contexts (eg `Bonfire.Me.Users`)\n          - Sometimes LiveHandlers for handling frontend events in the backend (eg `Bonfire.Me.Users.LiveHandler`)\n        - Routes (eg `Bonfire.UI.Me.Routes`)\n          - Controllers and/or Views (eg `Bonfire.UI.Me.CreateUserController` and `Bonfire.UI.Me.CreateUserLive`)\n        - API (eg `Bonfire.Me.API.GraphQL`), refer to [GraphQL API documentation](./GRAPHQL.md)\n          - Schemas\n          - Resolvers\n        - Sometimes Plugs (eg `Bonfire.Web.Plugs.UserRequired` and `Bonfire.Web.LivePlugs.UserRequired`)\n      - Other extensions or libraries (eg `Needle` or `Bonfire.Common` which are used by most other extensions)","ref":"architecture.html#general-structure"},{"type":"extras","title":"Naming - Bonfire Architecture","doc":"It is said that naming is one of the four hard problems of computer science (along with cache management and off-by-one errors). We don't claim our scheme is the best, but we do strive for consistency.","ref":"architecture.html#naming"},{"type":"extras","title":"Naming guidelines - Bonfire Architecture","doc":"- Module names mostly begin with `Bonfire.` unless they belong to a more generic library (eg `Needle` or `ValueFlows`)\n- Everything within an extension begins with the context name and a `.` (eg `Bonfire.Social.Migrations`)\n- Database schemas should be named in the singular (eg `Bonfire.Data.Social.Post`)\n- Context modules are named in plural where possible (eg `Bonfire.Posts`)\n- Other modules within a context begins with the context name and a `.` (eg `Bonfire.Posts.LiveHandler`)\n- Modules use UpperCamelCase while functions use snake_case\n- Acronyms in module names should be all uppercase (eg `Bonfire.Social.APActivities`)","ref":"architecture.html#naming-guidelines"},{"type":"extras","title":"Federation libraries - Bonfire Architecture","doc":"### `ActivityPub`\n\nThis namespace handles the ActivityPub logic and stores AP activities. It is largely adapted Pleroma code with some modifications, for example merging of the activity and object tables and new actor object abstraction.\n\n- `ActivityPub` contains the main API and is documented there. \n- `ActivityPub.Federator.Adapter` defines callback functions for the AP library.\n\nIt also contains some functionality that isn't part of the AP spec but is required for federation:\n- `ActivityPub.Safety.Keys` - Generating and handling RSA keys and signatures \n- `ActivityPub.Federator.WebFinger` - Implementation of the WebFinger protocol\n- `ActivityPub.Federator.HTTP` - Module for making HTTP requests (wrapper around tesla)\n- `ActivityPub.Instances` - Module for storing reachability information about remote instances\n\nAlso refer to [MRF documentation](./MRF.md) to learn how to rewrite or discard messages.\n\n### `ActivityPub.Web`\n\nThis namespace contains the ActivityPub Server-to-Server REST API, the activity ingestion pipeline (`ActivityPub.Federator.Transformer`) and the push federation facilities (`ActivityPub.Federator`, `ActivityPub.Federator.APPublisher` and others). The outgoing federation module is designed in a modular way allowing federating through different protocols in the future.","ref":"architecture.html#federation-libraries"},{"type":"extras","title":"ActivityPub integration with Bonfire's application logic - Bonfire Architecture","doc":"The callback functions defined in `ActivityPub.Federator.Adapter` are implemented in `Bonfire.Federate.ActivityPub.Adapter`. \n\nWhen implementing federation for a new object type it needs to be implemented for both directions: \nfor outgoing federation using the hooks in `Bonfire.Federate.ActivityPub.Outgoing` and for incoming federation using the hooks in `Bonfire.Federate.ActivityPub.Incoming`.","ref":"architecture.html#activitypub-integration-with-bonfire-s-application-logic"},{"type":"extras","title":"Design Guidelines","doc":"# Design Guidelines\n\nTODO","ref":"design_guidelines.html"},{"type":"extras","title":"Bonfire-flavoured Elixir","doc":"# Bonfire-flavoured Elixir\n\nBonfire has a few libraries that are widely used in the codebase and make writing Elixir feel a little bit different. To help you get less confused by this, here's a guide on what we can call \"bonfire-flavoured elixir\"!\n\nPlease note this guide assumes you already know [Elixir](https://elixir-lang.org/getting-started/introduction.html).\n\n## `Arrows`\n\nThe Elixir [|> (\"pipe\") operator](https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2) is one of the things that seems to get people excited about elixir. Probably in part because you then don't have to keep coming up with function names. Unfortunately it's kind of limiting. \nThe moment you need to pipe a parameter into a position that isn't the first one, it breaks down and you have to drop out of the pipeline format or write a secondary function to handle it.\n\nNot any more! By simply inserting `...` where you would like the value to be inserted, `Arrows` will override where it is placed. This allows you to keep on piping while accommodating that function with the annoying argument order. `Arrows` was inspired by [an existing library](https://hexdocs.pm/magritte/Magritte.html). Here is part of the test suite in lieu of examples:\n\n```elixir\ndefmodule ArrowsTest do\n  use ExUnit.Case\n  use Arrows\n\n  def double(x), do: x * 2\n  def double_fst(x, _), do: x * 2\n  def double_snd(_, x), do: x * 2\n  def add_snd_thd(_, x, y), do: x + y\n\n  test \"|>\" do\n    assert 4 == (2 |> double)\n    assert 4 == (2 |> double())\n    assert 4 == (2 |> double(...))\n    assert 8 == (2 |> double(double(...)))\n    assert 4 == (2 |> double_fst(1))\n    assert 4 == (2 |> double_fst(..., 1))\n    assert 8 == (2 |> double_fst(double(...), 1))\n    assert 4 == (2 |> double_snd(1, ...))\n    assert 8 == (2 |> double_snd(1, double(...)))\n    assert 3 == (2 |> add_snd_thd(1, ..., 1))\n    assert 4 == (2 |> add_snd_thd(1, ..., ...))\n    assert 6 == (2 |> add_snd_thd(1, ..., double(...)))\n    for x <- [:yes, 2, nil, false] do\n      assert {:ok, x} == (x |> {:ok, ...})\n    end\n  end\nend\n```\n\nA few little extra features you might notice here:\n* You can move the parameter into a subexpression, as in `2 |> double_fst(double(...), 1)` where double will be called before the parameter is passed to `double_fst`.\n* You can use `...` multiple times, substituting it in multiple places.\n* The right hand side need not even be a function call, you can use any expression with `...`.","ref":"bonfire-flavoured-elixir.html"},{"type":"extras","title":"Ok-pipe - Bonfire-flavoured Elixir","doc":"`Arrows` also provides an `ok-pipe` operator, `~>`, which only pipes into the next function if the result from the last one was considered a success. It's inspired by [OK](https://hexdocs.pm/ok/readme.html), but we have chosen to do things slightly differently so it better fits with our regular pipe.\n\ninput                    | result          |\n:----------------------- | :-------------- |\n`{:ok, x}`               | `fun.(x)`       |\n`{:error, e}`            | `{:error, e}`   |\n`nil`                    | `nil`           |\n`x when not is_nil(x)`   | `fun.(x)`       |\n\nIn the case of a function returning an ok/error tuple being on the left hand side, this is straightforward to determine. In the event of `{:ok, x}`, x will be passed into the right hand side to call. In the event of `{:error, x}`, the result will be `{:error, x}`.\n\nWe also deal with a lot of functions that indicate failure by returning nil. `~>` tries to 'do what I mean' for both of these so you can have one pipe operator to rule them all. If `nil` is a valid result, you must thus be sure to wrap it in an `ok` tuple when it occurs on the left hand side of `~>`.\n\n`|>` and `~>` compose in the way you'd expect; i.e. a `~>` receiving an error tuple or nil will stop executing the rest of the chain of (mixed) pipes.","ref":"bonfire-flavoured-elixir.html#ok-pipe"},{"type":"extras","title":"Untangle - Bonfire-flavoured Elixir","doc":"`Untangle` provides replacements for the macros in Elixir's `Logger` module and the `IO.inspect` function to output code location information. The first argument will be `inspect`ed and the second (where provided) will be used as a label:\n\n```\niex(1)> import Untangle\nUntangle\niex(2)> debug(:no, \"the answer is\") # log at debug\n11:19:09.915 [debug] [iex:2] the answer is: :no\n:no\niex(3)> dump(%{a: :map}, \"it\") # inspect something on stdout\n[iex:3] it: %{a: :map}\n%{a: :map}\n```\n\nWhen used in a code file, the location information becomes slightly more useful, e.g.:\n\n```\n[lib/test_untangle.ex:15@Test.Untangle.example/2] Here's an empty list: []\n```\n\nYou may also notice from the iex output that it returns its first argument. This makes it ideal for\ninserting into a pipeline for debugging purposes:\n\n```elixir\ndo_something()\n|> debug(\"output of do_something/0\")\n```\n\nWhen you are done debugging something, the location of the debug statement is already in the output so you know where to remove it or comment it out! Bliss!\n\nYou will find the codebase uses this a lot, though the debugs are frequently commented out. Just uncomment the ones that would help you with a particular debugging task and you're off.","ref":"bonfire-flavoured-elixir.html#untangle"},{"type":"extras","title":"Error handling - Bonfire-flavoured Elixir","doc":"`Bonfire.Fail` is an `Exception` handler, which you can use to stop the show anywhere in the code, e.g:\n\n`id = ulid(object) || raise(Bonfire.Fail, :not_found)` \n\nYou can use this special exception when you want to redirect the user to the login page rather than just show an error:\n`user = current_user(assigns) || raise(Bonfire.Fail.Auth, :needs_login)` \n\nAdvantages include:\n\n- standardised error messages (defaults are defined at https://github.com/bonfire-networks/bonfire_fail/blob/main/lib/runtime_config.ex#L16) which can be overridden in your app's config using `config :bonfire_fail, :common_errors`\n- friendly error messages are defined in one place, which means no duplicated localisation efforts\n- uses the elixir/OTP pattern of \"let it crash\"\n- returns the correct HTTP code when applicable\n- no need to wrap blocks in if/else or the like \n- for users of the LiveView frontend, this will make the corresponding friendly error message appear in a flash overlay (if using `Bonfire.UI.Common.LiveHandlers` and/or `Bonfire.UI.Common.undead/3`)","ref":"bonfire-flavoured-elixir.html#error-handling"},{"type":"extras","title":"Bonfire's Database - an intro","doc":"# Bonfire's Database - an intro\n\nBonfire uses the excellent PostgreSQL database for most data storage. PostgreSQL allows us to make a wide range of queries and to make them relatively fast while upholding data integrity guarantees.\n\nPostgres is a relational schema-led database - it expects you to pre-define tables and the fields in each table (represented in tabular form, i.e. as a collection of tables with each table consisting of a set of rows and columns). Fields can contain data or a reference to a row in another table. \n\nThis usually means that a field containing a reference has to be pre-defined with a foreign key pointing to a specific field (typically a primary key, like an ID column) *in a specific table*. \n\nA simple example would be a blogging app, which might have a `post` table with `author` field that references the `user` table.\n\nA social network, by contrast, is actually a graph of objects. Objects need to be able to refer to other objects by their ID without knowing their type. \n\nA simple example would be likes, you might have a `likes` table with `liked_post_id` field that references the `post` table. But you don't just have posts that can be liked, but also videos, images, polls, etc, each with their own table, but probably do not want to have to add `liked_video_id`, `liked_image_id`, etc?\n\nWe needed the flexibility to have a foreign key that can reference any referenceable object. We call our system `Needle`.\n\nThis guide is a brief introduction to Needle. It assumes some foundational knowledge:\n\n* Basic understanding of how relational databases like Postgresql work, in particular:\n  * Tables being made up of fields.\n  * What a primary key is and why it's useful.\n  * Foreign keys and relationships between tables (1 to 1, 1 to Many, Many to 1, Many to Many).\n  * Views as virtual tables backed by a SQL query.\n\n* Basic understanding of Elixir (enough to follow the examples).\n* Basic working knowledge of the [Ecto](https://hexdocs.pm/ecto/Ecto.html) database library (schema and migration definitions)","ref":"database.html"},{"type":"extras","title":"Identifying objects - the ULID type - Bonfire's Database - an intro","doc":"All referenceable objects in the system have a unique ID (primary key) whose type is the [`ULID`](https://github.com/ulid/spec). It's a lot like a `UUID` in that you can generate unique ones independently of the database. It's also a little different, being made up of two parts:\n\n* The current timestamp, to millisecond precision.\n* Strong random padding for uniqueness.\n\nThis means that it naturally sorts by time to the millisecond (close enough for us), giving us a performance advantage on queries ordered by a separate creation datetime field (by contrast, UUIDv4 is randomly distributed).\n\nIf you've only worked with integer primary keys before, you are probably used to letting the database dispense an ID for you. With `ULID` (or `UUID`), IDs can be known *before* they are stored, greatly easing the process of storing a graph of data and allowing us to do more of the preparation work outside of a transaction for increased performance.\n\nIn PostgreSQL, we actually store `ULID`s as `UUID` columns, thanks to both being the same size (and the lack of a `ULID` column type shipping with postgresql). You mostly will not notice this because it's handled for you, but there are a few places it can come up:\n\n* Ecto debug and error output may show either binary values or UUID-formatted values.\n* Hand-written SQL may need to convert table IDs to the `UUID` format before use.","ref":"database.html#identifying-objects-the-ulid-type"},{"type":"extras","title":"It's just a table - Bonfire's Database - an intro","doc":"The `Needle` system is mostly based around a single table represented by the `Needle.Pointer` schema with the following fields:\n\n* `id` (ULID) - the database-wide unique id for the object, primary key.\n* `table_id` (ULID) - identifies the type of the object, references `Needle.Table`.\n* `deleted_at` (timestamp, default: `null`) - when the object was deleted.\n\nEvery object that is stored in the system will have a record in this table. It may also have records in other tables (handy for storing more than 3 fields about the object!).\n\nDon't worry about `Needle.Table` for now, just know that every object type will have a record there so `Needle.Pointer.table_id` can reference it.","ref":"database.html#it-s-just-a-table"},{"type":"extras","title":"Mixins - storing data about objects - Bonfire's Database - an intro","doc":"Mixins are tables which contain extra information on behalf of objects. Each object can choose to\nrecord or not record information for each mixin. Sample mixins include:\n\n* user profile (containing a name, location and summary)\n* post content (containing the title, summary, and/or html body of a post or message)\n* created (containing the id of the object creator)\n\nIn this way, they are reusable across different object types. One mixin may (or may not) be used by any number of objects. This is mostly driven by the type of the object we are storing, but can also be driven by user input.\n\nMixins are just tables too! The only requirement is they have a `ULID` primary key which references `Needle.Pointer`. The developer of the mixin is free to put whatever other fields they want in the table, so long as they have that primary-key-as-reference (which will be automatically added for you by the `mixin_schema` macro). \n\nHere is a sample mixin definition for a user profile:\n\n```elixir\ndefmodule Bonfire.Data.Social.Profile do\n\n  use Needle.Mixin,\n    otp_app: :bonfire_data_social,\n    source: \"bonfire_data_social_profile\"\n\n  mixin_schema do\n    field :name, :string\n    field :summary, :string\n    field :website, :string\n    field :location, :string\n  end\nend\n```\n\nAside from `use`ing `Needle.Mixin` instead of `Ecto.Schema` and calling `mixin_schema` instead of\n`schema`, pretty similar to a standard Ecto schema, right? \n\nThe arguments to `use Needle.Mixin` are:\n\n* `otp_app`: the OTP app name to use when loading dynamic configuration, e.g. the current extension or app (required)\n* `source`: the underlying table name to use in the database\n\nWe will cover dynamic configuration later. For now, you can use the OTP app that includes the module.","ref":"database.html#mixins-storing-data-about-objects"},{"type":"extras","title":"Multimixins - Bonfire's Database - an intro","doc":"Multimixins are like mixins, except that where an object may have 0 or 1 of a particular mixins, an object may have any number of a particular multimixin.\n\nFor this to work, a multimixin must have a *compound primary key* which must contain an `id` column referencing `Needle.Pointer` and at least one other field which will collectively be unique.\n\nAn example multimixin is used for publishing an item to feeds:\n\n```elixir\ndefmodule Bonfire.Data.Social.FeedPublish do\n\n  use Needle.Mixin,\n    otp_app: :bonfire_data_social,\n    source: \"bonfire_data_social_feed_publish\"\n\n  alias Needle.Pointer\n\n  mixin_schema do\n    belongs_to :feed, Pointer, primary_key: true\n  end\nend\n```\n\nNotice that this looks very similar to defining a mixin. Indeed, the only difference is the `primary_key: true` in this line, which adds a second field to the compound primary key.\nThis results in ecto recording a compound primary key of `(id, feed_id)` for the schema (the id is added for you as with regular mixins).","ref":"database.html#multimixins"},{"type":"extras","title":"Declaring Object Types - Bonfire's Database - an intro","doc":"","ref":"database.html#declaring-object-types"},{"type":"extras","title":"Picking a table id - Bonfire's Database - an intro","doc":"The first step to declaring a type is picking a unique table ID in ULID format. You could just generate one at the terminal, but since these IDs are special, we tend to assign a synthetic ULID that are readable as words so they stand out in debug output.\n\nFor example, the ID for the `Feed` table is: `1TFEEDS0NTHES0V1S0FM0RTA1S`, which can be read as \"It feeds on the souls of mortals\". Feel free to have a little fun coming up with them, it makes debug output a little more cheery! The rules are:\n\n* The alphabet is [Crockford's Base32](https://en.wikipedia.org/wiki/Base32#Crockford's_Base32).\n* They must be 26 characters in length.\n* The first character must be a digit in the range 0-7.\n\nTo help you with this, the `Needle.ULID.synthesise!/1` method takes an alphanumeric binary and tries to return you it transliterated into a valid ULID. Example usage:\n\n```\niex(1)> Needle.ULID.synthesise!(\"itfeedsonthesouls\")\n\n11:20:28.299 [error] Too short, need 9 chars.\n:ok\niex(2)> Needle.ULID.synthesise!(\"itfeedsonthesoulsofmortalsandothers\")\n\n11:20:31.819 [warn]  Too long, chopping off last 9 chars\n\"1TFEEDS0NTHES0V1S0FM0RTA1S\"\niex(3)> Needle.ULID.synthesise!(\"itfeedsonthesoulsofmortals\")\n\"1TFEEDS0NTHES0V1S0FM0RTA1S\"\niex(4)> Needle.ULID.synthesise!(\"gtfeedsonthesoulsofmortals\")\n\n11:21:03.268 [warn]  First character must be a digit in the range 0-7, replacing with 7\n\"7TFEEDS0NTHES0V1S0FM0RTA1S\"\n```","ref":"database.html#picking-a-table-id"},{"type":"extras","title":"Virtuals - Bonfire's Database - an intro","doc":"Virtuals are the simplest and most common type of object. Here's a definition of block:\n\n```elixir\ndefmodule Bonfire.Data.Social.Block do\n\n  use Needle.Virtual,\n    otp_app: :bonfire_data_social,\n    table_id: \"310CK1NGSTVFFAV01DSSEE1NG1\",\n    source: \"bonfire_data_social_block\"\n\n  alias Bonfire.Data.Edges.Edge\n\n  virtual_schema do\n    has_one :edge, Edge, foreign_key: :id\n  end\nend\n```\n\nIt should look quite similar to a mixin definition, except that we `use` `Needle.Virtual` this time (passing an additional `table_id` argument) and we call the `virtual_schema` macro.\n\nThe primary limitation of a virtual is that you cannot put extra fields into one. This also means that `belongs_to` is not generally permitted because it results in adding a field. `has_one` and `has_many` work just fine as they do not cause the creation of fields in the schema.\n\nThis is not usually a problem, as extra fields can be put into mixins or multimixins as appropriate.\n\nUnder the hood, a virtual has a view (in this example, called `bonfire_data_social_block`). It looks like a table with just an id, but it's populated with all the ids of blocks that are not deleted. When the view is inserted into, a record is created in the `pointers` table for you transparently. When you delete from the view, the corresponding `pointers` entry is marked deleted for you.","ref":"database.html#virtuals"},{"type":"extras","title":"Pointables - Bonfire's Database - an intro","doc":"The other, lesser used, type of object is called the Pointable. The major difference is that unlike the simple case of virtuals, pointables are not backed by views, but by tables.\n\nWhen a record is inserted into a pointable table, a copy is made in the `pointers` table for you transparently. When you delete from the table, the the corresponding `pointers` entry is marked deleted for you. In these ways, they behave very much like virtuals. By having a table, however, we are free to add new fields.\n\nPointables pay for this flexibility by being slightly more expensive than virtuals:\n\n* Records must be inserted into/deleted from two tables (the pointable's table and the `pointers` table).\n* The pointable table needs its own primary key index.\n\nHere is a definition of a pointable type (indicating an ActivityPub activity whose type we don't recognise, stored as a JSON blob):\n\n```elixir\ndefmodule Bonfire.Data.Social.APActivity do\n\n  use Needle.Pointable,\n    otp_app: :bonfire_data_social,\n    table_id: \"30NF1REAPACTTAB1ENVMBER0NE\",\n    source: \"bonfire_data_social_apactivity\"\n\n  pointable_schema do\n    field :json, :map\n  end\nend\n```\n\nThe choice of using a pointable instead of a virtual combined with one or more mixins is ultimately up to you.","ref":"database.html#pointables"},{"type":"extras","title":"Writing Migrations - Bonfire's Database - an intro","doc":"Migrations are typically included along with the schemas as public APIs you can call within your project's migrations.","ref":"database.html#writing-migrations"},{"type":"extras","title":"Virtuals - Bonfire's Database - an intro","doc":"Most virtuals are incredibly simple to migrate for:\n\n```elixir\ndefmodule Bonfire.Data.Social.Post.Migration do\n\n  import Needle.Migration\n  alias Bonfire.Data.Social.Post\n\n  def migrate_post(), do: migrate_virtual(Post)\n\nend\n```\n\nIf you need to do more work, it can be a little trickier. Here's an example for `block`, which also creates a unique index on another table:\n\n```elixir\ndefmodule Bonfire.Data.Social.Block.Migration do\n\n  import Ecto.Migration\n  import Needle.Migration\n  import Bonfire.Data.Edges.Edge.Migration\n  alias Bonfire.Data.Social.Block\n\n  def migrate_block_view(), do: migrate_virtual(Block)\n\n  def migrate_block_unique_index(), do: migrate_type_unique_index(Block)\n\n  def migrate_block(dir \\\\ direction())\n\n  def migrate_block(:up) do\n    migrate_block_view()\n    migrate_block_unique_index()\n  end\n\n  def migrate_block(:down) do\n    migrate_block_unique_index()\n    migrate_block_view()\n  end\n\nend\n```\n\nNotice how we have to write our `up` and `down` versions separately to get the correct ordering of operations.","ref":"database.html#virtuals"},{"type":"extras","title":"Pointables - Bonfire's Database - an intro","doc":"As of now, pointables are a little trickier to define flexibly than virtuals because we want to\npreserve the ability for the user to define extra fields in config. There are some questions about \nhow useful this is in practice, so we might go for a simpler option in future.\n\nExample:\n\n```elixir\ndefmodule Bonfire.Data.Social.APActivity.Migration do\n  @moduledoc false\n  use Ecto.Migration\n  import Needle.Migration\n  alias Bonfire.Data.Social.APActivity\n\n  defp make_apactivity_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_pointable_table(Bonfire.Data.Social.APActivity) do\n        Ecto.Migration.add :json, :jsonb\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_apactivity_table, do: make_apactivity_table([])\n  defmacro create_apactivity_table([do: body]), do: make_apactivity_table(body)\n\n  def drop_apactivity_table(), do: drop_pointable_table(APActivity)\n\n  defp maa(:up), do: make_apactivity_table([])\n  defp maa(:down) do\n    quote do: Bonfire.Data.Social.APActivity.Migration.drop_apactivity_table()\n  end\n\n  defmacro migrate_apactivity() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(maa(:up)),\n        else: unquote(maa(:down))\n    end\n  end\n\nend\n```","ref":"database.html#pointables"},{"type":"extras","title":"Mixins - Bonfire's Database - an intro","doc":"Mixins look much like pointables:\n\n```elixir\ndefmodule Bonfire.Data.Social.Profile.Migration do\n\n  import Needle.Migration\n  alias Bonfire.Data.Social.Profile\n\n  # create_profile_table/{0,1}\n\n  defp make_profile_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_mixin_table(Bonfire.Data.Social.Profile) do\n        Ecto.Migration.add :name, :text\n        Ecto.Migration.add :summary, :text\n        Ecto.Migration.add :website, :text\n        Ecto.Migration.add :location, :text\n        Ecto.Migration.add :icon_id, strong_pointer(Bonfire.Files.Media)\n        Ecto.Migration.add :image_id, strong_pointer(Bonfire.Files.Media)\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_profile_table(), do: make_profile_table([])\n  defmacro create_profile_table([do: {_, _, body}]), do: make_profile_table(body)\n\n  # drop_profile_table/0\n\n  def drop_profile_table(), do: drop_mixin_table(Profile)\n\n  # migrate_profile/{0,1}\n\n  defp mp(:up), do: make_profile_table([])\n\n  defp mp(:down) do\n    quote do\n      Bonfire.Data.Social.Profile.Migration.drop_profile_table()\n    end\n  end\n\n  defmacro migrate_profile() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(mp(:up)),\n        else: unquote(mp(:down))\n    end\n  end\n\nend\n```","ref":"database.html#mixins"},{"type":"extras","title":"Multimixins - Bonfire's Database - an intro","doc":"Similar to mixins:\n\n```elixir\ndefmodule Bonfire.Data.Social.FeedPublish.Migration do\n\n  import Ecto.Migration\n  import Needle.Migration\n  alias Bonfire.Data.Social.FeedPublish\n\n  @feed_publish_table FeedPublish.__schema__(:source)\n\n  # create_feed_publish_table/{0,1}\n\n  defp make_feed_publish_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_mixin_table(Bonfire.Data.Social.FeedPublish) do\n        Ecto.Migration.add :feed_id,\n          Needle.Migration.strong_pointer(), primary_key: true\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_feed_publish_table(), do: make_feed_publish_table([])\n  defmacro create_feed_publish_table([do: {_, _, body}]), do: make_feed_publish_table(body)\n\n  def drop_feed_publish_table(), do: drop_pointable_table(FeedPublish)\n\n  def migrate_feed_publish_feed_index(dir \\\\ direction(), opts \\\\ [])\n  def migrate_feed_publish_feed_index(:up, opts),\n    do: create_if_not_exists(index(@feed_publish_table, [:feed_id], opts))\n  def migrate_feed_publish_feed_index(:down, opts),\n    do: drop_if_exists(index(@feed_publish_table, [:feed_id], opts))\n\n  defp mf(:up) do\n    quote do\n      Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table()\n      Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish_feed_index()\n    end\n  end\n\n  defp mf(:down) do\n    quote do\n      Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish_feed_index()\n      Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_table()\n    end\n  end\n\n  defmacro migrate_feed_publish() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(mf(:up)),\n        else: unquote(mf(:down))\n    end\n  end\n\n  defmacro migrate_feed_publish(dir), do: mf(dir)\n\nend\n```","ref":"database.html#multimixins"},{"type":"extras","title":"More examples - Bonfire's Database - an intro","doc":"Take a look at a few of the migrations in our data libraries. Between them, they cover most\nscenarios by now:\n\n* [bonfire_data_social](https://github.com/bonfire-networks/bonfire_data_social/)\n* [bonfire_data_access_control](https://github.com/bonfire-networks/bonfire_data_access_control/)\n* [bonfire_data_identity](https://github.com/bonfire-networks/bonfire_data_identity/)\n* [bonfire_data_edges](https://github.com/bonfire-networks/bonfire_data_edges/) (feat. bonus triggers)\n\nIf you want to know exactly what's happening, you may want to read the code for\n[Needle.Migration](https://github.com/bonfire-networks/needle/blob/main/lib/migration.ex).","ref":"database.html#more-examples"},{"type":"extras","title":"Boundaries & Access Control","doc":"# Boundaries & Access Control\n\nBoundaries is Bonfire's flexible framework for full per-user/per-object/per-action access control. It makes it easy to ensure that users may only see or do what they are supposed to.","ref":"boundaries.html"},{"type":"extras","title":"Users and Circles - Boundaries & Access Control","doc":"Ignoring any future bot support, boundaries ultimately apply to users.\n\nCircles are a way of categorising users. Each user has their own set of circles that they can add to and categorise other users in as they please.\n\nCircles allow a user to categorise work colleagues differently from friends, for example. They can choose to allow different interactions from users in the two circles or limit which content each sees on a per-item basis.","ref":"boundaries.html#users-and-circles"},{"type":"extras","title":"Verbs - Boundaries & Access Control","doc":"Verbs represent actions that the user could perform, such as reading a post or replying to a message.\n\nEach verb has a unique ID, like the table IDs from `Needle`, which must be known to the system through configuration.","ref":"boundaries.html#verbs"},{"type":"extras","title":"Permissions - Boundaries & Access Control","doc":"Permissions can take one of three values:\n\n* `true`\n* `false`\n* `nil` (or `null` to postgresql).\n\n`true` and `false` are easy enough to understand as yes and no, but what is `nil`?\n\n`nil` represents `no answer` - in isolation, it is the same as `false`.\n\nBecause a user could be in more than one circle and each circle may have a different permission, we need a way of combining permissions to produce a final result permission. `nil` is treated differently here:\n\nleft    | right   | result\n:------ | :------ | :-----\n`nil`   | `nil`   | `nil`\n`nil`   | `true`  | `true`\n`nil`   | `false` | `false`\n`true`  | `nil`   | `true`\n`true`  | `true`  | `true`\n`true`  | `false` | `false`\n`false` | `nil`   | `false`\n`false` | `true`  | `false`\n`false` | `false` | `false`\n\nTo be considered granted, the result of combining the permissions must be `true` (`nil` is as good as `false` again here).\n\n`nil` can thus be seen as a sort of `weak false`, being easily overridden by a true, but also not by itself granting anything.\n\nAt first glance, this may seem a little odd, but it gives us a little additional flexibility which is useful for implementing features such as blocks (where `false` is really useful!). With a little practice, it feels quite natural to use.","ref":"boundaries.html#permissions"},{"type":"extras","title":"ACLs and Grants - Boundaries & Access Control","doc":"An `ACL` is \"just\" a collection of `Grant`s.\n\nGrants combine the ID of the ACL they exist in with a verb id, a user or circle id and a permission, thus providing a decision about whether a particular action is permitted for a particular user (or all users in a particular circle).\n\nConceptually, an ACL contains a grant for every user-or-circle/verb combination, but most of the permissions are `nil`. We do not record grants with `nil` permissions in the database, saving substantially on storage space and compute requirements.","ref":"boundaries.html#acls-and-grants"},{"type":"extras","title":"Controlled - Applying boundaries to an object - Boundaries & Access Control","doc":"An object is linked to one or more `ACL`s by the `Controlled` multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined in the manner described earlier. \n\n\nSee also https://doc.bonfirenetworks.org/extension-bonfire_data_access_control.html for more docs (TODO: merge/deduplicate)","ref":"boundaries.html#controlled-applying-boundaries-to-an-object"},{"type":"extras","title":"GraphQL API","doc":"# GraphQL API","ref":"graphql.html"},{"type":"extras","title":"GraphQL Introduction - GraphQL API","doc":"Go to http://your-app-url/api/ to start playing with the GraphQL API. The GraphiQL UI should autocomplete types, queries and mutations for you, and you can also explore the schema there.\n\nLet's start with a simple GraphQL thoeretical query:\n\n```graphql\nquery {\n  greetings(limit: 10) {\n    greeting\n    to {\n      name\n    }\n  }\n}\n```\n\nLet's break this apart:\n\n- `query {}` is how you retrieve information from GraphQL.\n- `greetings` is a `field` within the query.\n- `greetings` takes a `limit` argument, a positive integer.\n- `greetings` has two fields, `greeting` and `to`.\n- `to` has one `field`, `name`.\n\nThis query is asking for a list of (up to) 10 greetings and the people\nthey are for. Notice that the result of both `greetings` and `to` are\nmap/object structures with their own fields and that if the type has\nmultiple fields, we can select more than one field.\n\nHere is some possible data we could get returned\n\n```elixir\n%{greetings: [\n    %{greeting: \"hello\", to: %{ name: \"dear reader\"}}, # english\n    %{greeting: \"hallo\", to: %{ name: \"beste lezer\"}}, # dutch\n  ]}\n```\n\nWhere is the magic? Typically an object type will reside in its own\ntable in the database, so this query is actually querying two tables\nin one go. In fact, given a supporting schema, you can nest queries\narbitrarily and the backend will figure out how to run them.\n\nThe fact that you can represent arbitrarily complex queries puts quite\na lot of pressure on the backend to make it all efficient. This is\nstill a work in progress at this time.","ref":"graphql.html#graphql-introduction"},{"type":"extras","title":"Absinthe Introduction - GraphQL API","doc":"Every `field` is filled by a resolver. Let's take our existing query\nand define a schema for it in Absinthe's query DSL:\n\n```elixir\ndefmodule MyApp.Schema do\n  # the schema macro language\n  use Absinthe.Schema.Notation\n  # where we will actually resolve the fields\n  alias MyApp.Resolver\n\n  # Our user object is pretty simple, just a name\n  object :user do\n    field :name, non_null(:string)\n  end\n\n  # This one is slightly more complicated, we have that nested `to`\n  object :greeting do\n    # the easy one\n    field :greeting, non_null(:string)\n    # the hard one. `edge` is the term for when we cross an object boundary.\n    field :to, non_null(:user), do: resolve(&Resolver.to_edge/3)\n  end\n\n  # something to put our top level queries in, because they're just fields too!\n  object :queries do\n    field :greetings, non_null(list_of(non_null(:string))) do\n      arg :limit, :integer # optional\n      resolve &Resolver.greetings/2 # we need to manually process this one\n    end\n  end\n\nend\n```\n\nThere are a couple of interesting things about this:\n\n- Sprinklings of `not_null` to require that values be present (if you\n  don't return them, absinthe will get upset).\n- Only two fields have explicit resolvers. Anything else will default\n  to a map key lookup (which is more often than not what you want).\n- `greeting.to_edge` has a `/3` resolver and `queries.greetings` a\n  `/2` resolver.\n\nTo understand the last one (and partially the middle one), we must\nunderstand how resolution works and what a parent is. The best way of\ndoing that is probably to look at the resolver code:\n\n```elixir\ndefmodule MyApp.Resolver do\n\n  # For purposes of this, we will just fake the data out\n  defp greetings_data() do\n    [ %{greeting: \"hello\", to: %{ name: \"dear reader\"}}, # english\n      %{greeting: \"hallo\", to: %{ name: \"beste lezer\"}}, # dutch\n    ]\n  end\n\n  # the /2 resolver takes only arguments (which in this case is just limit)\n  # and an info (which we'll explain later)\n  def greetings(%{limit: limit}, _info) when is_integer(limit) and limit > 0 do\n    {:ok, Enum.take(greetings_data(), limit)} # absinthe expects an ok/error tuple\n  end\n  def greetings(_args, _info), do: {:ok, greetings_data()} # no limit\n\n  # the /3 resolver takes an additional parent argument in first position.\n  # `parent` here will be the `greeting` we are resolving `to` for.\n  def to_edge(parent, args, info), do: Map.get(parent, :to)\n\nend\n```\n\nThe keen-eyed amongst you may have noticed I said the default resolver\nis a map lookup and our `to_edge/3` is a map lookup too, so\ntechnically we didn't need to write it. But then you wouldn't have an\nexample of a `/3` resolver! In most of the app, these will be querying\nfrom the database, not looking up in a constant.\n\nSo for every field, a resolver function is run. It defaults to a map\nlookup, but you can override it with `resolve/1`. It may or may not\nhave arguments. And all absinthe resolvers return an ok/error tuple.","ref":"graphql.html#absinthe-introduction"},{"type":"extras","title":"Patterns - GraphQL API","doc":"","ref":"graphql.html#patterns"},{"type":"extras","title":"Message Rewrite Facility","doc":"# Message Rewrite Facility\n\n**WARNING: Due to how this app currently handles its configuration, MRF is only usable if you're building your own docker image.**\n\nThe Message Rewrite Facility (MRF) is a subsystem that is implemented as a series of hooks that allows the administrator to rewrite or discard messages.\n\nPossible uses include:\n\n- marking incoming messages with media from a given account or instance as sensitive\n- rejecting messages from a specific instance\n- rejecting reports (flags) from a specific instance\n- removing/unlisting messages from the public timelines\n- removing media from messages\n- sending only public messages to a specific instance\n\nThe MRF provides user-configurable policies. The default policy is `NoOpPolicy`, which disables the MRF functionality. Bonfire also includes an easy to use policy called `SimplePolicy` which maps messages matching certain pre-defined criterion to actions built into the policy module.\nIt is possible to use multiple, active MRF policies at the same time.","ref":"mrf.html"},{"type":"extras","title":"Using `SimplePolicy` - Message Rewrite Facility","doc":"`SimplePolicy` is capable of handling most common admin tasks.\n\nTo use `SimplePolicy`, you must enable it. Do so by adding the following to your `:instance` config object, so that it looks like this:\n\n```\nconfig :bonfire, :instance,\n  [...]\n  rewrite_policy: ActivityPub.MRF.SimplePolicy\n```\n\nOnce `SimplePolicy` is enabled, you can configure various groups in the `:mrf_simple` config object. These groups are:\n\n- `media_removal`: Servers in this group will have media stripped from incoming messages.\n- `media_nsfw`: Servers in this group will have the #nsfw tag and sensitive setting injected into incoming messages which contain media.\n- `reject`: Servers in this group will have their messages rejected.\n- `report_removal`: Servers in this group will have their reports (flags) rejected.\n\nServers should be configured as lists.","ref":"mrf.html#using-simplepolicy"},{"type":"extras","title":"Example - Message Rewrite Facility","doc":"This example will enable `SimplePolicy`, block media from `illegalporn.biz`, mark media as NSFW from `porn.biz` and `porn.business`, reject messages from `spam.com` and block reports (flags) from `troll.mob`:\n\n```\nconfig :activity_pub, :instance,\n  rewrite_policy: [ActivityPub.MRF.SimplePolicy]\n\nconfig :activity_pub, :mrf_simple,\n  media_removal: [\"illegalporn.biz\"],\n  media_nsfw: [\"porn.biz\", \"porn.business\"],\n  reject: [\"spam.com\"],\n  report_removal: [\"troll.mob\"]\n\n```","ref":"mrf.html#example"},{"type":"extras","title":"Use with Care - Message Rewrite Facility","doc":"The effects of MRF policies can be very drastic. It is important to use this functionality carefully. Always try to talk to an admin before writing an MRF policy concerning their instance.","ref":"mrf.html#use-with-care"},{"type":"extras","title":"Writing your own MRF Policy - Message Rewrite Facility","doc":"As discussed above, the MRF system is a modular system that supports pluggable policies. This means that an admin may write a custom MRF policy in Elixir or any other language that runs on the Erlang VM, by specifying the module name in the `rewrite_policy` config setting.\n\nFor example, here is a sample policy module which rewrites all messages to \"new message content\":\n\n```elixir\n# This is a sample MRF policy which rewrites all Notes to have \"new message\n# content.\"\ndefmodule Site.RewritePolicy do\n  @behavior ActivityPub.MRF\n\n  # Catch messages which contain Note objects with actual data to filter.\n  # Capture the object as `object`, the message content as `content` and the\n  # entire activity itself as `activity`.\n  @impl true\n  def filter(%{\"type\" => \"Create\", \"object\" => %{\"type\" => \"Note\", \"content\" => content} = object} = message)\n      when is_binary(content) do\n    # Subject / CW is stored as summary instead of `name` like other AS2 objects\n    # because of Mastodon doing it that way.\n    summary = object[\"summary\"]\n\n    # edits go here.\n    content = \"new message content\"\n\n    # Assemble the mutated object.\n    object =\n      object\n      |> Map.put(\"content\", content)\n      |> Map.put(\"summary\", summary)\n\n    # Assemble the mutated activity.\n    {:ok, Map.put(activity, \"object\", object)}\n  end\n\n  # Let all other messages through without modifying them.\n  @impl true\n  def filter(message), do: {:ok, message}\nend\n```\n\nIf you save this file as `lib/site/mrf/rewrite_policy.ex`, it will be included when you next rebuild Bonfire. You can enable it in the configuration like so:\n\n```\nconfig :activity_pub, :instance,\n  rewrite_policy: [\n    ActivityPub.MRF.SimplePolicy,\n    Site.RewritePolicy\n  ]\n```","ref":"mrf.html#writing-your-own-mrf-policy"},{"type":"extras","title":"Bonfire Classic","doc":"# Bonfire Classic\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) ecosystem and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places","ref":"classic.html"},{"type":"extras","title":"More information - Bonfire Classic","doc":"See the [main docs](../../README.md).","ref":"classic.html#more-information"},{"type":"extras","title":"Bonfire Community","doc":"# Bonfire Community \n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.UI.Groups](https://github.com/bonfire-ecosystem/bonfire_ui_groups) - groups\n- [Bonfire.UI.Topics](https://github.com/bonfire-ecosystem/bonfire_ui_topics) - topics","ref":"community.html"},{"type":"extras","title":"More information - Bonfire Community","doc":"See the [main docs](../../README.md).","ref":"community.html#more-information"},{"type":"extras","title":"Bonfire Cooperation","doc":"# Bonfire Cooperation \n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire.API.GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire.UI.ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire.Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire.ValueFlows.Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire.Breadpub](https://github.com/bonfire-networks/bonfire_breadpub) - needs & offers for mutual aid","ref":"cooperation.html"},{"type":"extras","title":"More information - Bonfire Cooperation","doc":"See the [main docs](../../README.md).","ref":"cooperation.html#more-information"},{"type":"extras","title":"Bonfire Coordination","doc":"# Bonfire Coordination \n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire.API.GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire.UI.ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire.UI.Coordination](https://github.com/bonfire-networks/bonfire_ui_coordinatio) - basic coordination UI for projects and communities\n- [Bonfire.UI.Kanban](https://github.com/bonfire-networks/bonfire_ui_kanban) - coordination tools with drag-and-drop card based UI","ref":"coordination.html"},{"type":"extras","title":"More information - Bonfire Coordination","doc":"See the [main docs](../../README.md).","ref":"coordination.html#more-information"},{"type":"extras","title":"Open Science Network","doc":"# Open Science Network\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) ecosystem and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- Etc...","ref":"open-science.html"},{"type":"extras","title":"More information - Open Science Network","doc":"See the [main docs](../../README.md).","ref":"open-science.html#more-information"},{"type":"extras","title":"Reflow","doc":"# Reflow\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) and [ValueFlows](http://valueflo.ws/) ecosystems and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire.Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire.ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire.ValueFlows.Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire.API.GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire.UI.ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire.UI.Reflow](https://github.com/bonfire-networks/bonfire_ui_reflow) - frontend for the Reflow project","ref":"reflow.html"},{"type":"extras","title":"More information - Reflow","doc":"See the [main docs](../../README.md).","ref":"reflow.html#more-information"},{"type":"extras","title":"Upcycle","doc":"# Upcycle\n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire:Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire:Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire:Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire:UI:Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire:Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire:Federate:ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire:Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire:Classify\n- [Bonfire:Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire:Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire:Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire:ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire:ValueFlows:Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire:API:GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire:UI:ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire:UI:Coordination](https://github.com/bonfire-networks/bonfire_ui_valueflows) - basic coordination UI for projects and communities\n- [Bonfire:Kanban](https://github.com/bonfire-networks/bonfire_breadpub) - coordination tools with drag-and-drop card UI\n- [Bonfire:Breadpub](https://github.com/bonfire-networks/bonfire_breadpub) - needs & offers for mutual aid\n- [Bonfire:Files](https://github.com/bonfire-networks/bonfire_files) - file management for bonfire apps\n- [Bonfire:Data:SharedUser](https://github.com/bonfire-networks/bonfire_data_shared_user) - database models for shared users in the bonfire ecosystem\n- [Bonfire:Upcycle](https://gitlab.com/msoe.edu-public/sdl/y22sdl/upcycle/bonfire_upcycle/-/tree/master) - Upcycle UI","ref":"upcycle.html"},{"type":"extras","title":"More information - Upcycle","doc":"See the [main docs](../../README.md).","ref":"upcycle.html#more-information"},{"type":"extras","title":"Bonfire.UI.Topics","doc":"# Bonfire.UI.Topics\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles UI for:\n\n- Browsing and using topics\n\nIt builds upon the schemas and functionality in `Bonfire.Classify` and `Bonfire.Tag`.","ref":"Bonfire.UI.Topics.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.Topics","doc":"","ref":"Bonfire.UI.Topics.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Topics","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Topics.html#copyright-and-license"},{"type":"extras","title":"Bonfire UI Groups","doc":"# Bonfire UI Groups\n\nPages and UI components for groups in Bonfire.\n\nIt builds upon the schemas and functionality in `Bonfire.Classify` and `Bonfire.Tag`.","ref":"Bonfire.UI.Groups.html"},{"type":"extras","title":"Roadmap - Bonfire UI Groups","doc":"[Group Milestone](https://github.com/bonfire-networks/bonfire-app/milestone/33)","ref":"Bonfire.UI.Groups.html#roadmap"},{"type":"extras","title":"Sponsors - Bonfire UI Groups","doc":"[Nlnet](https://nlnet.nl/project/Bonfire-FederatedGroups/index.html) | [Become a sponsor](https://opencollective.com/bonfire-networks)","ref":"Bonfire.UI.Groups.html#sponsors"},{"type":"extras","title":"📖 Documentation - Bonfire UI Groups","doc":"* [Website](https://bonfirenetworks.org) \n* [Set up an instance](docs/DEPLOY.md) - for testing and evaluation only!\n* [Hacking on Bonfire](docs/HACKING.md) \n* [Code documentation](https://doc.bonfirenetworks.org/api-reference.html#content) \n* [Community chat](https://matrix.to/#/%23bonfire-networks:matrix.org)","ref":"Bonfire.UI.Groups.html#documentation"},{"type":"extras","title":"Copyright and License - Bonfire UI Groups","doc":"Copyright (c) 2020-2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Groups.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.ValueFlows","doc":"# Bonfire.UI.ValueFlows\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows)","ref":"Bonfire.UI.Valueflows.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.ValueFlows","doc":"","ref":"Bonfire.UI.Valueflows.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.ValueFlows","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Valueflows.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Kanban","doc":"# Bonfire.UI.Kanban\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for a kanban app","ref":"Bonfire.UI.Kanban.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.Kanban","doc":"","ref":"Bonfire.UI.Kanban.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Kanban","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Kanban.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Coordination","doc":"# Bonfire.UI.Coordination\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows)","ref":"Bonfire.UI.Coordination.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.Coordination","doc":"","ref":"Bonfire.UI.Coordination.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Coordination","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Coordination.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Reflow","doc":"# Bonfire.UI.Reflow\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- UI components and views for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows)","ref":"Bonfire.UI.Reflow.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.Reflow","doc":"","ref":"Bonfire.UI.Reflow.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Reflow","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.UI.Reflow.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Files","doc":"# Bonfire.Files\n\nFile management extension for Bonfire.  \n\nBonfire Files wraps the `Entrepot` a file management library, \nadding support for media type checking, image resizing, and the like, \nalong with creating a [pointable][1] table for storage of file data.\n\n[1]: https://github.com/bonfire-networks/needle","ref":"Bonfire.Files.html"},{"type":"extras","title":"Configuration - Bonfire.Files","doc":"","ref":"Bonfire.Files.html#configuration"},{"type":"extras","title":"TODO's - Bonfire.Files","doc":"- Generate docs\n- More tests","ref":"Bonfire.Files.html#todo-s"},{"type":"extras","title":"Bonfire.API.GraphQL","doc":"# Bonfire.API.GraphQL\n\nAn library for [Bonfire](https://bonfire.cafe/) that contains:\n\n- GraphQL API utilities","ref":"Bonfire.API.Graphql.html"},{"type":"extras","title":"Handy commands - Bonfire.API.GraphQL","doc":"","ref":"Bonfire.API.Graphql.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.API.GraphQL","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.API.Graphql.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Classify","doc":"# Bonfire.Classify\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Defining categories/topics\n- Defining relationships (parent or related) between categories to create taxonomies\n\nUse Bonfire.Tag if you want to tag/classify posts or other objects with these categories/topics.","ref":"Bonfire.Classify.html"},{"type":"extras","title":"Handy commands - Bonfire.Classify","doc":"","ref":"Bonfire.Classify.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Classify","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Classify.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Tag","doc":"# Bonfire.Tag\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Tagging posts or other things (i.e. with a Category from Bonfire.Classify or a location from Bonfire.Geolocate)\n- @ mentions (WIP)\n- Hashtags (WIP)","ref":"Bonfire.Tag.html"},{"type":"extras","title":"Handy commands - Bonfire.Tag","doc":"","ref":"Bonfire.Tag.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Tag","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Tag.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Label","doc":"# Bonfire.Label\n\nBonfire.Label is a powerful and flexible extension designed to enhance content moderation and improve online safety. Inspired by the design principles outlined by Prosocial Design (specifically the [Label Misleading Content & Add Links to Reliable Related Content](https://www.prosocialdesign.org/library/label-misleading-content-add-links-to-reliable-related-content) pattern), this library enables the addition of custom labels and descriptions to user-generated posts. \n\nThis feature aids in identifying and marking potentially misleading, harmful, or unsafe content, while also providing users with links to reliable and related information.","ref":"Bonfire.Label.html"},{"type":"extras","title":"Features - Bonfire.Label","doc":"- **Custom Labeling**: Easily add custom labels to posts, categorizing them based on content, reliability, and safety.\n- **Dynamic Descriptions**: Append descriptions to posts to provide context, warnings, or additional information.\n- **Link to Reliable Sources**: Option to include up to 3 links to authoritative sources for further reading or fact-checking.\n- **Configurable Settings**: Tailor the permission system to fit the specific governance of your platform.\n- **User-friendly Interface**: Intuitive tools for moderators and administrators to manage labels and descriptions.","ref":"Bonfire.Label.html#features"},{"type":"extras","title":"Copyright and License - Bonfire.Label","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Label.html#copyright-and-license"},{"type":"extras","title":"Bonfire.OpenScience","doc":"# Bonfire.OpenScience\n\nSee https://bonfirenetworks.org/app/open-science/","ref":"Bonfire.OpenScience.html"},{"type":"extras","title":"Copyright and License - Bonfire.OpenScience","doc":"Copyright (c) 2024 Bonfire and Open Science Network Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.OpenScience.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Poll","doc":"# Bonfire.Poll\n\nAn extensions for asking questions, collecting options, and conducting ranked voting on [Bonfire](https://bonfire.cafe/)","ref":"Bonfire.Poll.html"},{"type":"extras","title":"Copyright and License - Bonfire.Poll","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Poll.html#copyright-and-license"},{"type":"extras","title":"Bonfire.OpenID","doc":"# Bonfire.OpenID\n\nAn extension to enable:\n- authenticating on Bonfire using an external identity using OpenID Connect\n- using your Bonfire identity to authenticate in other apps with OpenID Connect 1.0 or OAuth 2.0","ref":"Bonfire.OpenId.html"},{"type":"extras","title":"Copyright and License - Bonfire.OpenID","doc":"Powered by these libraries: \n- https://hex.pm/packages/boruta (MIT license)\n- https://hex.pm/packages/openid_connect (MIT license)\n\nExtension copyright (c) 2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.OpenId.html#copyright-and-license"},{"type":"extras","title":"ValueFlows","doc":"# ValueFlows\n\n`ValueFlows` is a [Bonfire](https://bonfire.cafe/) extension that implements [ValueFlows](https://valueflo.ws/) for federated networks to conduct economic activities.\n\nImplemented so far:\n\n- Intent\n- Proposal\n- Economic Event\n- Types of Action\n- Resource Specification\n- Economic Resource\n- Process Specification\n- Process\n- Claim (WIP)\n- Value Calculations (WIP)\n\nAs well as an optional GraphQL API for all of the above...","ref":"Bonfire.Valueflows.html"},{"type":"extras","title":"Handy commands - ValueFlows","doc":"","ref":"Bonfire.Valueflows.html#handy-commands"},{"type":"extras","title":"Copyright and License - ValueFlows","doc":"Copyright (c) 2021 ValueFlows, CommonsPub, Reflow & Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Valueflows.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Geolocate","doc":"# Bonfire.Geolocate\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Geolocation schema\n- Optional GraphQL API for geolocations\n- Geocoding of addresses\n- Reverse geocoding","ref":"Bonfire.Geolocate.html"},{"type":"extras","title":"Usage - Bonfire.Geolocate","doc":"If you want to use the map LiveView component, you will need to `npm add leaflet --save --prefix assets/` in your app, and import","ref":"Bonfire.Geolocate.html#usage"},{"type":"extras","title":"Handy commands - Bonfire.Geolocate","doc":"","ref":"Bonfire.Geolocate.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Geolocate","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Geolocate.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Quantify","doc":"# Bonfire.Quantify\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Units\n- Measures","ref":"Bonfire.Quantify.html"},{"type":"extras","title":"Handy commands - Bonfire.Quantify","doc":"","ref":"Bonfire.Quantify.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Quantify","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Quantify.html#copyright-and-license"},{"type":"extras","title":"Bonfire:Upcycle","doc":"# Bonfire:Upcycle\n\nUpcycle supports a network of high school fablabs in Milwaukee that receive contributions of materials from organizations in the community and share these with each other. It is implemented as a UI for [ValueFlows](https://github.com/bonfire-networks/bonfire_valueflows), which are both available as extensions for [Bonfire](https://bonfire.cafe/). Upcycle was initially created for [LearnDeep](https://learndeep.org/) by students at [MSOE](https://www.msoe.edu/), and is now being maintained by the Bonfire team.","ref":"Bonfire.Upcycle.html"},{"type":"extras","title":"Set up - Bonfire:Upcycle","doc":"Upcycle is packaged as part of the `cooperation` flavour of Bonfire. Check out the development or deployment [docs](https://doc.bonfirenetworks.org/readme.html) to get started.","ref":"Bonfire.Upcycle.html#set-up"},{"type":"extras","title":"Copyright and License - Bonfire:Upcycle","doc":"Copyright (c) 2022 all contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.Upcycle.html#copyright-and-license"},{"type":"extras","title":"Bonfire.ValueFlows.Observe","doc":"# Bonfire.ValueFlows.Observe\n\nAn extension for [ValueFlows](https://valueflo.ws/) on [Bonfire](https://bonfire.cafe/) that handles:\n\n- Observations\n    - with measurements\n    - with other phenomena","ref":"Bonfire.ValueflowsObserve.html"},{"type":"extras","title":"Handy commands - Bonfire.ValueFlows.Observe","doc":"","ref":"Bonfire.ValueflowsObserve.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.ValueFlows.Observe","doc":"Copyright (c) 2020 Bonfire and ValueFlows Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"Bonfire.ValueflowsObserve.html#copyright-and-license"},{"type":"extras","title":"Bonfire Spark","doc":"# Bonfire Spark\n\nAn essential Bonfire extension that sets up the other extensions and starts the app.\n\nNOTE: this extension uses top-level naming for the OTP app (`:bonfire`) and modules (`Bonfire.`).","ref":"Bonfire.html"},{"type":"extras","title":"ActivityPub","doc":"# ActivityPub\n\nActivityPub Library for elixir.\n\n**WORK IN PROGRESS, TESTING FEDERATION WITH DIFFERENT IMPLEMENTATIONS IS UNDERWAY**","ref":"ActivityPub.html"},{"type":"extras","title":"Installation - ActivityPub","doc":"1. Add this library to your dependencies in `mix.exs`\n\n```\ndefp deps do\n  [...]\n  {:activity_pub, git: \"https://github.com/bonfire-networks/activity_pub.git\", branch: \"stable\"} # branch can \"stable\", or \"develop\" for the bleeding edge\nend\n```\n\n2. Create an adapter module. To start, one created at\n   `lib/my_app/adapter.ex` might look like\n\n```elixir\ndefmodule MyApp.Adapter do\n  @moduledoc \"\"\"\n  Adapter functions delegated from the `ActivityPub` Library\n  \"\"\"\n\n  @behaviour ActivityPub.Federator.Adapter\nend\n```\n\nNote that, due to the defined `@behavior`, Elixir will warn you that\nthe required functions\n\n  * `base_url/0`\n  * `get_actor_by_id/1`\n  * `get_actor_by_username/1`\n  * `get_follower_local_ids/1`\n  * `get_following_local_ids/1`\n  * `get_redirect_url/1`\n  * `handle_activity/1`\n  * `maybe_create_remote_actor/1`\n  * `maybe_publish_object/2`\n  * `update_local_actor/2`\n  * `update_remote_actor/1`\n\nhave not yet been implemented though you will be able to start your\napp. Defining these allows `ActivityPub` to handle ActivityPub HTTP\nand database calls and operations. An example of an implemented\nadaptor can be found\n[here](https://github.com/bonfire-networks/bonfire_federate_activitypub/tree/main/lib/adapter\n\"Link to file hosted on GitHub\").\n\nThen set it in config\n\n```\nconfig :activity_pub, :adapter, MyApp.Adapter\n```\n\n3. Set your application repo in config\n\n```\nconfig :activity_pub, :repo, MyApp.Repo\n```\n\n4. Create a new ecto migration and call `ActivityPub.Migration.up/0` from it\n\n5. Inject AP routes to your router by adding `use ActivityPub.Web.Router` to your app's router module\n\n6. Copy the default AP config to your app's confix.exs\n\n```\nconfig :activity_pub, :mrf_simple,\n  media_removal: [],\n  media_nsfw: [],\n  report_removal: [],\n  accept: [],\n  avatar_removal: [],\n  banner_removal: []\n\nconfig :activity_pub, :instance,\n  hostname: \"example.com\",\n  federation_publisher_modules: [ActivityPub.Federator.APPublisher],\n  federation_reachability_timeout_days: 7,\n  federating: true,\n  rewrite_policy: []\n\nconfig :activity_pub, :http,\n  proxy_url: nil,\n  user_agent: \"Your app name\",\n  send_user_agent: true,\n  adapter: [\n    ssl_options: [\n      # Workaround for remote server certificate chain issues\n      partial_chain: &:hackney_connect.partial_chain/1,\n      # We don't support TLS v1.3 yet\n      versions: [:tlsv1, :\"tlsv1.1\", :\"tlsv1.2\"]\n    ]\n  ]\n  ```\n\n7. Change the hostname value in the instance config block to your instance's hostname \n\n8. If you don't already have Oban set up, follow the [Oban installation intructions](https://hexdocs.pm/oban/installation.html#content) and add the AP queues:\n\n```\nconfig :my_app, Oban, queues: [federator_incoming: 50, federator_outgoing: 50, remote_fetcher: 20]\n```\n\nNow you should be able to compile and run your app and move over to integration.","ref":"ActivityPub.html#installation"},{"type":"extras","title":"EctoSparkles","doc":"# EctoSparkles\n\nSome helpers to sparkle on top of [Ecto](https://hexdocs.pm/ecto/Ecto.html) \n\n- [`EctoSparkles.proload/3`](#proload-documentation) and `EctoSparkles.join_preload/2` to join and preload associations with less verbosity\n- [`EctoSparkles.reusable_join/5`](#reusable_join-documentation) to avoid duplicating joins \n- `EctoSparkles.Migrator` to run migrations, rollbacks, etc in a release and `EctoSparkles.AutoMigrator` to automatically run them at startup.\n- `EctoSparkles.DataMigration`: a behaviour implemented for data migrations (generally backfills).\n- `EctoSparkles.Log` to log slow or possible N+1 queries with telemetry (showing stacktraces)\n- `EctoSparkles.Changesets.Errors` to generate readable errors for changesets\n\nNOTE: you need to put something like `config :ecto_sparkles, :otp_app, :your_otp_app_name` in your app's config.\n\n\n## `proload` documentation\n\nA macro which tells Ecto to perform a join and preload of associations.\n\nBy default, Ecto preloads associations using a separate query for each association, which can degrade performance.\n\nYou can make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see examples below).","ref":"EctoSparkles.html"},{"type":"extras","title":"Examples using standard Ecto - EctoSparkles","doc":"```\n  query\n  |> join(:left, [o, activity: activity], assoc(:object), as: :object)\n  |> preload([l, activity: activity, object: object], activity: {activity, [object: object]})\n```\n\nEcto requires calling three different functions for this operation: `Query.join/4`, `Query.assoc/3` and `Query.preload/2`. \n\nHere's another example:\n\n```\n  Invoice\n  |> join(:left, [i], assoc(i, :customer), as: :customer)\n  |> join(:left, [i], assoc(i, :lines), as: :lines)\n  |> preload([lines: v, customers: c], lines: v, customer: c)\n```","ref":"EctoSparkles.html#examples-using-standard-ecto"},{"type":"extras","title":"Example using proload - EctoSparkles","doc":"With `proload`, you can accomplish this with just one line of code:\n\n```\nproload(query, activity: [:object])\n```\n\nAnd for the other example:\n```\nproload(Invoice, [:customer, :lines])\n```\n\nAs a bonus, it automatically makes use of `reusable_join` so calling it multiple times with the same association has no ill effects.","ref":"EctoSparkles.html#example-using-proload"},{"type":"extras","title":"Example using join_preload - EctoSparkles","doc":"`join_preload` is `proload`'s sister macro with a slightly different syntax:\n\n```\n  join_preload(query, [:activity, :object])\n```\n\nand:\n```\n  Invoice\n  |> join_preload(:customer)\n  |> join_preload(:lines)\n```\n\n\n## `reusable_join` documentation\n\nA macro similar to `Ecto.Query.join/{4,5}`, but can be called multiple times \nwith the same alias.\n\nNote that only the first join operation is performed, the subsequent ones that use the same alias\nare just ignored. Also note that because of this behaviour, its mandatory to specify an alias when\nusing this function.\n\nThis is helpful when you need to perform a join while building queries one filter at a time,\nbecause the same filter could be used multiple times or you could have multiple filters that\nrequire the same join, which poses a problem with how the `filter/3` callback work, as you\nneed to return a dynamic with the filtering, which means that the join must have an alias,\nand by default Ecto raises an error when you add multiple joins with the same alias.\n\nTo solve this, it is recommended to use this macro instead of the default `Ecto.Query.join/{4,5}`,\nin which case there will be only one join in the query that can be reused by multiple filters.","ref":"EctoSparkles.html#example-using-join_preload"},{"type":"extras","title":"Creating reusable joins - EctoSparkles","doc":"```elixir\nquery\n|> reusable_join(:left, [t1], t2 in \"other_table\", on: t1.id == t2.id, as: :other_a)\n|> reusable_join(:left, [t1], t2 in \"other_table\", on: t1.id == t2.id, as: :other_b)\n```","ref":"EctoSparkles.html#creating-reusable-joins"},{"type":"extras","title":"Copyright - EctoSparkles","doc":"- Copyright (c) 2021 Bonfire developers\n- Copyright (c) 2020 Up Learn\n- Copyright (c) 2019 Joshua Nussbaum \n\n- `join_preload` was originally forked from [Ecto.Preloader](https://github.com/joshnuss/ecto_preloader), licensed under WTFPL)\n- `reusable_join` was originally forked from [QueryElf](https://gitlab.com/up-learn-uk/query-elf), licensed under Apache License Version 2.0\n- original code licensed under Apache License Version 2.0","ref":"EctoSparkles.html#copyright"},{"type":"extras","title":"Absinthe Client","doc":"# Absinthe Client\n\n`AbsintheClient` is an Elixir library to perform server-side queries on a local Absinthe-based GraphQL API.\n\nIt is a WIP adaption of `Absinthe.Phoenix.Controller` that can be used with LiveView or in any other context.\n\nUsage:\n\n```elixir\ndefmodule MyApp.Web.WidgetsLive do\n  use MyApp.Web, :live_view\n\n  use AbsintheClient, schema: Bonfire.API.GraphQL.Schema, action: [mode: :internal]\n\n  def mount(params, session, socket) do\n    widgets = awesome_widgets(socket)\n    IO.inspect(widgets)\n\n    {:ok, socket\n    |> assign(\n      widgets: widgets\n    )}\n  end\n\n  # notice we use snakecase rather than camelcase\n  @graphql \"\"\"\n    {\n      awesome_widgets\n    }\n  \"\"\"\n  def awesome_widgets(socket), do: liveql(socket, :awesome_widgets)\n\nend\n```","ref":"AbsintheClient.html"},{"type":"extras","title":"License - Absinthe Client","doc":"See [LICENSE.md](./LICENSE.md).","ref":"AbsintheClient.html#license"},{"type":"extras","title":"Grumble","doc":"# Grumble\n\nA DSL for generating GraphQL queries","ref":"Grumble.html"},{"type":"extras","title":"Status: beta - Grumble","doc":"We use this in our tests at work to generate all the queries (because\nwe outgrew string concatenation). I'm not sure I'd want to depend on\nit in production yet because it's hard to feel like it's had a proper\nstress testing.\n\n* Needs (better) tests and documentation.\n* Missing support for some things we don't use.","ref":"Grumble.html#status-beta"},{"type":"extras","title":"Usage - Grumble","doc":"Add to your deps:\n\n```elixir\n{:grumble, \"~> 0.1.0\"}\n```\n\nSimple example:\n\n```elixir\nimport Grumble\nalias Grumble.PP\n\nIO.puts(PP.to_string(\n  query(\n    params: [community_id: type!(:string)],\n    fields: [\n      field(\n        :community,\n        args: [community_id: var(:community_id)],\n        fields: [:id, :name]\n      )\n    ]\n  )\n))\n```\n\nOutput:\n\n```\nquery($communityId: String!) {\n  community(communityId: $communityId) {\n    name\n    id\n  }\n}\n```","ref":"Grumble.html#usage"},{"type":"extras","title":"Guide - Grumble","doc":"Most of the useful functions are in the `Grumble` module. From there\nyou can read which arguments are understood by the relevant `new`\nfunction. We apologise for the poor documentation, please feel free to\ncontribute better docs!","ref":"Grumble.html#guide"},{"type":"extras","title":"Contributing - Grumble","doc":"Contributions are welcome, even just doc fixes or suggestions.\n\nThis project has adopted a [Code of Conduct](CONDUCT.md) based on the\nContributor Covenant. Please be nice when interacting with the community.","ref":"Grumble.html#contributing"},{"type":"extras","title":"Copyright and License - Grumble","doc":"Copyright (c) 2020 Grumble contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"Grumble.html#copyright-and-license"},{"type":"extras","title":"Classic","doc":"| Package                      | License                            | Version    | Link                                                             |\n|------------------------------|------------------------------------|------------|------------------------------------------------------------------|\n| absinthe                     | MIT                                | 1.7.0      | https://hex.pm/packages/absinthe                                 |\n| absinthe_error_payload       | BSD-3; Unrecognized license        | 1.1.4      | https://hex.pm/packages/absinthe_error_payload                   |\n| absinthe_phoenix             | MIT                                | 2.0.2      | https://hex.pm/packages/absinthe_phoenix                         |\n| absinthe_plug                | MIT                                | 1.5.8      | https://hex.pm/packages/absinthe_plug                            |\n| activity_pub                 | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/activity_pub                 |\n| argon2_elixir                | Apache 2.0                         | ~> 3.0     | https://hex.pm/packages/argon2_elixir                            |\n| arrows                       | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/arrows                       |\n| bamboo                       | MIT                                | 2.2.0      | https://hex.pm/packages/bamboo                                   |\n| bamboo_smtp                  | MIT                                | 4.2.1      | https://hex.pm/packages/bamboo_smtp                              |\n| benchee                      | MIT                                | 1.1.0      | https://hex.pm/packages/benchee                                  |\n| benchee_html                 | MIT                                | 1.0.0      | https://hex.pm/packages/benchee_html                             |\n| benchee_json                 | MIT                                | 1.0.0      | https://hex.pm/packages/benchee_json                             |\n| bonfire_api_graphql          | MPL 2.0                            |            | https://github.com/bonfire-networks/bonfire_api_graphql          |\n| bonfire_boundaries           | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_boundaries           |\n| bonfire_classify             | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_classify             |\n| bonfire_common               | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_common               |\n| bonfire_data_access_control  | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_access_control  |\n| bonfire_data_activity_pub    | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_activity_pub    |\n| bonfire_data_edges           | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_edges           |\n| bonfire_data_identity        | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_identity        |\n| bonfire_data_shared_user     | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_shared_user     |\n| bonfire_data_social          | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_social          |\n| bonfire_ecto                 | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/bonfire_ecto                 |\n| bonfire_editor_ck            | MIT                                | 0.1.0      | https://github.com/bonfire-networks/bonfire_editor_ck            |\n| bonfire_editor_quill         | AGPL v3                            | 0.0.1      | https://github.com/bonfire-networks/bonfire_editor_quill         |\n| bonfire_epics                | Apache 2.0                         | 0.1.0      | https://github.com/bonfire-networks/bonfire_epics                |\n| bonfire_fail                 | MPL 2.0                            |            | https://github.com/bonfire-networks/bonfire_fail                 |\n| bonfire_federate_activitypub | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_federate_activitypub |\n| bonfire_files                | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_files                |\n| bonfire_invite_links         | AGPL v3                            | 0.0.1      | https://github.com/bonfire-networks/bonfire_invite_links         |\n| bonfire_mailer               | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_mailer               |\n| bonfire_me                   | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_me                   |\n| bonfire_search               | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_search               |\n| bonfire_social               | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_social               |\n| bonfire_tag                  | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_tag                  |\n| bonfire_ui_common            | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_common            |\n| bonfire_ui_me                | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_me                |\n| bonfire_ui_social            | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_social            |\n| cachex                       | MIT                                | 3.4.0      | https://hex.pm/packages/cachex                                   |\n| certifi                      | BSD                                | 2.9.0      | https://hex.pm/packages/certifi                                  |\n| cldr_utils                   | Apache 2.0                         | 2.17.2     | https://hex.pm/packages/cldr_utils                               |\n| combine                      | MIT                                | 0.10.0     | https://hex.pm/packages/combine                                  |\n| comeonin                     | BSD-3-Clause; Unrecognized license | 5.3.3      | https://hex.pm/packages/comeonin                                 |\n| connection                   | Apache 2.0                         | 1.1.0      | https://hex.pm/packages/connection                               |\n| cowboy                       | ISC                                | 2.9.0      | https://hex.pm/packages/cowboy                                   |\n| cowboy_telemetry             | Apache 2.0                         | 0.4.0      | https://hex.pm/packages/cowboy_telemetry                         |\n| cowlib                       | ISC                                | 2.11.0     | https://hex.pm/packages/cowlib                                   |\n| dataloader                   | MIT                                | 1.0.10     | https://hex.pm/packages/dataloader                               |\n| db_connection                | Apache 2.0                         | 2.4.2      | https://hex.pm/packages/db_connection                            |\n| decimal                      | Apache 2.0                         | 2.0.0      | https://hex.pm/packages/decimal                                  |\n| deep_merge                   | MIT                                | 1.0.0      | https://hex.pm/packages/deep_merge                               |\n| earmark                      | Apache 2.0                         | 1.4.28 | https://hex.pm/packages/earmark                                  |\n| earmark_parser               | Apache 2.0                         | 1.4.26     | https://hex.pm/packages/earmark_parser                           |\n| ecto                         | Apache 2.0                         | 3.8.4      | https://hex.pm/packages/ecto                                     |\n| ecto_erd                     | Apache 2.0                         | 0.4.2      | https://hex.pm/packages/ecto_erd                                 |\n| ecto_materialized_path       | Apache 2.0                         | 0.3.0      | https://github.com/bonfire-networks/ecto_materialized_path       |\n| ecto_psql_extras             | MIT                                | 0.7.4      | https://hex.pm/packages/ecto_psql_extras                         |\n| ecto_shorts                  | MIT                                | 1.1.1      | https://github.com/bonfire-networks/ecto_shorts                  |\n| ecto_sparkles                | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/ecto_sparkles                |\n| ecto_sql                     | Apache 2.0                         | 3.8.3      | https://hex.pm/packages/ecto_sql                                 |\n| elixir_make                  | Apache 2.0                         | ~> 0.6     | https://hex.pm/packages/elixir_make                              |\n| email_checker                | MIT                                | 0.2.4      | https://hex.pm/packages/email_checker                            |\n| emote                        | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/emote                        |\n| eqrcode                      | MIT                                | 0.1.10     | https://hex.pm/packages/eqrcode                                  |\n| eternal                      | MIT                                | 1.2.2      | https://hex.pm/packages/eternal                                  |\n| ex_aws                       | MIT                                | 2.3.2      | https://hex.pm/packages/ex_aws                                   |\n| ex_aws_s3                    | MIT                                | 2.3.2      | https://hex.pm/packages/ex_aws_s3                                |\n| ex_cldr                      | Apache 2.0                         | 2.30.0     | https://hex.pm/packages/ex_cldr                                  |\n| ex_cldr_languages            | Apache 2.0                         | 0.3.3      | https://hex.pm/packages/ex_cldr_languages                        |\n| ex_cldr_plugs                | Apache 2.0                         | 1.0.0      | https://hex.pm/packages/ex_cldr_plugs                            |\n| ex_doc                       | Apache 2.0                         | 0.28.4     | https://hex.pm/packages/ex_doc                                   |\n| ex_machina                   | MIT                                | ~> 2.4     | https://hex.pm/packages/ex_machina                               |\n| ex_ulid                      | Apache 2.0                         | 0.1.0      | https://hex.pm/packages/ex_ulid                                  |\n| ex_unit_notifier             | MIT                                | ~> 1.0     | https://hex.pm/packages/ex_unit_notifier                         |\n| exsync                       | BSD 3-Clause; Unrecognized license | 0.2.4      | https://hex.pm/packages/exsync                                   |\n| faker                        | MIT                                | 0.17.0     | https://hex.pm/packages/faker                                    |\n| fast_ngram                   | MIT                                | 1.2.0      | https://hex.pm/packages/fast_ngram                               |\n| fetch_favicon                | MIT                                | 0.1.3      | https://hex.pm/packages/fetch_favicon                            |\n| file_info                    | MIT                                | 0.0.4      | https://hex.pm/packages/file_info                                |\n| file_system                  | WTFPL                              | 0.2.10     | https://hex.pm/packages/file_system                              |\n| flame_on                     | MIT                                | 0.5.0      | https://hex.pm/packages/flame_on                                 |\n| exto                       | Apache 2.0                         | 0.2.3      | https://github.com/bonfire-networks/exto                       |\n| floki                        | MIT                                | 0.32.1     | https://hex.pm/packages/floki                                    |\n| gen_smtp                     | BSD-2-Clause; Unrecognized license | 1.2.0      | https://hex.pm/packages/gen_smtp                                 |\n| geo                          | MIT                                | 3.4.3      | https://hex.pm/packages/geo                                      |\n| gettext                      | Apache 2.0                         | 0.19.1     | https://hex.pm/packages/gettext                                  |\n| grumble                      | Apache 2.0                         | ~> 0.1.3   | https://hex.pm/packages/grumble                                  |\n| hackney                      | Apache 2.0                         | 1.18.1     | https://hex.pm/packages/hackney                                  |\n| html_entities                | MIT                                | 0.5.2      | https://hex.pm/packages/html_entities                            |\n| html_sanitize_ex             | MIT                                | 1.4.2      | https://hex.pm/packages/html_sanitize_ex                         |\n| http_signatures              | GPL v3                             | 0.1.0      | https://git.pleroma.social/pleroma/http_signatures.git           |\n| httpoison                    | MIT                                | 1.8.1      | https://hex.pm/packages/httpoison                                |\n| idna                         | MIT                                | 6.1.1      | https://hex.pm/packages/idna                                     |\n| inflex                       | Apache 2.0                         | 2.1.0      | https://hex.pm/packages/inflex                                   |\n| jason                        | Apache 2.0                         | 1.3.0      | https://hex.pm/packages/jason                                    |\n| jumper                       | MIT                                | 1.0.1      | https://hex.pm/packages/jumper                                   |\n| libgraph                     | MIT                                | 0.13.3     | https://hex.pm/packages/libgraph                                 |\n| licensir                     | MIT                                | 0.7.0      | https://github.com/bonfire-networks/licensir                     |\n| linkify                      | MIT                                | 0.2.0      | https://github.com/bonfire-networks/linkify                      |\n| makeup                       | BSD; Unrecognized license          | 1.1.0      | https://hex.pm/packages/makeup                                   |\n| makeup_diff                  | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_diff                              |\n| makeup_eex                   | BSD; Unrecognized license          | 0.1.1      | https://hex.pm/packages/makeup_eex                               |\n| makeup_elixir                | BSD; Unrecognized license          | 0.16.0     | https://hex.pm/packages/makeup_elixir                            |\n| makeup_erlang                | BSD                                | 0.1.1      | https://hex.pm/packages/makeup_erlang                            |\n| makeup_graphql               | BSD                                | 0.1.2      | https://hex.pm/packages/makeup_graphql                           |\n| makeup_html                  | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_html                              |\n| makeup_js                    | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_js                                |\n| makeup_sql                   | BSD                                | 0.1.0      | https://hex.pm/packages/makeup_sql                               |\n| meck                         | Apache 2.0                         | 0.9.2      | https://hex.pm/packages/meck                                     |\n| metrics                      | BSD                                | 1.0.1      | https://hex.pm/packages/metrics                                  |\n| mime                         | Apache 2.0                         | 1.6.0      | https://hex.pm/packages/mime                                     |\n| mimerl                       | MIT                                | 1.2.0      | https://hex.pm/packages/mimerl                                   |\n| mimetype_parser              | MIT                                | 0.1.3      | https://hex.pm/packages/mimetype_parser                          |\n| mix_test_interactive         | MIT                                | ~> 1.2     | https://hex.pm/packages/mix_test_interactive                     |\n| mix_test_watch               | MIT                                | ~> 1.0     | https://hex.pm/packages/mix_test_watch                           |\n| mix_unused                   | MIT; Unrecognized license          | 0.4.0      | https://hex.pm/packages/mix_unused                               |\n| mochiweb                     | MIT                                | 2.22.0     | https://hex.pm/packages/mochiweb                                 |\n| mock                         | MIT                                | ~> 0.3     | https://hex.pm/packages/mock                                     |\n| mogrify                      | MIT                                | 0.9.1      | https://hex.pm/packages/mogrify                                  |\n| mox                          | Apache 2.0                         | ~> 1.0     | https://hex.pm/packages/mox                                      |\n| nimble_parsec                | Apache 2.0                         | 1.2.3      | https://hex.pm/packages/nimble_parsec                            |\n| nimble_totp                  | Apache 2.0                         | 0.2.0      | https://hex.pm/packages/nimble_totp                              |\n| nodeinfo                     | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/nodeinfo                     |\n| oban                         | Apache 2.0                         | 2.8.0      | https://hex.pm/packages/oban                                     |\n| paginator                    | MIT                                | 1.0.4      | https://github.com/bonfire-networks/paginator                    |\n| pane                         | MIT                                | 0.4.1      | https://hex.pm/packages/pane                                     |\n| parse_trans                  | Apache 2.0                         | 3.3.1      | https://hex.pm/packages/parse_trans                              |\n| pbkdf2_elixir                | BSD-3-Clause; Unrecognized license | 2.0.0      | https://hex.pm/packages/pbkdf2_elixir                            |\n| periscope                    | Apache 2.0                         | 0.4.6      | https://hex.pm/packages/periscope                                |\n| phoenix                      | MIT                                | 1.6.10     | https://hex.pm/packages/phoenix                                  |\n| phoenix_ecto                 | MIT                                | 4.4.0      | https://hex.pm/packages/phoenix_ecto                             |\n| phoenix_gon                  | MIT                                | 0.4.1      | https://github.com/bonfire-networks/phoenix_gon                  |\n| phoenix_html                 | MIT                                | 3.2.0      | https://hex.pm/packages/phoenix_html                             |\n| phoenix_live_dashboard       | MIT                                | 0.6.5      | https://hex.pm/packages/phoenix_live_dashboard                   |\n| phoenix_live_reload          | MIT                                | 1.3.3      | https://hex.pm/packages/phoenix_live_reload                      |\n| phoenix_live_view            | MIT                                | 0.17.10    | https://hex.pm/packages/phoenix_live_view                        |\n| phoenix_pubsub               | MIT                                | 2.1.1      | https://hex.pm/packages/phoenix_pubsub                           |\n| phoenix_view                 | MIT                                | 1.1.2      | https://hex.pm/packages/phoenix_view                             |\n| plug                         | Apache 2.0                         | 1.13.6     | https://hex.pm/packages/plug                                     |\n| plug_cowboy                  | Apache 2.0                         | 2.5.2      | https://hex.pm/packages/plug_cowboy                              |\n| plug_crypto                  | Apache 2.0                         | 1.2.2      | https://hex.pm/packages/plug_crypto                              |\n| pointers                     | Apache 2.0                         | 0.6.0      | https://github.com/bonfire-networks/pointers                     |\n| needle_ulid                | MIT                                | 0.2.2      | https://github.com/bonfire-networks/needle_ulid                |\n| postgrex                     | Apache 2.0                         | 0.16.3     | https://hex.pm/packages/postgrex                                 |\n| pseudo_gettext               | Undefined                          | 0.1.0      | https://github.com/tmbb/pseudo_gettext                           |\n| ranch                        | ISC                                | 1.8.0      | https://hex.pm/packages/ranch                                    |\n| recase                       | MIT                                | 0.7.0      | https://hex.pm/packages/recase                                   |\n| redirect                     | Apache 2.0                         | 0.3.0      | https://hex.pm/packages/redirect                                 |\n| scribe                       | MIT                                | 0.10.0     | https://hex.pm/packages/scribe                                   |\n| sentry                       | MIT                                | 8.0.6      | https://hex.pm/packages/sentry                                   |\n| sleeplocks                   | MIT                                | 1.1.1      | https://hex.pm/packages/sleeplocks                               |\n| sobelow                      | Apache 2.0                         | 0.11.1     | https://hex.pm/packages/sobelow                                  |\n| solid                        | MIT                                | 0.12.0     | https://hex.pm/packages/solid                                    |\n| sourceror                    | Apache 2.0                         | 0.11.1     | https://hex.pm/packages/sourceror                                |\n| ssl_verify_fun               | MIT                                | 1.1.6      | https://hex.pm/packages/ssl_verify_fun                           |\n| statistex                    | MIT                                | 1.0.0      | https://hex.pm/packages/statistex                                |\n| surface                      | MIT                                | 0.7.4      | https://hex.pm/packages/surface                                  |\n| surface_heroicons            | Undefined                          | 0.5.3      | https://github.com/rocketinsights/surface_heroicons              |\n| sweet_xml                    | MIT                                | 0.7.3      | https://hex.pm/packages/sweet_xml                                |\n| table_rex                    | MIT                                | 3.1.1      | https://hex.pm/packages/table_rex                                |\n| telemetry                    | Apache 2.0                         | 1.1.0      | https://hex.pm/packages/telemetry                                |\n| telemetry_metrics            | Apache 2.0                         | 0.6.1      | https://hex.pm/packages/telemetry_metrics                        |\n| telemetry_poller             | Apache 2.0                         | 1.0.0      | https://hex.pm/packages/telemetry_poller                         |\n| tesla                        | MIT                                | 1.4.4      | https://hex.pm/packages/tesla                                    |\n| timex                        | MIT                                | 3.7.8      | https://hex.pm/packages/timex                                    |\n| twinkle_star                 | GPL v3                             | 0.1.0      | https://github.com/bonfire-networks/twinkle_star                 |\n| typed_struct                 | MIT                                | ~> 0.3.0   | https://hex.pm/packages/typed_struct                             |\n| tzdata                       | MIT                                | 1.1.1      | https://hex.pm/packages/tzdata                                   |\n| unicode_util_compat          | Apache 2.0                         | 0.7.0      | https://hex.pm/packages/unicode_util_compat                      |\n| unsafe                       | MIT                                | 1.0.1      | https://hex.pm/packages/unsafe                                   |\n| verbs                        | MIT                                | 0.6.1      | https://github.com/shannonwells/verbs_ex                         |\n| voodoo                       | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/voodoo                       |\n| waffle                       | Apache 2.0                         | 1.1.6      | https://hex.pm/packages/waffle                                   |\n| wallaby                      | MIT                                | ~> 0.29.1  | https://hex.pm/packages/wallaby                                  |\n| web_driver_client            | MIT                                | ~> 0.2.0   | https://hex.pm/packages/web_driver_client                        |\n| where                        | Apache 2.0                         | 0.1.0      | https://github.com/bonfire-networks/untangle                        |\n| zest                         | Apache 2.0                         | 0.1.2      | https://hex.pm/packages/zest                                     |\n|------------------------------|------------------------------------|------------|------------------------------------------------------------------|","ref":"deps-classic.html"},{"type":"extras","title":"Cooperation","doc":"| Package                      | License                            | Version  | Link                                                             |\n|------------------------------|------------------------------------|----------|------------------------------------------------------------------|\n| absinthe                     | MIT                                | 1.7.0    | https://hex.pm/packages/absinthe                                 |\n| absinthe_client              | MIT                                | 2.0.0    | https://github.com/bonfire-networks/absinthe_client.git          |\n| absinthe_error_payload       | BSD-3; Unrecognized license        | 1.1.4    | https://hex.pm/packages/absinthe_error_payload                   |\n| absinthe_phoenix             | MIT                                | 2.0.2    | https://hex.pm/packages/absinthe_phoenix                         |\n| absinthe_plug                | MIT                                | 1.5.8    | https://hex.pm/packages/absinthe_plug                            |\n| activity_pub                 | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/activity_pub                 |\n| argon2_elixir                | Apache 2.0                         | ~> 2.4   | https://hex.pm/packages/argon2_elixir                            |\n| arrows                       | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/arrows                       |\n| bamboo                       | MIT                                | 2.2.0    | https://hex.pm/packages/bamboo                                   |\n| bamboo_smtp                  | MIT                                | 4.1.0    | https://hex.pm/packages/bamboo_smtp                              |\n| bonfire_api_graphql          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_api_graphql          |\n| bonfire_boundaries           | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_boundaries           |\n| bonfire_breadpub             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_breadpub             |\n| bonfire_classify             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_classify             |\n| bonfire_common               | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_common               |\n| bonfire_data_access_control  | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_access_control  |\n| bonfire_data_activity_pub    | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_activity_pub    |\n| bonfire_data_assort          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_assort          |\n| bonfire_data_edges           | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_edges           |\n| bonfire_data_identity        | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_identity        |\n| bonfire_data_shared_user     | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_shared_user     |\n| bonfire_data_social          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_social          |\n| bonfire_editor_ck            | MIT                                | 0.1.0    | https://github.com/bonfire-networks/bonfire_editor_ck            |\n| bonfire_epics                | Apache 2.0                         | 0.1.0    | https://github.com/bonfire-networks/bonfire_epics                |\n| bonfire_fail                 | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_fail                 |\n| bonfire_federate_activitypub | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_federate_activitypub |\n| bonfire_files                | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_files                |\n| bonfire_geolocate            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_geolocate            |\n| bonfire_invite_links         | AGPL v3                            | 0.0.1    | https://github.com/bonfire-networks/bonfire_invite_links         |\n| bonfire_mailer               | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_mailer               |\n| bonfire_me                   | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_me                   |\n| bonfire_quantify             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_quantify             |\n| bonfire_search               | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_search               |\n| bonfire_social               | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_social               |\n| bonfire_tag                  | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_tag                  |\n| bonfire_ui_coordination      | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_coordination      |\n| bonfire_ui_kanban            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_kanban            |\n| bonfire_ui_social            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_social            |\n| bonfire_ui_valueflows        | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_valueflows        |\n| bonfire_valueflows           | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_valueflows           |\n| bonfire_valueflows_observe   | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_valueflows_observe   |\n| bonfire_website              | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_website              |\n| cachex                       | MIT                                | 3.4.0    | https://hex.pm/packages/cachex                                   |\n| certifi                      | BSD                                | 2.9.0    | https://hex.pm/packages/certifi                                  |\n| cldr_utils                   | Apache 2.0                         | 2.17.1   | https://hex.pm/packages/cldr_utils                               |\n| combine                      | MIT                                | 0.10.0   | https://hex.pm/packages/combine                                  |\n| comeonin                     | BSD-3-Clause; Unrecognized license | 5.3.3    | https://hex.pm/packages/comeonin                                 |\n| connection                   | Apache 2.0                         | 1.1.0    | https://hex.pm/packages/connection                               |\n| cowboy                       | ISC                                | 2.9.0    | https://hex.pm/packages/cowboy                                   |\n| cowboy_telemetry             | Apache 2.0                         | 0.4.0    | https://hex.pm/packages/cowboy_telemetry                         |\n| cowlib                       | ISC                                | 2.11.0   | https://hex.pm/packages/cowlib                                   |\n| dataloader                   | MIT                                | 1.0.10   | https://hex.pm/packages/dataloader                               |\n| db_connection                | Apache 2.0                         | 2.4.1    | https://hex.pm/packages/db_connection                            |\n| decimal                      | Apache 2.0                         | 2.0.0    | https://hex.pm/packages/decimal                                  |\n| earmark                      | Apache 2.0                         | 1.4.20   | https://hex.pm/packages/earmark                                  |\n| earmark_parser               | Apache 2.0                         | 1.4.18   | https://hex.pm/packages/earmark_parser                           |\n| ecto                         | Apache 2.0                         | 3.7.1    | https://hex.pm/packages/ecto                                     |\n| ecto_erd                     | Apache 2.0                         | 0.4.1    | https://hex.pm/packages/ecto_erd                                 |\n| ecto_materialized_path       | Apache 2.0                         | 0.3.0    | https://github.com/bonfire-networks/ecto_materialized_path       |\n| ecto_psql_extras             | MIT                                | 0.7.4    | https://hex.pm/packages/ecto_psql_extras                         |\n| ecto_ranked                  | MIT                                | 0.5.0    | https://hex.pm/packages/ecto_ranked                              |\n| ecto_shorts                  | MIT                                | 1.1.1    | https://github.com/bonfire-networks/ecto_shorts                  |\n| ecto_sparkles                | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/ecto_sparkles                |\n| ecto_sql                     | Apache 2.0                         | 3.7.2    | https://hex.pm/packages/ecto_sql                                 |\n| eflambe                      | Apache 2.0                         | 0.2.2    | https://hex.pm/packages/eflambe                                  |\n| elixir_make                  | Apache 2.0                         | ~> 0.6   | https://hex.pm/packages/elixir_make                              |\n| email_checker                | MIT                                | 0.2.4    | https://hex.pm/packages/email_checker                            |\n| emote                        | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/emote                        |\n| eternal                      | MIT                                | 1.2.2    | https://hex.pm/packages/eternal                                  |\n| ex_cldr                      | Apache 2.0                         | 2.26.1   | https://hex.pm/packages/ex_cldr                                  |\n| ex_doc                       | Apache 2.0                         | 0.28.1   | https://hex.pm/packages/ex_doc                                   |\n| ex_machina                   | MIT                                | ~> 2.4   | https://hex.pm/packages/ex_machina                               |\n| ex_unit_notifier             | MIT                                | ~> 1.0   | https://hex.pm/packages/ex_unit_notifier                         |\n| exsync                       | BSD 3-Clause; Unrecognized license | 0.2.4    | https://hex.pm/packages/exsync                                   |\n| faker                        | MIT                                | 0.17.0   | https://hex.pm/packages/faker                                    |\n| fast_ngram                   | MIT                                | 1.2.0    | https://hex.pm/packages/fast_ngram                               |\n| file_info                    | MIT                                | 0.0.4    | https://hex.pm/packages/file_info                                |\n| file_system                  | WTFPL                              | 0.2.10   | https://hex.pm/packages/file_system                              |\n| flame_on                     | MIT                                | 0.2.1    | https://hex.pm/packages/flame_on                                 |\n| exto                       | Apache 2.0                         | 0.2.3    | https://github.com/bonfire-networks/exto                       |\n| floki                        | MIT                                | 0.32.0   | https://hex.pm/packages/floki                                    |\n| gen_smtp                     | BSD 2-clause; Unrecognized license | 1.1.1    | https://hex.pm/packages/gen_smtp                                 |\n| geo                          | MIT                                | 3.4.3    | https://hex.pm/packages/geo                                      |\n| geo_postgis                  | MIT                                | 3.4.1    | https://hex.pm/packages/geo_postgis                              |\n| geocoder                     | MIT                                | 1.1.4    | https://hex.pm/packages/geocoder                                 |\n| geohash                      | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/geohash                                  |\n| gettext                      | Apache 2.0                         | 0.19.1   | https://hex.pm/packages/gettext                                  |\n| git_diff                     | MIT                                | 0.6.3    | https://hex.pm/packages/git_diff                                 |\n| grumble                      | Apache 2.0                         | ~> 0.1.3 | https://hex.pm/packages/grumble                                  |\n| hackney                      | Apache 2.0                         | 1.18.1   | https://hex.pm/packages/hackney                                  |\n| html_entities                | MIT                                | 0.5.2    | https://hex.pm/packages/html_entities                            |\n| html_sanitize_ex             | MIT                                | 1.4.2    | https://hex.pm/packages/html_sanitize_ex                         |\n| http_signatures              | GPL v3                             | 0.1.0    | https://git.pleroma.social/pleroma/http_signatures.git           |\n| httpoison                    | MIT                                | 1.8.0    | https://hex.pm/packages/httpoison                                |\n| hut                          | MIT                                | 1.3.0    | https://hex.pm/packages/hut                                      |\n| idna                         | MIT                                | 6.1.1    | https://hex.pm/packages/idna                                     |\n| inflex                       | Apache 2.0                         | 2.1.0    | https://hex.pm/packages/inflex                                   |\n| jason                        | Apache 2.0                         | 1.3.0    | https://hex.pm/packages/jason                                    |\n| jumper                       | MIT                                | 1.0.1    | https://hex.pm/packages/jumper                                   |\n| licensir                     | MIT                                | 0.7.0    | https://github.com/bonfire-networks/licensir                     |\n| linkify                      | MIT                                | 0.2.0    | https://github.com/bonfire-networks/linkify                      |\n| makeup                       | BSD; Unrecognized license          | 1.0.5    | https://hex.pm/packages/makeup                                   |\n| makeup_elixir                | BSD; Unrecognized license          | 0.15.2   | https://hex.pm/packages/makeup_elixir                            |\n| makeup_erlang                | BSD                                | 0.1.1    | https://hex.pm/packages/makeup_erlang                            |\n| mappable                     | New BSD                            | 0.2.4    | https://hex.pm/packages/mappable                                 |\n| meck                         | Apache 2.0                         | 0.9.2    | https://hex.pm/packages/meck                                     |\n| metrics                      | BSD                                | 1.0.1    | https://hex.pm/packages/metrics                                  |\n| mime                         | Apache 2.0                         | 1.6.0    | https://hex.pm/packages/mime                                     |\n| mimerl                       | MIT                                | 1.2.0    | https://hex.pm/packages/mimerl                                   |\n| mimetype_parser              | MIT                                | 0.1.3    | https://hex.pm/packages/mimetype_parser                          |\n| mix_test_interactive         | MIT                                | ~> 1.0   | https://hex.pm/packages/mix_test_interactive                     |\n| mix_test_watch               | MIT                                | ~> 1.0   | https://hex.pm/packages/mix_test_watch                           |\n| mix_unused                   | MIT; Unrecognized license          | 0.3.0    | https://hex.pm/packages/mix_unused                               |\n| mochiweb                     | MIT                                | 2.22.0   | https://hex.pm/packages/mochiweb                                 |\n| mock                         | MIT                                | ~> 0.3   | https://hex.pm/packages/mock                                     |\n| neuron                       | ISC                                | 5.0.0    | https://hex.pm/packages/neuron                                   |\n| nimble_parsec                | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/nimble_parsec                            |\n| nodeinfo                     | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/nodeinfo                     |\n| oban                         | Apache 2.0                         | 2.8.0    | https://hex.pm/packages/oban                                     |\n| ok                           | Apache 2.0                         | 2.3.0    | https://hex.pm/packages/ok                                       |\n| paginator                    | MIT                                | 1.0.4    | https://github.com/bonfire-networks/paginator                    |\n| pane                         | MIT                                | 0.4.1    | https://hex.pm/packages/pane                                     |\n| parse_trans                  | Apache 2.0                         | 3.3.1    | https://hex.pm/packages/parse_trans                              |\n| pbkdf2_elixir                | BSD-3-Clause; Unrecognized license | 1.4.2    | https://hex.pm/packages/pbkdf2_elixir                            |\n| phil_columns                 | MIT                                | 3.1.0    | https://hex.pm/packages/phil_columns                             |\n| phoenix                      | MIT                                | 1.6.6    | https://hex.pm/packages/phoenix                                  |\n| phoenix_ecto                 | MIT                                | 4.4.0    | https://hex.pm/packages/phoenix_ecto                             |\n| phoenix_gon                  | MIT                                | 0.4.1    | https://github.com/bonfire-networks/phoenix_gon                  |\n| phoenix_html                 | MIT                                | 3.2.0    | https://hex.pm/packages/phoenix_html                             |\n| phoenix_live_dashboard       | MIT                                | 0.6.5    | https://hex.pm/packages/phoenix_live_dashboard                   |\n| phoenix_live_reload          | MIT                                | 1.3.3    | https://hex.pm/packages/phoenix_live_reload                      |\n| phoenix_live_view            | MIT                                | 0.17.7   | https://hex.pm/packages/phoenix_live_view                        |\n| phoenix_pubsub               | MIT                                | 2.0.0    | https://hex.pm/packages/phoenix_pubsub                           |\n| phoenix_view                 | MIT                                | 1.1.2    | https://hex.pm/packages/phoenix_view                             |\n| plug                         | Apache 2.0                         | 1.13.3   | https://hex.pm/packages/plug                                     |\n| plug_cowboy                  | Apache 2.0                         | 2.5.2    | https://hex.pm/packages/plug_cowboy                              |\n| plug_crypto                  | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/plug_crypto                              |\n| pointers                     | Apache 2.0                         | 0.6.0    | https://github.com/bonfire-networks/pointers                     |\n| needle_ulid                | MIT                                | 0.2.2    | https://github.com/bonfire-networks/needle_ulid                |\n| poolboy                      | Unlicense; Apache 2.0; ISC         | 1.5.2    | https://hex.pm/packages/poolboy                                  |\n| postgrex                     | Apache 2.0                         | 0.16.2   | https://hex.pm/packages/postgrex                                 |\n| ranch                        | ISC                                | 1.8.0    | https://hex.pm/packages/ranch                                    |\n| recase                       | MIT                                | 0.7.0    | https://hex.pm/packages/recase                                   |\n| redirect                     | Apache 2.0                         | 0.3.0    | https://hex.pm/packages/redirect                                 |\n| scribe                       | MIT                                | 0.10.0   | https://hex.pm/packages/scribe                                   |\n| sentry                       | MIT                                | 8.0.6    | https://hex.pm/packages/sentry                                   |\n| sleeplocks                   | MIT                                | 1.1.1    | https://hex.pm/packages/sleeplocks                               |\n| sobelow                      | Apache 2.0                         | 0.11.1   | https://hex.pm/packages/sobelow                                  |\n| sourceror                    | Apache 2.0                         | 0.10.0   | https://hex.pm/packages/sourceror                                |\n| ssl_verify_fun               | MIT                                | 1.1.6    | https://hex.pm/packages/ssl_verify_fun                           |\n| stream_data                  | Apache 2.0                         | 0.5.0    | https://hex.pm/packages/stream_data                              |\n| surface                      | MIT                                | 0.7.1    | https://hex.pm/packages/surface                                  |\n| surface_heroicons            | Undefined                          | 0.5.3    | https://github.com/rocketinsights/surface_heroicons              |\n| table_rex                    | MIT                                | 3.1.1    | https://hex.pm/packages/table_rex                                |\n| telemetry                    | Apache 2.0                         | 1.0.0    | https://hex.pm/packages/telemetry                                |\n| telemetry_metrics            | Apache 2.0                         | 0.6.1    | https://hex.pm/packages/telemetry_metrics                        |\n| telemetry_poller             | Apache 2.0                         | 1.0.0    | https://hex.pm/packages/telemetry_poller                         |\n| tesla                        | MIT                                | 1.4.4    | https://hex.pm/packages/tesla                                    |\n| timex                        | MIT                                | 3.7.6    | https://hex.pm/packages/timex                                    |\n| towel                        | MIT                                | 0.2.1    | https://hex.pm/packages/towel                                    |\n| twinkle_star                 | GPL v3                             | 0.1.0    | https://github.com/bonfire-networks/twinkle_star                 |\n| typed_struct                 | MIT                                | ~> 0.2.1 | https://hex.pm/packages/typed_struct                             |\n| tzdata                       | MIT                                | 1.1.1    | https://hex.pm/packages/tzdata                                   |\n| unicode_util_compat          | Apache 2.0                         | 0.7.0    | https://hex.pm/packages/unicode_util_compat                      |\n| unsafe                       | MIT                                | 1.0.1    | https://hex.pm/packages/unsafe                                   |\n| verbs                        | MIT                                | 0.6.1    | https://github.com/shannonwells/verbs_ex                         |\n| voodoo                       | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/voodoo                       |\n| waffle                       | Apache 2.0                         | 1.1.6    | https://hex.pm/packages/waffle                                   |\n| where                        | Apache 2.0                         | 0.1.0    | https://github.com/bonfire-networks/untangle                        |\n| zest                         | Apache 2.0                         | 0.1.2    | https://hex.pm/packages/zest                                     |\n|------------------------------|------------------------------------|----------|------------------------------------------------------------------|","ref":"deps-cooperation.html"}],"producer":{"name":"ex_doc","version":[48,46,51,52,46,48]},"content_type":"text/markdown"}