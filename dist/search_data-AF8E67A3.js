searchData={"items":[{"type":"module","title":"Bonfire.Data.AccessControl.Acl","doc":"Conceptually, a complete list of all permissions for everybody.\nIn practice, it's a partial specification, and anything not\nexplicitly granted is assumed to be denied.\n\nCan be reused to secure multiple objects, thus exists independently\nof any object.","ref":"Bonfire.Data.AccessControl.Acl.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Acl.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Acl.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.Circle","doc":"","ref":"Bonfire.Data.AccessControl.Circle.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Circle.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Circle.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.Controlled","doc":"An object is linked to one or more `Acl`s by the `Controlled` multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined with `false` being prioritised.","ref":"Bonfire.Data.AccessControl.Controlled.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Controlled.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Controlled.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.Encircle","doc":"","ref":"Bonfire.Data.AccessControl.Encircle.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Encircle.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Encircle.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.Grant","doc":"","ref":"Bonfire.Data.AccessControl.Grant.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Grant.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Grant.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.InstanceAdmin","doc":"A mixin for superpowers","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html"},{"type":"function","title":"Bonfire.Data.AccessControl.InstanceAdmin.changeset/3","doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html#changeset/3"},{"type":"module","title":"Bonfire.Data.AccessControl.Stereotyped","doc":"A marker that identifies special context-dependent semantics to the system.","ref":"Bonfire.Data.AccessControl.Stereotyped.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Stereotyped.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Stereotyped.html#changeset/2"},{"type":"module","title":"Bonfire.Data.AccessControl.Verb","doc":"","ref":"Bonfire.Data.AccessControl.Verb.html"},{"type":"function","title":"Bonfire.Data.AccessControl.Verb.changeset/2","doc":"","ref":"Bonfire.Data.AccessControl.Verb.html#changeset/2"},{"type":"module","title":"Bonfire.Data.ActivityPub.Actor","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html"},{"type":"function","title":"Bonfire.Data.ActivityPub.Actor.changeset/2","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html#changeset/2"},{"type":"module","title":"Bonfire.Data.ActivityPub.Actor.Migration","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html"},{"type":"macro","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/0","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/0"},{"type":"macro","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/1","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/1"},{"type":"function","title":"Bonfire.Data.ActivityPub.Actor.Migration.drop_actor_table/0","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#drop_actor_table/0"},{"type":"macro","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/0","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/0"},{"type":"macro","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/1","doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/1"},{"type":"module","title":"Bonfire.Data.ActivityPub.Peer","doc":"Federated instances","ref":"Bonfire.Data.ActivityPub.Peer.html"},{"type":"function","title":"Bonfire.Data.ActivityPub.Peer.changeset/3","doc":"","ref":"Bonfire.Data.ActivityPub.Peer.html#changeset/3"},{"type":"module","title":"Bonfire.Data.ActivityPub.Peered","doc":"Federated actors or objects","ref":"Bonfire.Data.ActivityPub.Peered.html"},{"type":"function","title":"Bonfire.Data.ActivityPub.Peered.changeset/3","doc":"","ref":"Bonfire.Data.ActivityPub.Peered.html#changeset/3"},{"type":"module","title":"Bonfire.Data.Assort.Ranked","doc":"A reusable table to link child or related items and also rank sibling items.\n\nUsage (for global ranking, otherwise you should specify scope):\n```\n{:ok, first} = Bonfire.Data.Assort.Ranked.changeset(%{item_id: \"01FGTH48ZZD08ADBHQ260KYJHW\"}) |> repo().insert\nsecond = Bonfire.Data.Assort.Ranked.changeset(%{item_id: \"01FGTH0N3YPBS5MNNAEAEVV54J\"}) |> repo().insert\n\nimport Ecto.Query\nBonfire.Data.Assort.Ranked |> order_by(:rank) |> repo().all\n\nfirst |> Bonfire.Data.Assort.Ranked.changeset(%{rank_set: :last}) |> repo().update\n\nBonfire.Data.Assort.Ranked |> order_by(:rank) |> repo().all\n```","ref":"Bonfire.Data.Assort.Ranked.html"},{"type":"function","title":"Bonfire.Data.Assort.Ranked.changeset/2","doc":"","ref":"Bonfire.Data.Assort.Ranked.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Assort.Ranked.Migration","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html"},{"type":"macro","title":"Bonfire.Data.Assort.Ranked.Migration.create_ranked_table/0","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_ranked_table/0"},{"type":"macro","title":"Bonfire.Data.Assort.Ranked.Migration.create_ranked_table/1","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_ranked_table/1"},{"type":"macro","title":"Bonfire.Data.Assort.Ranked.Migration.create_unique_index/1","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#create_unique_index/1"},{"type":"function","title":"Bonfire.Data.Assort.Ranked.Migration.drop_ranked_table/0","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#drop_ranked_table/0"},{"type":"function","title":"Bonfire.Data.Assort.Ranked.Migration.drop_unique_index/1","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#drop_unique_index/1"},{"type":"macro","title":"Bonfire.Data.Assort.Ranked.Migration.migrate_ranked/0","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#migrate_ranked/0"},{"type":"macro","title":"Bonfire.Data.Assort.Ranked.Migration.migrate_ranked/1","doc":"","ref":"Bonfire.Data.Assort.Ranked.Migration.html#migrate_ranked/1"},{"type":"module","title":"Bonfire.Data.Edges.Edge","doc":"","ref":"Bonfire.Data.Edges.Edge.html"},{"type":"function","title":"Bonfire.Data.Edges.Edge.changeset/2","doc":"","ref":"Bonfire.Data.Edges.Edge.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Edges.EdgeTotal","doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.html"},{"type":"function","title":"Bonfire.Data.Edges.EdgeTotal.changeset/2","doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Identity.Account","doc":"An account is an identity for authentication purposes. An account\nhas one or more credentials with which it may identify.","ref":"Bonfire.Data.Identity.Account.html"},{"type":"function","title":"Bonfire.Data.Identity.Account.changeset/2","doc":"","ref":"Bonfire.Data.Identity.Account.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Identity.Accounted","doc":"A mixin for an account ID, indicating ownership\n\nPrimarily used for Users.","ref":"Bonfire.Data.Identity.Accounted.html"},{"type":"function","title":"Bonfire.Data.Identity.Accounted.changeset/2","doc":"","ref":"Bonfire.Data.Identity.Accounted.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Identity.Alias","doc":"","ref":"Bonfire.Data.Identity.Alias.html"},{"type":"function","title":"Bonfire.Data.Identity.Alias.changeset/2","doc":"","ref":"Bonfire.Data.Identity.Alias.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Identity.AuthSecondFactor","doc":"A mixin that stores a second factor secret to authenticate an account.","ref":"Bonfire.Data.Identity.AuthSecondFactor.html"},{"type":"function","title":"Bonfire.Data.Identity.AuthSecondFactor.changeset/2","doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.html#changeset/2"},{"type":"function","title":"Bonfire.Data.Identity.AuthSecondFactor.valid_totp?/2","doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.html#valid_totp?/2"},{"type":"module","title":"Bonfire.Data.Identity.CareClosure","doc":"A recursive view of all entities taken care of by their root entities.\n\nReally, really do not query this without providing a branch_id.","ref":"Bonfire.Data.Identity.CareClosure.html"},{"type":"function","title":"Bonfire.Data.Identity.CareClosure.by_branch/1","doc":"","ref":"Bonfire.Data.Identity.CareClosure.html#by_branch/1"},{"type":"module","title":"Bonfire.Data.Identity.Caretaker","doc":"The entity responsible for something. In practice, it means that\nsomething is deleted when its caretaker is deleted.\n\nYou can think of it as being like the creator, except:\na) You can give it away.\nb) Objects can take care of arbitrary objects, such as e.g. custom\n   ACLs created to permit people mentioned special permissions","ref":"Bonfire.Data.Identity.Caretaker.html"},{"type":"function","title":"Bonfire.Data.Identity.Caretaker.changeset/3","doc":"","ref":"Bonfire.Data.Identity.Caretaker.html#changeset/3"},{"type":"module","title":"Bonfire.Data.Identity.Character","doc":"A username mixin that denies reuse of the same or similar usernames\neven when the username has been deleted.","ref":"Bonfire.Data.Identity.Character.html"},{"type":"function","title":"Bonfire.Data.Identity.Character.changeset/3","doc":"","ref":"Bonfire.Data.Identity.Character.html#changeset/3"},{"type":"function","title":"Bonfire.Data.Identity.Character.changeset_basic/2","doc":"","ref":"Bonfire.Data.Identity.Character.html#changeset_basic/2"},{"type":"function","title":"Bonfire.Data.Identity.Character.hash/1","doc":"","ref":"Bonfire.Data.Identity.Character.html#hash/1"},{"type":"function","title":"Bonfire.Data.Identity.Character.uniform/1","doc":"","ref":"Bonfire.Data.Identity.Character.html#uniform/1"},{"type":"module","title":"Bonfire.Data.Identity.Credential","doc":"A Mixin that provides a password for local login.","ref":"Bonfire.Data.Identity.Credential.html"},{"type":"function","title":"Bonfire.Data.Identity.Credential.changeset/2","doc":"","ref":"Bonfire.Data.Identity.Credential.html#changeset/2"},{"type":"function","title":"Bonfire.Data.Identity.Credential.check_password/2","doc":"","ref":"Bonfire.Data.Identity.Credential.html#check_password/2"},{"type":"function","title":"Bonfire.Data.Identity.Credential.confirmation_changeset/2","doc":"","ref":"Bonfire.Data.Identity.Credential.html#confirmation_changeset/2"},{"type":"function","title":"Bonfire.Data.Identity.Credential.dummy_check/0","doc":"","ref":"Bonfire.Data.Identity.Credential.html#dummy_check/0"},{"type":"function","title":"Bonfire.Data.Identity.Credential.hash_password/1","doc":"","ref":"Bonfire.Data.Identity.Credential.html#hash_password/1"},{"type":"module","title":"Bonfire.Data.Identity.Credential.Migration","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html"},{"type":"macro","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/0","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/0"},{"type":"macro","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/1","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/1"},{"type":"function","title":"Bonfire.Data.Identity.Credential.Migration.drop_credential_table/0","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#drop_credential_table/0"},{"type":"macro","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/0","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/0"},{"type":"macro","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/1","doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/1"},{"type":"module","title":"Bonfire.Data.Identity.Email","doc":"","ref":"Bonfire.Data.Identity.Email.html"},{"type":"function","title":"Bonfire.Data.Identity.Email.changeset/3","doc":"Options:\n  email_regex: Regexp.t (default very minimal validation)\n  must_confirm?: bool (default true)","ref":"Bonfire.Data.Identity.Email.html#changeset/3"},{"type":"function","title":"Bonfire.Data.Identity.Email.confirm/1","doc":"Changeset function. Marks the user's email as confirmed and removes\ntheir confirmation token.","ref":"Bonfire.Data.Identity.Email.html#confirm/1"},{"type":"function","title":"Bonfire.Data.Identity.Email.may_confirm?/2","doc":"","ref":"Bonfire.Data.Identity.Email.html#may_confirm?/2"},{"type":"function","title":"Bonfire.Data.Identity.Email.may_request_confirm_email?/2","doc":"Checks whether the user should be able to request a confirm email","ref":"Bonfire.Data.Identity.Email.html#may_request_confirm_email?/2"},{"type":"function","title":"Bonfire.Data.Identity.Email.put_token/1","doc":"Changeset function. Unconditionally sets the user as unconfirmed,\ngenerates a confirmation token and puts an expiry on it determined\nby the `:confirm_duration` config key (default one day).","ref":"Bonfire.Data.Identity.Email.html#put_token/1"},{"type":"function","title":"Bonfire.Data.Identity.Email.should_request_or_refresh?/2","doc":"Checks whether the user should request a new confirmation token or refresh it","ref":"Bonfire.Data.Identity.Email.html#should_request_or_refresh?/2"},{"type":"type","title":"Bonfire.Data.Identity.Email.t/0","doc":"","ref":"Bonfire.Data.Identity.Email.html#t:t/0"},{"type":"module","title":"Bonfire.Data.Identity.ExtraInfo","doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.html"},{"type":"function","title":"Bonfire.Data.Identity.ExtraInfo.changeset/3","doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.html#changeset/3"},{"type":"module","title":"Bonfire.Data.Identity.Named","doc":"","ref":"Bonfire.Data.Identity.Named.html"},{"type":"function","title":"Bonfire.Data.Identity.Named.changeset/3","doc":"","ref":"Bonfire.Data.Identity.Named.html#changeset/3"},{"type":"module","title":"Bonfire.Data.Identity.Self","doc":"","ref":"Bonfire.Data.Identity.Self.html"},{"type":"function","title":"Bonfire.Data.Identity.Self.changeset/2","doc":"","ref":"Bonfire.Data.Identity.Self.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Identity.Settings","doc":"A mixin that stores settings (of the instance, account, user, etc) as an Erlang Term (typically a map or keyword list) encoded to binary.","ref":"Bonfire.Data.Identity.Settings.html"},{"type":"function","title":"Bonfire.Data.Identity.Settings.changeset/3","doc":"","ref":"Bonfire.Data.Identity.Settings.html#changeset/3"},{"type":"module","title":"Bonfire.Data.Identity.User","doc":"A persona. A person (account) may have more than one user, but this\nis not exposed publicly (except to local instance administrators),\nso it is as if they are different people.","ref":"Bonfire.Data.Identity.User.html"},{"type":"function","title":"Bonfire.Data.Identity.User.changeset/2","doc":"","ref":"Bonfire.Data.Identity.User.html#changeset/2"},{"type":"function","title":"Bonfire.Data.Identity.User.maybe_redact/1","doc":"","ref":"Bonfire.Data.Identity.User.html#maybe_redact/1"},{"type":"module","title":"Bonfire.Data.SharedUser","doc":"A mixin for shared user personas (which multiple accounts can use)","ref":"Bonfire.Data.SharedUser.html"},{"type":"function","title":"Bonfire.Data.SharedUser.changeset/2","doc":"","ref":"Bonfire.Data.SharedUser.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.APActivity","doc":"","ref":"Bonfire.Data.Social.APActivity.html"},{"type":"function","title":"Bonfire.Data.Social.APActivity.changeset/2","doc":"","ref":"Bonfire.Data.Social.APActivity.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Activity","doc":"","ref":"Bonfire.Data.Social.Activity.html"},{"type":"function","title":"Bonfire.Data.Social.Activity.changeset/2","doc":"","ref":"Bonfire.Data.Social.Activity.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Bookmark","doc":"","ref":"Bonfire.Data.Social.Bookmark.html"},{"type":"function","title":"Bonfire.Data.Social.Bookmark.changeset/2","doc":"","ref":"Bonfire.Data.Social.Bookmark.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Boost","doc":"","ref":"Bonfire.Data.Social.Boost.html"},{"type":"function","title":"Bonfire.Data.Social.Boost.changeset/2","doc":"","ref":"Bonfire.Data.Social.Boost.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Created","doc":"","ref":"Bonfire.Data.Social.Created.html"},{"type":"function","title":"Bonfire.Data.Social.Created.changeset/2","doc":"","ref":"Bonfire.Data.Social.Created.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Feed","doc":"","ref":"Bonfire.Data.Social.Feed.html"},{"type":"function","title":"Bonfire.Data.Social.Feed.changeset/2","doc":"","ref":"Bonfire.Data.Social.Feed.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.FeedPublish","doc":"A multimixin for an activity/object appearing in a feed.\n\nA quite interesting thing about this model is that `feed`\nreferences `Pointer`, so it isn't only things of type `Feed` that it can\nappear in, they are just an obvious choice.","ref":"Bonfire.Data.Social.FeedPublish.html"},{"type":"function","title":"Bonfire.Data.Social.FeedPublish.changeset/2","doc":"","ref":"Bonfire.Data.Social.FeedPublish.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Flag","doc":"","ref":"Bonfire.Data.Social.Flag.html"},{"type":"function","title":"Bonfire.Data.Social.Flag.changeset/2","doc":"","ref":"Bonfire.Data.Social.Flag.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Follow","doc":"","ref":"Bonfire.Data.Social.Follow.html"},{"type":"function","title":"Bonfire.Data.Social.Follow.changeset/2","doc":"","ref":"Bonfire.Data.Social.Follow.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Inbox","doc":"","ref":"Bonfire.Data.Social.Inbox.html"},{"type":"function","title":"Bonfire.Data.Social.Inbox.changeset/2","doc":"","ref":"Bonfire.Data.Social.Inbox.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Like","doc":"","ref":"Bonfire.Data.Social.Like.html"},{"type":"function","title":"Bonfire.Data.Social.Like.changeset/2","doc":"","ref":"Bonfire.Data.Social.Like.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Message","doc":"","ref":"Bonfire.Data.Social.Message.html"},{"type":"function","title":"Bonfire.Data.Social.Message.changeset/2","doc":"","ref":"Bonfire.Data.Social.Message.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Pin","doc":"","ref":"Bonfire.Data.Social.Pin.html"},{"type":"function","title":"Bonfire.Data.Social.Pin.changeset/2","doc":"","ref":"Bonfire.Data.Social.Pin.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Post","doc":"","ref":"Bonfire.Data.Social.Post.html"},{"type":"function","title":"Bonfire.Data.Social.Post.changeset/2","doc":"","ref":"Bonfire.Data.Social.Post.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.PostContent","doc":"","ref":"Bonfire.Data.Social.PostContent.html"},{"type":"function","title":"Bonfire.Data.Social.PostContent.changeset/2","doc":"","ref":"Bonfire.Data.Social.PostContent.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Profile","doc":"","ref":"Bonfire.Data.Social.Profile.html"},{"type":"function","title":"Bonfire.Data.Social.Profile.changeset/2","doc":"","ref":"Bonfire.Data.Social.Profile.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Replied","doc":"","ref":"Bonfire.Data.Social.Replied.html"},{"type":"function","title":"Bonfire.Data.Social.Replied.ancestor_ids/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestor_ids/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.ancestors/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestors/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.arrange/2","doc":"","ref":"Bonfire.Data.Social.Replied.html#arrange/2"},{"type":"function","title":"Bonfire.Data.Social.Replied.build_child/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#build_child/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.changeset/2","doc":"","ref":"Bonfire.Data.Social.Replied.html#changeset/2"},{"type":"function","title":"Bonfire.Data.Social.Replied.children/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#children/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.depth/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#depth/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.descendants/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#descendants/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.make_child_of/2","doc":"","ref":"Bonfire.Data.Social.Replied.html#make_child_of/2"},{"type":"function","title":"Bonfire.Data.Social.Replied.parent/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#parent/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.parent_id/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#parent_id/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.path/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#path/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.path_ids/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#path_ids/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.root/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#root/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.root?/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#root?/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.root_id/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#root_id/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.siblings/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#siblings/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.subtree/1","doc":"","ref":"Bonfire.Data.Social.Replied.html#subtree/1"},{"type":"function","title":"Bonfire.Data.Social.Replied.where_depth/2","doc":"","ref":"Bonfire.Data.Social.Replied.html#where_depth/2"},{"type":"module","title":"Bonfire.Data.Social.Request","doc":"","ref":"Bonfire.Data.Social.Request.html"},{"type":"function","title":"Bonfire.Data.Social.Request.changeset/2","doc":"","ref":"Bonfire.Data.Social.Request.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Seen","doc":"Track seen/unseen (similar to read/unread, but only indicates that it was displayed in a feed or other listing for the user, not that they actually read it) status of things (usually an `Activity`)","ref":"Bonfire.Data.Social.Seen.html"},{"type":"function","title":"Bonfire.Data.Social.Seen.changeset/2","doc":"","ref":"Bonfire.Data.Social.Seen.html#changeset/2"},{"type":"module","title":"Bonfire.Data.Social.Sensitive","doc":"","ref":"Bonfire.Data.Social.Sensitive.html"},{"type":"function","title":"Bonfire.Data.Social.Sensitive.changeset/2","doc":"","ref":"Bonfire.Data.Social.Sensitive.html#changeset/2"},{"type":"module","title":"Bonfire.UI.Common","doc":"A library of common utils and helpers used across Bonfire extensions","ref":"Bonfire.UI.Common.html"},{"type":"function","title":"Bonfire.UI.Common.assign_error/3","doc":"","ref":"Bonfire.UI.Common.html#assign_error/3"},{"type":"function","title":"Bonfire.UI.Common.assign_flash/5","doc":"","ref":"Bonfire.UI.Common.html#assign_flash/5"},{"type":"function","title":"Bonfire.UI.Common.assign_generic/2","doc":"","ref":"Bonfire.UI.Common.html#assign_generic/2"},{"type":"function","title":"Bonfire.UI.Common.assign_generic/3","doc":"","ref":"Bonfire.UI.Common.html#assign_generic/3"},{"type":"function","title":"Bonfire.UI.Common.assign_generic_global/2","doc":"","ref":"Bonfire.UI.Common.html#assign_generic_global/2"},{"type":"function","title":"Bonfire.UI.Common.assign_global/2","doc":"","ref":"Bonfire.UI.Common.html#assign_global/2"},{"type":"function","title":"Bonfire.UI.Common.assign_global/3","doc":"","ref":"Bonfire.UI.Common.html#assign_global/3"},{"type":"function","title":"Bonfire.UI.Common.assigns_clean/1","doc":"","ref":"Bonfire.UI.Common.html#assigns_clean/1"},{"type":"function","title":"Bonfire.UI.Common.assigns_merge/2","doc":"","ref":"Bonfire.UI.Common.html#assigns_merge/2"},{"type":"function","title":"Bonfire.UI.Common.assigns_merge/3","doc":"","ref":"Bonfire.UI.Common.html#assigns_merge/3"},{"type":"function","title":"Bonfire.UI.Common.assigns_minimal/1","doc":"","ref":"Bonfire.UI.Common.html#assigns_minimal/1"},{"type":"function","title":"Bonfire.UI.Common.assigns_subscribe/2","doc":"","ref":"Bonfire.UI.Common.html#assigns_subscribe/2"},{"type":"function","title":"Bonfire.UI.Common.batch_update_many_async/3","doc":"","ref":"Bonfire.UI.Common.html#batch_update_many_async/3"},{"type":"function","title":"Bonfire.UI.Common.batch_update_many_async/4","doc":"","ref":"Bonfire.UI.Common.html#batch_update_many_async/4"},{"type":"function","title":"Bonfire.UI.Common.can?/4","doc":"","ref":"Bonfire.UI.Common.html#can?/4"},{"type":"function","title":"Bonfire.UI.Common.cast_public/2","doc":"Warning: this will set assigns for any/all users who subscribe to them. You want to `cast_self/2` instead if dealing with user-specific actions or private data.","ref":"Bonfire.UI.Common.html#cast_public/2"},{"type":"function","title":"Bonfire.UI.Common.cast_self/2","doc":"","ref":"Bonfire.UI.Common.html#cast_self/2"},{"type":"function","title":"Bonfire.UI.Common.copy_go/1","doc":"copies the `go` param into a query string, if any","ref":"Bonfire.UI.Common.html#copy_go/1"},{"type":"function","title":"Bonfire.UI.Common.current_url/2","doc":"","ref":"Bonfire.UI.Common.html#current_url/2"},{"type":"function","title":"Bonfire.UI.Common.current_user_or_remote_interaction/3","doc":"","ref":"Bonfire.UI.Common.html#current_user_or_remote_interaction/3"},{"type":"function","title":"Bonfire.UI.Common.go_query/1","doc":"Generate a query string adding a `go` redirection path to the URI (for redirecting somewhere after auth flows).\nIt is recommended to use `set_go_after/2` where possible instead.","ref":"Bonfire.UI.Common.html#go_query/1"},{"type":"function","title":"Bonfire.UI.Common.hero_icons_list/0","doc":"","ref":"Bonfire.UI.Common.html#hero_icons_list/0"},{"type":"macro","title":"Bonfire.UI.Common.live_aliases/5","doc":"","ref":"Bonfire.UI.Common.html#live_aliases/5"},{"type":"function","title":"Bonfire.UI.Common.live_render_component/2","doc":"Special LiveView helper function which allows loading LiveComponents in regular Phoenix views: `live_render_component(@conn, MyLiveComponent)`","ref":"Bonfire.UI.Common.html#live_render_component/2"},{"type":"function","title":"Bonfire.UI.Common.live_render_with_conn/2","doc":"","ref":"Bonfire.UI.Common.html#live_render_with_conn/2"},{"type":"function","title":"Bonfire.UI.Common.live_upload_files/3","doc":"","ref":"Bonfire.UI.Common.html#live_upload_files/3"},{"type":"function","title":"Bonfire.UI.Common.markdown/1","doc":"","ref":"Bonfire.UI.Common.html#markdown/1"},{"type":"function","title":"Bonfire.UI.Common.maybe_assign/3","doc":"","ref":"Bonfire.UI.Common.html#maybe_assign/3"},{"type":"function","title":"Bonfire.UI.Common.maybe_component/2","doc":"","ref":"Bonfire.UI.Common.html#maybe_component/2"},{"type":"function","title":"Bonfire.UI.Common.maybe_consume_uploaded_entries/3","doc":"","ref":"Bonfire.UI.Common.html#maybe_consume_uploaded_entries/3"},{"type":"function","title":"Bonfire.UI.Common.maybe_consume_uploaded_entry/3","doc":"","ref":"Bonfire.UI.Common.html#maybe_consume_uploaded_entry/3"},{"type":"function","title":"Bonfire.UI.Common.maybe_cute_gif/0","doc":"","ref":"Bonfire.UI.Common.html#maybe_cute_gif/0"},{"type":"function","title":"Bonfire.UI.Common.maybe_last_sentry_event_id/0","doc":"","ref":"Bonfire.UI.Common.html#maybe_last_sentry_event_id/0"},{"type":"function","title":"Bonfire.UI.Common.maybe_push_event/3","doc":"","ref":"Bonfire.UI.Common.html#maybe_push_event/3"},{"type":"function","title":"Bonfire.UI.Common.maybe_send_update/4","doc":"","ref":"Bonfire.UI.Common.html#maybe_send_update/4"},{"type":"function","title":"Bonfire.UI.Common.maybe_stream_insert/4","doc":"Inserts one or many items in an existing stream.\nSee `Phoenix.LiveView.stream_insert/4` for opts.","ref":"Bonfire.UI.Common.html#maybe_stream_insert/4"},{"type":"function","title":"Bonfire.UI.Common.opts_for_update_many_async/2","doc":"","ref":"Bonfire.UI.Common.html#opts_for_update_many_async/2"},{"type":"function","title":"Bonfire.UI.Common.patch_to/3","doc":"","ref":"Bonfire.UI.Common.html#patch_to/3"},{"type":"function","title":"Bonfire.UI.Common.path_fallback/2","doc":"","ref":"Bonfire.UI.Common.html#path_fallback/2"},{"type":"function","title":"Bonfire.UI.Common.redirect_to/3","doc":"","ref":"Bonfire.UI.Common.html#redirect_to/3"},{"type":"function","title":"Bonfire.UI.Common.redirect_to_previous_go/4","doc":"","ref":"Bonfire.UI.Common.html#redirect_to_previous_go/4"},{"type":"macro","title":"Bonfire.UI.Common.render_sface_or_native/0","doc":"","ref":"Bonfire.UI.Common.html#render_sface_or_native/0"},{"type":"function","title":"Bonfire.UI.Common.rich/2","doc":"","ref":"Bonfire.UI.Common.html#rich/2"},{"type":"function","title":"Bonfire.UI.Common.self_subscribe/2","doc":"Subscribe to assigns targeted at the current account/user","ref":"Bonfire.UI.Common.html#self_subscribe/2"},{"type":"function","title":"Bonfire.UI.Common.send_self/2","doc":"","ref":"Bonfire.UI.Common.html#send_self/2"},{"type":"function","title":"Bonfire.UI.Common.send_self_global/2","doc":"","ref":"Bonfire.UI.Common.html#send_self_global/2"},{"type":"function","title":"Bonfire.UI.Common.set_go_after/2","doc":"Save a `go` redirection path in the session (for redirecting somewhere after auth flows)","ref":"Bonfire.UI.Common.html#set_go_after/2"},{"type":"function","title":"Bonfire.UI.Common.templated/2","doc":"","ref":"Bonfire.UI.Common.html#templated/2"},{"type":"function","title":"Bonfire.UI.Common.templated_or_remote_markdown/2","doc":"","ref":"Bonfire.UI.Common.html#templated_or_remote_markdown/2"},{"type":"function","title":"Bonfire.UI.Common.the_object/1","doc":"","ref":"Bonfire.UI.Common.html#the_object/1"},{"type":"function","title":"Bonfire.UI.Common.undead/3","doc":"","ref":"Bonfire.UI.Common.html#undead/3"},{"type":"function","title":"Bonfire.UI.Common.undead_mount/2","doc":"Run a function and expects tuple.\nIf anything else is returned, like an error, a flash message is shown to the user.","ref":"Bonfire.UI.Common.html#undead_mount/2"},{"type":"function","title":"Bonfire.UI.Common.undead_on_mount/2","doc":"","ref":"Bonfire.UI.Common.html#undead_on_mount/2"},{"type":"function","title":"Bonfire.UI.Common.undead_params/2","doc":"","ref":"Bonfire.UI.Common.html#undead_params/2"},{"type":"function","title":"Bonfire.UI.Common.update_many_async/2","doc":"","ref":"Bonfire.UI.Common.html#update_many_async/2"},{"type":"function","title":"Bonfire.UI.Common.update_many_async/3","doc":"","ref":"Bonfire.UI.Common.html#update_many_async/3"},{"type":"module","title":"Bonfire.UI.Common.ComponentID","doc":"","ref":"Bonfire.UI.Common.ComponentID.html"},{"type":"function","title":"Bonfire.UI.Common.ComponentID.new/3","doc":"","ref":"Bonfire.UI.Common.ComponentID.html#new/3"},{"type":"function","title":"Bonfire.UI.Common.ComponentID.send_assigns/5","doc":"","ref":"Bonfire.UI.Common.ComponentID.html#send_assigns/5"},{"type":"function","title":"Bonfire.UI.Common.ComponentID.send_updates/4","doc":"","ref":"Bonfire.UI.Common.ComponentID.html#send_updates/4"},{"type":"module","title":"Bonfire.UI.Common.EndpointTemplate","doc":"","ref":"Bonfire.UI.Common.EndpointTemplate.html"},{"type":"function","title":"Bonfire.UI.Common.EndpointTemplate.session_options/0","doc":"","ref":"Bonfire.UI.Common.EndpointTemplate.html#session_options/0"},{"type":"module","title":"Bonfire.UI.Common.ErrorHelpers","doc":"Conveniences for translating and building error messages.","ref":"Bonfire.UI.Common.ErrorHelpers.html"},{"type":"function","title":"Bonfire.UI.Common.ErrorHelpers.error_tag/2","doc":"Generates tag for inlined form input errors.\n# TODO: use `Surface.Components.Form.ErrorTag` instead","ref":"Bonfire.UI.Common.ErrorHelpers.html#error_tag/2"},{"type":"function","title":"Bonfire.UI.Common.ErrorHelpers.translate_error/1","doc":"Translates an error message using gettext.","ref":"Bonfire.UI.Common.ErrorHelpers.html#translate_error/1"},{"type":"module","title":"Bonfire.UI.Common.ErrorReportingPlug","doc":"","ref":"Bonfire.UI.Common.ErrorReportingPlug.html"},{"type":"module","title":"Bonfire.UI.Common.LiveHandlers","doc":"usage examples:\n\n`phx-submit=\"Bonfire.Posts:post\"` will be routed to `Bonfire.Posts.LiveHandler.handle_event(\"post\", ...`\n\n`PubSub.broadcast(feed_id, {{Bonfire.Social.Feeds, :new_activity}, activity})` will be routed to `Bonfire.Social.Feeds.LiveHandler.handle_info({:new_activity, activity}, ...`\n\n`href=\"?Bonfire.Social.Feeds[after]= \"` will be routed to `Bonfire.Social.Feeds.LiveHandler.handle_params(%{\"after\" => cursor_after} ...`","ref":"Bonfire.UI.Common.LiveHandlers.html"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.assign_attrs/2","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#assign_attrs/2"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.handle_event/5","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_event/5"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.handle_info/3","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_info/3"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.handle_params/5","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_params/5"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.handle_progress/5","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_progress/5"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.maybe_from_json/1","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#maybe_from_json/1"},{"type":"function","title":"Bonfire.UI.Common.LiveHandlers.mod_delegate/4","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#mod_delegate/4"},{"type":"macro","title":"Bonfire.UI.Common.LiveHandlers.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#sigil_p/2"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs","doc":"Like a plug, but for a liveview","ref":"Bonfire.UI.Common.LivePlugs.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.maybe_send_persistent_assigns/2","doc":"","ref":"Bonfire.UI.Common.LivePlugs.html#maybe_send_persistent_assigns/2"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox","doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.mount/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html#mount/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs.Csrf","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Csrf.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Csrf.mount/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Csrf.html#mount/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Csrf.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Csrf.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs.Helpers","doc":"Like a plug, but for a liveview","ref":"Bonfire.UI.Common.LivePlugs.Helpers.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Helpers.assign_default_params/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Helpers.html#assign_default_params/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Helpers.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Helpers.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs.Locale","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Locale.assign_put_locale/2","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#assign_put_locale/2"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Locale.assign_put_locale/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#assign_put_locale/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Locale.default/2","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#default/2"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Locale.mount/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#mount/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.Locale.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.LivePlugs.StaticChanged","doc":"","ref":"Bonfire.UI.Common.LivePlugs.StaticChanged.html"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.StaticChanged.mount/3","doc":"","ref":"Bonfire.UI.Common.LivePlugs.StaticChanged.html#mount/3"},{"type":"function","title":"Bonfire.UI.Common.LivePlugs.StaticChanged.on_mount/4","doc":"","ref":"Bonfire.UI.Common.LivePlugs.StaticChanged.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Common.MaybeStaticGeneratorPlug","doc":"","ref":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.html"},{"type":"function","title":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.call/2","doc":"","ref":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.html#call/2"},{"type":"function","title":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.init/1","doc":"","ref":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.html#init/1"},{"type":"function","title":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.maybe_add_index_html/2","doc":"","ref":"Bonfire.UI.Common.MaybeStaticGeneratorPlug.html#maybe_add_index_html/2"},{"type":"module","title":"Bonfire.UI.Common.MultiTenancyPlug","doc":"","ref":"Bonfire.UI.Common.MultiTenancyPlug.html"},{"type":"module","title":"Bonfire.UI.Common.MultiselectLive.LiveHandler","doc":"","ref":"Bonfire.UI.Common.MultiselectLive.LiveHandler.html"},{"type":"function","title":"Bonfire.UI.Common.MultiselectLive.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.UI.Common.MultiselectLive.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.UI.Common.MultiselectLive.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.MultiselectLive.LiveHandler.html#sigil_p/2"},{"type":"behaviour","title":"Bonfire.UI.Common.NavModule","doc":"Add items to extensions' navigation sidebar.","ref":"Bonfire.UI.Common.NavModule.html"},{"type":"function","title":"Bonfire.UI.Common.NavModule.app_modules/0","doc":"","ref":"Bonfire.UI.Common.NavModule.html#app_modules/0"},{"type":"callback","title":"Bonfire.UI.Common.NavModule.declared_nav/0","doc":"Declares a nav module, with links or nav components","ref":"Bonfire.UI.Common.NavModule.html#c:declared_nav/0"},{"type":"function","title":"Bonfire.UI.Common.NavModule.modules/0","doc":"","ref":"Bonfire.UI.Common.NavModule.html#modules/0"},{"type":"function","title":"Bonfire.UI.Common.NavModule.nav/0","doc":"Load all navs","ref":"Bonfire.UI.Common.NavModule.html#nav/0"},{"type":"function","title":"Bonfire.UI.Common.NavModule.nav/1","doc":"Get navs for an extension","ref":"Bonfire.UI.Common.NavModule.html#nav/1"},{"type":"function","title":"Bonfire.UI.Common.NavModule.nav_function_error/2","doc":"","ref":"Bonfire.UI.Common.NavModule.html#nav_function_error/2"},{"type":"module","title":"Bonfire.UI.Common.Notifications","doc":"","ref":"Bonfire.UI.Common.Notifications.html"},{"type":"function","title":"Bonfire.UI.Common.Notifications.assign_notification/2","doc":"","ref":"Bonfire.UI.Common.Notifications.html#assign_notification/2"},{"type":"function","title":"Bonfire.UI.Common.Notifications.handle_event/3","doc":"","ref":"Bonfire.UI.Common.Notifications.html#handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.Notifications.handle_info/2","doc":"","ref":"Bonfire.UI.Common.Notifications.html#handle_info/2"},{"type":"function","title":"Bonfire.UI.Common.Notifications.notify_feeds/5","doc":"","ref":"Bonfire.UI.Common.Notifications.html#notify_feeds/5"},{"type":"function","title":"Bonfire.UI.Common.Notifications.notify_me/4","doc":"","ref":"Bonfire.UI.Common.Notifications.html#notify_me/4"},{"type":"function","title":"Bonfire.UI.Common.Notifications.receive_flash/3","doc":"","ref":"Bonfire.UI.Common.Notifications.html#receive_flash/3"},{"type":"function","title":"Bonfire.UI.Common.Notifications.receive_notification/2","doc":"","ref":"Bonfire.UI.Common.Notifications.html#receive_notification/2"},{"type":"macro","title":"Bonfire.UI.Common.Notifications.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.Notifications.html#sigil_p/2"},{"type":"module","title":"Bonfire.UI.Common.PlugProtect","doc":"","ref":"Bonfire.UI.Common.PlugProtect.html"},{"type":"function","title":"Bonfire.UI.Common.PlugProtect.allow_action/3","doc":"","ref":"Bonfire.UI.Common.PlugProtect.html#allow_action/3"},{"type":"function","title":"Bonfire.UI.Common.PlugProtect.block_action/3","doc":"","ref":"Bonfire.UI.Common.PlugProtect.html#block_action/3"},{"type":"function","title":"Bonfire.UI.Common.PlugProtect.call/2","doc":"","ref":"Bonfire.UI.Common.PlugProtect.html#call/2"},{"type":"function","title":"Bonfire.UI.Common.PlugProtect.init/1","doc":"","ref":"Bonfire.UI.Common.PlugProtect.html#init/1"},{"type":"module","title":"Bonfire.UI.Common.Plugs.ActivityPub","doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html"},{"type":"function","title":"Bonfire.UI.Common.Plugs.ActivityPub.call/2","doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#call/2"},{"type":"function","title":"Bonfire.UI.Common.Plugs.ActivityPub.init/1","doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#init/1"},{"type":"function","title":"Bonfire.UI.Common.Plugs.ActivityPub.maybe_redirect/1","doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#maybe_redirect/1"},{"type":"function","title":"Bonfire.UI.Common.Plugs.ActivityPub.with_headers/3","doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#with_headers/3"},{"type":"module","title":"Bonfire.UI.Common.Presence","doc":"WIP for tracking online users. Used by `PersistentLive`","ref":"Bonfire.UI.Common.Presence.html"},{"type":"function","title":"Bonfire.UI.Common.Presence.child_spec/1","doc":"","ref":"Bonfire.UI.Common.Presence.html#child_spec/1"},{"type":"function","title":"Bonfire.UI.Common.Presence.fetch/2","doc":"","ref":"Bonfire.UI.Common.Presence.html#fetch/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.fetchers_pids/0","doc":"","ref":"Bonfire.UI.Common.Presence.html#fetchers_pids/0"},{"type":"function","title":"Bonfire.UI.Common.Presence.get_by_key/2","doc":"","ref":"Bonfire.UI.Common.Presence.html#get_by_key/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.handle_info/2","doc":"","ref":"Bonfire.UI.Common.Presence.html#handle_info/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.list/0","doc":"","ref":"Bonfire.UI.Common.Presence.html#list/0"},{"type":"function","title":"Bonfire.UI.Common.Presence.list/1","doc":"","ref":"Bonfire.UI.Common.Presence.html#list/1"},{"type":"function","title":"Bonfire.UI.Common.Presence.list_and_maybe_subscribe_to_presence/1","doc":"","ref":"Bonfire.UI.Common.Presence.html#list_and_maybe_subscribe_to_presence/1"},{"type":"function","title":"Bonfire.UI.Common.Presence.present!/2","doc":"Join a user to the list of those who are present","ref":"Bonfire.UI.Common.Presence.html#present!/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.present?/2","doc":"Check if a given user (or the current user) is in the list of those who are present","ref":"Bonfire.UI.Common.Presence.html#present?/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.present_meta/2","doc":"","ref":"Bonfire.UI.Common.Presence.html#present_meta/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.track/3","doc":"","ref":"Bonfire.UI.Common.Presence.html#track/3"},{"type":"function","title":"Bonfire.UI.Common.Presence.track/4","doc":"","ref":"Bonfire.UI.Common.Presence.html#track/4"},{"type":"function","title":"Bonfire.UI.Common.Presence.untrack/2","doc":"","ref":"Bonfire.UI.Common.Presence.html#untrack/2"},{"type":"function","title":"Bonfire.UI.Common.Presence.untrack/3","doc":"","ref":"Bonfire.UI.Common.Presence.html#untrack/3"},{"type":"function","title":"Bonfire.UI.Common.Presence.update/3","doc":"","ref":"Bonfire.UI.Common.Presence.html#update/3"},{"type":"function","title":"Bonfire.UI.Common.Presence.update/4","doc":"","ref":"Bonfire.UI.Common.Presence.html#update/4"},{"type":"module","title":"Bonfire.UI.Common.PreviewContentLive","doc":"A special 'modal' for previewing objects from a feed without redirecting to a new view (so we can go back to where we were in the feed)","ref":"Bonfire.UI.Common.PreviewContentLive.html"},{"type":"module","title":"Properties - Bonfire.UI.Common.PreviewContentLive","doc":"* **id** *:string, required: true* - The id of the live component (required by LiveView for stateful components).\n\n* **source_inspector_attrs** *:map, default: %{}*\n* **title_text** *:string, default: nil* - The title of the modal. Only used if no title slot is passed.\n* **title_class** *:css_class, default: nil* - The classes of the title of the modal\n* **show** *:boolean, default: false* - Force modal to be open\n* **no_header** *:boolean, default: false* - Optional prop to hide the header at the top of the modal\n* **modal_class** *:string, default: nil* - The classes of the modal.\n* **modal_assigns** *:any, default: []* - Additional assigns for the modal\n\n* **opts** *:keyword, default: []* - Additional attributes to add onto the modal wrapper","ref":"Bonfire.UI.Common.PreviewContentLive.html#module-properties"},{"type":"module","title":"Slots - Bonfire.UI.Common.PreviewContentLive","doc":"* **default, arg: [:autocomplete]** - Slots for the contents of the modal, title, buttons...\n\n* **open_btn**\n* **action_btns**\n* **cancel_btn**\n* **title**","ref":"Bonfire.UI.Common.PreviewContentLive.html#module-slots"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.do_handle_event/3","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#do_handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.handle_event/3","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.handle_info/2","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#handle_info/2"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.mount/1","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#mount/1"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.render/1","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#render/1"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.render_native/1","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#render_native/1"},{"type":"macro","title":"Bonfire.UI.Common.PreviewContentLive.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#sigil_p/2"},{"type":"macro","title":"Bonfire.UI.Common.PreviewContentLive.sigil_SWIFTUI/2","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#sigil_SWIFTUI/2"},{"type":"function","title":"Bonfire.UI.Common.PreviewContentLive.update/2","doc":"","ref":"Bonfire.UI.Common.PreviewContentLive.html#update/2"},{"type":"module","title":"Bonfire.UI.Common.ReusableModalLive","doc":"The classic **modal**","ref":"Bonfire.UI.Common.ReusableModalLive.html"},{"type":"module","title":"Properties - Bonfire.UI.Common.ReusableModalLive","doc":"* **id** *:string, required: true* - The id of the live component (required by LiveView for stateful components).\n\n* **source_inspector_attrs** *:map, default: %{}*\n* **title_text** *:string, default: nil* - The title of the modal. Only used if no title slot is passed.\n* **image_preview** *:boolean, default: false* - If the modal is a preview of an image, set this to true.\n* **title_class** *:css_class, default: nil* - The classes of the title of the modal\n* **modal_class** *:css_class, default: \"\"* - The classes of the modal.\n* **wrapper_class** *:css_class, default: nil* - The classes of the modal wrapper.\n* **action_btns_wrapper_class** *:css_class, default: nil* - The classes around the action/submit button(s) on the modal\n* **cancel_btn_class** *:css_class, default: nil* - The classes of the close/cancel button on the modal. Only used if no close_btn slot is passed.\n* **cancel_label** *:string, default: nil*\n* **show** *:boolean, default: false* - Force modal to be open\n* **form_opts** *:map, default: %{}*\n* **no_actions** *:boolean, default: false* - Optional prop to hide the actions at the bottom of the modal\n* **no_header** *:boolean, default: false* - Optional prop to hide the header at the top of the modal\n* **no_backdrop** *:boolean, default: false*\n* **opts** *:keyword, default: []* - Additional attributes to add onto the modal wrapper\n\n* **autocomplete** *:list, default: []*","ref":"Bonfire.UI.Common.ReusableModalLive.html#module-properties"},{"type":"module","title":"Slots - Bonfire.UI.Common.ReusableModalLive","doc":"* **open_btn, arg: [autocomplete: :list, value: :any]** - Slots for the contents of the modal, title, buttons...\n\n* **action_btns**\n* **cancel_btn**\n* **title**\n* **default, arg: [autocomplete: :list, value: :any]**","ref":"Bonfire.UI.Common.ReusableModalLive.html#module-slots"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.default_assigns/0","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#default_assigns/0"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.do_handle_event/3","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#do_handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.handle_event/3","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.handle_info/2","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#handle_info/2"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.mount/1","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#mount/1"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.render/1","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#render/1"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.render_native/1","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#render_native/1"},{"type":"macro","title":"Bonfire.UI.Common.ReusableModalLive.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#sigil_p/2"},{"type":"macro","title":"Bonfire.UI.Common.ReusableModalLive.sigil_SWIFTUI/2","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#sigil_SWIFTUI/2"},{"type":"function","title":"Bonfire.UI.Common.ReusableModalLive.update/2","doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#update/2"},{"type":"module","title":"Bonfire.UI.Common.Routes","doc":"","ref":"Bonfire.UI.Common.Routes.html"},{"type":"function","title":"Bonfire.UI.Common.Routes.gon_js_config/0","doc":"Config keys to make available in JS (via Phoenix Gon lib)","ref":"Bonfire.UI.Common.Routes.html#gon_js_config/0"},{"type":"module","title":"Bonfire.UI.Common.SEO","doc":"","ref":"Bonfire.UI.Common.SEO.html"},{"type":"function","title":"Bonfire.UI.Common.SEO.config/0","doc":"Get configuration for SEO.\n\nconfig/0 will return all SEO config\nconfig/1 with SEO domain atom will return that domain's config","ref":"Bonfire.UI.Common.SEO.html#config/0"},{"type":"function","title":"Bonfire.UI.Common.SEO.open_graph_config/1","doc":"","ref":"Bonfire.UI.Common.SEO.html#open_graph_config/1"},{"type":"function","title":"Bonfire.UI.Common.SEO.site_config/1","doc":"","ref":"Bonfire.UI.Common.SEO.html#site_config/1"},{"type":"function","title":"Bonfire.UI.Common.SEO.twitter_config/1","doc":"","ref":"Bonfire.UI.Common.SEO.html#twitter_config/1"},{"type":"behaviour","title":"Bonfire.UI.Common.SettingsModule","doc":"Settings nav & components","ref":"Bonfire.UI.Common.SettingsModule.html"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.app_modules/0","doc":"","ref":"Bonfire.UI.Common.SettingsModule.html#app_modules/0"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.component_function_error/2","doc":"","ref":"Bonfire.UI.Common.SettingsModule.html#component_function_error/2"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.components/0","doc":"Load all components at once","ref":"Bonfire.UI.Common.SettingsModule.html#components/0"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.components/1","doc":"Load components for an extension","ref":"Bonfire.UI.Common.SettingsModule.html#components/1"},{"type":"callback","title":"Bonfire.UI.Common.SettingsModule.declared_component/0","doc":"Declares a component component","ref":"Bonfire.UI.Common.SettingsModule.html#c:declared_component/0"},{"type":"callback","title":"Bonfire.UI.Common.SettingsModule.declared_nav/0","doc":"Declares a nav module, with links or nav components","ref":"Bonfire.UI.Common.SettingsModule.html#c:declared_nav/0"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.extension_has_components?/2","doc":"List extensions that have settings component(s)","ref":"Bonfire.UI.Common.SettingsModule.html#extension_has_components?/2"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.modules/0","doc":"","ref":"Bonfire.UI.Common.SettingsModule.html#modules/0"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.modules_component/1","doc":"Get components identified by their module","ref":"Bonfire.UI.Common.SettingsModule.html#modules_component/1"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.modules_nav/1","doc":"","ref":"Bonfire.UI.Common.SettingsModule.html#modules_nav/1"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.nav/0","doc":"Load all navs","ref":"Bonfire.UI.Common.SettingsModule.html#nav/0"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.nav/1","doc":"Get navs for an extension","ref":"Bonfire.UI.Common.SettingsModule.html#nav/1"},{"type":"function","title":"Bonfire.UI.Common.SettingsModule.nav_function_error/2","doc":"","ref":"Bonfire.UI.Common.SettingsModule.html#nav_function_error/2"},{"type":"module","title":"Bonfire.UI.Common.SmartInput.LiveHandler","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.active_smart_input_component/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#active_smart_input_component/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.active_smart_input_components/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#active_smart_input_components/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.activity_type_or_reply/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#activity_type_or_reply/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.all_smart_input_components/0","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#all_smart_input_components/0"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.assign_open/2","doc":"Open the composer by setting assigns","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#assign_open/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.close_smart_input/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#close_smart_input/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.confirm_close_smart_input/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#confirm_close_smart_input/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.max_length/0","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#max_length/0"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.maximize/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#maximize/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.maybe_from_json/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#maybe_from_json/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.maybe_from_json_string/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#maybe_from_json_string/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.minimize/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#minimize/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.open/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#open/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.open_type/4","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#open_type/4"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.open_with_text_suggestion/3","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#open_with_text_suggestion/3"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.replace_input_next_time/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#replace_input_next_time/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.reply_to_param/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#reply_to_param/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.reset_input/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#reset_input/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.set/2","doc":"Set assigns in the smart input from anywhere in the app (whether using a live component or sticky live view)","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#set/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.set_smart_input_text/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#set_smart_input_text/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.show_main/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#show_main/2"},{"type":"macro","title":"Bonfire.UI.Common.SmartInput.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.smart_input_name/1","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#smart_input_name/1"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.switch_smart_input_type/2","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#switch_smart_input_type/2"},{"type":"function","title":"Bonfire.UI.Common.SmartInput.LiveHandler.toggle_expanded/4","doc":"","ref":"Bonfire.UI.Common.SmartInput.LiveHandler.html#toggle_expanded/4"},{"type":"behaviour","title":"Bonfire.UI.Common.SmartInputModule","doc":"Find a smart input module via the object type(s) it can create, or vice versa. Backed by a global cache of known smart input modules.\n\nTo add a module to this list, you should declare `@behaviour Bonfire.UI.Common.SmartInputModule` in it and define a `smart_input_module/0` function which returns a list of object types that it can create.\n\nExample:\n```\n@behaviour Bonfire.UI.Common.SmartInputModule\ndef smart_input_module, do: [:page, Bonfire.Pages.Page]\n```\n\nYou can then open the smart input composer / object creator using that declared type, for example:\n```\n \n```","ref":"Bonfire.UI.Common.SmartInputModule.html"},{"type":"function","title":"Bonfire.UI.Common.SmartInputModule.app_modules/0","doc":"","ref":"Bonfire.UI.Common.SmartInputModule.html#app_modules/0"},{"type":"function","title":"Bonfire.UI.Common.SmartInputModule.modules/0","doc":"","ref":"Bonfire.UI.Common.SmartInputModule.html#modules/0"},{"type":"callback","title":"Bonfire.UI.Common.SmartInputModule.smart_input_module/0","doc":"Declares a smart input module","ref":"Bonfire.UI.Common.SmartInputModule.html#c:smart_input_module/0"},{"type":"function","title":"Bonfire.UI.Common.SmartInputModule.smart_input_modules_types/0","doc":"Returns a list of smart input modules and the object type(s) it can create, and vice versa.","ref":"Bonfire.UI.Common.SmartInputModule.html#smart_input_modules_types/0"},{"type":"module","title":"Bonfire.UI.Common.StaticGenerator","doc":"Static-site generator which can take a list of URLs served by the current Phoenix server and output static HTML for them","ref":"Bonfire.UI.Common.StaticGenerator.html"},{"type":"function","title":"Bonfire.UI.Common.StaticGenerator.base_path/0","doc":"","ref":"Bonfire.UI.Common.StaticGenerator.html#base_path/0"},{"type":"function","title":"Bonfire.UI.Common.StaticGenerator.generate/2","doc":"","ref":"Bonfire.UI.Common.StaticGenerator.html#generate/2"},{"type":"module","title":"Bonfire.UI.Common.StaticGeneratorPlug","doc":"","ref":"Bonfire.UI.Common.StaticGeneratorPlug.html"},{"type":"function","title":"Bonfire.UI.Common.StaticGeneratorPlug.add_index_html/2","doc":"","ref":"Bonfire.UI.Common.StaticGeneratorPlug.html#add_index_html/2"},{"type":"function","title":"Bonfire.UI.Common.StaticGeneratorPlug.call/2","doc":"","ref":"Bonfire.UI.Common.StaticGeneratorPlug.html#call/2"},{"type":"function","title":"Bonfire.UI.Common.StaticGeneratorPlug.init/1","doc":"","ref":"Bonfire.UI.Common.StaticGeneratorPlug.html#init/1"},{"type":"module","title":"Bonfire.UI.Common.Testing.Helpers","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.assert_field_error/3","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_field_error/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.assert_field_good/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_field_good/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash/3","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash_kind/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash_kind/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash_message/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash_message/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.conn/0","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/0"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.conn/1","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.conn/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fake_account!/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_account!/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fake_admin!/3","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_admin!/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fake_user!/3","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_user!/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fake_user_and_conn!/1","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_user_and_conn!/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fancy_fake_user!/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fancy_fake_user!/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.fancy_fake_user_on_test_instance/1","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fancy_fake_user_on_test_instance/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.find_flash/1","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#find_flash/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.find_form_error/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#find_form_error/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_attr/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_attr/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_click/3","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_click/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_live/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_live/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_redirect/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_redirect/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_response/2","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_response/2"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.floki_submit/4","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_submit/4"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.live_pubsub_wait/1","doc":"Wait for the LiveView to receive any queued PubSub broadcasts","ref":"Bonfire.UI.Common.Testing.Helpers.html#live_pubsub_wait/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.live_sockets_disconnect/1","doc":"Disconnect all LiveViews associated with current user or account","ref":"Bonfire.UI.Common.Testing.Helpers.html#live_sockets_disconnect/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.live_view_stop/1","doc":"Stop a specific LiveView","ref":"Bonfire.UI.Common.Testing.Helpers.html#live_view_stop/1"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.render_stateful/3","doc":"Render stateful Surface or LiveView components","ref":"Bonfire.UI.Common.Testing.Helpers.html#render_stateful/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.render_stateless/3","doc":"Render stateless Surface or LiveView components","ref":"Bonfire.UI.Common.Testing.Helpers.html#render_stateless/3"},{"type":"function","title":"Bonfire.UI.Common.Testing.Helpers.session_conn/1","doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#session_conn/1"},{"type":"behaviour","title":"Bonfire.UI.Common.WidgetModule","doc":"Widgets: components that can be added to the dashboard or sidebards","ref":"Bonfire.UI.Common.WidgetModule.html"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.app_modules/0","doc":"","ref":"Bonfire.UI.Common.WidgetModule.html#app_modules/0"},{"type":"callback","title":"Bonfire.UI.Common.WidgetModule.declared_widget/0","doc":"Declares a widget component","ref":"Bonfire.UI.Common.WidgetModule.html#c:declared_widget/0"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.modules/0","doc":"","ref":"Bonfire.UI.Common.WidgetModule.html#modules/0"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.widget/1","doc":"Get a widget identified by module","ref":"Bonfire.UI.Common.WidgetModule.html#widget/1"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.widget_function_error/2","doc":"","ref":"Bonfire.UI.Common.WidgetModule.html#widget_function_error/2"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.widgets/0","doc":"Load all widgets at once","ref":"Bonfire.UI.Common.WidgetModule.html#widgets/0"},{"type":"function","title":"Bonfire.UI.Common.WidgetModule.widgets/1","doc":"Load widgets for an extension","ref":"Bonfire.UI.Common.WidgetModule.html#widgets/1"},{"type":"module","title":"Bonfire.UI.Me.Integration","doc":"","ref":"Bonfire.UI.Me.Integration.html"},{"type":"function","title":"Bonfire.UI.Me.Integration.mailer/0","doc":"","ref":"Bonfire.UI.Me.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.UI.Me.Integration.repo/0","doc":"","ref":"Bonfire.UI.Me.Integration.html#repo/0"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.AccountRequired","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AccountRequired.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.AccountRequired.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AccountRequired.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.AccountRequired.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AccountRequired.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.AdminRequired","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AdminRequired.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.AdminRequired.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AdminRequired.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.AdminRequired.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.AdminRequired.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.LivePlugs.UserRequired","doc":"","ref":"Bonfire.UI.Me.LivePlugs.UserRequired.html"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.UserRequired.mount/3","doc":"","ref":"Bonfire.UI.Me.LivePlugs.UserRequired.html#mount/3"},{"type":"function","title":"Bonfire.UI.Me.LivePlugs.UserRequired.on_mount/4","doc":"","ref":"Bonfire.UI.Me.LivePlugs.UserRequired.html#on_mount/4"},{"type":"module","title":"Bonfire.UI.Me.Plugs.AccountRequired","doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.AccountRequired.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.AccountRequired.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.AdminRequired","doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.AdminRequired.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.AdminRequired.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.GuestOnly","doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.GuestOnly.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.GuestOnly.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Plugs.UserRequired","doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html"},{"type":"function","title":"Bonfire.UI.Me.Plugs.UserRequired.call/2","doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html#call/2"},{"type":"function","title":"Bonfire.UI.Me.Plugs.UserRequired.init/1","doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html#init/1"},{"type":"module","title":"Bonfire.UI.Me.Routes","doc":"","ref":"Bonfire.UI.Me.Routes.html"},{"type":"module","title":"Bonfire.UI.Me.RuntimeConfig","doc":"","ref":"Bonfire.UI.Me.RuntimeConfig.html"},{"type":"function","title":"Bonfire.UI.Me.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.UI.Me.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.UI.Me.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.UI.Me.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.UI.Social.Benchmark","doc":"","ref":"Bonfire.UI.Social.Benchmark.html"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.feed/0","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#feed/0"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.feed_page/0","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#feed_page/0"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.feed_queries_without_benchee/0","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#feed_queries_without_benchee/0"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.feed_query_methods/0","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#feed_query_methods/0"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.feed_render_page/0","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#feed_render_page/0"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.live_feed/1","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#live_feed/1"},{"type":"function","title":"Bonfire.UI.Social.Benchmark.render_feed/2","doc":"","ref":"Bonfire.UI.Social.Benchmark.html#render_feed/2"},{"type":"module","title":"Bonfire.UI.Social.Integration","doc":"","ref":"Bonfire.UI.Social.Integration.html"},{"type":"function","title":"Bonfire.UI.Social.Integration.mailer/0","doc":"","ref":"Bonfire.UI.Social.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.UI.Social.Integration.repo/0","doc":"","ref":"Bonfire.UI.Social.Integration.html#repo/0"},{"type":"module","title":"Bonfire.UI.Social.Routes","doc":"","ref":"Bonfire.UI.Social.Routes.html"},{"type":"function","title":"Bonfire.UI.Social.Routes.declare_routes/0","doc":"","ref":"Bonfire.UI.Social.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.UI.Social.RuntimeConfig","doc":"","ref":"Bonfire.UI.Social.RuntimeConfig.html"},{"type":"function","title":"Bonfire.UI.Social.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's `runtime.exs`, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs()` line","ref":"Bonfire.UI.Social.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.UI.Social.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.UI.Social.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Needle.Changesets","doc":"","ref":"Needle.Changesets.html"},{"type":"function","title":"Needle.Changesets.build_assoc/3","doc":"Like Ecto.build_assoc/3, but can work with a Changeset","ref":"Needle.Changesets.html#build_assoc/3"},{"type":"function","title":"Needle.Changesets.built?/1","doc":"True if the schema object's current state is `:built`","ref":"Needle.Changesets.html#built?/1"},{"type":"function","title":"Needle.Changesets.cast/3","doc":"Like `Ecto.Changeset.cast` but for Pointables, Virtuals and Mixins.\n\nIf a pointable or virtual, Generates an ID if one is not present.","ref":"Needle.Changesets.html#cast/3"},{"type":"function","title":"Needle.Changesets.cast_assoc/3","doc":"","ref":"Needle.Changesets.html#cast_assoc/3"},{"type":"function","title":"Needle.Changesets.cast_belongs_to/4","doc":"","ref":"Needle.Changesets.html#cast_belongs_to/4"},{"type":"function","title":"Needle.Changesets.cast_has_many/4","doc":"","ref":"Needle.Changesets.html#cast_has_many/4"},{"type":"function","title":"Needle.Changesets.cast_has_one/4","doc":"","ref":"Needle.Changesets.html#cast_has_one/4"},{"type":"function","title":"Needle.Changesets.config_for/3","doc":"","ref":"Needle.Changesets.html#config_for/3"},{"type":"function","title":"Needle.Changesets.deleted?/1","doc":"True if the schema object's current state is `:deleted`","ref":"Needle.Changesets.html#deleted?/1"},{"type":"function","title":"Needle.Changesets.get_field/2","doc":"","ref":"Needle.Changesets.html#get_field/2"},{"type":"function","title":"Needle.Changesets.insert_verb/1","doc":"","ref":"Needle.Changesets.html#insert_verb/1"},{"type":"function","title":"Needle.Changesets.loaded?/1","doc":"True if the schema object's current state is `:loaded`","ref":"Needle.Changesets.html#loaded?/1"},{"type":"function","title":"Needle.Changesets.merge_child_errors/1","doc":"","ref":"Needle.Changesets.html#merge_child_errors/1"},{"type":"function","title":"Needle.Changesets.put_assoc/3","doc":"Like `put_assoc!/3` but doesn't raise if the association doesn't exist","ref":"Needle.Changesets.html#put_assoc/3"},{"type":"function","title":"Needle.Changesets.put_assoc!/3","doc":"Like `Ecto.Changeset.put_assoc/3` but for Pointables, Virtuals and Mixins.\n\nCopies across keys where possible.","ref":"Needle.Changesets.html#put_assoc!/3"},{"type":"function","title":"Needle.Changesets.put_id_on_mixins/3","doc":"","ref":"Needle.Changesets.html#put_id_on_mixins/3"},{"type":"function","title":"Needle.Changesets.put_new_id/1","doc":"","ref":"Needle.Changesets.html#put_new_id/1"},{"type":"function","title":"Needle.Changesets.state/1","doc":"Returns the schema object's current state.","ref":"Needle.Changesets.html#state/1"},{"type":"function","title":"Needle.Changesets.update_data/2","doc":"","ref":"Needle.Changesets.html#update_data/2"},{"type":"function","title":"Needle.Changesets.valid?/1","doc":"true if the provided changeset or list of changesets is valid.","ref":"Needle.Changesets.html#valid?/1"},{"type":"module","title":"Needle.Form","doc":"","ref":"Needle.Form.html"},{"type":"macro","title":"Needle.Form.form_schema/1","doc":"","ref":"Needle.Form.html#form_schema/1"},{"type":"function","title":"Needle.Form.using/2","doc":"","ref":"Needle.Form.html#using/2"},{"type":"module","title":"Needle.Migration","doc":"Helpers for writing Pointer-aware migrations.","ref":"Needle.Migration.html"},{"type":"function","title":"Needle.Migration.add_is_not_deleted/1","doc":"","ref":"Needle.Migration.html#add_is_not_deleted/1"},{"type":"macro","title":"Needle.Migration.create_mixin_table/3","doc":"Creates a mixin table - one with a ULID primary key and no trigger","ref":"Needle.Migration.html#create_mixin_table/3"},{"type":"macro","title":"Needle.Migration.create_pointable_table/2","doc":"Creates a pointable table along with its trigger.","ref":"Needle.Migration.html#create_pointable_table/2"},{"type":"macro","title":"Needle.Migration.create_pointable_table/3","doc":"","ref":"Needle.Migration.html#create_pointable_table/3"},{"type":"macro","title":"Needle.Migration.create_pointable_table/4","doc":"","ref":"Needle.Migration.html#create_pointable_table/4"},{"type":"macro","title":"Needle.Migration.create_random_table/3","doc":"Creates a random table - one with a UUID v4 primary key.","ref":"Needle.Migration.html#create_random_table/3"},{"type":"function","title":"Needle.Migration.create_virtual/1","doc":"","ref":"Needle.Migration.html#create_virtual/1"},{"type":"function","title":"Needle.Migration.create_virtual/2","doc":"","ref":"Needle.Migration.html#create_virtual/2"},{"type":"function","title":"Needle.Migration.create_virtual_trigger_function/0","doc":"","ref":"Needle.Migration.html#create_virtual_trigger_function/0"},{"type":"function","title":"Needle.Migration.drop_mixin_table/1","doc":"Drops a mixin table.","ref":"Needle.Migration.html#drop_mixin_table/1"},{"type":"function","title":"Needle.Migration.drop_pointable_table/1","doc":"Drops a pointable table","ref":"Needle.Migration.html#drop_pointable_table/1"},{"type":"function","title":"Needle.Migration.drop_pointable_table/2","doc":"","ref":"Needle.Migration.html#drop_pointable_table/2"},{"type":"function","title":"Needle.Migration.drop_random_table/1","doc":"Drops a random table.","ref":"Needle.Migration.html#drop_random_table/1"},{"type":"function","title":"Needle.Migration.drop_table/1","doc":"","ref":"Needle.Migration.html#drop_table/1"},{"type":"function","title":"Needle.Migration.drop_virtual/1","doc":"","ref":"Needle.Migration.html#drop_virtual/1"},{"type":"function","title":"Needle.Migration.drop_virtual/2","doc":"","ref":"Needle.Migration.html#drop_virtual/2"},{"type":"function","title":"Needle.Migration.init_pointers/0","doc":"When migrating up: initialises the pointers database.\nWhen migrating down: deinitialises the pointers database.","ref":"Needle.Migration.html#init_pointers/0"},{"type":"function","title":"Needle.Migration.init_pointers/1","doc":"Given `:up`: initialises the pointers database.\nGiven `:down`: deinitialises the pointers database.","ref":"Needle.Migration.html#init_pointers/1"},{"type":"function","title":"Needle.Migration.init_pointers_ulid_extra/0","doc":"","ref":"Needle.Migration.html#init_pointers_ulid_extra/0"},{"type":"function","title":"Needle.Migration.migrate_virtual/1","doc":"","ref":"Needle.Migration.html#migrate_virtual/1"},{"type":"function","title":"Needle.Migration.migrate_virtual/2","doc":"","ref":"Needle.Migration.html#migrate_virtual/2"},{"type":"function","title":"Needle.Migration.migrate_virtual/3","doc":"","ref":"Needle.Migration.html#migrate_virtual/3"},{"type":"function","title":"Needle.Migration.pointer/2","doc":"Creates a strong, weak or unbreakable pointer depending on `type`.","ref":"Needle.Migration.html#pointer/2"},{"type":"function","title":"Needle.Migration.strong_pointer/1","doc":"A reference to a pointer for use with `add/3`. A strong pointer will\nbe deleted when the thing it's pointing to is deleted.","ref":"Needle.Migration.html#strong_pointer/1"},{"type":"function","title":"Needle.Migration.unbreakable_pointer/1","doc":"A reference to a pointer for use with `add/3`. An unbreakable\npointer will prevent the thing it's pointing to from being deleted.","ref":"Needle.Migration.html#unbreakable_pointer/1"},{"type":"function","title":"Needle.Migration.weak_pointer/1","doc":"A reference to a pointer for use with `add/3`. A weak pointer will\nbe set null when the thing it's pointing to is deleted.","ref":"Needle.Migration.html#weak_pointer/1"},{"type":"type","title":"Needle.Migration.pointer_type/0","doc":"","ref":"Needle.Migration.html#t:pointer_type/0"},{"type":"module","title":"Needle.Mixin","doc":"If a Pointer represents an object, mixins represent data about the object. Mixins collate optional\nadditional information about an object. Different types of object will typically make use of\ndifferent mixins. You can see these as aspects of the data if you like.\n\nA mixin table starts with an `id` column which references `Pointer` and forms the default primary\nkey. It is up to the user to choose which other fields go in the table, and thus what the mixin is for.\n\nUse of a mixin is typically through `has_one`:\n\n```\nhas_one :my_mixin, MyMixin, foreign_key: :id, references: :id\n```\n\nSometimes, the user may wish to add fields to the primary key by using the `primary_key: true`\noption to `add` in their migrations. This is permitted and in such case we call the resulting\nmixin a `multimixin`. Use becomes `has_many`:\n\n```\nhas_many :my_mixin, MyMixin, foreign_key: :id, references: :id\n```\n\nThus the choice of single or multi comes down to how many times you want to store that data for\nthe object. A user's profile naturally lends itself to a regular `single` mixin, whereas an\nobject's appearance in a feed would naturally lend itself to being a multimixin since the object\nmay appear in many feeds.\n\n#","ref":"Needle.Mixin.html"},{"type":"module","title":"Declaring a mixin table type - Needle.Mixin","doc":"```\ndefmodule My.Mixin do\n\n  use Needle.Mixin,\n    otp_app: :my_app,\n    source: \"postgres_table_name\"\n\n  mixin_schema do\n    field :is_awesome, :boolean\n  end\nend\n```","ref":"Needle.Mixin.html#module-declaring-a-mixin-table-type"},{"type":"macro","title":"Needle.Mixin.mixin_schema/1","doc":"","ref":"Needle.Mixin.html#mixin_schema/1"},{"type":"function","title":"Needle.Mixin.using/2","doc":"","ref":"Needle.Mixin.html#using/2"},{"type":"exception","title":"Needle.NotFound","doc":"We could not find the requested object","ref":"Needle.NotFound.html"},{"type":"function","title":"Needle.NotFound.new/1","doc":"Creates a new NotFound","ref":"Needle.NotFound.html#new/1"},{"type":"type","title":"Needle.NotFound.t/0","doc":"","ref":"Needle.NotFound.html#t:t/0"},{"type":"module","title":"Needle.Pointable","doc":"Sets up an Ecto Schema for a Pointable table.","ref":"Needle.Pointable.html"},{"type":"module","title":"Sample Usage - Needle.Pointable","doc":"```\nuse Needle.Pointable,\n  otp_app: :my_app,   # your OTP application's name\n  source: \"my_table\", # default name of table in database\n  table_id: \"01EBTVSZJ6X02J01R1XWWPWGZW\" # unique ULID to identify table\n\npointable_schema do\n  # ... fields go here, if any\nend\n```","ref":"Needle.Pointable.html#module-sample-usage"},{"type":"module","title":"Overriding with configuration - Needle.Pointable","doc":"During `use` (i.e. compilation time), we will attempt to load\nconfiguration from the provided `:otp_app` under the key of the\ncurrent module. Any values provided here will override the defaults\nprovided to `use`. This allows you to configure them after the fact.\n\nAdditionally, pointables use `Exto`'s `flex_schema()`, so you can\nprovide additional configuration for those in the same place.\n\nI shall say it again because it's important: This happens at\n*compile time*. You must rebuild the app containing the pointable\nwhenever the configuration changes.","ref":"Needle.Pointable.html#module-overriding-with-configuration"},{"type":"module","title":"Introspection - Needle.Pointable","doc":"Defines a function `__pointers__/1` to introspect data. Recognised\nparameters:\n\n`:role` - `:pointable`\n`:table_id` - retrieves the ULID id of the pointable table.\n`:otp_app` - retrieves the OTP application to which this belongs.","ref":"Needle.Pointable.html#module-introspection"},{"type":"macro","title":"Needle.Pointable.pointable_schema/1","doc":"","ref":"Needle.Pointable.html#pointable_schema/1"},{"type":"module","title":"Needle.Pointer","doc":"A Pointer is any object that can be referenced by its id.\n\nPointer is a simple table consisting of three fields:\n* id - the database-unique id for this pointer in ULID format.\n* table_id - a type tag, references `Table`.\n* deleted_at - timestamp of when the object was deleted, null by default.\n\nTo reference `any` object, simply reference `Pointer`:\n\n```\nalias Needle.Pointer\nbelongs_to :object, Pointer\n```\n\nTo define a new object type there are two options, you should choose one:\n\n* `Virtual` - an object type with a view over `Pointer` limited by type.\n* `Pointable` - an object type with a table which is kept synchronised with `Pointer`.\n\nFor most purposes, you should use a `Virtual`. Pointable exists mostly to support existing code.\nThe major difference in practice is that you cannot add new fields to a virtual. Most of the time\nyou will want to store such extra fields in one or more mixins anyway so they may be reused.\n\nSee `Mixin` for more information about mixins.","ref":"Needle.Pointer.html"},{"type":"function","title":"Needle.Pointer.create/2","doc":"Changeset for creating a Pointer","ref":"Needle.Pointer.html#create/2"},{"type":"module","title":"Needle.Pointers","doc":"A context for working with Needle, a sort of global foreign key scheme.","ref":"Needle.Pointers.html"},{"type":"function","title":"Needle.Pointers.assert_points_to!/2","doc":"Return the provided pointer when it belongs to table queryable by the given table search term.","ref":"Needle.Pointers.html#assert_points_to!/2"},{"type":"function","title":"Needle.Pointers.cast!/1","doc":"Returns a Pointer, either the one provided or a synthesised one\npointing to the provided schema object. Does not hit the database or\ncause the pointer to be written to the database whatsoever.","ref":"Needle.Pointers.html#cast!/1"},{"type":"function","title":"Needle.Pointers.get_table_id!/1","doc":"","ref":"Needle.Pointers.html#get_table_id!/1"},{"type":"function","title":"Needle.Pointers.plan/1","doc":"Given a list of pointers which may or may have their pointed loaded,\nreturn a plan for preloading, a map of module name to set of loadable IDs.","ref":"Needle.Pointers.html#plan/1"},{"type":"function","title":"Needle.Pointers.query_base/1","doc":"Returns a basic query over non-deleted pointable objects in the system,\noptionally limited to one or more types.\n\nIf the type is set to a Pointable, Virtual or Mixin schema, records\nwill be selected from that schema directly. It is assumed this\nfilters deleted records by construction.\n\nOtherwise, will query from Pointer, filtering not is_nil(deleted_at)","ref":"Needle.Pointers.html#query_base/1"},{"type":"function","title":"Needle.Pointers.schema/1","doc":"","ref":"Needle.Pointers.html#schema/1"},{"type":"function","title":"Needle.Pointers.table/1","doc":"Looks up the table for a given pointer","ref":"Needle.Pointers.html#table/1"},{"type":"module","title":"Needle.Random","doc":"A securely randomly generated UUID keyed table. Not pointable.","ref":"Needle.Random.html"},{"type":"macro","title":"Needle.Random.random_schema/1","doc":"","ref":"Needle.Random.html#random_schema/1"},{"type":"function","title":"Needle.Random.using/2","doc":"","ref":"Needle.Random.html#using/2"},{"type":"module","title":"Needle.Table","doc":"One Table to rule them all. A record of a table participating in the\npointers abstraction - mandatory if participating.","ref":"Needle.Table.html"},{"type":"type","title":"Needle.Table.t/0","doc":"","ref":"Needle.Table.html#t:t/0"},{"type":"module","title":"Needle.Tables","doc":"A Global cache of Tables to be queried by their (Pointer) IDs, table\nnames or Ecto Schema module names.\n\nUse of the Table Service requires:\n\n1. You have run the migrations shipped with this library.\n2. You have started `Needle.Tables` before querying.\n3. All OTP applications with pointable Ecto Schemata to be added to the schema path.\n4. OTP 21.2 or greater, though we recommend using the most recent release available.\n\nWhile this module is a GenServer, it is only responsible for setup\nof the cache and then exits with :ignore having done so. It is not\nrecommended to restart the service as this will lead to a stop the\nworld garbage collection of all processes and the copying of the\nentire cache to each process that has queried it since its last\nlocal garbage collection.","ref":"Needle.Tables.html"},{"type":"function","title":"Needle.Tables.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Needle.Tables.html#child_spec/1"},{"type":"function","title":"Needle.Tables.data/0","doc":"","ref":"Needle.Tables.html#data/0"},{"type":"function","title":"Needle.Tables.id/1","doc":"Look up a table id by id, name or schema.","ref":"Needle.Tables.html#id/1"},{"type":"function","title":"Needle.Tables.id!/1","doc":"Look up a table id by id, name or schema, raise NotFound if not found.","ref":"Needle.Tables.html#id!/1"},{"type":"function","title":"Needle.Tables.ids!/1","doc":"Look up many ids at once, raise NotFound if any of them are not found","ref":"Needle.Tables.html#ids!/1"},{"type":"function","title":"Needle.Tables.mixin_modules/0","doc":"","ref":"Needle.Tables.html#mixin_modules/0"},{"type":"function","title":"Needle.Tables.schema/1","doc":"Look up a schema module by id, name or schema","ref":"Needle.Tables.html#schema/1"},{"type":"function","title":"Needle.Tables.schema!/1","doc":"Look up a schema module by id, name or schema, raise NotFound if not found","ref":"Needle.Tables.html#schema!/1"},{"type":"function","title":"Needle.Tables.schema?/1","doc":"","ref":"Needle.Tables.html#schema?/1"},{"type":"function","title":"Needle.Tables.schema_modules/0","doc":"","ref":"Needle.Tables.html#schema_modules/0"},{"type":"function","title":"Needle.Tables.start_link/1","doc":"Populates the global cache with table data via introspection.","ref":"Needle.Tables.html#start_link/1"},{"type":"function","title":"Needle.Tables.table/1","doc":"Get a Table identified by name, id or module.","ref":"Needle.Tables.html#table/1"},{"type":"function","title":"Needle.Tables.table!/1","doc":"Look up a Table by name or id, raise NotFound if not found.","ref":"Needle.Tables.html#table!/1"},{"type":"type","title":"Needle.Tables.query/0","doc":"A query is either a table's (database) name or (Pointer) ID as a\nbinary or the name of its Ecto Schema Module as an atom.","ref":"Needle.Tables.html#t:query/0"},{"type":"module","title":"Needle.ULID","doc":"An Ecto type for ULID strings.","ref":"Needle.ULID.html"},{"type":"function","title":"Needle.ULID.bingenerate/1","doc":"Generates a binary ULID.\n\nIf a value is provided for `timestamp`, the generated ULID will be for the provided timestamp.\nOtherwise, a ULID will be generated for the current time.\n\nArguments:\n\n* `timestamp`: A Unix timestamp with millisecond precision.","ref":"Needle.ULID.html#bingenerate/1"},{"type":"function","title":"Needle.ULID.bintimestamp/1","doc":"","ref":"Needle.ULID.html#bintimestamp/1"},{"type":"function","title":"Needle.ULID.cast/1","doc":"Casts a 26-byte encoded string to ULID or a 16-byte binary unchanged","ref":"Needle.ULID.html#cast/1"},{"type":"function","title":"Needle.ULID.cast!/1","doc":"Same as `cast/1` but raises `Ecto.CastError` on invalid arguments.","ref":"Needle.ULID.html#cast!/1"},{"type":"function","title":"Needle.ULID.dump/1","doc":"Converts a Crockford Base32 encoded ULID into a binary.","ref":"Needle.ULID.html#dump/1"},{"type":"function","title":"Needle.ULID.dump!/1","doc":"","ref":"Needle.ULID.html#dump!/1"},{"type":"function","title":"Needle.ULID.embed_as/1","doc":"","ref":"Needle.ULID.html#embed_as/1"},{"type":"function","title":"Needle.ULID.encoded_randomness/1","doc":"Returns the randomness portion of the encoded ulid","ref":"Needle.ULID.html#encoded_randomness/1"},{"type":"function","title":"Needle.ULID.encoded_timestamp/1","doc":"Returns the timestamp portion of the encoded ulid","ref":"Needle.ULID.html#encoded_timestamp/1"},{"type":"function","title":"Needle.ULID.equal?/2","doc":"","ref":"Needle.ULID.html#equal?/2"},{"type":"function","title":"Needle.ULID.generate/1","doc":"Generates a Crockford Base32 encoded ULID.\n\nIf a value is provided for `timestamp`, the generated ULID will be for the provided timestamp.\nOtherwise, a ULID will be generated for the current time.\n\nArguments:\n\n* `timestamp`: A Unix timestamp with millisecond precision.","ref":"Needle.ULID.html#generate/1"},{"type":"function","title":"Needle.ULID.load/1","doc":"Converts a binary ULID into a Crockford Base32 encoded string.","ref":"Needle.ULID.html#load/1"},{"type":"function","title":"Needle.ULID.synthesise!/1","doc":"translates alphanumerics into a sentinel ulid value","ref":"Needle.ULID.html#synthesise!/1"},{"type":"function","title":"Needle.ULID.timestamp/1","doc":"Returns the timestamp of an encoded or unencoded ULID","ref":"Needle.ULID.html#timestamp/1"},{"type":"function","title":"Needle.ULID.type/0","doc":"The underlying schema type.","ref":"Needle.ULID.html#type/0"},{"type":"module","title":"Needle.ULID.Migration","doc":"","ref":"Needle.ULID.Migration.html"},{"type":"function","title":"Needle.ULID.Migration.init_pointers_ulid_extra/0","doc":"","ref":"Needle.ULID.Migration.html#init_pointers_ulid_extra/0"},{"type":"function","title":"Needle.ULID.Migration.init_pointers_ulid_extra/1","doc":"","ref":"Needle.ULID.Migration.html#init_pointers_ulid_extra/1"},{"type":"module","title":"Needle.Unpointable","doc":"Has a ULID primary key but is not pointable.","ref":"Needle.Unpointable.html"},{"type":"macro","title":"Needle.Unpointable.unpointable_schema/1","doc":"","ref":"Needle.Unpointable.html#unpointable_schema/1"},{"type":"function","title":"Needle.Unpointable.using/2","doc":"","ref":"Needle.Unpointable.html#using/2"},{"type":"module","title":"Needle.Virtual","doc":"Sets up an Ecto Schema for a Virtual Pointable\n\nVirtual Pointables (or just `virtuals`) are like pointables with no\nadditional columns, except instead of being backed by a table they\nare backed by a view. This is more efficient of resources but only\nworks when there are no additional columns to add.\n\nIf you need to add columns to the schema, you should use a pointable.","ref":"Needle.Virtual.html"},{"type":"module","title":"Sample Usage - Needle.Virtual","doc":"```\nuse Needle.Virtual,\n  otp_app: :my_app,   # your OTP application's name\n  source: \"my_table\", # default name of view in database\n  table_id: \"01EBTVSZJ6X02J01R1XWWPWGZW\" # valid ULID to identify virtual\n\nvirtual_schema do\n  # ... `has_one`, `has_many`, or *virtual* fields ONLY go here.\nend\n```","ref":"Needle.Virtual.html#module-sample-usage"},{"type":"module","title":"Overriding with configuration - Needle.Virtual","doc":"During `use` (i.e. compilation time), we will attempt to load\nconfiguration from the provided `:otp_app` under the key of the\ncurrent module. Any values provided here will override the defaults\nprovided to `use`. This allows you to configure them after the fact.\n\nAdditionally, pointables use `Exto`'s `flex_schema()`, so you can\nprovide additional configuration for those in the same place. Unlike\na regular pointable, you should not add additional\n(non-virtual) fields, but it is permitted to add `has_one` /\n`has_many` associations.\n\nI shall say it again because it's important: This happens at\n*compile time*. You must rebuild the app containing the pointable\nwhenever the configuration changes.","ref":"Needle.Virtual.html#module-overriding-with-configuration"},{"type":"module","title":"Introspection - Needle.Virtual","doc":"Defines a function `__pointers__/1` to introspect data. Recognised\nparameters:\n\n`:role` - `:virtual`.\n`:table_id` - retrieves the ULID id of the virtual.\n`:otp_app` - retrieves the OTP application to which this belongs.","ref":"Needle.Virtual.html#module-introspection"},{"type":"macro","title":"Needle.Virtual.virtual_schema/1","doc":"","ref":"Needle.Virtual.html#virtual_schema/1"},{"type":"module","title":"Bonfire.Boundaries","doc":"","ref":"Bonfire.Boundaries.html"},{"type":"function","title":"Bonfire.Boundaries.acls_from_preset_boundary_names/1","doc":"","ref":"Bonfire.Boundaries.html#acls_from_preset_boundary_names/1"},{"type":"function","title":"Bonfire.Boundaries.boundaries_normalise/1","doc":"","ref":"Bonfire.Boundaries.html#boundaries_normalise/1"},{"type":"function","title":"Bonfire.Boundaries.boundaries_or_default/2","doc":"","ref":"Bonfire.Boundaries.html#boundaries_or_default/2"},{"type":"function","title":"Bonfire.Boundaries.can?/4","doc":"","ref":"Bonfire.Boundaries.html#can?/4"},{"type":"function","title":"Bonfire.Boundaries.default_boundaries/1","doc":"","ref":"Bonfire.Boundaries.html#default_boundaries/1"},{"type":"function","title":"Bonfire.Boundaries.find_caretaker_stereotype/3","doc":"","ref":"Bonfire.Boundaries.html#find_caretaker_stereotype/3"},{"type":"function","title":"Bonfire.Boundaries.find_caretaker_stereotypes/3","doc":"","ref":"Bonfire.Boundaries.html#find_caretaker_stereotypes/3"},{"type":"function","title":"Bonfire.Boundaries.find_caretaker_stereotypes_q/3","doc":"","ref":"Bonfire.Boundaries.html#find_caretaker_stereotypes_q/3"},{"type":"function","title":"Bonfire.Boundaries.list_grants_on/1","doc":"","ref":"Bonfire.Boundaries.html#list_grants_on/1"},{"type":"function","title":"Bonfire.Boundaries.list_grants_on/2","doc":"eg: `list_grants_on(id, [:see, :read])`","ref":"Bonfire.Boundaries.html#list_grants_on/2"},{"type":"function","title":"Bonfire.Boundaries.list_object_acls/2","doc":"","ref":"Bonfire.Boundaries.html#list_object_acls/2"},{"type":"function","title":"Bonfire.Boundaries.list_object_boundaries/2","doc":"","ref":"Bonfire.Boundaries.html#list_object_boundaries/2"},{"type":"function","title":"Bonfire.Boundaries.load_pointer/2","doc":"","ref":"Bonfire.Boundaries.html#load_pointer/2"},{"type":"function","title":"Bonfire.Boundaries.load_pointers/2","doc":"Loads binaries according to boundaries (which are assumed to be ULID pointer IDs).\nLists which are iterated and return a [sub]list with only permitted pointers.","ref":"Bonfire.Boundaries.html#load_pointers/2"},{"type":"function","title":"Bonfire.Boundaries.pointer_permitted?/2","doc":"","ref":"Bonfire.Boundaries.html#pointer_permitted?/2"},{"type":"function","title":"Bonfire.Boundaries.preset_boundary_from_acl/2","doc":"","ref":"Bonfire.Boundaries.html#preset_boundary_from_acl/2"},{"type":"function","title":"Bonfire.Boundaries.preset_boundary_tuple_from_acl/2","doc":"","ref":"Bonfire.Boundaries.html#preset_boundary_tuple_from_acl/2"},{"type":"function","title":"Bonfire.Boundaries.preset_name/2","doc":"","ref":"Bonfire.Boundaries.html#preset_name/2"},{"type":"function","title":"Bonfire.Boundaries.replace_boundaries/4","doc":"","ref":"Bonfire.Boundaries.html#replace_boundaries/4"},{"type":"function","title":"Bonfire.Boundaries.set_boundaries/3","doc":"","ref":"Bonfire.Boundaries.html#set_boundaries/3"},{"type":"function","title":"Bonfire.Boundaries.take_care_of!/2","doc":"Assigns the user as the caretaker of the given object or objects,\nreplacing the existing caretaker, if any.","ref":"Bonfire.Boundaries.html#take_care_of!/2"},{"type":"function","title":"Bonfire.Boundaries.user_default_boundaries/0","doc":"","ref":"Bonfire.Boundaries.html#user_default_boundaries/0"},{"type":"function","title":"Bonfire.Boundaries.users_grants_on/2","doc":"","ref":"Bonfire.Boundaries.html#users_grants_on/2"},{"type":"function","title":"Bonfire.Boundaries.users_grants_on/3","doc":"","ref":"Bonfire.Boundaries.html#users_grants_on/3"},{"type":"module","title":"Bonfire.Boundaries.Acls","doc":"ACLs represent fully populated access control rules that can be reused.\nCan be reused to secure multiple objects, thus exists independently of any object.\n\nThe table doesn't have any fields of its own:\n```\nhas_many(:grants, Grant)\nhas_many(:controlled, Controlled)\n```","ref":"Bonfire.Boundaries.Acls.html"},{"type":"function","title":"Bonfire.Boundaries.Acls.acl_grants_to_tuples/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#acl_grants_to_tuples/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.acl_id/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#acl_id/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.acls/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#acls/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.acls_from_preset/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#acls_from_preset/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.base_acls_from_preset/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#base_acls_from_preset/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.built_in_ids/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#built_in_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.cast/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#cast/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.changeset/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#changeset/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.create/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#create/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.default_exclude_ids/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#default_exclude_ids/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.delete/2","doc":"Fully delete the ACL, including permissions/grants and controlled information. This will affect all objects previously shared with this ACL.","ref":"Bonfire.Boundaries.Acls.html#delete/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.edit/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#edit/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.exclude_stereotypes/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#exclude_stereotypes/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#get/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get!/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#get!/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_for_caretaker/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_for_caretaker/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_for_caretaker_q/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_for_caretaker_q/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_id/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_id/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_id!/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_id!/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_object_custom_acl/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_object_custom_acl/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.get_or_create_object_custom_acl/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#get_or_create_object_custom_acl/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.grant_tuples_from_preset/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#grant_tuples_from_preset/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.is_built_in?/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#is_built_in?/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.is_object_custom?/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#is_object_custom?/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.is_stereotype?/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#is_stereotype?/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.is_stereotyped?/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#is_stereotyped?/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.list/1","doc":"Lists ACLs we are permitted to see.","ref":"Bonfire.Boundaries.Acls.html#list/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.list_built_ins/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#list_built_ins/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.list_my/2","doc":"Lists the ACLs we are the registered caretakers of that we are\npermitted to see. If any are created without permitting the\nuser to see them, they will not be shown.","ref":"Bonfire.Boundaries.Acls.html#list_my/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.list_my_q/2","doc":"query for `list_my`","ref":"Bonfire.Boundaries.Acls.html#list_my_q/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.list_my_with_counts/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#list_my_with_counts/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.list_q/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#list_q/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.local_acl_ids/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#local_acl_ids/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.maybe_by_ids/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#maybe_by_ids/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.maybe_search/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#maybe_search/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.opts_for_dropdown/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#opts_for_dropdown/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.opts_for_list/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#opts_for_list/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.prepare_cast/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#prepare_cast/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.preset_acl_ids/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#preset_acl_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.preview/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#preview/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.public_acl_ids/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#public_acl_ids/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.remote_public_acl_ids/0","doc":"Built-in ACLs for things that should federate","ref":"Bonfire.Boundaries.Acls.html#remote_public_acl_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.set/3","doc":"","ref":"Bonfire.Boundaries.Acls.html#set/3"},{"type":"function","title":"Bonfire.Boundaries.Acls.simple_create/2","doc":"","ref":"Bonfire.Boundaries.Acls.html#simple_create/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.soft_delete/2","doc":"Soft-delete the ACL, meaning it will not be displayed anymore, but permissions/grants and controlled information will be preserved. This will not affect objects previously shared with this ACL.","ref":"Bonfire.Boundaries.Acls.html#soft_delete/2"},{"type":"function","title":"Bonfire.Boundaries.Acls.stereotype_ids/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#stereotype_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Acls.user_default_acl/1","doc":"","ref":"Bonfire.Boundaries.Acls.html#user_default_acl/1"},{"type":"function","title":"Bonfire.Boundaries.Acls.user_default_acls/0","doc":"","ref":"Bonfire.Boundaries.Acls.html#user_default_acls/0"},{"type":"module","title":"Bonfire.Boundaries.Acts.SetBoundaries","doc":"","ref":"Bonfire.Boundaries.Acts.SetBoundaries.html"},{"type":"function","title":"Bonfire.Boundaries.Acts.SetBoundaries.run/2","doc":"","ref":"Bonfire.Boundaries.Acts.SetBoundaries.html#run/2"},{"type":"module","title":"Bonfire.Boundaries.Blocks","doc":"","ref":"Bonfire.Boundaries.Blocks.html"},{"type":"function","title":"Bonfire.Boundaries.Blocks.ap_receive_activity/3","doc":"","ref":"Bonfire.Boundaries.Blocks.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Boundaries.Blocks.block/3","doc":"","ref":"Bonfire.Boundaries.Blocks.html#block/3"},{"type":"function","title":"Bonfire.Boundaries.Blocks.federation_module/0","doc":"","ref":"Bonfire.Boundaries.Blocks.html#federation_module/0"},{"type":"function","title":"Bonfire.Boundaries.Blocks.instance_wide_block/2","doc":"Block something for everyone on the instance (only for admins)","ref":"Bonfire.Boundaries.Blocks.html#instance_wide_block/2"},{"type":"function","title":"Bonfire.Boundaries.Blocks.instance_wide_circles/1","doc":"","ref":"Bonfire.Boundaries.Blocks.html#instance_wide_circles/1"},{"type":"function","title":"Bonfire.Boundaries.Blocks.is_blocked?/3","doc":"Checks if a `user_or_instance` is blocked\nPass a `block_type` (eg `:silence` or `:ghost`)\nPass a `current_user` in `opts` or check `:instance_wide`","ref":"Bonfire.Boundaries.Blocks.html#is_blocked?/3"},{"type":"function","title":"Bonfire.Boundaries.Blocks.list/2","doc":"","ref":"Bonfire.Boundaries.Blocks.html#list/2"},{"type":"function","title":"Bonfire.Boundaries.Blocks.remote_instance_block/3","doc":"","ref":"Bonfire.Boundaries.Blocks.html#remote_instance_block/3"},{"type":"function","title":"Bonfire.Boundaries.Blocks.types_blocked/1","doc":"","ref":"Bonfire.Boundaries.Blocks.html#types_blocked/1"},{"type":"function","title":"Bonfire.Boundaries.Blocks.unblock/3","doc":"","ref":"Bonfire.Boundaries.Blocks.html#unblock/3"},{"type":"function","title":"Bonfire.Boundaries.Blocks.unblock_all/2","doc":"","ref":"Bonfire.Boundaries.Blocks.html#unblock_all/2"},{"type":"function","title":"Bonfire.Boundaries.Blocks.user_block_circles/2","doc":"","ref":"Bonfire.Boundaries.Blocks.html#user_block_circles/2"},{"type":"module","title":"Bonfire.Boundaries.Blocks.LiveHandler","doc":"","ref":"Bonfire.Boundaries.Blocks.LiveHandler.html"},{"type":"function","title":"Bonfire.Boundaries.Blocks.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Boundaries.Blocks.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.Boundaries.Blocks.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Boundaries.Blocks.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Boundaries.Blocks.LiveHandler.update_many/2","doc":"","ref":"Bonfire.Boundaries.Blocks.LiveHandler.html#update_many/2"},{"type":"function","title":"Bonfire.Boundaries.Blocks.LiveHandler.update_many_opts/1","doc":"","ref":"Bonfire.Boundaries.Blocks.LiveHandler.html#update_many_opts/1"},{"type":"module","title":"Bonfire.Boundaries.Circles","doc":"","ref":"Bonfire.Boundaries.Circles.html"},{"type":"function","title":"Bonfire.Boundaries.Circles.add_to_circles/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#add_to_circles/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.built_in_ids/0","doc":"","ref":"Bonfire.Boundaries.Circles.html#built_in_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Circles.changeset/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#changeset/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.changeset/3","doc":"","ref":"Bonfire.Boundaries.Circles.html#changeset/3"},{"type":"function","title":"Bonfire.Boundaries.Circles.circle_ids/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#circle_ids/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.circles/0","doc":"","ref":"Bonfire.Boundaries.Circles.html#circles/0"},{"type":"function","title":"Bonfire.Boundaries.Circles.create/2","doc":"Create a circle for the provided user (and with the user in the circle?)","ref":"Bonfire.Boundaries.Circles.html#create/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.delete/2","doc":"Fully delete the circle, including membership and boundary information. This will affect all objects previously shared with members of this circle.","ref":"Bonfire.Boundaries.Circles.html#delete/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.edit/3","doc":"","ref":"Bonfire.Boundaries.Circles.html#edit/3"},{"type":"function","title":"Bonfire.Boundaries.Circles.empty_circles/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#empty_circles/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.get/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#get/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.get!/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#get!/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_by_name/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_by_name/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_for_caretaker/3","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_for_caretaker/3"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_id/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_id/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_id!/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_id!/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_or_create/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_or_create/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_stereotype_circles/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_stereotype_circles/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.get_tuple/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#get_tuple/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.is_built_in?/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#is_built_in?/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.is_encircled_by?/2","doc":"Lists the circles that we are permitted to see.","ref":"Bonfire.Boundaries.Circles.html#is_encircled_by?/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.is_encircled_by_q/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#is_encircled_by_q/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.is_stereotype?/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#is_stereotype?/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_built_ins/0","doc":"","ref":"Bonfire.Boundaries.Circles.html#list_built_ins/0"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_by_ids/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#list_by_ids/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_my/2","doc":"Lists the circles we are the registered caretakers of that we are\npermitted to see. If any circles are created without permitting the\nuser to see them, they will not be shown.","ref":"Bonfire.Boundaries.Circles.html#list_my/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_my_defaults/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#list_my_defaults/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_my_with_counts/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#list_my_with_counts/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_my_with_global/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#list_my_with_global/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.list_visible/2","doc":"Lists the circles that we are permitted to see.","ref":"Bonfire.Boundaries.Circles.html#list_visible/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.preload_encircled_by/3","doc":"","ref":"Bonfire.Boundaries.Circles.html#preload_encircled_by/3"},{"type":"function","title":"Bonfire.Boundaries.Circles.query/1","doc":"query for `list_visible`","ref":"Bonfire.Boundaries.Circles.html#query/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.query_my/2","doc":"query for `list_my`","ref":"Bonfire.Boundaries.Circles.html#query_my/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.query_my_by_id/3","doc":"query for `get`","ref":"Bonfire.Boundaries.Circles.html#query_my_by_id/3"},{"type":"function","title":"Bonfire.Boundaries.Circles.query_visible/2","doc":"query for `list_visible`","ref":"Bonfire.Boundaries.Circles.html#query_visible/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.remove_from_circles/2","doc":"","ref":"Bonfire.Boundaries.Circles.html#remove_from_circles/2"},{"type":"function","title":"Bonfire.Boundaries.Circles.stereotype_ids/0","doc":"","ref":"Bonfire.Boundaries.Circles.html#stereotype_ids/0"},{"type":"function","title":"Bonfire.Boundaries.Circles.stereotypes/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#stereotypes/1"},{"type":"function","title":"Bonfire.Boundaries.Circles.to_circle_ids/1","doc":"","ref":"Bonfire.Boundaries.Circles.html#to_circle_ids/1"},{"type":"module","title":"Bonfire.Boundaries.Controlleds","doc":"An object is linked to one or more `Acl`s by the `Controlled` multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined with `false` being prioritised.","ref":"Bonfire.Boundaries.Controlleds.html"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.add_acls/2","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#add_acls/2"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.changeset/2","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#changeset/2"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.create/1","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#create/1"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.get_preset_on_object/1","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#get_preset_on_object/1"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.grant_role/4","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#grant_role/4"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_acls_on_object/2","doc":"List ACLs applied to an object.\nOnly call this as an admin or curator of the object.","ref":"Bonfire.Boundaries.Controlleds.html#list_acls_on_object/2"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_grants_by_verbs/3","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_grants_by_verbs/3"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_on_object/2","doc":"List ALL boundaries (ACLs and grants) applied to an object.\nOnly call this as an admin or curator of the object.","ref":"Bonfire.Boundaries.Controlleds.html#list_on_object/2"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_on_objects_by_subject/2","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_on_objects_by_subject/2"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_presets_on_objects/1","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_presets_on_objects/1"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_q/1","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_q/1"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.list_subjects_by_verb/3","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_subjects_by_verb/3"},{"type":"function","title":"Bonfire.Boundaries.Controlleds.remove_acls/2","doc":"","ref":"Bonfire.Boundaries.Controlleds.html#remove_acls/2"},{"type":"module","title":"Bonfire.Boundaries.Debug","doc":"","ref":"Bonfire.Boundaries.Debug.html"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_grants_on/1","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_grants_on/1"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_grants_on/2","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_grants_on/2"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_my_grants_on/2","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_my_grants_on/2"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_object_acls/1","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_object_acls/1"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_user_acls/2","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_user_acls/2"},{"type":"function","title":"Bonfire.Boundaries.Debug.debug_user_circles/1","doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_user_circles/1"},{"type":"module","title":"Bonfire.Boundaries.Fixtures","doc":"","ref":"Bonfire.Boundaries.Fixtures.html"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.activity_pub_circle/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#activity_pub_circle/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.admin_circle/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#admin_circle/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.custom_acl/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#custom_acl/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.fixtures/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#fixtures/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.global_circles/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#global_circles/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.insert/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#insert/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.instance_acl/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#instance_acl/0"},{"type":"function","title":"Bonfire.Boundaries.Fixtures.mod_circle/0","doc":"","ref":"Bonfire.Boundaries.Fixtures.html#mod_circle/0"},{"type":"module","title":"Bonfire.Boundaries.FixturesUsersMigrations","doc":"","ref":"Bonfire.Boundaries.FixturesUsersMigrations.html"},{"type":"function","title":"Bonfire.Boundaries.FixturesUsersMigrations.down/0","doc":"","ref":"Bonfire.Boundaries.FixturesUsersMigrations.html#down/0"},{"type":"function","title":"Bonfire.Boundaries.FixturesUsersMigrations.up/0","doc":"","ref":"Bonfire.Boundaries.FixturesUsersMigrations.html#up/0"},{"type":"module","title":"Bonfire.Boundaries.Grants","doc":"A grant is part of an `Acl`, and defines a permission (`value` boolean on a `verb`) for a `subject`","ref":"Bonfire.Boundaries.Grants.html"},{"type":"function","title":"Bonfire.Boundaries.Grants.changeset/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#changeset/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.changeset/3","doc":"","ref":"Bonfire.Boundaries.Grants.html#changeset/3"},{"type":"function","title":"Bonfire.Boundaries.Grants.create/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#create/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.create/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#create/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.get/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#get/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.grant/5","doc":"Edits or adds a grant to an Acl \n\nTakes three parameters:\n- subject_id:  who we are granting access to\n- acl_id: what ACL we're applying a grant to\n- verb: which verb/action\n- value: true, false, or nil","ref":"Bonfire.Boundaries.Grants.html#grant/5"},{"type":"function","title":"Bonfire.Boundaries.Grants.grant_role/4","doc":"Edits or adds grants to an Acl based on a role","ref":"Bonfire.Boundaries.Grants.html#grant_role/4"},{"type":"function","title":"Bonfire.Boundaries.Grants.grants/0","doc":"","ref":"Bonfire.Boundaries.Grants.html#grants/0"},{"type":"function","title":"Bonfire.Boundaries.Grants.grants_to_tuples/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#grants_to_tuples/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.list/1","doc":"Lists the grants permitted to see.","ref":"Bonfire.Boundaries.Grants.html#list/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.list_for_acl/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#list_for_acl/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.list_my/1","doc":"Lists the grants we are the registered caretakers of that we are\npermitted to see. If any are created without permitting the\nuser to see them, they will not be shown.","ref":"Bonfire.Boundaries.Grants.html#list_my/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.list_q/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#list_q/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.remove_subject_from_acl/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#remove_subject_from_acl/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.subject_grants/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#subject_grants/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.subject_verb_grants/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#subject_verb_grants/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.subjects/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#subjects/1"},{"type":"function","title":"Bonfire.Boundaries.Grants.upsert_or_delete/2","doc":"","ref":"Bonfire.Boundaries.Grants.html#upsert_or_delete/2"},{"type":"function","title":"Bonfire.Boundaries.Grants.verb_subject_grant/1","doc":"","ref":"Bonfire.Boundaries.Grants.html#verb_subject_grant/1"},{"type":"module","title":"Bonfire.Boundaries.Integration","doc":"","ref":"Bonfire.Boundaries.Integration.html"},{"type":"function","title":"Bonfire.Boundaries.Integration.is_local?/1","doc":"","ref":"Bonfire.Boundaries.Integration.html#is_local?/1"},{"type":"function","title":"Bonfire.Boundaries.Integration.many/3","doc":"","ref":"Bonfire.Boundaries.Integration.html#many/3"},{"type":"function","title":"Bonfire.Boundaries.Integration.repo/0","doc":"","ref":"Bonfire.Boundaries.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Boundaries.LiveHandler","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.acl_create/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#acl_create/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.boundaries_on_objects/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#boundaries_on_objects/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.circle_create/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#circle_create/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.maybe_check_boundaries/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_check_boundaries/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.maybe_redirect_to/3","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_redirect_to/3"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.my_acls/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#my_acls/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.my_circles_paginated/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#my_circles_paginated/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.prepare_assigns/1","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#prepare_assigns/1"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.remove_from_circle_tuples/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#remove_from_circle_tuples/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.scope_origin/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#scope_origin/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.set_circles_tuples/3","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#set_circles_tuples/3"},{"type":"macro","title":"Bonfire.Boundaries.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.subject_name/1","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#subject_name/1"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.unblock/4","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#unblock/4"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.update_many/2","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#update_many/2"},{"type":"function","title":"Bonfire.Boundaries.LiveHandler.update_many_opts/1","doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#update_many_opts/1"},{"type":"module","title":"Bonfire.Boundaries.Queries","doc":"Helpers for writing common queries. In particular, access control.\n\nMost of this stuff will probably move at some point when we figure\nout how to better organise it.\n\nUnfortunately, ecto is against the sort of thing we take for granted\nin the bonfire ecosystem, so some of these patterns are a bit\nconvoluted to make ecto generate acceptable sql. In particular the\nlateral join and the macro is a bit loltastic when we could just\nreturn an arbitrary tuple if ecto would support inferring (or us\nproviding) the return type of a subquery.","ref":"Bonfire.Boundaries.Queries.html"},{"type":"macro","title":"Bonfire.Boundaries.Queries.add_perms/2","doc":"Call the `add_perms(bool?, bool?)` postgres function for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#add_perms/2"},{"type":"macro","title":"Bonfire.Boundaries.Queries.agg_perms/1","doc":"Call the `agg_perms(bool?)` postgres aggregate for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#agg_perms/1"},{"type":"macro","title":"Bonfire.Boundaries.Queries.boundarise/3","doc":"","ref":"Bonfire.Boundaries.Queries.html#boundarise/3"},{"type":"function","title":"Bonfire.Boundaries.Queries.object_boundarised/2","doc":"","ref":"Bonfire.Boundaries.Queries.html#object_boundarised/2"},{"type":"function","title":"Bonfire.Boundaries.Queries.permitted/1","doc":"","ref":"Bonfire.Boundaries.Queries.html#permitted/1"},{"type":"function","title":"Bonfire.Boundaries.Queries.permitted/2","doc":"","ref":"Bonfire.Boundaries.Queries.html#permitted/2"},{"type":"function","title":"Bonfire.Boundaries.Queries.query_with_summary/3","doc":"A subquery which filters out results the current user is not permitted to perform *all* of the specified verbs on.\n\nParameters are an expression evaluating to the current user, a list of verbs, and optionally an initial query on `Summary` in order to filter what objects are checked.","ref":"Bonfire.Boundaries.Queries.html#query_with_summary/3"},{"type":"function","title":"Bonfire.Boundaries.Queries.skip_boundary_check?/2","doc":"","ref":"Bonfire.Boundaries.Queries.html#skip_boundary_check?/2"},{"type":"module","title":"Bonfire.Boundaries.Roles","doc":"","ref":"Bonfire.Boundaries.Roles.html"},{"type":"function","title":"Bonfire.Boundaries.Roles.cannot_role_from_verb/5","doc":"","ref":"Bonfire.Boundaries.Roles.html#cannot_role_from_verb/5"},{"type":"function","title":"Bonfire.Boundaries.Roles.create/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#create/2"},{"type":"function","title":"Bonfire.Boundaries.Roles.create/3","doc":"","ref":"Bonfire.Boundaries.Roles.html#create/3"},{"type":"function","title":"Bonfire.Boundaries.Roles.edit_verb_permission/4","doc":"","ref":"Bonfire.Boundaries.Roles.html#edit_verb_permission/4"},{"type":"function","title":"Bonfire.Boundaries.Roles.get/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#get/2"},{"type":"function","title":"Bonfire.Boundaries.Roles.preset_boundary_role_from_acl/1","doc":"","ref":"Bonfire.Boundaries.Roles.html#preset_boundary_role_from_acl/1"},{"type":"function","title":"Bonfire.Boundaries.Roles.reset_instance_roles/0","doc":"","ref":"Bonfire.Boundaries.Roles.html#reset_instance_roles/0"},{"type":"function","title":"Bonfire.Boundaries.Roles.role_from_grants/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#role_from_grants/2"},{"type":"function","title":"Bonfire.Boundaries.Roles.role_from_verb/5","doc":"","ref":"Bonfire.Boundaries.Roles.html#role_from_verb/5"},{"type":"function","title":"Bonfire.Boundaries.Roles.role_verbs/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#role_verbs/2"},{"type":"function","title":"Bonfire.Boundaries.Roles.roles_for_dropdown/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#roles_for_dropdown/2"},{"type":"function","title":"Bonfire.Boundaries.Roles.split_tuples_can_cannot/1","doc":"","ref":"Bonfire.Boundaries.Roles.html#split_tuples_can_cannot/1"},{"type":"function","title":"Bonfire.Boundaries.Roles.verbs_for_role/2","doc":"","ref":"Bonfire.Boundaries.Roles.html#verbs_for_role/2"},{"type":"module","title":"Bonfire.Boundaries.RuntimeConfig","doc":"","ref":"Bonfire.Boundaries.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Boundaries.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs` line","ref":"Bonfire.Boundaries.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Boundaries.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Boundaries.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Boundaries.Summary","doc":"","ref":"Bonfire.Boundaries.Summary.html"},{"type":"function","title":"Bonfire.Boundaries.Summary.migrate_views/0","doc":"","ref":"Bonfire.Boundaries.Summary.html#migrate_views/0"},{"type":"module","title":"Bonfire.Boundaries.Users","doc":"Reads fixtures in configuration and creates a default boundaries setup for a user","ref":"Bonfire.Boundaries.Users.html"},{"type":"function","title":"Bonfire.Boundaries.Users.create_default_boundaries/2","doc":"","ref":"Bonfire.Boundaries.Users.html#create_default_boundaries/2"},{"type":"function","title":"Bonfire.Boundaries.Users.create_missing_boundaries/2","doc":"","ref":"Bonfire.Boundaries.Users.html#create_missing_boundaries/2"},{"type":"function","title":"Bonfire.Boundaries.Users.do_insert_main/2","doc":"","ref":"Bonfire.Boundaries.Users.html#do_insert_main/2"},{"type":"function","title":"Bonfire.Boundaries.Users.prepare_default_boundaries/3","doc":"","ref":"Bonfire.Boundaries.Users.html#prepare_default_boundaries/3"},{"type":"module","title":"Bonfire.Boundaries.Verbs","doc":"","ref":"Bonfire.Boundaries.Verbs.html"},{"type":"function","title":"Bonfire.Boundaries.Verbs.changeset/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#changeset/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.create/1","doc":"","ref":"Bonfire.Boundaries.Verbs.html#create/1"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get!/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get!/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get_id/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_id/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get_id!/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_id!/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get_slug/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_slug/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.get_tuple/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_tuple/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.ids/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#ids/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.list/2","doc":"","ref":"Bonfire.Boundaries.Verbs.html#list/2"},{"type":"function","title":"Bonfire.Boundaries.Verbs.list_verbs_debug/0","doc":"","ref":"Bonfire.Boundaries.Verbs.html#list_verbs_debug/0"},{"type":"function","title":"Bonfire.Boundaries.Verbs.slugs/0","doc":"","ref":"Bonfire.Boundaries.Verbs.html#slugs/0"},{"type":"function","title":"Bonfire.Boundaries.Verbs.verbs/0","doc":"","ref":"Bonfire.Boundaries.Verbs.html#verbs/0"},{"type":"function","title":"Bonfire.Boundaries.Verbs.verbs_count/0","doc":"","ref":"Bonfire.Boundaries.Verbs.html#verbs_count/0"},{"type":"module","title":"Bonfire.Boundaries.Web.ExcludeBoundaries","doc":"","ref":"Bonfire.Boundaries.Web.ExcludeBoundaries.html"},{"type":"function","title":"Bonfire.Boundaries.Web.ExcludeBoundaries.do_handle_event/3","doc":"","ref":"Bonfire.Boundaries.Web.ExcludeBoundaries.html#do_handle_event/3"},{"type":"module","title":"Bonfire.Boundaries.Web.Routes","doc":"","ref":"Bonfire.Boundaries.Web.Routes.html"},{"type":"function","title":"Bonfire.Boundaries.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Boundaries.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Common","doc":"A library of common utils and helpers used across Bonfire extensions\n\nRefer to the [README](https://doc.bonfirenetworks.org/bonfire_common.html)","ref":"Bonfire.Common.html"},{"type":"module","title":"Bonfire.Common.Benchmark","doc":"Simple way to measure the execution time of functions. It is preferred to use `@decorator` from `Untangle` instead.","ref":"Bonfire.Common.Benchmark.html"},{"type":"function","title":"Bonfire.Common.Benchmark.apply_timed/1","doc":"","ref":"Bonfire.Common.Benchmark.html#apply_timed/1"},{"type":"function","title":"Bonfire.Common.Benchmark.apply_timed/2","doc":"","ref":"Bonfire.Common.Benchmark.html#apply_timed/2"},{"type":"function","title":"Bonfire.Common.Benchmark.apply_timed/3","doc":"","ref":"Bonfire.Common.Benchmark.html#apply_timed/3"},{"type":"module","title":"Bonfire.Common.Cache","doc":"Helpers for caching data and operations","ref":"Bonfire.Common.Cache.html"},{"type":"macro","title":"Bonfire.Common.Cache.cache/0","doc":"","ref":"Bonfire.Common.Cache.html#cache/0"},{"type":"function","title":"Bonfire.Common.Cache.cache_store/1","doc":"","ref":"Bonfire.Common.Cache.html#cache_store/1"},{"type":"function","title":"Bonfire.Common.Cache.cached_preloads_for_objects/3","doc":"","ref":"Bonfire.Common.Cache.html#cached_preloads_for_objects/3"},{"type":"function","title":"Bonfire.Common.Cache.get/2","doc":"","ref":"Bonfire.Common.Cache.html#get/2"},{"type":"function","title":"Bonfire.Common.Cache.get!/2","doc":"","ref":"Bonfire.Common.Cache.html#get!/2"},{"type":"function","title":"Bonfire.Common.Cache.maybe_apply_cached/3","doc":"Takes a function (or module and function names) and a set of arguments for that function, and tries to fetch the previous result of running that function from the in-memory cache, using the MFA (module name/function name/arguments used) to generate the cache key. If it's not in the cache, it executes the function, and caches and returns the result.","ref":"Bonfire.Common.Cache.html#maybe_apply_cached/3"},{"type":"function","title":"Bonfire.Common.Cache.put/3","doc":"","ref":"Bonfire.Common.Cache.html#put/3"},{"type":"function","title":"Bonfire.Common.Cache.remove/2","doc":"It removes the entry associated with a key from the cache.","ref":"Bonfire.Common.Cache.html#remove/2"},{"type":"function","title":"Bonfire.Common.Cache.remove_all/1","doc":"","ref":"Bonfire.Common.Cache.html#remove_all/1"},{"type":"function","title":"Bonfire.Common.Cache.reset/3","doc":"It removes the result of a given function from the cache.","ref":"Bonfire.Common.Cache.html#reset/3"},{"type":"module","title":"Bonfire.Common.Changelog.Github.DataGrabber","doc":"Datagrabber for changelog generation, `Versioce.Config.Changelog.datagrabber/0`\n\nUses repository history to obtain and format data.","ref":"Bonfire.Common.Changelog.Github.DataGrabber.html"},{"type":"function","title":"Bonfire.Common.Changelog.Github.DataGrabber.fetch_issues/1","doc":"","ref":"Bonfire.Common.Changelog.Github.DataGrabber.html#fetch_issues/1"},{"type":"function","title":"Bonfire.Common.Changelog.Github.DataGrabber.format_issue/1","doc":"","ref":"Bonfire.Common.Changelog.Github.DataGrabber.html#format_issue/1"},{"type":"function","title":"Bonfire.Common.Changelog.Github.DataGrabber.prepare_data/2","doc":"","ref":"Bonfire.Common.Changelog.Github.DataGrabber.html#prepare_data/2"},{"type":"module","title":"Bonfire.Common.Config","doc":"","ref":"Bonfire.Common.Config.html"},{"type":"macro","title":"Bonfire.Common.Config.compilation_error/1","doc":"","ref":"Bonfire.Common.Config.html#compilation_error/1"},{"type":"function","title":"Bonfire.Common.Config.delete/2","doc":"","ref":"Bonfire.Common.Config.html#delete/2"},{"type":"function","title":"Bonfire.Common.Config.endpoint_module/0","doc":"","ref":"Bonfire.Common.Config.html#endpoint_module/0"},{"type":"function","title":"Bonfire.Common.Config.env/0","doc":"","ref":"Bonfire.Common.Config.html#env/0"},{"type":"function","title":"Bonfire.Common.Config.get/3","doc":"Get config value for a config key (optionally from a specific OTP app or Bonfire extension)","ref":"Bonfire.Common.Config.html#get/3"},{"type":"function","title":"Bonfire.Common.Config.get!/2","doc":"","ref":"Bonfire.Common.Config.html#get!/2"},{"type":"function","title":"Bonfire.Common.Config.get_ext/1","doc":"Get *all* config keys/values for a specific Bonfire extension or OTP app","ref":"Bonfire.Common.Config.html#get_ext/1"},{"type":"function","title":"Bonfire.Common.Config.get_ext/3","doc":"Get config value for a Bonfire extension or OTP app config key","ref":"Bonfire.Common.Config.html#get_ext/3"},{"type":"function","title":"Bonfire.Common.Config.get_ext!/1","doc":"","ref":"Bonfire.Common.Config.html#get_ext!/1"},{"type":"function","title":"Bonfire.Common.Config.get_ext!/2","doc":"","ref":"Bonfire.Common.Config.html#get_ext!/2"},{"type":"function","title":"Bonfire.Common.Config.keys_tree/1","doc":"Constructs a key path for settings/config, which always starts with an app or extension name (which defaults to the main OTP app)\n\niex> keys_tree([:bonfire_me, Bonfire.Me.Users])\n  [:bonfire_me, Bonfire.Me.Users]\n\niex> keys_tree(Bonfire.Me.Users)\n  [:bonfire_me, Bonfire.Me.Users]\n\niex> keys_tree(:bonfire_me)\n  [:bonfire_me]\n\niex> keys_tree(:random_atom)\n  [:bonfire, :random_atom]\n\niex>keys_tree([:random_atom, :sub_key])\n  [:bonfire, :random_atom, :sub_key]","ref":"Bonfire.Common.Config.html#keys_tree/1"},{"type":"function","title":"Bonfire.Common.Config.module_enabled?/1","doc":"","ref":"Bonfire.Common.Config.html#module_enabled?/1"},{"type":"function","title":"Bonfire.Common.Config.put/1","doc":"","ref":"Bonfire.Common.Config.html#put/1"},{"type":"function","title":"Bonfire.Common.Config.put/3","doc":"","ref":"Bonfire.Common.Config.html#put/3"},{"type":"function","title":"Bonfire.Common.Config.repo/0","doc":"","ref":"Bonfire.Common.Config.html#repo/0"},{"type":"function","title":"Bonfire.Common.Config.require_extension_config!/1","doc":"Stop if an Elixir module or extension / OTP app doesn't have configuration keys set up","ref":"Bonfire.Common.Config.html#require_extension_config!/1"},{"type":"function","title":"Bonfire.Common.Config.top_level_otp_app/0","doc":"","ref":"Bonfire.Common.Config.html#top_level_otp_app/0"},{"type":"exception","title":"Bonfire.Common.Config.Error","doc":"","ref":"Bonfire.Common.Config.Error.html"},{"type":"module","title":"Bonfire.Common.Config.LoadExtensionsConfig","doc":"Loads instance Settings from DB into Elixir's Config\n\nWhile this module is a GenServer, it is only responsible for querying the settings, putting them in Config, and then exits with :ignore having done so.","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html"},{"type":"function","title":"Bonfire.Common.Config.LoadExtensionsConfig.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.Config.LoadExtensionsConfig.load_configs/1","doc":"","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#load_configs/1"},{"type":"function","title":"Bonfire.Common.Config.LoadExtensionsConfig.start_link/1","doc":"Populates the global cache with table data via introspection.","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#start_link/1"},{"type":"behaviour","title":"Bonfire.Common.ConfigModule","doc":"A global cache of runtime config modules to be loaded at app startup.","ref":"Bonfire.Common.ConfigModule.html"},{"type":"callback","title":"Bonfire.Common.ConfigModule.config/0","doc":"Set runtime config","ref":"Bonfire.Common.ConfigModule.html#c:config/0"},{"type":"callback","title":"Bonfire.Common.ConfigModule.config_module/0","doc":"Declares a config module","ref":"Bonfire.Common.ConfigModule.html#c:config_module/0"},{"type":"function","title":"Bonfire.Common.ConfigModule.modules/0","doc":"","ref":"Bonfire.Common.ConfigModule.html#modules/0"},{"type":"behaviour","title":"Bonfire.Common.ContextModule","doc":"Find a context or query module via its schema, backed by a global cache of known modules.","ref":"Bonfire.Common.ContextModule.html"},{"type":"function","title":"Bonfire.Common.ContextModule.apply_error/2","doc":"","ref":"Bonfire.Common.ContextModule.html#apply_error/2"},{"type":"function","title":"Bonfire.Common.ContextModule.context_function_error/2","doc":"","ref":"Bonfire.Common.ContextModule.html#context_function_error/2"},{"type":"callback","title":"Bonfire.Common.ContextModule.context_module/0","doc":"Declares a context module","ref":"Bonfire.Common.ContextModule.html#c:context_module/0"},{"type":"function","title":"Bonfire.Common.ContextModule.context_module/1","doc":"Get a context identified by schema","ref":"Bonfire.Common.ContextModule.html#context_module/1"},{"type":"function","title":"Bonfire.Common.ContextModule.context_module!/1","doc":"Look up a context, throw :not_found if not found.","ref":"Bonfire.Common.ContextModule.html#context_module!/1"},{"type":"function","title":"Bonfire.Common.ContextModule.context_modules/1","doc":"Look up many contexts at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.ContextModule.html#context_modules/1"},{"type":"function","title":"Bonfire.Common.ContextModule.linked_query_modules/0","doc":"","ref":"Bonfire.Common.ContextModule.html#linked_query_modules/0"},{"type":"function","title":"Bonfire.Common.ContextModule.linked_schema_modules/0","doc":"","ref":"Bonfire.Common.ContextModule.html#linked_schema_modules/0"},{"type":"function","title":"Bonfire.Common.ContextModule.maybe_apply/4","doc":"Given an object or schema module name, run a function on the associated context module.\nTODO: refactor to re-use Utils.maybe_apply?","ref":"Bonfire.Common.ContextModule.html#maybe_apply/4"},{"type":"function","title":"Bonfire.Common.ContextModule.maybe_context_module/1","doc":"","ref":"Bonfire.Common.ContextModule.html#maybe_context_module/1"},{"type":"function","title":"Bonfire.Common.ContextModule.modules/0","doc":"","ref":"Bonfire.Common.ContextModule.html#modules/0"},{"type":"callback","title":"Bonfire.Common.ContextModule.query_module/0","doc":"Points to the related queries module","ref":"Bonfire.Common.ContextModule.html#c:query_module/0"},{"type":"callback","title":"Bonfire.Common.ContextModule.schema_module/0","doc":"Points to the related schema module","ref":"Bonfire.Common.ContextModule.html#c:schema_module/0"},{"type":"module","title":"Bonfire.Common.DatesTimes","doc":"Date/time helpers","ref":"Bonfire.Common.DatesTimes.html"},{"type":"function","title":"Bonfire.Common.DatesTimes.date_from_now/2","doc":"Takes a ULID ID (or an object with one) or a `DateTime` struct, and turns the date into a relative phrase, e.g. `2 days ago`, using the `Cldr.DateTime` or `Timex` library.","ref":"Bonfire.Common.DatesTimes.html#date_from_now/2"},{"type":"function","title":"Bonfire.Common.DatesTimes.date_from_pointer/1","doc":"Takes an object (or string with an ULID) and converts the ULID ID to a `DateTime` struct.","ref":"Bonfire.Common.DatesTimes.html#date_from_pointer/1"},{"type":"function","title":"Bonfire.Common.DatesTimes.format/2","doc":"","ref":"Bonfire.Common.DatesTimes.html#format/2"},{"type":"function","title":"Bonfire.Common.DatesTimes.future?/1","doc":"","ref":"Bonfire.Common.DatesTimes.html#future?/1"},{"type":"function","title":"Bonfire.Common.DatesTimes.now/0","doc":"","ref":"Bonfire.Common.DatesTimes.html#now/0"},{"type":"function","title":"Bonfire.Common.DatesTimes.past/2","doc":"","ref":"Bonfire.Common.DatesTimes.html#past/2"},{"type":"function","title":"Bonfire.Common.DatesTimes.past?/1","doc":"","ref":"Bonfire.Common.DatesTimes.html#past?/1"},{"type":"function","title":"Bonfire.Common.DatesTimes.remove/3","doc":"","ref":"Bonfire.Common.DatesTimes.html#remove/3"},{"type":"function","title":"Bonfire.Common.DatesTimes.to_date/1","doc":"","ref":"Bonfire.Common.DatesTimes.html#to_date/1"},{"type":"module","title":"Bonfire.Common.Enums","doc":"Extra functions to manipulate enumerables, basically an extension of `Enum`","ref":"Bonfire.Common.Enums.html"},{"type":"function","title":"Bonfire.Common.Enums.attr_get_id/2","doc":"Gets the value of a key in a map and returns the ID of that value (i.e. either the :id field of that association, or the value itself).","ref":"Bonfire.Common.Enums.html#attr_get_id/2"},{"type":"function","title":"Bonfire.Common.Enums.count_where/2","doc":"Counts the number of items in an enumerable that satisfy the given function.","ref":"Bonfire.Common.Enums.html#count_where/2"},{"type":"function","title":"Bonfire.Common.Enums.deep_merge/3","doc":"Recursively merges two data structures (`left` and `right`), which can be structs, maps or lists.\nIf `left` and `right` are `Ecto.Changeset`s, `merge_changesets/2` is called on them.\nIf `left` is a struct, a similar struct is returned with the merged values.\nIf `left` and `right` are lists, they are concatenated unless `:replace_lists` option is set to `true`.","ref":"Bonfire.Common.Enums.html#deep_merge/3"},{"type":"function","title":"Bonfire.Common.Enums.deep_merge_reduce/2","doc":"Deep merges a list of maps into a single map.","ref":"Bonfire.Common.Enums.html#deep_merge_reduce/2"},{"type":"function","title":"Bonfire.Common.Enums.enum_get/3","doc":"Attempt getting a value out of a map by atom key, or try with string key, or return a fallback","ref":"Bonfire.Common.Enums.html#enum_get/3"},{"type":"function","title":"Bonfire.Common.Enums.filter_empty/2","doc":"Takes a value and a fallback value. If the value is empty (e.g. an empty map, a non-loaded association, an empty list, an empty string, or nil), the fallback value is returned.","ref":"Bonfire.Common.Enums.html#filter_empty/2"},{"type":"function","title":"Bonfire.Common.Enums.filter_empty/3","doc":"","ref":"Bonfire.Common.Enums.html#filter_empty/3"},{"type":"function","title":"Bonfire.Common.Enums.flatter/1","doc":"Takes a list and recursively flattens it by recursively flattening the head and tail of the list","ref":"Bonfire.Common.Enums.html#flatter/1"},{"type":"function","title":"Bonfire.Common.Enums.fun/3","doc":"Applies a function from one of Elixir's `Map`, `Keyword`, or `List` modules depending on the type of the given enumerable.","ref":"Bonfire.Common.Enums.html#fun/3"},{"type":"function","title":"Bonfire.Common.Enums.group/2","doc":"Like `Enum.group_by/3`, except children are required to be unique (will throw\notherwise!) and the resulting map does not wrap each item in a list","ref":"Bonfire.Common.Enums.html#group/2"},{"type":"function","title":"Bonfire.Common.Enums.group_map/2","doc":"","ref":"Bonfire.Common.Enums.html#group_map/2"},{"type":"function","title":"Bonfire.Common.Enums.has_duplicates?/2","doc":"Checks if the given list contains any duplicates. Takes an optional function that can be used to extract and/or compute the value to compare for each element in the list.","ref":"Bonfire.Common.Enums.html#has_duplicates?/2"},{"type":"function","title":"Bonfire.Common.Enums.id/1","doc":"Extracts a binary ID from various data structures, such as a map containing the key :id or \"id\", a changeset, or a tuple containing the atom :id.","ref":"Bonfire.Common.Enums.html#id/1"},{"type":"function","title":"Bonfire.Common.Enums.ids/1","doc":"","ref":"Bonfire.Common.Enums.html#ids/1"},{"type":"function","title":"Bonfire.Common.Enums.input_to_atoms/2","doc":"Takes a data structure and converts any keys in maps to (previously defined) atoms, recursively. By default any unknown string keys will be discarded. It can optionally also convert string values to known atoms as well.","ref":"Bonfire.Common.Enums.html#input_to_atoms/2"},{"type":"function","title":"Bonfire.Common.Enums.input_to_value/7","doc":"","ref":"Bonfire.Common.Enums.html#input_to_value/7"},{"type":"function","title":"Bonfire.Common.Enums.map_filter_empty/1","doc":"Recursively filters nil values from a map","ref":"Bonfire.Common.Enums.html#map_filter_empty/1"},{"type":"function","title":"Bonfire.Common.Enums.map_key_replace/4","doc":"Renames a key in a map. Optionally changes the value as well.","ref":"Bonfire.Common.Enums.html#map_key_replace/4"},{"type":"function","title":"Bonfire.Common.Enums.map_key_replace_existing/4","doc":"Renames a key in a `map`, only if the key exists in the `map`. Optionally changes the value as well.","ref":"Bonfire.Common.Enums.html#map_key_replace_existing/4"},{"type":"function","title":"Bonfire.Common.Enums.map_new/2","doc":"Takes an enumerable object and converts it to a map. If it is not an enumerable, a map is created with the data under a fallback key (`:data` by default).","ref":"Bonfire.Common.Enums.html#map_new/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_append/2","doc":"Appends a value to a list, but only if the value is not nil or an empty list.","ref":"Bonfire.Common.Enums.html#maybe_append/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_elem/3","doc":"Takes any element, an index and a fallback value. If the element is a Tuple it returns either the tuple value at that index, otherwise it returns the fallback. If the tuple doesn't contain such an index, it raises `ArgumentError`.","ref":"Bonfire.Common.Enums.html#maybe_elem/3"},{"type":"function","title":"Bonfire.Common.Enums.maybe_flatten/1","doc":"Flattens the list if provided a list, otherwise just return the input","ref":"Bonfire.Common.Enums.html#maybe_flatten/1"},{"type":"function","title":"Bonfire.Common.Enums.maybe_from_struct/1","doc":"If given a struct, returns a map representation of it","ref":"Bonfire.Common.Enums.html#maybe_from_struct/1"},{"type":"function","title":"Bonfire.Common.Enums.maybe_get/3","doc":"","ref":"Bonfire.Common.Enums.html#maybe_get/3"},{"type":"function","title":"Bonfire.Common.Enums.maybe_list/2","doc":"","ref":"Bonfire.Common.Enums.html#maybe_list/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_merge_to_struct/2","doc":"","ref":"Bonfire.Common.Enums.html#maybe_merge_to_struct/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_put/3","doc":"Updates a `map` with the given `key` and `value`, but only if the `value` is not `nil`, an empty list or an empty string.","ref":"Bonfire.Common.Enums.html#maybe_put/3"},{"type":"function","title":"Bonfire.Common.Enums.maybe_to_keyword_list/2","doc":"Returns a keyword list representation of the input object. If the second argument is `true`, the function will recursively convert nested data structures to keyword lists as well.\nNote: make sure that all keys are atoms, i.e. using `input_to_atoms` first, otherwise the enumerable(s) containing a string key won't be converted.","ref":"Bonfire.Common.Enums.html#maybe_to_keyword_list/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_to_map/2","doc":"Returns a map representation of the input object. If the second argument is `true`, the function will recursively convert nested data structures to maps as well.","ref":"Bonfire.Common.Enums.html#maybe_to_map/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_to_struct/2","doc":"Takes a data structure and tries to convert it to a struct, using some hints in the data (eg. `__type` or `index_type` fields) or a manually-provided type.","ref":"Bonfire.Common.Enums.html#maybe_to_struct/2"},{"type":"function","title":"Bonfire.Common.Enums.maybe_to_structs/2","doc":"Takes a data structure and recursively converts any known keys to atoms and then tries to recursively convert any maps to structs, using some hints in the data (eg. `__type` or `index_type` fields).","ref":"Bonfire.Common.Enums.html#maybe_to_structs/2"},{"type":"function","title":"Bonfire.Common.Enums.merge_as_map/3","doc":"Merges two maps or lists into a single map","ref":"Bonfire.Common.Enums.html#merge_as_map/3"},{"type":"function","title":"Bonfire.Common.Enums.merge_changesets/2","doc":"Merges two `Ecto` changesets. If both changesets have a prepare field, the function concatenates the values of the prepare fields. Either way it also calls `Ecto.Changeset.merge/2` operation.","ref":"Bonfire.Common.Enums.html#merge_changesets/2"},{"type":"function","title":"Bonfire.Common.Enums.merge_keeping_only_first_keys/2","doc":"Merges two maps map_1 and map_2, but only keeps the keys that exist in map_1.","ref":"Bonfire.Common.Enums.html#merge_keeping_only_first_keys/2"},{"type":"function","title":"Bonfire.Common.Enums.merge_structs_as_map/2","doc":"","ref":"Bonfire.Common.Enums.html#merge_structs_as_map/2"},{"type":"function","title":"Bonfire.Common.Enums.merge_uniq/2","doc":"","ref":"Bonfire.Common.Enums.html#merge_uniq/2"},{"type":"function","title":"Bonfire.Common.Enums.naughty_to_atoms!/2","doc":"","ref":"Bonfire.Common.Enums.html#naughty_to_atoms!/2"},{"type":"function","title":"Bonfire.Common.Enums.nested_structs_to_maps/1","doc":"Recursively converts all nested structs to maps.","ref":"Bonfire.Common.Enums.html#nested_structs_to_maps/1"},{"type":"function","title":"Bonfire.Common.Enums.put_new_in/3","doc":"This function is used to insert a new value into a nested map data structure, where the path to the location of the value is specified as a list of keys.\n\nWhen the path is a single-element list, if the key already exists in the map, it returns the original map; otherwise, it inserts the key-value pair.\n\nWhen the path is a list of more than one key, the first element of the list (key) represents the key for the current level of the nested map, and the remaining elements (path) represent the keys for the nested map at the next level. The function starts by retrieving the value at the current level of the map (if it exists) and updates the map with the new value.","ref":"Bonfire.Common.Enums.html#put_new_in/3"},{"type":"function","title":"Bonfire.Common.Enums.stringify_keys/2","doc":"Takes a map or keyword list, and returns a map with any atom keys converted to string keys. It can optionally do so recursively.","ref":"Bonfire.Common.Enums.html#stringify_keys/2"},{"type":"function","title":"Bonfire.Common.Enums.struct_from_map/2","doc":"","ref":"Bonfire.Common.Enums.html#struct_from_map/2"},{"type":"function","title":"Bonfire.Common.Enums.struct_to_map/1","doc":"","ref":"Bonfire.Common.Enums.html#struct_to_map/1"},{"type":"function","title":"Bonfire.Common.Enums.uniq_by_id/1","doc":"Takes a list of maps that have an id field and returns a list with only the unique maps. Uniqueness is determined based on the id field and not the full contents of the maps.","ref":"Bonfire.Common.Enums.html#uniq_by_id/1"},{"type":"module","title":"Bonfire.Common.Errors","doc":"","ref":"Bonfire.Common.Errors.html"},{"type":"function","title":"Bonfire.Common.Errors.debug_banner_with_trace/4","doc":"","ref":"Bonfire.Common.Errors.html#debug_banner_with_trace/4"},{"type":"function","title":"Bonfire.Common.Errors.debug_exception/5","doc":"","ref":"Bonfire.Common.Errors.html#debug_exception/5"},{"type":"function","title":"Bonfire.Common.Errors.debug_log/4","doc":"","ref":"Bonfire.Common.Errors.html#debug_log/4"},{"type":"function","title":"Bonfire.Common.Errors.error_msg/1","doc":"Turns various kind of errors into an error message string. Used to format errors in a way that can be easily read by the user.","ref":"Bonfire.Common.Errors.html#error_msg/1"},{"type":"function","title":"Bonfire.Common.Errors.format_banner/4","doc":"Normalizes and formats any throw/error/exit.\nThe message is formatted and displayed in the same\nformat as used by Elixir's CLI.\nThe third argument is the stacktrace which is used to enrich\na normalized error with more information. It is only used when\nthe kind is an error.","ref":"Bonfire.Common.Errors.html#format_banner/4"},{"type":"function","title":"Bonfire.Common.Errors.format_location/1","doc":"","ref":"Bonfire.Common.Errors.html#format_location/1"},{"type":"function","title":"Bonfire.Common.Errors.format_mfa/3","doc":"Receives a module, fun and arity and formats it\nas shown in stacktraces. The arity may also be a list\nof arguments.","ref":"Bonfire.Common.Errors.html#format_mfa/3"},{"type":"function","title":"Examples - Bonfire.Common.Errors.format_mfa/3","doc":"iex> Exception.format_mfa(Foo, :bar, 1)\n    {Foo, :bar, \"Foo.bar/1\"}\n    iex> Exception.format_mfa(Foo, :bar, [])\n    {Foo, :bar, \"Foo.bar()\"}\n    iex> Exception.format_mfa(nil, :bar, [])\n    {nil, :bar, \"nil.bar()\"}\nAnonymous functions are reported as -func/arity-anonfn-count-,\nwhere func is the name of the enclosing function. Convert to\n\"anonymous fn in func/arity\"","ref":"Bonfire.Common.Errors.html#format_mfa/3-examples"},{"type":"function","title":"Bonfire.Common.Errors.format_stacktrace/2","doc":"Formats the stacktrace.\nA stacktrace must be given as an argument. If not, the stacktrace\nis retrieved from `Process.info/2`.","ref":"Bonfire.Common.Errors.html#format_stacktrace/2"},{"type":"function","title":"Bonfire.Common.Errors.format_stacktrace_entry/2","doc":"Receives a stacktrace entry and formats it into a string.","ref":"Bonfire.Common.Errors.html#format_stacktrace_entry/2"},{"type":"function","title":"Bonfire.Common.Errors.format_stacktrace_entry_sliced/2","doc":"","ref":"Bonfire.Common.Errors.html#format_stacktrace_entry_sliced/2"},{"type":"function","title":"Bonfire.Common.Errors.last_stacktrace/0","doc":"","ref":"Bonfire.Common.Errors.html#last_stacktrace/0"},{"type":"function","title":"Bonfire.Common.Errors.map_error/2","doc":"","ref":"Bonfire.Common.Errors.html#map_error/2"},{"type":"function","title":"Bonfire.Common.Errors.maybe_ok_error/2","doc":"Applies change_fn if the first parameter is an {:ok, val} tuple, else returns the value","ref":"Bonfire.Common.Errors.html#maybe_ok_error/2"},{"type":"function","title":"Bonfire.Common.Errors.mf_maybe_link_to_code/4","doc":"","ref":"Bonfire.Common.Errors.html#mf_maybe_link_to_code/4"},{"type":"function","title":"Bonfire.Common.Errors.module_maybe_link_to_code/3","doc":"","ref":"Bonfire.Common.Errors.html#module_maybe_link_to_code/3"},{"type":"function","title":"Bonfire.Common.Errors.replace_error/2","doc":"","ref":"Bonfire.Common.Errors.html#replace_error/2"},{"type":"module","title":"Bonfire.Common.Extend","doc":"","ref":"Bonfire.Common.Extend.html"},{"type":"function","title":"Bonfire.Common.Extend.application_loaded?/1","doc":"","ref":"Bonfire.Common.Extend.html#application_loaded?/1"},{"type":"function","title":"Bonfire.Common.Extend.disabled_value?/1","doc":"","ref":"Bonfire.Common.Extend.html#disabled_value?/1"},{"type":"macro","title":"Bonfire.Common.Extend.extend_module/1","doc":"Extend a module (i.e. define `defdelegate` and `defoverridable` for all functions from the source module in the current module. \nUsage:\nimport Module.Extend\nextend_module Common.Text","ref":"Bonfire.Common.Extend.html#extend_module/1"},{"type":"function","title":"Bonfire.Common.Extend.extension_enabled?/2","doc":"Whether an Elixir module or extension / OTP app is present AND not part of a disabled Bonfire extension (by having in config something like `config :bonfire_common, modularity: :disabled`)","ref":"Bonfire.Common.Extend.html#extension_enabled?/2"},{"type":"function","title":"Bonfire.Common.Extend.extension_loaded?/1","doc":"Whether an Elixir module or extension / OTP app is present","ref":"Bonfire.Common.Extend.html#extension_loaded?/1"},{"type":"function","title":"Bonfire.Common.Extend.function_ast/2","doc":"","ref":"Bonfire.Common.Extend.html#function_ast/2"},{"type":"function","title":"Bonfire.Common.Extend.function_code/2","doc":"","ref":"Bonfire.Common.Extend.html#function_code/2"},{"type":"function","title":"Bonfire.Common.Extend.function_line_number/2","doc":"Return the number of the first line where a function is defined in a module","ref":"Bonfire.Common.Extend.html#function_line_number/2"},{"type":"function","title":"Bonfire.Common.Extend.function_line_numbers/2","doc":"Return the numbers (as a tuple) of the first and last lines of a function's definition in a module","ref":"Bonfire.Common.Extend.html#function_line_numbers/2"},{"type":"function","title":"Bonfire.Common.Extend.generate_reverse_router!/0","doc":"","ref":"Bonfire.Common.Extend.html#generate_reverse_router!/0"},{"type":"function","title":"Bonfire.Common.Extend.has_extension_config?/1","doc":"Whether an Elixir module or extension / OTP app has configuration keys set up","ref":"Bonfire.Common.Extend.html#has_extension_config?/1"},{"type":"macro","title":"Bonfire.Common.Extend.import_if_enabled/2","doc":"","ref":"Bonfire.Common.Extend.html#import_if_enabled/2"},{"type":"function","title":"Bonfire.Common.Extend.inject_function/3","doc":"Copy the code defining a function from its original module to one that extends it (or a manually specified module). \nUsage: `Module.Extend.inject_function(Common.TextExtended, :blank?)`","ref":"Bonfire.Common.Extend.html#inject_function/3"},{"type":"function","title":"Bonfire.Common.Extend.macro_inspect/1","doc":"","ref":"Bonfire.Common.Extend.html#macro_inspect/1"},{"type":"function","title":"Bonfire.Common.Extend.maybe_extension_loaded/1","doc":"","ref":"Bonfire.Common.Extend.html#maybe_extension_loaded/1"},{"type":"function","title":"Bonfire.Common.Extend.maybe_extension_loaded!/1","doc":"","ref":"Bonfire.Common.Extend.html#maybe_extension_loaded!/1"},{"type":"function","title":"Bonfire.Common.Extend.maybe_module/2","doc":"Given an Elixir module, this returns an Elixir module, as long as the module and extension / OTP app is present AND not disabled (eg. by having in config something like `config Bonfire.Common.Text, modularity: :disabled`)\n\nImportant note: you should make sure to use the returned module, rather than the one provided as argument, as it can be different, this allows for swapping out modules in config or user settings (eg. by having in config something like `config Bonfire.Common.Text, modularity: MyCustomExtension.Text`)","ref":"Bonfire.Common.Extend.html#maybe_module/2"},{"type":"function","title":"Bonfire.Common.Extend.maybe_module!/2","doc":"","ref":"Bonfire.Common.Extend.html#maybe_module!/2"},{"type":"function","title":"Bonfire.Common.Extend.maybe_module_loaded/1","doc":"","ref":"Bonfire.Common.Extend.html#maybe_module_loaded/1"},{"type":"function","title":"Bonfire.Common.Extend.maybe_schema_or_pointer/1","doc":"","ref":"Bonfire.Common.Extend.html#maybe_schema_or_pointer/1"},{"type":"function","title":"Bonfire.Common.Extend.module_code/1","doc":"","ref":"Bonfire.Common.Extend.html#module_code/1"},{"type":"function","title":"Bonfire.Common.Extend.module_enabled?/2","doc":"Whether an Elixir module or extension / OTP app is present AND not disabled (eg. by having in config something like `config :bonfire_common, modularity: :disabled`)","ref":"Bonfire.Common.Extend.html#module_enabled?/2"},{"type":"function","title":"Bonfire.Common.Extend.module_exists?/1","doc":"","ref":"Bonfire.Common.Extend.html#module_exists?/1"},{"type":"function","title":"Bonfire.Common.Extend.module_exists_or/2","doc":"","ref":"Bonfire.Common.Extend.html#module_exists_or/2"},{"type":"function","title":"Bonfire.Common.Extend.module_file/1","doc":"","ref":"Bonfire.Common.Extend.html#module_file/1"},{"type":"function","title":"Bonfire.Common.Extend.module_file_code/1","doc":"","ref":"Bonfire.Common.Extend.html#module_file_code/1"},{"type":"function","title":"Bonfire.Common.Extend.quoted_import_if_enabled/3","doc":"","ref":"Bonfire.Common.Extend.html#quoted_import_if_enabled/3"},{"type":"function","title":"Bonfire.Common.Extend.quoted_require_if_enabled/3","doc":"","ref":"Bonfire.Common.Extend.html#quoted_require_if_enabled/3"},{"type":"function","title":"Bonfire.Common.Extend.quoted_use_if_enabled/3","doc":"","ref":"Bonfire.Common.Extend.html#quoted_use_if_enabled/3"},{"type":"macro","title":"Bonfire.Common.Extend.require_if_enabled/2","doc":"","ref":"Bonfire.Common.Extend.html#require_if_enabled/2"},{"type":"function","title":"Bonfire.Common.Extend.split_lines/1","doc":"","ref":"Bonfire.Common.Extend.html#split_lines/1"},{"type":"macro","title":"Bonfire.Common.Extend.use_if_enabled/2","doc":"","ref":"Bonfire.Common.Extend.html#use_if_enabled/2"},{"type":"behaviour","title":"Bonfire.Common.ExtensionBehaviour","doc":"A Global cache of known Behaviours in Bonfire\n\nUse of the ExtensionBehaviour Service requires declaring `@behaviour Bonfire.Common.ExtensionBehaviour` in your behaviour module. This module will then index those behaviours *and* all the modules that implement those behaviours at app startup.\n\nWhile this module is a GenServer, it is only responsible for setup\nof the cache and then exits with :ignore having done so. It is not\nrecommended to restart the service as this will lead to a stop the\nworld garbage collection of all processes and the copying of the\nentire cache to each process that has queried it since its last\nlocal garbage collection.","ref":"Bonfire.Common.ExtensionBehaviour.html"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.adopters_of_behaviour/1","doc":"Given a behaviour module, filters app modules to only those that implement that behaviour","ref":"Bonfire.Common.ExtensionBehaviour.html#adopters_of_behaviour/1"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.apply_modules/2","doc":"Note: use `apply_modules_cached/2` instead, as it caches the result.","ref":"Bonfire.Common.ExtensionBehaviour.html#apply_modules/2"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.apply_modules_cached/2","doc":"Runs/applies a given function name on each of a list of given modules, returning a map (listing the modules with their result as value) and vice versa (listing the results as key with their calling module as value). It also caches the result on first run.","ref":"Bonfire.Common.ExtensionBehaviour.html#apply_modules_cached/2"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.apps_to_scan/0","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#apps_to_scan/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.behaviour_app_modules/2","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#behaviour_app_modules/2"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.behaviour_modules/2","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#behaviour_modules/2"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.behaviours/0","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#behaviours/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.cached_behaviours/0","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#cached_behaviours/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Common.ExtensionBehaviour.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.find_adopters_of_behaviours/1","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#find_adopters_of_behaviours/1"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.find_extension_behaviours/0","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#find_extension_behaviours/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.module_behaviours/1","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#module_behaviours/1"},{"type":"callback","title":"Bonfire.Common.ExtensionBehaviour.modules/0","doc":"List modules that implement a behaviour","ref":"Bonfire.Common.ExtensionBehaviour.html#c:modules/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.populate/0","doc":"","ref":"Bonfire.Common.ExtensionBehaviour.html#populate/0"},{"type":"function","title":"Bonfire.Common.ExtensionBehaviour.start_link/1","doc":"Populates the global cache with config_module data via introspection.","ref":"Bonfire.Common.ExtensionBehaviour.html#start_link/1"},{"type":"behaviour","title":"Bonfire.Common.ExtensionModule","doc":"A global cache of known Bonfire extensions and their metadata.","ref":"Bonfire.Common.ExtensionModule.html"},{"type":"function","title":"Bonfire.Common.ExtensionModule.app_modules/0","doc":"","ref":"Bonfire.Common.ExtensionModule.html#app_modules/0"},{"type":"callback","title":"Bonfire.Common.ExtensionModule.declared_extension/0","doc":"Declares a Bonfire extensions","ref":"Bonfire.Common.ExtensionModule.html#c:declared_extension/0"},{"type":"function","title":"Bonfire.Common.ExtensionModule.declared_extension/1","doc":"","ref":"Bonfire.Common.ExtensionModule.html#declared_extension/1"},{"type":"function","title":"Bonfire.Common.ExtensionModule.declared_extensions/1","doc":"","ref":"Bonfire.Common.ExtensionModule.html#declared_extensions/1"},{"type":"function","title":"Bonfire.Common.ExtensionModule.default_nav/0","doc":"","ref":"Bonfire.Common.ExtensionModule.html#default_nav/0"},{"type":"function","title":"Bonfire.Common.ExtensionModule.default_nav/1","doc":"","ref":"Bonfire.Common.ExtensionModule.html#default_nav/1"},{"type":"function","title":"Bonfire.Common.ExtensionModule.extension/1","doc":"Get a extension identified by schema","ref":"Bonfire.Common.ExtensionModule.html#extension/1"},{"type":"function","title":"Bonfire.Common.ExtensionModule.extension_function_error/2","doc":"","ref":"Bonfire.Common.ExtensionModule.html#extension_function_error/2"},{"type":"function","title":"Bonfire.Common.ExtensionModule.modules/0","doc":"","ref":"Bonfire.Common.ExtensionModule.html#modules/0"},{"type":"module","title":"Bonfire.Common.Extensions","doc":"","ref":"Bonfire.Common.Extensions.html"},{"type":"function","title":"Bonfire.Common.Extensions.data/0","doc":"","ref":"Bonfire.Common.Extensions.html#data/0"},{"type":"function","title":"Bonfire.Common.Extensions.get_branch/1","doc":"","ref":"Bonfire.Common.Extensions.html#get_branch/1"},{"type":"function","title":"Bonfire.Common.Extensions.get_code_link/1","doc":"","ref":"Bonfire.Common.Extensions.html#get_code_link/1"},{"type":"function","title":"Bonfire.Common.Extensions.get_link/1","doc":"","ref":"Bonfire.Common.Extensions.html#get_link/1"},{"type":"function","title":"Bonfire.Common.Extensions.get_version/1","doc":"","ref":"Bonfire.Common.Extensions.html#get_version/1"},{"type":"function","title":"Bonfire.Common.Extensions.get_version_link/1","doc":"","ref":"Bonfire.Common.Extensions.html#get_version_link/1"},{"type":"function","title":"Bonfire.Common.Extensions.global_disable/1","doc":"","ref":"Bonfire.Common.Extensions.html#global_disable/1"},{"type":"function","title":"Bonfire.Common.Extensions.global_enable/1","doc":"","ref":"Bonfire.Common.Extensions.html#global_enable/1"},{"type":"function","title":"Bonfire.Common.Extensions.loaded_deps/1","doc":"","ref":"Bonfire.Common.Extensions.html#loaded_deps/1"},{"type":"module","title":"Bonfire.Common.Extensions.Diff","doc":"","ref":"Bonfire.Common.Extensions.Diff.html"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.analyse_repo_latest_diff_stream/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#analyse_repo_latest_diff_stream/1"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.generate_diff/2","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#generate_diff/2"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.git!/4","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git!/4"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.git_add_all/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_add_all/1"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.git_fetch/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_fetch/1"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.git_generate_diff/4","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_generate_diff/4"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.git_pre_configure/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_pre_configure/1"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.parse_repo_latest_diff/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#parse_repo_latest_diff/1"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.repo_latest_diff/3","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#repo_latest_diff/3"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.root/0","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#root/0"},{"type":"function","title":"Bonfire.Common.Extensions.Diff.tmp_path/1","doc":"","ref":"Bonfire.Common.Extensions.Diff.html#tmp_path/1"},{"type":"module","title":"Bonfire.Common.HTTP","doc":"Module for building and performing HTTP requests.","ref":"Bonfire.Common.HTTP.html"},{"type":"function","title":"Bonfire.Common.HTTP.delete/4","doc":"Makes a DELETE request\n\nsee `request/5`","ref":"Bonfire.Common.HTTP.html#delete/4"},{"type":"function","title":"Bonfire.Common.HTTP.get/3","doc":"Makes a GET request\n\nsee `request/5`","ref":"Bonfire.Common.HTTP.html#get/3"},{"type":"function","title":"Bonfire.Common.HTTP.get_cached/1","doc":"","ref":"Bonfire.Common.HTTP.html#get_cached/1"},{"type":"function","title":"Bonfire.Common.HTTP.patch/4","doc":"Makes a PATCH request\n\nsee `request/5`","ref":"Bonfire.Common.HTTP.html#patch/4"},{"type":"function","title":"Bonfire.Common.HTTP.post/4","doc":"Makes a POST request\n\nsee `request/5`","ref":"Bonfire.Common.HTTP.html#post/4"},{"type":"function","title":"Bonfire.Common.HTTP.put/4","doc":"Makes a PUT request\n\nsee `request/5`","ref":"Bonfire.Common.HTTP.html#put/4"},{"type":"function","title":"Bonfire.Common.HTTP.request/5","doc":"Builds and perform http request.\n\n# Arguments:\n`method` - :get, :post, :put, :delete\n`url`\n`body`\n`headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n`options` - custom, per-request middleware or adapter options\n\n# Returns:\n`{:ok, %Tesla.Env{}}` or `{:error, error}`","ref":"Bonfire.Common.HTTP.html#request/5"},{"type":"type","title":"Bonfire.Common.HTTP.t/0","doc":"","ref":"Bonfire.Common.HTTP.html#t:t/0"},{"type":"module","title":"Bonfire.Common.HTTP.Connection","doc":"Specifies connection options for HTTP requests","ref":"Bonfire.Common.HTTP.Connection.html"},{"type":"function","title":"Bonfire.Common.HTTP.Connection.adapter_options/2","doc":"","ref":"Bonfire.Common.HTTP.Connection.html#adapter_options/2"},{"type":"function","title":"Bonfire.Common.HTTP.Connection.new/1","doc":"","ref":"Bonfire.Common.HTTP.Connection.html#new/1"},{"type":"module","title":"Bonfire.Common.HTTP.RequestBuilder","doc":"Helper functions for building HTTP requests","ref":"Bonfire.Common.HTTP.RequestBuilder.html"},{"type":"function","title":"Bonfire.Common.HTTP.RequestBuilder.add_param/4","doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#add_param/4"},{"type":"function","title":"Bonfire.Common.HTTP.RequestBuilder.headers/2","doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#headers/2"},{"type":"function","title":"Bonfire.Common.HTTP.RequestBuilder.method/2","doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#method/2"},{"type":"function","title":"Bonfire.Common.HTTP.RequestBuilder.opts/2","doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#opts/2"},{"type":"function","title":"Bonfire.Common.HTTP.RequestBuilder.url/2","doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#url/2"},{"type":"module","title":"Bonfire.Common.Localise","doc":"Various helpers for localisation","ref":"Bonfire.Common.Localise.html"},{"type":"function","title":"Bonfire.Common.Localise.default_locale/0","doc":"","ref":"Bonfire.Common.Localise.html#default_locale/0"},{"type":"function","title":"Bonfire.Common.Localise.get_locale/0","doc":"","ref":"Bonfire.Common.Localise.html#get_locale/0"},{"type":"function","title":"Bonfire.Common.Localise.get_locale_id/0","doc":"","ref":"Bonfire.Common.Localise.html#get_locale_id/0"},{"type":"function","title":"Bonfire.Common.Localise.known_locales/0","doc":"","ref":"Bonfire.Common.Localise.html#known_locales/0"},{"type":"function","title":"Bonfire.Common.Localise.locale_name/1","doc":"","ref":"Bonfire.Common.Localise.html#locale_name/1"},{"type":"function","title":"Bonfire.Common.Localise.put_locale/1","doc":"","ref":"Bonfire.Common.Localise.html#put_locale/1"},{"type":"function","title":"Bonfire.Common.Localise.set_locale_config/0","doc":"","ref":"Bonfire.Common.Localise.html#set_locale_config/0"},{"type":"module","title":"Bonfire.Common.Localise.Cldr","doc":"Provides the core functions to retrieve and manage\nthe CLDR data that supports formatting and localisation.\n\nIt provides the core functions to access formatted\nCLDR data, set and retrieve a current locale and validate\ncertain core data types such as locales, currencies and\nterritories.","ref":"Bonfire.Common.Localise.Cldr.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.available_locale_name?/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#available_locale_name?/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.default_locale/0","doc":"Returns the default `locale`.","ref":"Bonfire.Common.Localise.Cldr.html#default_locale/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.default_locale/0","doc":"iex> Bonfire.Common.Localise.Cldr.default_locale()\n    %Cldr.LanguageTag{\n      backend: Bonfire.Common.Localise.Cldr,\n      canonical_locale_name: \"en-001\",\n      cldr_locale_name: :\"en-001\",\n      language_subtags: [],\n      extensions: %{},\n      gettext_locale_name: \"en\",\n      language: \"en\",\n      locale: %{},\n      private_use: [],\n      rbnf_locale_name: :en,\n      requested_locale_name: \"en-001\",\n      script: :Latn,\n      territory: :\"001\",\n      transform: %{},\n      language_variants: []\n    }","ref":"Bonfire.Common.Localise.Cldr.html#default_locale/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.default_territory/0","doc":"Returns the default territory when a locale\ndoes not specify one and none can be inferred.","ref":"Bonfire.Common.Localise.Cldr.html#default_territory/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.default_territory/0","doc":"iex> Bonfire.Common.Localise.Cldr.default_territory()\n    :\"001\"","ref":"Bonfire.Common.Localise.Cldr.html#default_territory/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.ellipsis/2","doc":"Add locale-specific ellipsis to a string.","ref":"Bonfire.Common.Localise.Cldr.html#ellipsis/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.ellipsis/2","doc":"* `string` is any `String.t` or a 2-element list\n  of `String.t` between which the ellipsis is inserted.\n\n* `backend` is any module that includes `use Cldr` and therefore\n  is a `Cldr` backend module.  The default is `Cldr.default_backend!/0`.\n  Note that `Cldr.default_backend!/0` will raise an exception if\n  no `:default_backend` is configured under the `:ex_cldr` key in\n  `config.exs`.\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.html#ellipsis/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.ellipsis/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/1`.\n  The default is `Cldr.get_locale/0`.\n\n* `:location` determines where to place the ellipsis. The options are\n  `:after` (the default for a single string argument), `:between`\n  (the default and only valid location for an argument that is a list\n  of two strings) and `:before`.\n\n* `:format` formats based upon whether the ellipsis\n  is inserted between words or sentences. The valid options are\n  `:word` or `:sentence`. The default is `:sentence`.","ref":"Bonfire.Common.Localise.Cldr.html#ellipsis/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.ellipsis/2","doc":"iex> Bonfire.Common.Localise.Cldr.ellipsis(\"And furthermore\")\n    \"And furthermore…\"\n\n    iex> Bonfire.Common.Localise.Cldr.ellipsis([\"And furthermore\", \"there is much to be done\"], locale: :ja)\n    \"And furthermore…there is much to be done\"\n\n    iex> Bonfire.Common.Localise.Cldr.ellipsis(\"And furthermore\", format: :word)\n    \"And furthermore …\"\n\n    iex> Bonfire.Common.Localise.Cldr.ellipsis([\"And furthermore\", \"there is much to be done\"], locale: :ja, format: :word)\n    \"And furthermore … there is much to be done\"","ref":"Bonfire.Common.Localise.Cldr.html#ellipsis/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.get_locale/0","doc":"Return the current locale to be used for `Cldr` functions that\ntake an optional locale parameter for which a locale is not supplied.","ref":"Bonfire.Common.Localise.Cldr.html#get_locale/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.get_locale/0","doc":"iex> Bonfire.Common.Localise.Cldr.put_locale(\"pl\")\n    iex> Bonfire.Common.Localise.Cldr.get_locale()\n    %Cldr.LanguageTag{\n       backend: Elixir.Bonfire.Common.Localise.Cldr,\n       canonical_locale_name: \"pl\",\n       cldr_locale_name: :pl,\n       extensions: %{},\n       language: \"pl\",\n       locale: %{},\n       private_use: [],\n       rbnf_locale_name: :pl,\n       territory: :PL,\n       requested_locale_name: \"pl\",\n       script: :Latn,\n       transform: %{},\n       language_variants: []\n     }","ref":"Bonfire.Common.Localise.Cldr.html#get_locale/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_calendars/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#known_calendars/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_currencies/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#known_currencies/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_name/1","doc":"Returns either the Gettext `locale_name` in Cldr format or\n`false` based upon whether the locale name is configured in\n`Gettext`.","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_gettext_locale_name/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_gettext_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_gettext_locale_name/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_gettext_locale_name(\"en\")\n    \"en\"\n\n    iex> Bonfire.Common.Localise.Cldr.known_gettext_locale_name(\"en-SA\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_name?/1","doc":"Returns a boolean indicating if the specified locale\nname is configured and available in Gettext.","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name?/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_gettext_locale_name?/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name?/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_gettext_locale_name?/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_gettext_locale_name?(\"en\")\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.known_gettext_locale_name?(\"!!\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name?/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_names/0","doc":"Returns a list of Gettext locale names but in CLDR format with\nunderscore replaced by hyphen in order to facilitate comparisons\nwith `Cldr` locale names.","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_locale_name/1","doc":"Returns either the `locale_name` or `false` based upon\nwhether the locale name is configured in `Cldr`.\n\nThis is helpful when building a list of `or` expressions\nto return the first known locale name from a list.","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_locale_name/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_locale_name/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_locale_name(:\"en-AU\")\n    :\"en-AU\"\n\n    iex> Bonfire.Common.Localise.Cldr.known_locale_name(:\"en-SA\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_locale_name?/1","doc":"Returns a boolean indicating if the specified locale\nname is configured and available in Cldr.","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name?/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_locale_name?/1","doc":"* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name?/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_locale_name?/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_locale_name?(:en)\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.known_locale_name?(:\"!!\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name?/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_locale_names/0","doc":"Returns a list of the known locale names.\n\nKnown locales are those locales which\nare the subset of all CLDR locales that\nhave been configured for use either\nin this module or in `Gettext`.","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_number_system_types/0","doc":"Returns a list of atoms representing the number systems types known to `Cldr`.","ref":"Bonfire.Common.Localise.Cldr.html#known_number_system_types/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.known_number_system_types/0","doc":"iex> Bonfire.Common.Localise.Cldr.known_number_system_types()\n    [:default, :finance, :native, :traditional]","ref":"Bonfire.Common.Localise.Cldr.html#known_number_system_types/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_number_systems/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#known_number_systems/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_name/1","doc":"Returns either the RBNF `locale_name` or `false` based upon\nwhether the locale name is configured in `Cldr`\nand has RBNF rules defined.","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_rbnf_locale_name/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_rbnf_locale_name/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_rbnf_locale_name(:en)\n    :en\n\n    iex> Bonfire.Common.Localise.Cldr.known_rbnf_locale_name(:\"en-SA\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?/1","doc":"Returns a boolean indicating if the specified locale\nname is configured and available in Cldr and supports\nrules based number formats (RBNF).","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name?/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?/1","doc":"* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name?/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?/1","doc":"iex> Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?(:en)\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?(:\"!!\")\n    false","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name?/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_names/0","doc":"Returns a list of locale names which have rules-based number\nformats (RBNF).","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.known_territories/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#known_territories/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.normalize_lenient_parse/3","doc":"Normalizes a string by applying transliteration\nof common symbols in numbers, currencies and dates","ref":"Bonfire.Common.Localise.Cldr.html#normalize_lenient_parse/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.put_gettext_locale/1","doc":"Set the current process's Gettext locale from a\n`t:Cldr.LanguageTag`.","ref":"Bonfire.Common.Localise.Cldr.html#put_gettext_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.put_gettext_locale/1","doc":"* `locale` is a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`.","ref":"Bonfire.Common.Localise.Cldr.html#put_gettext_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.put_gettext_locale/1","doc":"* `{:ok, gettext_locale_name}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.html#put_gettext_locale/1-returns"},{"type":"function","title":"Behaviour - Bonfire.Common.Localise.Cldr.put_gettext_locale/1","doc":"1. If the `locale.gettext_locale_name` is `nil` then an error\n   is returned.\n\n2. The `gettext` locale for the `gettext_backend` configured for the\n   CLDR backend defined by the `t:Cldr.LanguageTag` is set.","ref":"Bonfire.Common.Localise.Cldr.html#put_gettext_locale/1-behaviour"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.put_gettext_locale/1","doc":"iex> import Cldr.LanguageTag.Sigil\n    iex> Bonfire.Common.Localise.Cldr.put_gettext_locale(~l\"en\")\n    {:ok, \"en\"}\n\n    iex> import Cldr.LanguageTag.Sigil\n    iex> Bonfire.Common.Localise.Cldr.put_gettext_locale(~l\"de\")\n    {:error,\n      {Cldr.UnknownLocaleError,\n        \"Locale #Cldr.LanguageTag  does not map to a known gettext locale name\"}}","ref":"Bonfire.Common.Localise.Cldr.html#put_gettext_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.put_locale/1","doc":"Set the current locale to be used for `Cldr` functions that\ntake an optional locale parameter for which a locale is not supplied.","ref":"Bonfire.Common.Localise.Cldr.html#put_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.put_locale/1","doc":"* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag` struct returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1`\n\nSee [rfc5646](https://tools.ietf.org/html/rfc5646) for the specification\nof a language tag.","ref":"Bonfire.Common.Localise.Cldr.html#put_locale/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.put_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.put_locale(\"en\")\n    {:ok,\n     %Cldr.LanguageTag{\n       backend: Bonfire.Common.Localise.Cldr,\n       canonical_locale_name: \"en\",\n       cldr_locale_name: :en,\n       language_subtags: [],\n       extensions: %{},\n       gettext_locale_name: \"en\",\n       language: \"en\",\n       locale: %{},\n       private_use: [],\n       rbnf_locale_name: :en,\n       requested_locale_name: \"en\",\n       script: :Latn,\n       territory: :US,\n       transform: %{},\n       language_variants: []\n     }}\n\n    iex> Bonfire.Common.Localise.Cldr.put_locale(\"invalid-locale!\")\n    {:error, {Cldr.LanguageTag.ParseError,\n      \"Expected a BCP47 language tag. Could not parse the remaining \\\"!\\\" starting at position 15\"}}","ref":"Bonfire.Common.Localise.Cldr.html#put_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.quote/2","doc":"Add locale-specific quotation marks around a string.","ref":"Bonfire.Common.Localise.Cldr.html#quote/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.quote/2","doc":"* `string` is any valid Elixir string\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.html#quote/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.quote/2","doc":"* `locale` is any valid locale name returned by `Cldr.known_locale_names/1`.\n  The default is `Cldr.get_locale/0`","ref":"Bonfire.Common.Localise.Cldr.html#quote/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.quote/2","doc":"iex> Bonfire.Common.Localise.Cldr.quote(\"Quoted String\")\n    \"“Quoted String”\"\n\n    iex> Bonfire.Common.Localise.Cldr.quote(\"Quoted String\", locale: :ja)\n    \"「Quoted String」\"","ref":"Bonfire.Common.Localise.Cldr.html#quote/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.unknown_locale_names/0","doc":"Returns a list of the locales names that are configured,\nbut not known in CLDR.\n\nSince there is a compile-time exception raised if there are\nany unknown locales this function should always\nreturn an empty list.","ref":"Bonfire.Common.Localise.Cldr.html#unknown_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_calendar/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#validate_calendar/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_currency/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#validate_currency/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_locale/1","doc":"Normalise and validate a locale name.","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.validate_locale/1","doc":"* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.validate_locale/1","doc":"* `{:ok, language_tag}`\n\n* `{:error, reason}`","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.validate_locale/1","doc":"See [rfc5646](https://tools.ietf.org/html/rfc5646) for the specification\nof a language tag.","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.validate_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.validate_locale(:en)\n    {:ok,\n    %Cldr.LanguageTag{\n      backend: Bonfire.Common.Localise.Cldr,\n      canonical_locale_name: \"en\",\n      cldr_locale_name: :en,\n      extensions: %{},\n      gettext_locale_name: \"en\",\n      language: \"en\",\n      locale: %{},\n      private_use: [],\n      rbnf_locale_name: :en,\n      requested_locale_name: \"en\",\n      script: :Latn,\n      territory: :US,\n      transform: %{},\n      language_variants: []\n    }}\n\n\n    iex> Bonfire.Common.Localise.Cldr.validate_locale Bonfire.Common.Localise.Cldr.default_locale()\n    {:ok,\n    %Cldr.LanguageTag{\n      backend: Bonfire.Common.Localise.Cldr,\n      canonical_locale_name: \"en-001\",\n      cldr_locale_name: :\"en-001\",\n      extensions: %{},\n      gettext_locale_name: \"en\",\n      language: \"en\",\n      locale: %{},\n      private_use: [],\n      rbnf_locale_name: :en,\n      requested_locale_name: \"en-001\",\n      script: :Latn,\n      territory: :\"001\",\n      transform: %{},\n      language_variants: []\n    }}\n\n    iex> Bonfire.Common.Localise.Cldr.validate_locale(\"zzz\")\n    {:error, {Cldr.InvalidLanguageError, \"The language \\\"zzz\\\" is invalid\"}}","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_number_system/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_number_system_type/1","doc":"Normalise and validate a number system type.","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system_type/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.validate_number_system_type/1","doc":"* `number_system_type` is any number system type returned by\n  `Cldr.known_number_system_types/1`","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system_type/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.validate_number_system_type/1","doc":"* `{:ok, normalized_number_system_type}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system_type/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.validate_number_system_type/1","doc":"iex> Bonfire.Common.Localise.Cldr.validate_number_system_type(:default)\n    {:ok, :default}\n\n    iex> Bonfire.Common.Localise.Cldr.validate_number_system_type(:traditional)\n    {:ok, :traditional}\n\n    iex> Bonfire.Common.Localise.Cldr.validate_number_system_type(:latn)\n    {\n      :error,\n      {Cldr.UnknownNumberSystemTypeError, \"The number system type :latn is unknown\"}\n    }\n\n    iex> Bonfire.Common.Localise.Cldr.validate_number_system_type(\"bork\")\n    {\n      :error,\n      {Cldr.UnknownNumberSystemTypeError, \"The number system type \\\"bork\\\" is invalid\"}\n    }","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system_type/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.validate_territory/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.html#validate_territory/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.with_locale/2","doc":"Execute a function with a locale ensuring that the\ncurrent locale is restored after the function.","ref":"Bonfire.Common.Localise.Cldr.html#with_locale/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.with_locale/2","doc":"* `locale` is any valid locale name returned by `Cldr.known_locale_names/1`.\n\n* `fun` is any 0-arity function or function capture.","ref":"Bonfire.Common.Localise.Cldr.html#with_locale/2-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.with_locale/2","doc":"* The value returned by the function `fun/0` or\n\n* `{:error, {exception, reason}}` if the locale is invalid or\n\n* raises an exception if the current locale cannot be\n  identified.","ref":"Bonfire.Common.Localise.Cldr.html#with_locale/2-returns"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage","doc":"Parses HTTP `Accept-Language` header values as defined in\n[rfc2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4).\n\nThe Accept-Language request-header field is similar to Accept, but restricts\nthe set of natural languages that are preferred as a response to the request.\nLanguage tags function are provided in `Cldr.LanguageTag`.\n\nThe format of an `Accept-Language` header is as follows in `ABNF` format:\n\n       Accept-Language = \"Accept-Language\" \":\"\n                         1#( language-range [ \";\" \"q\" \"=\" qvalue ] )\n       language-range  = ( ( 1*8ALPHA *( \"-\" 1*8ALPHA ) ) | \"*\" )\n\nEach language-range MAY be given an associated quality value which represents an\nestimate of the user's preference for the languages specified by that range. The\nquality value defaults to \"q=1\". For example,\n\n       Accept-Language: da, en-gb;q=0.8, en;q=0.7\n\nwould mean: \"I prefer Danish, but will accept British English and other types of English.\"","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match/1","doc":"Parse an `Accept-Language` string and return the best match for\na configured `Cldr` locale.","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#best_match/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match/1","doc":"* `accept_langauge` is a string representing an accept language header","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#best_match/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match/1","doc":"* `{:ok, language_tag}` or\n\n* `{:error, reason}`","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#best_match/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match/1","doc":"iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match(\"da;q=0.1,zh-TW;q=0.3\", TestBackend.Cldr)\n    {:ok,\n     %Cldr.LanguageTag{\n       backend: TestBackend.Cldr,\n       canonical_locale_name: \"zh-TW\",\n       cldr_locale_name: :\"zh-Hant\",\n       language_subtags: [],\n       extensions: %{},\n       gettext_locale_name: nil,\n       language: \"zh\",\n       locale: %{},\n       private_use: [],\n       rbnf_locale_name: :\"zh-Hant\",\n       requested_locale_name: \"zh-TW\",\n       script: :Hant,\n       territory: :TW,\n       transform: %{},\n       language_variants: []\n     }}\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match(\"da;q=0.1,zh-TW;q=0.3\", TestBackend.Cldr)\n    {:ok,\n     %Cldr.LanguageTag{\n       backend: TestBackend.Cldr,\n       canonical_locale_name: \"zh-TW\",\n       cldr_locale_name: :\"zh-Hant\",\n       language_subtags: [],\n       extensions: %{},\n       gettext_locale_name: nil,\n       language: \"zh\",\n       locale: %{},\n       private_use: [],\n       rbnf_locale_name: :\"zh-Hant\",\n       requested_locale_name: \"zh-TW\",\n       script: :Hant,\n       territory: :TW,\n       transform: %{},\n       language_variants: []\n     }}\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match(\"xx,yy;q=0.3\")\n    {:error,\n     {Cldr.NoMatchingLocale,\n      \"No configured locale could be matched to \\\"xx,yy;q=0.3\\\"\"}}\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match(\"invalid_tag\")\n    {:error, {Cldr.LanguageTag.ParseError,\n      \"Expected a BCP47 language tag. Could not parse the remaining \\\"g\\\" starting at position 11\"}}","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#best_match/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.parse/1","doc":"Parses an `Accept-Language` header value in its string\nor tokenized form to return a tuple of the form\n`{:ok, [{quality, %Cldr.LanguageTag{}}, ...]}` sorted by quality.","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse/1","doc":"* `accept-language` is any string in the format defined by\n  [rfc2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4)\n\n* `backend` is any module that includes `use Cldr` and therefore\n  is a `Cldr` backend module","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse/1","doc":"* `{:ok, [{quality, language_tag}, ...]}` or\n\n* `{:error, {Cldr.AcceptLanguageError, String.t}}`\n\nIf at least one valid language tag is found but errors are also\ndetected on one more more tags, an `{ok, list}` tuple is returned\nwuth an error tuple for each invalid tag added at the end of the list.","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse/1-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse/1","doc":"iex> Cldr.AcceptLanguage.parse(\"da,zh-TW;q=0.3\", TestBackend.Cldr)\n    {:ok,\n     [\n       {1.0,\n        %Cldr.LanguageTag{\n          backend: TestBackend.Cldr,\n          canonical_locale_name: \"da\",\n          cldr_locale_name: :da,\n          language_subtags: [],\n          extensions: %{},\n          gettext_locale_name: nil,\n          language: \"da\",\n          locale: %{},\n          private_use: [],\n          rbnf_locale_name: :da,\n          requested_locale_name: \"da\",\n          script: :Latn,\n          territory: :DK,\n          transform: %{},\n          language_variants: []\n        }},\n       {0.3,\n        %Cldr.LanguageTag{\n          backend: TestBackend.Cldr,\n          canonical_locale_name: \"zh-TW\",\n          cldr_locale_name: :\"zh-Hant\",\n          language_subtags: [],\n          extensions: %{},\n          gettext_locale_name: nil,\n          language: \"zh\",\n          locale: %{},\n          private_use: [],\n          rbnf_locale_name: :\"zh-Hant\",\n          requested_locale_name: \"zh-TW\",\n          script: :Hant,\n          territory: :TW,\n          transform: %{},\n          language_variants: []\n        }}\n     ]}\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.parse(\"invalid_tag\")\n    {:error,\n     {Cldr.LanguageTag.ParseError,\n      \"Expected a BCP47 language tag. Could not parse the remaining \\\"g\\\" starting at position 11\"}}\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.parse(\"da,zh-TW;q=0.3,invalid_tag\")\n    {:ok,\n     [\n       {1.0,\n        %Cldr.LanguageTag{\n          backend: TestBackend.Cldr,\n          canonical_locale_name: \"da\",\n          cldr_locale_name: :da,\n          language_subtags: [],\n          extensions: %{},\n          gettext_locale_name: nil,\n          language: \"da\",\n          locale: %{},\n          private_use: [],\n          rbnf_locale_name: :da,\n          requested_locale_name: \"da\",\n          script: :Latn,\n          territory: :DK,\n          transform: %{},\n          language_variants: []\n        }},\n       {0.3,\n        %Cldr.LanguageTag{\n          backend: TestBackend.Cldr,\n          canonical_locale_name: \"zh-TW\",\n          cldr_locale_name: :\"zh-Hant\",\n          language_subtags: [],\n          extensions: %{},\n          gettext_locale_name: nil,\n          language: \"zh\",\n          locale: %{},\n          private_use: [],\n          rbnf_locale_name: :\"zh-Hant\",\n          requested_locale_name: \"zh-TW\",\n          script: :Hant,\n          territory: :TW,\n          transform: %{},\n          language_variants: []\n        }},\n       {:error,\n        {Cldr.LanguageTag.ParseError,\n         \"Expected a BCP47 language tag. Could not parse the remaining \\\"g\\\" starting at position 11\"}}\n     ]}","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!/1","doc":"Parses an `Accept-Language` header value in its string\nor tokenized form to produce a list of tuples of the form\n`[{quality, %Cldr.LanguageTag{}}, ...]` sorted by quality\nin descending order.","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse!/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!/1","doc":"* `accept-language` is any string in the format defined by [rfc2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4)","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse!/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!/1","doc":"* `{:ok, [{quality, language_tag}, ...]}` or\n\n* raises a `Cldr.AcceptLanguageError` exception\n\nIf at least one valid language tag is found but errors are also\ndetected on one more more tags, an `{ok, list}` tuple is returned\nwuth an error tuple for each invalid tag added at the end of the list.","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse!/1-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!/1","doc":"iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!(\"da,zh-TW;q=0.3\")\n    [\n      {1.0,\n       %Cldr.LanguageTag{\n         backend: TestBackend.Cldr,\n         canonical_locale_name: \"da\",\n         cldr_locale_name: :da,\n         language_subtags: [],\n         extensions: %{},\n         gettext_locale_name: nil,\n         language: \"da\",\n         locale: %{},\n         private_use: [],\n         rbnf_locale_name: :da,\n         requested_locale_name: \"da\",\n         script: :Latn,\n         territory: :DK,\n         transform: %{},\n         language_variants: []\n       }},\n      {0.3,\n       %Cldr.LanguageTag{\n         backend: TestBackend.Cldr,\n         canonical_locale_name: \"zh-TW\",\n         cldr_locale_name: :\"zh-Hant\",\n         language_subtags: [],\n         extensions: %{},\n         gettext_locale_name: nil,\n         language: \"zh\",\n         locale: %{},\n         private_use: [],\n         rbnf_locale_name: :\"zh-Hant\",\n         requested_locale_name: \"zh-TW\",\n         script: :Hant,\n         territory: :TW,\n         transform: %{},\n         language_variants: []\n       }}\n    ]\n\n    Bonfire.Common.Localise.Cldr.AcceptLanguage.parse! \"invalid_tag\"\n    ** (Cldr.AcceptLanguageError) \"Expected a BCP47 language tag. Could not parse the remaining \"g\" starting at position 11\n        (ex_cldr) lib/cldr/accept_language.ex:304: Cldr.AcceptLanguage.parse!/1\n\n    iex> Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!(\"da,zh-TW;q=0.3,invalid_tag\")\n    [\n      {1.0,\n       %Cldr.LanguageTag{\n         backend: TestBackend.Cldr,\n         canonical_locale_name: \"da\",\n         cldr_locale_name: :da,\n         language_subtags: [],\n         extensions: %{},\n         gettext_locale_name: nil,\n         language: \"da\",\n         locale: %{},\n         private_use: [],\n         rbnf_locale_name: :da,\n         requested_locale_name: \"da\",\n         script: :Latn,\n         territory: :DK,\n         transform: %{},\n         language_variants: []\n       }},\n      {0.3,\n       %Cldr.LanguageTag{\n         backend: TestBackend.Cldr,\n         canonical_locale_name: \"zh-TW\",\n         cldr_locale_name: :\"zh-Hant\",\n         language_subtags: [],\n         extensions: %{},\n         gettext_locale_name: nil,\n         language: \"zh\",\n         locale: %{},\n         private_use: [],\n         rbnf_locale_name: :\"zh-Hant\",\n         requested_locale_name: \"zh-TW\",\n         script: :Hant,\n         territory: :TW,\n         transform: %{},\n         language_variants: []\n       }},\n      {:error,\n       {Cldr.LanguageTag.ParseError,\n        \"Expected a BCP47 language tag. Could not parse the remaining \\\"g\\\" starting at position 11\"}}\n    ]","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse!/1-example"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Calendar","doc":"Data functions to retrieve localised calendar\ninformation.\n\n`Cldr` defines formats for several calendars, the names of which\nare returned by `Cldr.known_calendars/0`.\n\nCurrently this implementation only supports the `:gregorian`,\n`:persian`, `:coptic` and `ethiopic` calendars.\n\nThe `:gregorian` calendar aligns with the proleptic Gregorian calendar\ndefined by Elixir, `Calendar.ISO`.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale/1","doc":"Return the calendar module for a locale.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale/1","doc":"* `:locale` is any locale or locale name validated\n  by `Cldr.validate_locale/2`.  The default is\n  `Cldr.get_locale()` which returns the locale\n  set for the current process","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale/1","doc":"* `{:ok, calendar_module}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale \"en-GB\"\n    {:ok, Cldr.Calendar.GB}\n\n    iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale \"en-GB-u-ca-gregory\"\n    {:ok, Cldr.Calendar.Gregorian}\n\n    iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale \"en\"\n    {:ok, Cldr.Calendar.US}\n\n    iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_locale \"fa-IR\"\n    {:ok, Cldr.Calendar.Persian}","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory/1","doc":"Returns the calendar module preferred for\na territory.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_territory/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory/1","doc":"* `territory` is any valid ISO3166-2 code as\n  an `String.t` or upcased `atom()`","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_territory/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory/1","doc":"* `{:ok, calendar_module}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_territory/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory/1","doc":"iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory :US\n    {:ok, Cldr.Calendar.Gregorian}\n\n    iex> Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory :XX\n    {:error, {Cldr.UnknownTerritoryError, \"The territory :XX is unknown\"}}","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_territory/1-examples"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Calendar.calendar_from_territory/1","doc":"The overwhelming majority of territories have\n`:gregorian` as their first preferred calendar\nand therefore `Cldr.Calendar.Gregorian`\nwill be returned for most territories.\n\nReturning any other calendar module would require:\n\n1. That another calendar is preferred over `:gregorian`\n   for a territory\n\n2. That a calendar module is available to support\n   that calendar.\n\nAs an example, Iran (territory `:IR`) prefers the\n`:persian` calendar. If the optional library\n[ex_cldr_calendars_persian](https://hex.pm/packages/ex_cldr_calendars_persian)\nis installed, the calendar module `Cldr.Calendar.Persian` will\nbe returned. If it is not installed, `Cldr.Calendar.Gregorian`\nwill be returned as `:gregorian` is the second preference\nfor `:IR`.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#calendar_from_territory/1-notes"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.cyclic_years/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#cyclic_years/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.day_periods/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#day_periods/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.days/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#days/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.eras/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#eras/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.month_patterns/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#month_patterns/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.months/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#months/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.quarters/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#quarters/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Calendar.strftime_options!/2","doc":"Returns a keyword list of options than can be applied to\n`NimbleStrftime.format/3`.\n\nThe hex package [nimble_strftime](https://hex.pm/packages/nimble_strftime)\nprovides a `format/3` function to format dates, times and datetimes.\nIt takes a set of options that can return day, month and am/pm names.\n\n`strftime_options!` returns a keyword list than can be used as these\noptions to return localised names for days, months and am/pm.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#strftime_options!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Calendar.strftime_options!/2","doc":"* `locale` is any locale returned by `MyApp.Cldr.known_locale_names/0`. The\n  default is `MyApp.Cldr.get_locale/0`\n\n* `options` is a set of keyword options. The default is `[]`","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#strftime_options!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Calendar.strftime_options!/2","doc":"* `:calendar` is the name of any known CLDR calendar. The default\n  is `:gregorian`.","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#strftime_options!/2-options"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Calendar.strftime_options!/2","doc":"iex: MyApp.Cldr.Calendar.strftime_options!\n    [\n      am_pm_names: #Function ,\n      month_names: #Function ,\n      abbreviated_month_names: #Function ,\n      day_of_week_names: #Function ,\n      abbreviated_day_of_week_names: #Function \n    ]","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#strftime_options!/2-example"},{"type":"function","title":"Typical usage - Bonfire.Common.Localise.Cldr.Calendar.strftime_options!/2","doc":"iex: NimbleStrftime.format(Date.today(), MyApp.Cldr.Calendar.strftime_options!())","ref":"Bonfire.Common.Localise.Cldr.Calendar.html#strftime_options!/2-typical-usage"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Currency","doc":"","ref":"Bonfire.Common.Localise.Cldr.Currency.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale/3","doc":"Returns a map of the metadata for all currencies for\na given locale.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale/3","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`\n\n* `currency_status` is `:all`, `:current`, `:historic`,\n  `unannotated` or `:tender`; or a list of one or more status.\n  The default is `:all`. See `Cldr.Currency.currency_filter/2`.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale/3-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale/3","doc":"* `{:ok, currency_map}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale/3-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale/3","doc":"MyApp.Cldr.Currency.currencies_for_locale(\"en\")\n  => {:ok,\n   %{\n     FJD: %Cldr.Currency{\n       cash_digits: 2,\n       cash_rounding: 0,\n       code: \"FJD\",\n       count: %{one: \"Fijian dollar\", other: \"Fijian dollars\"},\n       digits: 2,\n       from: nil,\n       iso_digits: 2,\n       name: \"Fijian Dollar\",\n       narrow_symbol: \"$\",\n       rounding: 0,\n       symbol: \"FJD\",\n       tender: true,\n       to: nil\n     },\n     SUR: %Cldr.Currency{\n       cash_digits: 2,\n       cash_rounding: 0,\n       code: \"SUR\",\n       count: %{one: \"Soviet rouble\", other: \"Soviet roubles\"},\n       digits: 2,\n       from: nil,\n       iso_digits: nil,\n       name: \"Soviet Rouble\",\n       narrow_symbol: nil,\n       rounding: 0,\n       symbol: \"SUR\",\n       tender: true,\n       to: nil\n     },\n     ...\n    }}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale/3-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale!/3","doc":"Returns a map of the metadata for all currencies for\na given locale and raises on error.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale!/3","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`\n\n* `currency_status` is `:all`, `:current`, `:historic`,\n  `unannotated` or `:tender`; or a list of one or more status.\n  The default is `:all`. See `Cldr.Currency.currency_filter/2`.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale!/3-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale!/3","doc":"* `{:ok, currency_map}` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale!/3-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.currencies_for_locale!/3","doc":"MyApp.Cldr.Currency.currencies_for_locale!(\"en\")\n  => %{\n    FJD: %Cldr.Currency{\n      cash_digits: 2,\n      cash_rounding: 0,\n      code: \"FJD\",\n      count: %{one: \"Fijian dollar\", other: \"Fijian dollars\"},\n      digits: 2,\n      from: nil,\n      iso_digits: 2,\n      name: \"Fijian Dollar\",\n      narrow_symbol: \"$\",\n      rounding: 0,\n      symbol: \"FJD\",\n      tender: true,\n      to: nil\n    },\n    SUR: %Cldr.Currency{\n      cash_digits: 2,\n      cash_rounding: 0,\n      code: \"SUR\",\n      count: %{one: \"Soviet rouble\", other: \"Soviet roubles\"},\n      digits: 2,\n      from: nil,\n      iso_digits: nil,\n      name: \"Soviet Rouble\",\n      narrow_symbol: nil,\n      rounding: 0,\n      symbol: \"SUR\",\n      tender: true,\n      to: nil\n    },\n    ...\n   }","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currencies_for_locale!/3-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_for_code/2","doc":"Returns the currency metadata for the requested currency code.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_for_code/2","doc":"* `currency_or_currency_code` is a `binary` or `atom` representation\n   of an ISO 4217 currency code, or a `%Cldr.Currency{}` struct.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Currency.currency_for_code/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currency_for_code/2","doc":"* A `{:ok, currency}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.currency_for_code/2","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.currency_for_code(\"AUD\")\n    {:ok,\n      %Cldr.Currency{\n        cash_digits: 2,\n        cash_rounding: 0,\n        code: \"AUD\",\n        count: %{one: \"Australian dollar\", other: \"Australian dollars\"},\n        digits: 2,\n        iso_digits: 2,\n        name: \"Australian Dollar\",\n        narrow_symbol: \"$\",\n        rounding: 0,\n        symbol: \"A$\",\n        tender: true\n    }}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.currency_for_code(\"THB\")\n    {:ok,\n      %Cldr.Currency{\n        cash_digits: 2,\n        cash_rounding: 0,\n        code: \"THB\",\n        count: %{one: \"Thai baht\", other: \"Thai baht\"},\n        digits: 2,\n        iso_digits: 2,\n        name: \"Thai Baht\",\n        narrow_symbol: \"฿\",\n        rounding: 0,\n        symbol: \"THB\",\n        tender: true\n    }}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_for_code!/2","doc":"Returns the currency metadata for the requested currency code.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_for_code!/2","doc":"* `currency_or_currency_code` is a `binary` or `atom` representation\n   of an ISO 4217 currency code, or a `%Cldr.Currency{}` struct.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Currency.currency_for_code!/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currency_for_code!/2","doc":"* A `t:Cldr.Current.t/0` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.currency_for_code!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.currency_for_code!(\"AUD\")\n    %Cldr.Currency{\n      cash_digits: 2,\n      cash_rounding: 0,\n      code: \"AUD\",\n      count: %{one: \"Australian dollar\", other: \"Australian dollars\"},\n      digits: 2,\n      iso_digits: 2,\n      name: \"Australian Dollar\",\n      narrow_symbol: \"$\",\n      rounding: 0,\n      symbol: \"A$\",\n      tender: true\n    }\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.currency_for_code!(\"THB\")\n    %Cldr.Currency{\n      cash_digits: 2,\n      cash_rounding: 0,\n      code: \"THB\",\n      count: %{one: \"Thai baht\", other: \"Thai baht\"},\n      digits: 2,\n      iso_digits: 2,\n      name: \"Thai Baht\",\n      narrow_symbol: \"฿\",\n      rounding: 0,\n      symbol: \"THB\",\n      tender: true\n    }","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_for_code!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_from_locale/1","doc":"Returns the effective currency for a given locale","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_from_locale/1","doc":"* `locale` is a `Cldr.LanguageTag` struct returned by\n  `Cldr.Locale.new!/2`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currency_from_locale/1","doc":"* A ISO 4217 currency code as an upcased atom","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.currency_from_locale/1","doc":"iex> {:ok, locale} = Bonfire.Common.Localise.Cldr.validate_locale(\"en\")\n    iex> Bonfire.Common.Localise.Cldr.Currency.currency_from_locale locale\n    :USD\n\n    iex> {:ok, locale} = Bonfire.Common.Localise.Cldr.validate_locale(\"en-AU\")\n    iex> Bonfire.Common.Localise.Cldr.Currency.currency_from_locale locale\n    :AUD\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.currency_from_locale(\"en-GB\")\n    :GBP","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_from_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_history_for_locale/1","doc":"Returns a list of historic and the current\ncurrency for a given locale.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_history_for_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_history_for_locale/1","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_history_for_locale/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.currency_history_for_locale/1","doc":"iex> MyApp.Cldr.Currency.currency_history_for_locale(\"en\")\n    {:ok,\n        %{\n        USD: %{from: ~D[1792-01-01], to: nil},\n        USN: %{tender: false},\n        USS: %{from: nil, tender: false, to: ~D[2014-03-01]}\n      }\n    }","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_history_for_locale/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_strings/3","doc":"Returns a map that matches a currency string to a\ncurrency code.\n\nA currency string is a localised name or symbol\nrepresenting a currency in a locale-specific manner.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_strings/3","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`\n\n* `currency_status` is `:all`, `:current`, `:historic`,\n  `unannotated` or `:tender`; or a list of one or more status.\n  The default is `:all`. See `Cldr.Currency.currency_filter/2`.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings/3-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currency_strings/3","doc":"* `{:ok, currency_string_map}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings/3-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.currency_strings/3","doc":"MyApp.Cldr.Currency.currency_strings(\"en\")\n    => {:ok,\n     %{\n       \"mexican silver pesos\" => :MXP,\n       \"sudanese dinar\" => :SDD,\n       \"bad\" => :BAD,\n       \"rsd\" => :RSD,\n       \"swazi lilangeni\" => :SZL,\n       \"zairean new zaire\" => :ZRN,\n       \"guyanaese dollars\" => :GYD,\n       \"equatorial guinean ekwele\" => :GQE,\n       ...\n      }}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings/3-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.currency_strings!/3","doc":"Returns a map that matches a currency string to a\ncurrency code or raises an exception.\n\nA currency string is a localised name or symbol\nrepresenting a currency in a locale-specific manner.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.currency_strings!/3","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`\n\n* `currency_status` is `:all`, `:current`, `:historic`,\n  `unannotated` or `:tender`; or a list of one or more status.\n  The default is `:all`. See `Cldr.Currency.currency_filter/2`.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings!/3-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.currency_strings!/3","doc":"* `{:ok, currency_string_map}` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings!/3-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.currency_strings!/3","doc":"MyApp.Cldr.Currency.currency_strings!(\"en\")\n    => %{\n      \"mexican silver pesos\" => :MXP,\n      \"sudanese dinar\" => :SDD,\n      \"bad\" => :BAD,\n      \"rsd\" => :RSD,\n      \"swazi lilangeni\" => :SZL,\n      \"zairean new zaire\" => :ZRN,\n      \"guyanaese dollars\" => :GYD,\n      \"equatorial guinean ekwele\" => :GQE,\n      ...\n     }","ref":"Bonfire.Common.Localise.Cldr.Currency.html#currency_strings!/3-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.current_currency_from_locale/1","doc":"Returns the current currency for a given locale.\n\nThis function does not consider the `U` extenion\nparameters `cu` or `rg`. It is recommended to us\n`Cldr.Currency.currency_from_locale/1` in most\ncircumstances.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_currency_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.current_currency_from_locale/1","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_currency_from_locale/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.current_currency_from_locale/1","doc":"iex> MyApp.Cldr.Currency.current_currency_from_locale(\"en\")\n    :USD\n\n    iex> MyApp.Cldr.Currency.current_currency_from_locale(\"en-AU\")\n    :AUD","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_currency_from_locale/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.current_territory_currencies/0","doc":"Returns a mapping from a territory code to its\ncurrent currency code.\n\nIf a territory has no current currency (like\nAntartica, territory code `:AQ`) then no\nmapping is returned for that territory.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_territory_currencies/0"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.current_territory_currencies/0","doc":"* A map of `{territory_code => Cldr.Currency.t}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_territory_currencies/0-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.current_territory_currencies/0","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.current_territory_currencies()","ref":"Bonfire.Common.Localise.Cldr.Currency.html#current_territory_currencies/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.known_currencies/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currencies/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.known_currency?/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency?/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.known_currency_code/1","doc":"Returns a 2-tuple indicating if the supplied currency code is known.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.known_currency_code/1","doc":"* `currency_code` is a `binary` or `atom` representing an ISO4217\n  currency code","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.known_currency_code/1","doc":"* `{:ok, currency_code}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.known_currency_code/1","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_code(\"AUD\")\n    {:ok, :AUD}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_code(\"GGG\")\n    {:error, {Cldr.UnknownCurrencyError, \"The currency \\\"GGG\\\" is invalid\"}}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.known_currency_code?/1","doc":"Returns a boolean indicating if the supplied currency code is known.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code?/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.known_currency_code?/1","doc":"* `currency_code` is a `binary` or `atom` representing an ISO4217\n  currency code","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code?/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.known_currency_code?/1","doc":"* `true` or `false`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code?/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.known_currency_code?/1","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_code?(\"AUD\")\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_code?(\"GGG\")\n    false\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_code?(:XCV)\n    false","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_code?/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.known_currency_codes/0","doc":"Returns a list of all known currency codes.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_codes/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.known_currency_codes/0","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.known_currency_codes()","ref":"Bonfire.Common.Localise.Cldr.Currency.html#known_currency_codes/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.new/2","doc":"Returns a `Currency` struct created from the arguments.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#new/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.new/2","doc":"* `currency` is a private use currency code in a format defined by\n  [ISO4217](https://en.wikipedia.org/wiki/ISO_4217)\n  which is `X` followed by two alphanumeric characters.\n\n* `options` is a map of options representing the optional elements of\n  the `Cldr.Currency.t` struct.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#new/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Currency.new/2","doc":"* `:name` is the name of the currency. Required.\n* `:digits` is the precision of the currency. Required.\n* `:symbol` is the currency symbol. Optional.\n* `:narrow_symbol` is an alternative narrow symbol. Optional.\n* `:round_nearest` is the rounding precision such as `0.05`. Optional.\n* `:alt_code` is an alternative currency code for application use.\n* `:cash_digits` is the precision of the currency when used as cash. Optional.\n* `:cash_rounding_nearest` is the rounding precision when used as cash\n  such as `0.05`. Optional.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#new/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.new/2","doc":"* `{:ok, Cldr.Currency.t}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#new/2-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.new/2","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.new(:XAE, name: \"Custom Name\", digits: 0)\n    {:ok,\n     %Cldr.Currency{\n       alt_code: :XAE,\n       cash_digits: 0,\n       cash_rounding: nil,\n       code: :XAE,\n       count: %{other: \"Custom Name\"},\n       digits: 0,\n       from: nil,\n       iso_digits: 0,\n       name: \"Custom Name\",\n       narrow_symbol: nil,\n       rounding: 0,\n       symbol: \"XAE\",\n       tender: false,\n       to: nil\n     }}\n    iex> MyApp.Cldr.Currency.new(:XAH, name: \"Custom Name\")\n    {:error, \"Required options are missing. Required options are [:name, :digits]\"}\n    iex> Bonfire.Common.Localise.Cldr.Currency.new(:XAE, name: \"XAE\", digits: 0)\n    {:error, {Cldr.CurrencyAlreadyDefined, \"Currency :XAE is already defined.\"}}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#new/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.pluralize/3","doc":"Returns the appropriate currency display name for the `currency`, based\non the plural rules in effect for the `locale`.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#pluralize/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.pluralize/3","doc":"* `number` is an integer, float or `Decimal`\n\n* `currency` is any currency returned by `Cldr.Currency.known_currencies/0`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Currency.html#pluralize/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Currency.pluralize/3","doc":"* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`. The\n  default is `Bonfire.Common.Localise.Cldr.get_locale/0`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#pluralize/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.pluralize/3","doc":"* `{:ok, plural_string}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#pluralize/3-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Currency.pluralize/3","doc":"iex> Bonfire.Common.Localise.Cldr.Currency.pluralize(1, :USD)\n    {:ok, \"US dollar\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.pluralize(3, :USD)\n    {:ok, \"US dollars\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.pluralize(12, :USD, locale: \"zh\")\n    {:ok, \"美元\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.pluralize(12, :USD, locale: \"fr\")\n    {:ok, \"dollars des États-Unis\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Currency.pluralize(1, :USD, locale: \"fr\")\n    {:ok, \"dollar des États-Unis\"}","ref":"Bonfire.Common.Localise.Cldr.Currency.html#pluralize/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Currency.strings_for_currency/2","doc":"Returns the strings associated with a currency\nin a given locale.","ref":"Bonfire.Common.Localise.Cldr.Currency.html#strings_for_currency/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Currency.strings_for_currency/2","doc":"* `currency` is an ISO4217 currency code\n\n* `locale` is any valid locale name returned by `MyApp.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `MyApp.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#strings_for_currency/2-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Currency.strings_for_currency/2","doc":"* A list of strings or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Currency.html#strings_for_currency/2-returns"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Currency.strings_for_currency/2","doc":"iex> MyApp.Cldr.Currency.strings_for_currency(:AUD, \"en\")\n    [\"a$\", \"australian dollars\", \"aud\", \"australian dollar\"]","ref":"Bonfire.Common.Localise.Cldr.Currency.html#strings_for_currency/2-example"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Date","doc":"","ref":"Bonfire.Common.Localise.Cldr.Date.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Date.to_string/2","doc":"Formats a date according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html)","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Date.to_string/2","doc":"* `date` is a `%Date{}` struct or any map that contains the keys\n  `year`, `month`, `day` and `calendar`\n\n* `options` is a keyword list of options for formatting.  The valid options are:","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Date.to_string/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string.\n    The default is `:medium`.\n\n  * `locale:` any locale returned by `Cldr.known_locale_names/1`.\n    The default is `Cldr.get_locale()`.\n\n  * `number_system:` a number system into which the formatted date digits\n    should be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Date.to_string/2","doc":"* `{:ok, formatted_string}` or\n\n* `{:error, reason}`","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Date.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], format: :medium, locale: \"en\"\n    {:ok, \"Jul 10, 2017\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], locale: \"en\"\n    {:ok, \"Jul 10, 2017\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], format: :full, locale: \"en\"\n    {:ok, \"Monday, July 10, 2017\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], format: :short, locale: \"en\"\n    {:ok, \"7/10/17\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], format: :short, locale: \"fr\"\n    {:ok, \"10/07/2017\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string ~D[2017-07-10], format: :long, locale: \"af\"\n    {:ok, \"10 Julie 2017\"}","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Date.to_string!/2","doc":"Formats a date according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html).","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Date.to_string!/2","doc":"* `date` is a `%Date{}` struct or any map that contains the keys\n  `year`, `month`, `day` and `calendar`.\n\n* `options` is a keyword list of options for formatting.","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Date.to_string!/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string.\n    The default is `:medium`.\n\n  * `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n    or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`.\n\n  * `number_system:` a number system into which the formatted date digits should\n    be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Date.to_string!/2","doc":"* `formatted_date` or\n\n* raises an exception.","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Date.to_string!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], format: :medium, locale: \"en\"\n    \"Jul 10, 2017\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], locale: \"en\"\n    \"Jul 10, 2017\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], format: :full,locale: \"en\"\n    \"Monday, July 10, 2017\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], format: :short, locale: \"en\"\n    \"7/10/17\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], format: :short, locale: \"fr\"\n    \"10/07/2017\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.to_string! ~D[2017-07-10], format: :long, locale: \"af\"\n    \"10 Julie 2017\"","ref":"Bonfire.Common.Localise.Cldr.Date.html#to_string!/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Date.Interval","doc":"Interval formats allow for software to format intervals like \"Jan 10-12, 2008\" as a\nshorter and more natural format than \"Jan 10, 2008 - Jan 12, 2008\". They are designed\nto take a start and end date, time or datetime plus a formatting pattern\nand use that information to produce a localized format.\n\nSee `Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3` and `Bonfire.Common.Localise.Cldr.Interval.to_string/3`","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Date.Interval.do_to_string!/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#do_to_string!/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"Returns a interval formed from two dates as\na localised string.","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"* `from` is any map that conforms to the\n  `Calendar.date` type.\n\n* `to` is any map that conforms to the\n  `Calendar.date` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone date.","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The\n  alternatives are `:date`, `:month_and_day`, `:month`\n  and `:year_and_month`. The default is `:date`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"* For more information on interval format string\n  see the `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Date.Interval.to_string/3","doc":"iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-12-31]\n    {:ok, \"Jan 1 – Dec 31, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-01-12]\n    {:ok, \"Jan 1 – 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :long\n    {:ok, \"Wed, Jan 1 – Sun, Jan 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-12-01],\n    ...> format: :long, style: :year_and_month\n    {:ok, \"January – December 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :short\n    {:ok, \"1/1/2020 – 1/12/2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :long, locale: \"fr\"\n    {:ok, \"mer. 1 – dim. 12 janv. 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :long, locale: \"th\", number_system: :thai\n    {:ok, \"พ. ๑ ม.ค. – อา. ๑๒ ม.ค. ๒๐๒๐\"}","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"Returns a interval formed from two dates as\na localised string.","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"* `from` is any map that conforms to the\n  `Calendar.date` type.\n\n* `to` is any map that conforms to the\n  `Calendar.date` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone date.","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The\n  alternatives are `:date`, `:month_and_day`, `:month`\n  and `:year_and_month`. The default is `:date`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"* `string` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"* For more information on interval format string\n  see the `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Date.Interval.to_string!/3","doc":"iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-12-31])\n    \"Jan 1 – Dec 31, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-01-12])\n    \"Jan 1 – 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-01-12]),\n    ...> format: :long\n    \"Wed, Jan 1 – Sun, Jan 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-12-01]),\n    ...> format: :long, style: :year_and_month\n    \"January – December 2020\"\n\n    iex> use CalendarInterval\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! ~I\"2020-01/12\"\n    \"Jan 1 – Dec 31, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-01-12]),\n    ...> format: :short\n    \"1/1/2020 – 1/12/2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Date.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-01-12]),\n    ...> format: :long, locale: \"fr\"\n    \"mer. 1 – dim. 12 janv. 2020\"","ref":"Bonfire.Common.Localise.Cldr.Date.Interval.html#to_string!/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.DateTime","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.to_string/2","doc":"Formats a DateTime according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html)","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.to_string/2","doc":"* `datetime` is a `%DateTime{}` `or %NaiveDateTime{}`struct or any map that contains the keys\n  `:year`, `:month`, `:day`, `:calendar`. `:hour`, `:minute` and `:second` with optional\n  `:microsecond`.\n\n* `options` is a keyword list of options for formatting.","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.to_string/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string or\n    any of the keys returned by `Cldr.DateTime.available_format_names`.\n    The default is `:medium`\n\n  * `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n    or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n  * `number_system:` a number system into which the formatted date digits should\n    be transliterated\n\n  * `era: :variant` will use a variant for the era is one is available in the locale.\n    In the \"en\" for example, the locale `era: :variant` will return \"BCE\" instead of \"BC\".\n\n  * `period: :variant` will use a variant for the time period and flexible time period if\n    one is available in the locale.  For example, in the \"en\" locale `period: :variant` will\n    return \"pm\" instead of \"PM\"","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.DateTime.to_string/2","doc":"* `{:ok, formatted_datetime}` or\n\n* `{:error, reason}`","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.to_string/2","doc":"iex> {:ok, datetime} = DateTime.from_naive(~N[2000-01-01 23:59:59.0], \"Etc/UTC\")\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime\n    {:ok, \"Jan 1, 2000, 11:59:59 PM\"}\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime, locale: \"en\"\n    {:ok, \"Jan 1, 2000, 11:59:59 PM\"}\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime, format: :long, locale: \"en\"\n    {:ok, \"January 1, 2000, 11:59:59 PM UTC\"}\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime, format: :hms, locale: \"en\"\n    {:ok, \"11:59:59 PM\"}\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime, format: :full, locale: \"en\"\n    {:ok, \"Saturday, January 1, 2000, 11:59:59 PM GMT\"}\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string datetime, format: :full, locale: \"fr\"\n    {:ok, \"samedi 1 janvier 2000, 23:59:59 UTC\"}","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.to_string!/2","doc":"Formats a DateTime according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html)\nreturning a formatted string or raising on error.","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.to_string!/2","doc":"* `datetime` is a `%DateTime{}` `or %NaiveDateTime{}`struct or any map that contains the keys\n  `:year`, `:month`, `:day`, `:calendar`. `:hour`, `:minute` and `:second` with optional\n  `:microsecond`.\n\n* `options` is a keyword list of options for formatting.","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.to_string!/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string or\n    any of the keys returned by `Cldr.DateTime.available_format_names` or a format string.\n    The default is `:medium`.\n\n  * `:date_format` is any one of `:short`, `:medium`, `:long`, `:full`. If defined,\n    this option is used to format the date part of the date time. This option is\n    only acceptable if the `:format` option is not specified, or is specified as either\n    `:short`, `:medium`, `:long`, `:full`. If `:date_format` is not specified\n    then the date format is defined by the `:format` option.\n\n  * `:time_format` is any one of `:short`, `:medium`, `:long`, `:full`. If defined,\n    this option is used to format the time part of the date time. This option is\n    only acceptable if the `:format` option is not specified, or is specified as either\n    `:short`, `:medium`, `:long`, `:full`. If `:time_format` is not specified\n    then the time format is defined by the `:format` option.\n\n  * `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n    or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`.\n\n  * `number_system:` a number system into which the formatted date digits should\n    be transliterated.\n\n  * `era: :variant` will use a variant for the era is one is available in the locale.\n    In the \"en\" for example, the locale `era: :variant` will return \"BCE\" instead of \"BC\".\n\n  * `period: :variant` will use a variant for the time period and flexible time period if\n    one is available in the locale.  For example, in the \"en\" locale `period: :variant` will\n    return \"pm\" instead of \"PM\".","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.DateTime.to_string!/2","doc":"* `formatted_datetime` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.to_string!/2","doc":"iex> {:ok, datetime} = DateTime.from_naive(~N[2000-01-01 23:59:59.0], \"Etc/UTC\")\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string! datetime, locale: \"en\"\n    \"Jan 1, 2000, 11:59:59 PM\"\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string! datetime, format: :long, locale: \"en\"\n    \"January 1, 2000, 11:59:59 PM UTC\"\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string! datetime, format: :full, locale: \"en\"\n    \"Saturday, January 1, 2000, 11:59:59 PM GMT\"\n    iex> Bonfire.Common.Localise.Cldr.DateTime.to_string! datetime, format: :full, locale: \"fr\"\n    \"samedi 1 janvier 2000, 23:59:59 UTC\"","ref":"Bonfire.Common.Localise.Cldr.DateTime.html#to_string!/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.DateTime.Format","doc":"Manages the Date, TIme and DateTime formats\ndefined by CLDR.\n\nThe functions in `Cldr.DateTime.Format` are\nprimarily concerned with encapsulating the\ndata from CLDR in functions that are used\nduring the formatting process.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.calendars_for/1","doc":"Returns a list of calendars defined for a given locale.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#calendars_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.calendars_for/1","doc":"* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct. The default is `Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#calendars_for/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.DateTime.Format.calendars_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.calendars_for(:en)\n    {:ok, [:buddhist, :chinese, :coptic, :dangi, :ethiopic, :ethiopic_amete_alem,\n     :generic, :gregorian, :hebrew, :indian, :islamic, :islamic_civil,\n     :islamic_rgsa, :islamic_tbla, :islamic_umalqura, :japanese, :persian, :roc]}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#calendars_for/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_formats/2","doc":"Returns a map of the standard date formats for a given locale and calendar.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`.\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_formats/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_formats(:en)\n    {:ok, %Cldr.Date.Formats{\n      full: \"EEEE, MMMM d, y\",\n      long: \"MMMM d, y\",\n      medium: \"MMM d, y\",\n      short: \"M/d/yy\"\n    }}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_formats(:en, :buddhist)\n    {:ok, %Cldr.Date.Formats{\n      full: \"EEEE, MMMM d, y G\",\n      long: \"MMMM d, y G\",\n      medium: \"MMM d, y G\",\n      short: \"M/d/y GGGGG\"\n    }}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_formats/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_at_formats/2","doc":"Returns a map of the standard datetime \"at\" formats for a given\nlocale and calendar.\n\nAn \"at\" format is one where the datetime is formatted with the\ndate part separated from the time part by a localized version\nof \"at\".","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_at_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_at_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`.\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`,","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_at_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_at_formats/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_at_formats(:en)\n    {:ok, %Cldr.DateTime.Formats{\n      full: \"{1} 'at' {0}\",\n      long: \"{1} 'at' {0}\",\n      medium: \"{1}, {0}\",\n      short: \"{1}, {0}\"}\n    }\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_at_formats(:en, :buddhist)\n    {:ok, %Cldr.DateTime.Formats{\n      full: \"{1} 'at' {0}\",\n      long: \"{1} 'at' {0}\",\n      medium: \"{1}, {0}\",\n      short: \"{1}, {0}\"}\n    }","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_at_formats/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_available_formats/2","doc":"Returns a map of the available non-standard datetime formats for a\ngiven locale and calendar.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_available_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_available_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag.t()`\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\nThe default is `:gregorian`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_available_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_available_formats/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_available_formats \"en\"\n    {\n      :ok,\n      %{\n        d: \"d\",\n        h: \"h a\",\n        hm: \"h:mm a\",\n        hms: \"h:mm:ss a\",\n        hmsv: \"h:mm:ss a v\",\n        hmv: \"h:mm a v\",\n        ms: \"mm:ss\",\n        y: \"y\",\n        yw: %{one: \"'week' w 'of' Y\", other: \"'week' w 'of' Y\"},\n        Bh: \"h B\",\n        Bhm: \"h:mm B\",\n        Bhms: \"h:mm:ss B\",\n        E: \"ccc\",\n        EBhm: \"E h:mm B\",\n        EBhms: \"E h:mm:ss B\",\n        EHm: \"E HH:mm\",\n        EHms: \"E HH:mm:ss\",\n        Ed: \"d E\",\n        Ehm: \"E h:mm a\",\n        Ehms: \"E h:mm:ss a\",\n        Gy: \"y G\",\n        GyMMM: \"MMM y G\",\n        GyMMMEd: \"E, MMM d, y G\",\n        GyMMMd: \"MMM d, y G\",\n        GyMd: \"M/d/y G\",\n        H: \"HH\",\n        Hm: \"HH:mm\",\n        Hms: \"HH:mm:ss\",\n        Hmsv: \"HH:mm:ss v\",\n        Hmv: \"HH:mm v\",\n        M: \"L\",\n        MEd: \"E, M/d\",\n        MMM: \"LLL\",\n        MMMEd: \"E, MMM d\",\n        MMMMW: %{one: \"'week' W 'of' MMMM\", other: \"'week' W 'of' MMMM\"},\n        MMMMd: \"MMMM d\",\n        MMMd: \"MMM d\",\n        Md: \"M/d\",\n        yM: \"M/y\",\n        yMEd: \"E, M/d/y\",\n        yMMM: \"MMM y\",\n        yMMMEd: \"E, MMM d, y\",\n        yMMMM: \"MMMM y\",\n        yMMMd: \"MMM d, y\",\n        yMd: \"M/d/y\",\n        yQQQ: \"QQQ y\",\n        yQQQQ: \"QQQQ y\"\n      }\n    }","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_available_formats/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_formats/2","doc":"Returns a map of the standard datetime formats for a given locale and calendar.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`.\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_formats/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_formats(:en)\n    {:ok, %Cldr.DateTime.Formats{\n      full: \"{1}, {0}\",\n      long: \"{1}, {0}\",\n      medium: \"{1}, {0}\",\n      short: \"{1}, {0}\"\n    }}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_formats(:en, :buddhist)\n    {:ok, %Cldr.DateTime.Formats{\n      full: \"{1}, {0}\",\n      long: \"{1}, {0}\",\n      medium: \"{1}, {0}\",\n      short: \"{1}, {0}\"\n    }}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_formats/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_fallback/2","doc":"Returns the fallback format for a given\nlocale and calendar type","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_fallback/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_fallback/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag.t()`\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_fallback/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_fallback/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_fallback :en, :gregorian\n    [0, \" – \", 1]","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_fallback/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_formats/2","doc":"Returns a map of the interval formats for a\ngiven locale and calendar.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag.t/0`\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.date_time_interval_formats/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#date_time_interval_formats/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for/2","doc":"Returns the time period for a given time of day.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#day_period_for/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for/2","doc":"* `time` is any `Time.t` or a map with at least `:hour`,\n  `:minute` and `:second` keys\n\n* `language` is a binary representation of a valid and\n  configured language in `Cldr`\n\nThe time period is a locale-specific key that is used\nto localise a time into a textual representation of \"am\",\n\"pm\", \"noon\", \"midnight\", \"evening\", \"morning\" and so on\nas defined in the CLDR day period rules.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#day_period_for/2-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for ~T[06:05:54.515228], :en\n    :morning1\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for ~T[13:05:54.515228], :en\n    :afternoon1\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for ~T[21:05:54.515228], :en\n    :night1\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.day_period_for ~T[21:05:54.515228], :fr\n    :evening1","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#day_period_for/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_format/1","doc":"Returns the GMT offset format list for a\nfor a timezone offset for a given locale.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_format/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_format/1","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_format/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_format/1","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_format :en\n    {:ok, [\"GMT\", 0]}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_format/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_zero_format/1","doc":"Returns the GMT format string for a\nfor a timezone with an offset of zero for\na given locale.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_zero_format/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_zero_format/1","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_zero_format/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_zero_format/1","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_zero_format :en\n    {:ok, \"GMT\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.gmt_zero_format :fr\n    {:ok, \"UTC\"}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#gmt_zero_format/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.hour_format/1","doc":"Returns the positive and negative hour format\nfor a timezone offset for a given locale.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#hour_format/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.hour_format/1","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#hour_format/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.DateTime.Format.hour_format/1","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.hour_format \"en\"\n    {:ok, {\"+HH:mm\", \"-HH:mm\"}}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#hour_format/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight?/1","doc":"Returns a boolean indicating is a given language defines the\nnotion of \"noon\" and \"midnight\"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#language_has_noon_and_midnight?/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight?/1","doc":"* `language` is a binary representation of a valid and\n  configured language in `Cldr`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#language_has_noon_and_midnight?/1-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight?/1","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight? :fr\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight? :en\n    true\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.language_has_noon_and_midnight? :af\n    false","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#language_has_noon_and_midnight?/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.time_formats/2","doc":"Returns a map of the standard time formats for a given locale and calendar.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#time_formats/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Format.time_formats/2","doc":"* `locale` is any locale returned by `Cldr.known_locale_names/0`.\n\n* `calendar` is any calendar returned by `Cldr.DateTime.Format.calendars_for/1`\n  The default is `:gregorian`.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#time_formats/2-arguments"},{"type":"function","title":"Examples: - Bonfire.Common.Localise.Cldr.DateTime.Format.time_formats/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Format.time_formats(:en)\n    {:ok, %Cldr.Time.Formats{\n      full: \"h:mm:ss a zzzz\",\n      long: \"h:mm:ss a z\",\n      medium: \"h:mm:ss a\",\n      short: \"h:mm a\"\n    }}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Format.time_formats(:en, :buddhist)\n    {:ok, %Cldr.Time.Formats{\n      full: \"h:mm:ss a zzzz\",\n      long: \"h:mm:ss a z\",\n      medium: \"h:mm:ss a\",\n      short: \"h:mm a\"\n    }}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#time_formats/2-examples"},{"type":"type","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.calendar/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#t:calendar/0"},{"type":"type","title":"Bonfire.Common.Localise.Cldr.DateTime.Format.formats/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Format.html#t:formats/0"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.DateTime.Formatter","doc":"Implements the compilation and execution of\ndate, time and datetime formats.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.format/4","doc":"Returns the formatted and localised date, time or datetime\nfor a given `Date`, `Time`, `DateTime` or struct with the\nappropriate fields.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html#format/4"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Formatter.format/4","doc":"* `date` is a `Date`, `Time`, `DateTime` or other struct that\ncontains the required date and time fields.\n\n* `format` is a valid format string, for example `yy/MM/dd hh:MM`\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct. The default is `Cldr.get_locale/0`\n\n* `options` is a keyword list of options.  The valid options are:","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html#format/4-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.Formatter.format/4","doc":"* `:number_system`.  The resulting formatted and localised date/time\nstring will be transliterated into this number system. Number system\nis anything returned from `Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1`\n\n*NOTE* This function is called by `Cldr.Date.to_string/2`, `Cldr.Time.to_string/2`\nand `Cldr.DateTime.to_string/2` which is the preferred API.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html#format/4-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Formatter.format/4","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Formatter.format ~U[2017-09-03 10:23:00.0Z], \"yy/MM/dd hh:MM\", \"en\"\n    {:ok, \"17/09/03 10:09\"}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html#format/4-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.gmt_tz_format/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Formatter.html#gmt_tz_format/3"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.DateTime.Interval","doc":"Interval formats allow for software to format intervals like \"Jan 10-12, 2008\" as a\nshorter and more natural format than \"Jan 10, 2008 - Jan 12, 2008\". They are designed\nto take a start and end date, time or datetime plus a formatting pattern\nand use that information to produce a localized format.\n\nSee `Cldr.Interval.to_string/3` and `Cldr.DateTime.Interval.to_string/3`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Interval.do_to_string/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#do_to_string/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Interval.do_to_string!/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#do_to_string!/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"Returns a string representing the formatted\ninterval formed by two dates.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"* `from` is any map that conforms to the\n  `Calendar.datetime` type.\n\n* `to` is any map that conforms to the\n  `Calendar.datetime` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone datetime.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"* `CalendarInterval` support requires adding the\n  dependency [calendar_interval](https://hex.pm/packages/calendar_interval)\n  to the `deps` configuration in `mix.exs`.\n\n* For more information on interval format string\n  see the `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string/3","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string ~U[2020-01-01 00:00:00.0Z],\n    ...> ~U[2020-12-31 10:00:00.0Z]\n    {:ok, \"Jan 1, 2020, 12:00:00 AM – Dec 31, 2020, 10:00:00 AM\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string ~U[2020-01-01 00:00:00.0Z], nil\n    {:ok, \"Jan 1, 2020, 12:00:00 AM –\"}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"Returns a string representing the formatted\ninterval formed by two dates or raises an\nexception.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"* `from` is any map that conforms to the\n  `Calendar.datetime` type.\n\n* `to` is any map that conforms to the\n  `Calendar.datetime` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone datetime.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"* `string` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"* For more information on interval format string\n  see the `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date is formatted instead of an interval.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string!/3","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Interval.to_string! ~U[2020-01-01 00:00:00.0Z],\n    ...> ~U[2020-12-31 10:00:00.0Z]\n    \"Jan 1, 2020, 12:00:00 AM – Dec 31, 2020, 10:00:00 AM\"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Interval.html#to_string!/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.DateTime.Relative","doc":"","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string/2","doc":"Returns a `{:ok, string}` representing a relative time (ago, in) for a given\nnumber, Date or Datetime.  Returns `{:error, reason}` when errors are detected.\n\n* `relative` is a number or Date/Datetime representing the time distance from `now` or from\n  options[:relative_to]\n\n* `options` is a `Keyword` list of options which are:","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string/2"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string/2","doc":"* `:locale` is the locale in which the binary is formatted.\n  The default is `Cldr.get_locale/0`\n\n* `:style` is the style of the binary.  Style may be `:default`, `:narrow` or `:short`\n\n* `:unit` is the time unit for the formatting.  The allowable units are `:second`, `:minute`,\n  `:hour`, `:day`, `:week`, `:month`, `:year`, `:mon`, `:tue`, `:wed`, `:thu`, `:fri`, `:sat`,\n  `:sun`, `:quarter`\n\n* `:relative_to` is the baseline Date or Datetime from which the difference from `relative` is\n  calculated when `relative` is a Date or a DateTime. The default for a Date is `Date.utc_today`,\n  for a DateTime it is `DateTime.utc_now`\n\n#","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string/2-options"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string/2","doc":"When `options[:unit]` is not specified, `MyApp.Cldr.DateTime.Relative.to_string/2`\nattempts to identify the appropriate unit based upon the magnitude of `relative`.\nFor example, given a parameter of less than `60`, then `to_string/2` will\nassume `:seconds` as the unit.  See `unit_from_relative_time/1`.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(-1)\n    {:ok, \"1 second ago\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1)\n    {:ok, \"in 1 second\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1, unit: :day)\n    {:ok, \"tomorrow\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1, unit: :day, locale: \"fr\")\n    {:ok, \"demain\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1, unit: :day, style: :narrow)\n    {:ok, \"tomorrow\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1234, unit: :year)\n    {:ok, \"in 1,234 years\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(1234, unit: :year, locale: \"fr\")\n    {:ok, \"dans 1 234 ans\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(31)\n    {:ok, \"in 31 seconds\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(~D[2017-04-29], relative_to: ~D[2017-04-26])\n    {:ok, \"in 3 days\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(310, style: :short, locale: \"fr\")\n    {:ok, \"dans 5 min\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(310, style: :narrow, locale: \"fr\")\n    {:ok, \"+5 min\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string 2, unit: :wed, style: :short, locale: \"en\"\n    {:ok, \"in 2 Wed.\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string 1, unit: :wed, style: :short\n    {:ok, \"next Wed.\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string -1, unit: :wed, style: :short\n    {:ok, \"last Wed.\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string -1, unit: :wed\n    {:ok, \"last Wednesday\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string -1, unit: :quarter\n    {:ok, \"last quarter\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string -1, unit: :mon, locale: \"fr\"\n    {:ok, \"lundi dernier\"}\n\n    iex> Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string(~D[2017-04-29], unit: :ziggeraut)\n    {:error, {Cldr.UnknownTimeUnit,\n     \"Unknown time unit :ziggeraut.  Valid time units are [:day, :fri, :hour, :minute, :mon, :month, :quarter, :sat, :second, :sun, :thu, :tue, :wed, :week, :year]\"}}","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string!/2","doc":"Returns a `{:ok, string}` representing a relative time (ago, in) for a given\nnumber, Date or Datetime or raises an exception on error.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string!/2","doc":"* `relative` is a number or Date/Datetime representing the time distance from `now` or from\n  options[:relative_to].\n\n* `options` is a `Keyword` list of options.","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.DateTime.Relative.to_string!/2","doc":"* `:locale` is the locale in which the binary is formatted.\n  The default is `Cldr.get_locale/0`\n\n* `:style` is the format of the binary.  Style may be `:default`, `:narrow` or `:short`.\n  The default is `:default`\n\n* `:unit` is the time unit for the formatting.  The allowable units are `:second`, `:minute`,\n  `:hour`, `:day`, `:week`, `:month`, `:year`, `:mon`, `:tue`, `:wed`, `:thu`, `:fri`, `:sat`,\n  `:sun`, `:quarter`\n\n* `:relative_to` is the baseline Date or Datetime from which the difference from `relative` is\n  calculated when `relative` is a Date or a DateTime. The default for a Date is `Date.utc_today`,\n  for a DateTime it is `DateTime.utc_now`\n\nSee `to_string/2`","ref":"Bonfire.Common.Localise.Cldr.DateTime.Relative.html#to_string!/2-options"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Interval","doc":"Interval formats allow for software to format intervals like \"Jan 10-12, 2008\" as a\nshorter and more natural format than \"Jan 10, 2008 - Jan 12, 2008\". They are designed\nto take a start and end date, time or datetime plus a formatting pattern\nand use that information to produce a localized format.\n\nThe interval functions in this library will determine the calendar\nfield with the greatest difference between the two datetimes before using the\nformat pattern.\n\nFor example, the greatest difference in \"Jan 10-12, 2008\" is the day field, while\nthe greatest difference in \"Jan 10 - Feb 12, 2008\" is the month field. This is used to\npick the exact pattern to be used.\n\nSee `Cldr.Interval` for further detail.","ref":"Bonfire.Common.Localise.Cldr.Interval.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"Returns a `Date.Range` or `CalendarInterval` as\na localised string.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"* `range` is either a `Date.Range.t` returned from `Date.range/2`\n  or a `CalendarInterval.t`\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date | :time | nil]`.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The valid\n  styles depends on whether formatting is for a date, time or datetime.\n  Since the functions in this module will make a determination as\n  to which formatter to be used based upon the data passed to them\n  it is recommended the style option be omitted. If a style is important\n  then call `to_string/3` directly on `Cldr.Date.Interval`, `Cldr.Time.Interval`\n  or `Cldr.DateTime.Interval`.\n\n  * For a date the alternatives are `:date`, `:month_and_day`, `:month`\n    and `:year_and_month`. The default is `:date`.\n\n  * For a time the alternatives are `:time`, `:zone` and\n    `:flex`. The default is `:time`\n\n  * For a datetime there are no style options, the default\n    for each of the date and time part is used\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"* `to_string/2` will decide which formatter to call based upon\n  the arguments provided to it.\n\n  * A `Date.Range.t` will call `Cldr.Date.Interval.to_string/3`\n\n  * A `CalendarInterval` will call `Cldr.Date.Interval.to_string/3`\n    if its `:precision` is `:year`, `:month` or `:day`. Othersie\n    it will call `Cldr.Time.Interval.to_string/3`\n\n  * If `from` and `to` both conform to the `Calendar.datetime()`\n    type then `Cldr.DateTime.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.date()`\n    type then `Cldr.Date.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.time()`\n    type then `Cldr.Time.Interval.to_string/3` is called\n\n* `CalendarInterval` support requires adding the\n  dependency [calendar_interval](https://hex.pm/packages/calendar_interval)\n  to the `deps` configuration in `mix.exs`.\n\n* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date, time or datetime is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Interval.to_string/2","doc":"iex> use CalendarInterval\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~I\"2020-01-01/12\",\n    ...> format: :long\n    {:ok, \"Wed, Jan 1 – Sun, Jan 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string Date.range(~D[2020-01-01], ~D[2020-12-31]),\n    ...> format: :long\n    {:ok, \"Wed, Jan 1 – Thu, Dec 31, 2020\"}","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"Returns a string representing the formatted\ninterval formed by two dates.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"* `from` is any map that conforms to the\n  any one of the `Calendar` types.\n\n* `to` is any map that conforms to the\n  any one of the `Calendar` types. `to` must\n  occur on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date | :time | nil]`.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The valid\n  styles depends on whether formatting is for a date, time or datetime.\n  Since the functions in this module will make a determination as\n  to which formatter to be used based upon the data passed to them\n  it is recommended the style option be omitted. If styling is important\n  then call `to_string/3` directly on `Cldr.Date.Interval`, `Cldr.Time.Interval`\n  or `Cldr.DateTime.Interval`.\n\n  * For a date the alternatives are `:date`, `:month_and_day`, `:month`\n    and `:year_and_month`. The default is `:date`.\n\n  * For a time the alternatives are `:time`, `:zone` and\n    `:flex`. The default is `:time`\n\n  * For a datetime there are no style options, the default\n    for each of the date and time part is used\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"* `to_string/2` will decide which formatter to call based upon\n  the arguments provided to it.\n\n  * A `Date.Range.t` will call `Cldr.Date.Interval.to_string/3`\n\n  * A `CalendarInterval` will call `Cldr.Date.Interval.to_string/3`\n    if its `:precision` is `:year`, `:month` or `:day`. Othersie\n    it will call `Cldr.Time.Interval.to_string/3`\n\n  * If `from` and `to` both conform to the `Calendar.datetime()`\n    type then `Cldr.DateTime.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.date()`\n    type then `Cldr.Date.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.time()`\n    type then `Cldr.Time.Interval.to_string/3` is called\n\n* `CalendarInterval` support requires adding the\n  dependency [calendar_interval](https://hex.pm/packages/calendar_interval)\n  to the `deps` configuration in `mix.exs`.\n\n* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date, time or datetime is formatted instead of an interval.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Interval.to_string/3","doc":"iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~D[2020-01-01], ~D[2020-12-31]\n    {:ok, \"Jan 1 – Dec 31, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~D[2020-01-01], ~D[2020-01-12]\n    {:ok, \"Jan 1 – 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :long\n    {:ok, \"Wed, Jan 1 – Sun, Jan 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~D[2020-01-01], ~D[2020-12-01],\n    ...> format: :long, style: :year_and_month\n    {:ok, \"January – December 2020\"}\n\n    iex> use CalendarInterval\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~I\"2020-01-01/12\",\n    ...> format: :long\n    {:ok, \"Wed, Jan 1 – Sun, Jan 12, 2020\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~U[2020-01-01 00:00:00.0Z], ~U[2020-12-01 10:05:00.0Z],\n    ...> format: :long\n    {:ok, \"January 1, 2020, 12:00:00 AM UTC – December 1, 2020, 10:05:00 AM UTC\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:05:00.0Z],\n    ...> format: :long\n    {:ok, \"January 1, 2020, 12:00:00 AM UTC – 10:05:00 AM UTC\"}","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"Returns a `Date.Range` or `CalendarInterval` as\na localised string or raises an exception.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"* `range` is either a `Date.Range.t` returned from `Date.range/2`\n  or a `CalendarInterval.t`\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date | :time | nil]`.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The valid\n  styles depends on whether formatting is for a date, time or datetime.\n  Since the functions in this module will make a determination as\n  to which formatter to be used based upon the data passed to them\n  it is recommended the style option be omitted. If a style is important\n  then call `to_string/3` directly on `Cldr.Date.Interval`, `Cldr.Time.Interval`\n  or `Cldr.DateTime.Interval`.\n\n  * For a date the alternatives are `:date`, `:month_and_day`, `:month`\n    and `:year_and_month`. The default is `:date`.\n\n  * For a time the alternatives are `:time`, `:zone` and\n    `:flex`. The default is `:time`.\n\n  * For a datetime there are no style options, the default\n    for each of the date and time part is used.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"* `string` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"* `to_string/3` will decide which formatter to call based upon\n  the arguments provided to it.\n\n  * A `Date.Range.t` will call `Cldr.Date.Interval.to_string/3`\n\n  * A `CalendarInterval` will call `Cldr.Date.Interval.to_string/3`\n    if its `:precision` is `:year`, `:month` or `:day`. Otherwise\n    it will call `Cldr.Time.Interval.to_string/3`\n\n  * If `from` and `to` both conform to the `Calendar.datetime()`\n    type then `Cldr.DateTime.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.date()`\n    type then `Cldr.Date.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.time()`\n    type then `Cldr.Time.Interval.to_string/3` is called\n\n* `CalendarInterval` support requires adding the\n  dependency [calendar_interval](https://hex.pm/packages/calendar_interval)\n  to the `deps` configuration in `mix.exs`.\n\n* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date, time or datetime is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Interval.to_string!/2","doc":"iex> use CalendarInterval\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~I\"2020-01-01/12\",\n    ...> format: :long\n    \"Wed, Jan 1 – Sun, Jan 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! Date.range(~D[2020-01-01], ~D[2020-12-31]),\n    ...> format: :long\n    \"Wed, Jan 1 – Thu, Dec 31, 2020\"","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"Returns a string representing the formatted\ninterval formed by two date or raises an\nexception.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"* `from` is any map that conforms to the\n  any one of the `Calendar` types.\n\n* `to` is any map that conforms to the\n  any one of the `Calendar` types. `to` must\n  occur on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :date | :time | nil]`.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The valid\n  styles depends on whether formatting is for a date, time or datetime.\n  Since the functions in this module will make a determination as\n  to which formatter to be used based upon the data passed to them\n  it is recommended the style option be omitted. If styling is important\n  then call `to_string/3` directly on `Cldr.Date.Interval`, `Cldr.Time.Interval`\n  or `Cldr.DateTime.Interval`.\n\n  * For a date the alternatives are `:date`, `:month_and_day`, `:month`\n    and `:year_and_month`. The default is `:date`.\n\n  * For a time the alternatives are `:time`, `:zone` and\n    `:flex`. The default is `:time`.\n\n  * For a datetime there are no style options, the default\n    for each of the date and time part is used.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"* `string` or\n\n* raises and exception","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"* `to_string/3` will decide which formatter to call based upon\n  the arguments provided to it.\n\n  * A `Date.Range.t` will call `Cldr.Date.Interval.to_string/3`\n\n  * A `CalendarInterval` will call `Cldr.Date.Interval.to_string/3`\n    if its `:precision` is `:year`, `:month` or `:day`. Othersie\n    it will call `Cldr.Time.Interval.to_string/3`\n\n  * If `from` and `to` both conform to the `Calendar.datetime()`\n    type then `Cldr.DateTime.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.date()`\n    type then `Cldr.Date.Interval.to_string/3` is called\n\n  * Otherwise if `from` and `to` conform to the `Calendar.time()`\n    type then `Cldr.Time.Interval.to_string/3` is called\n\n* `CalendarInterval` support requires adding the\n  dependency [calendar_interval](https://hex.pm/packages/calendar_interval)\n  to the `deps` configuration in `mix.exs`.\n\n* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configuration locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  date, time or datetime is formatted instead of an interval.","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Interval.to_string!/3","doc":"iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~D[2020-01-01], ~D[2020-12-31]\n    \"Jan 1 – Dec 31, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~D[2020-01-01], ~D[2020-01-12]\n    \"Jan 1 – 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~D[2020-01-01], ~D[2020-01-12],\n    ...> format: :long\n    \"Wed, Jan 1 – Sun, Jan 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~D[2020-01-01], ~D[2020-12-01],\n    ...> format: :long, style: :year_and_month\n    \"January – December 2020\"\n\n    iex> use CalendarInterval\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~I\"2020-01-01/12\",\n    ...> format: :long\n    \"Wed, Jan 1 – Sun, Jan 12, 2020\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~U[2020-01-01 00:00:00.0Z], ~U[2020-12-01 10:05:00.0Z],\n    ...> format: :long\n    \"January 1, 2020, 12:00:00 AM UTC – December 1, 2020, 10:05:00 AM UTC\"\n\n    iex> Bonfire.Common.Localise.Cldr.Interval.to_string! ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:05:00.0Z],\n    ...> format: :long\n    \"January 1, 2020, 12:00:00 AM UTC – 10:05:00 AM UTC\"","ref":"Bonfire.Common.Localise.Cldr.Interval.html#to_string!/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Language","doc":"","ref":"Bonfire.Common.Localise.Cldr.Language.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Language.available_languages/1","doc":"Return all the languages' iso-codes available for a given locale.\nDefaults to the current locale.","ref":"Bonfire.Common.Localise.Cldr.Language.html#available_languages/1"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Language.available_languages/1","doc":"> Bonfire.Common.Localise.Cldr.Language.Language.available_languages(:en)\n    [\"aa\", \"ab\", \"ace\", \"ach\", \"ada\", \"ady\", \"ae\", \"aeb\", \"af\", \"afh\", \"agq\", \"ain\",\n    \"ak\", \"akk\", \"akz\", \"ale\", \"aln\", \"alt\", \"am\", \"an\", \"ang\", \"anp\", \"ar\",\n    \"ar-001\", \"arc\", \"arn\", \"aro\", \"arp\", \"arq\", \"ars\", \"arw\", \"ary\", \"arz\", \"as\",\n    \"asa\", \"ase\", \"ast\", \"av\", \"avk\", \"awa\", \"ay\", \"az\", \"ba\", \"bal\", \"ban\", \"bar\",\n    \"bas\", \"bax\", \"bbc\", \"bbj\", ...]","ref":"Bonfire.Common.Localise.Cldr.Language.html#available_languages/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Language.known_languages/1","doc":"Return a map of iso-code keyed maps of language names in any available\nformats for the given locale.\nDefaults to the current locale.","ref":"Bonfire.Common.Localise.Cldr.Language.html#known_languages/1"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Language.known_languages/1","doc":"> Bonfire.Common.Localise.Cldr.Language.Language.known_languages(:en)\n    %{\"bez\" => %{standard: \"Bena\"}, \"lo\" => %{standard: \"Lao\"},\n    \"kha\" => %{standard: \"Khasi\"}, \"eo\" => %{standard: \"Esperanto\"},\n    \"rm\" => %{standard: \"Romansh\"}, \"ja\" => %{standard: \"Japanese\"},\n    \"sw-CD\" => %{standard: \"Congo Swahili\"},\n    \"pdc\" => %{standard: \"Pennsylvania German\"}, \"om\" => %{standard: \"Oromo\"},\n    \"jut\" => %{standard: \"Jutish\"}, \"lij\" => %{standard: \"Ligurian\"},\n    \"kut\" => %{standard: \"Kutenai\"}, \"vep\" => %{standard: \"Veps\"},\n    \"yao\" => %{standard: \"Yao\"}, \"gez\" => %{standard: \"Geez\"},\n    \"cr\" => %{standard: \"Cree\"}, \"ne\" => %{standard: \"Nepali\"},\n    \"zbl\" => %{standard: \"Blissymbols\"}, \"ae\" => %{standard: \"Avestan\"},\n    \"rof\" => %{standard: \"Rombo\"}, \"tkl\" => %{standard: \"Tokelau\"},\n    \"rgn\" => %{standard: \"Romagnol\"}, \"el\" => %{standard: \"Greek\"},\n    \"myv\" => %{standard: \"Erzya\"}, \"smj\" => %{standard: \"Lule Sami\"},\n    \"fo\" => %{standard: \"Faroese\"}, \"ii\" => %{standard: \"Sichuan Yi\"},\n    \"bum\" => %{standard: \"Bulu\"}, \"za\" => %{standard: \"Zhuang\"},\n    \"raj\" => %{standard: \"Rajasthani\"}, \"mrj\" => %{standard: \"Western Mari\"},\n    \"stq\" => %{standard: \"Saterland Frisian\"}, \"hu\" => %{standard: \"Hungarian\"},\n    \"mga\" => %{standard: \"Middle Irish\"}, \"bej\" => %{standard: \"Beja\"},\n    \"yue\" => %{standard: \"Cantonese\"}, \"xog\" => %{standard: \"Soga\"},\n    \"ttt\" => %{standard: \"Muslim Tat\"}, \"uga\" => %{standard: \"Ugaritic\"},\n    \"rup\" => %{standard: \"Aromanian\"},\n    \"crs\" => %{standard: \"Seselwa Creole French\"}, \"oc\" => %{standard: \"Occitan\"},\n    \"chp\" => %{standard: \"Chipewyan\"}, \"zen\" => %{standard: \"Zenaga\"},\n    \"kmb\" => %{standard: \"Kimbundu\"}, \"nr\" => %{standard: \"South Ndebele\"},\n    \"tiv\" => %{standard: \"Tiv\"}, \"aln\" => %{standard: \"Gheg Albanian\"},\n    \"sh\" => %{standard: \"Serbo-Croatian\"}, \"fil\" => %{...}, ...}","ref":"Bonfire.Common.Localise.Cldr.Language.html#known_languages/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Language.to_string/2","doc":"Try to translate the given language iso code or language tag.","ref":"Bonfire.Common.Localise.Cldr.Language.html#to_string/2"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Language.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Language.Language.to_string(\"eo\")\n    {:ok, \"Esperanto\"}","ref":"Bonfire.Common.Localise.Cldr.Language.html#to_string/2-example"},{"type":"type","title":"Bonfire.Common.Localise.Cldr.Language.styles/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Language.html#t:styles/0"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.List","doc":"Cldr backend module that formats lists.\n\nIf we have a list of days like `[\"Monday\", \"Tuesday\", \"Wednesday\"]`\nthen we can format that list for a given locale by:\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([\"Monday\", \"Tuesday\", \"Wednesday\"], locale: \"en\")\n    {:ok, \"Monday, Tuesday, and Wednesday\"}","ref":"Bonfire.Common.Localise.Cldr.List.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.intersperse/2","doc":"Intersperces a list elements into a list format according to the list\npattern rules for a locale.\n\nThis function can be helpful when creating a list from `Phoenix`\nsafe strings which are of the format `{:safe, \"some string\"}`","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.List.intersperse/2","doc":"* `list` is any list of of terms that can be passed through `Kernel.to_string/1`\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.List.intersperse/2","doc":"* `:locale` is any configured locale. See . The default\n  is `Bonfire.Common.Localise.Cldr.known_locale_names/0`.\n\n* `:format` is one of those returned by\n  `Cldr.List.known_list_formats/0`. The default is `format: :standard`","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.List.intersperse/2","doc":"iex> Bonfire.Common.Localise.Cldr.List.intersperse([\"a\", \"b\", \"c\"], locale: \"en\")\n    {:ok, [\"a\", \", \", \"b\", \", and \", \"c\"]}\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse([\"a\", \"b\", \"c\"], locale: \"en\", format: :unit_narrow)\n    {:ok, [\"a\", \" \", \"b\", \" \", \"c\"]}\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse([\"a\", \"b\", \"c\"], locale: \"fr\")\n    {:ok, [\"a\", \", \", \"b\", \" et \", \"c\"]}\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse([1,2,3,4,5,6])\n    {:ok, [1, \", \", 2, \", \", 3, \", \", 4, \", \", 5, \", and \", 6]}\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse([\"a\"])\n    {:ok, [\"a\"]}\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse([1,2])\n    {:ok, [1, \" and \", 2]}","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.intersperse/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.intersperse!/2","doc":"Formats a list using `intersperse/2` but raises if there is\nan error.","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse!/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.List.intersperse!/2","doc":"iex> Bonfire.Common.Localise.Cldr.List.intersperse!([\"a\", \"b\", \"c\"], locale: \"en\")\n    [\"a\", \", \", \"b\", \", and \", \"c\"]\n\n    iex> Bonfire.Common.Localise.Cldr.List.intersperse!([\"a\", \"b\", \"c\"], locale: \"en\", format: :unit_narrow)\n    [\"a\", \" \", \"b\", \" \", \"c\"]","ref":"Bonfire.Common.Localise.Cldr.List.html#intersperse!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.list_formats_for/1","doc":"Returns the styles of list patterns available for a locale.\n\nReturns a list of `atom`s of of the list formats that are\navailable in CLDR for a locale.","ref":"Bonfire.Common.Localise.Cldr.List.html#list_formats_for/1"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.List.list_formats_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.List.list_formats_for(:en)\n    [:or, :or_narrow, :or_short, :standard, :standard_narrow, :standard_short,\n     :unit, :unit_narrow, :unit_short]","ref":"Bonfire.Common.Localise.Cldr.List.html#list_formats_for/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.list_patterns_for/1","doc":"Returns the list patterns for a locale.\n\nList patterns provide rules for combining multiple\nitems into a language format appropriate for a locale.","ref":"Bonfire.Common.Localise.Cldr.List.html#list_patterns_for/1"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.List.list_patterns_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.List.list_patterns_for(:en)\n    %{\n      or: %{\n        2 => [0, \" or \", 1],\n        end: [0, \", or \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      or_narrow: %{\n        2 => [0, \" or \", 1],\n        end: [0, \", or \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      or_short: %{\n        2 => [0, \" or \", 1],\n        end: [0, \", or \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      standard: %{\n        2 => [0, \" and \", 1],\n        end: [0, \", and \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      standard_narrow: %{\n        2 => [0, \", \", 1],\n        end: [0, \", \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      standard_short: %{\n        2 => [0, \" & \", 1],\n        end: [0, \", & \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      unit: %{\n        2 => [0, \", \", 1],\n        end: [0, \", \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      },\n      unit_narrow: %{\n        2 => [0, \" \", 1],\n        end: [0, \" \", 1],\n        middle: [0, \" \", 1],\n        start: [0, \" \", 1]\n      },\n      unit_short: %{\n        2 => [0, \", \", 1],\n        end: [0, \", \", 1],\n        middle: [0, \", \", 1],\n        start: [0, \", \", 1]\n      }\n    }","ref":"Bonfire.Common.Localise.Cldr.List.html#list_patterns_for/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.to_string/2","doc":"Formats a list into a string according to the list pattern rules for a locale.","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.List.to_string/2","doc":"* `list` is any list of of terms that can be passed through `Kernel.to_string/1`\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.List.to_string/2","doc":"* `:locale` is any configured locale. See . The default\n  is `Bonfire.Common.Localise.Cldr.known_locale_names/0`.\n\n* `:format` is one of those returned by\n  `Cldr.List.known_list_formats/0`. The default is `format: :standard`","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.List.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.List.to_string([\"a\", \"b\", \"c\"], locale: \"en\")\n    {:ok, \"a, b, and c\"}\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([\"a\", \"b\", \"c\"], locale: \"en\", format: :unit_narrow)\n    {:ok, \"a b c\"}\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([\"a\", \"b\", \"c\"], locale: \"fr\")\n    {:ok, \"a, b et c\"}\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([1,2,3,4,5,6])\n    {:ok, \"1, 2, 3, 4, 5, and 6\"}\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([\"a\"])\n    {:ok, \"a\"}\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string([1,2])\n    {:ok, \"1 and 2\"}","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.List.to_string!/2","doc":"Formats a list using `to_string/2` but raises if there is\nan error.","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string!/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.List.to_string!/2","doc":"iex> Bonfire.Common.Localise.Cldr.List.to_string!([\"a\", \"b\", \"c\"], locale: \"en\")\n    \"a, b, and c\"\n\n    iex> Bonfire.Common.Localise.Cldr.List.to_string!([\"a\", \"b\", \"c\"], locale: \"en\", format: :unit_narrow)\n    \"a b c\"","ref":"Bonfire.Common.Localise.Cldr.List.html#to_string!/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Locale","doc":"Backend module that provides functions\nto define new locales and display human-readable\nlocale names for presentation purposes.","ref":"Bonfire.Common.Localise.Cldr.Locale.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names/1","doc":"Returns the list of fallback locale names, starting\nwith the provided locale name.\n\nFallbacks are a list of locate names which can\nbe used to resolve translation or other localization\ndata if such localised data does not exist for\nthis specific locale..","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locale_names/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names/1","doc":"* `locale_name` is any locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locale_names/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names/1","doc":"* `{:ok, list_of_locale_names}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locale_names/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names/1","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names(:\"fr-CA\")\n    {:ok, [:\"fr-CA\", :fr, :und]}\n\n    # Fallbacks are typically formed by progressively\n    # stripping variant, territory and script from the\n    # given locale name. But not always - there are\n    # certain fallbacks that take a different path.\n\n    iex> Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names(:nb)\n    {:ok, [:nb, :no, :und]}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locale_names/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.fallback_locales/1","doc":"Returns the list of fallback locales, starting\nwith the provided locale name.\n\nFallbacks are a list of locate names which can\nbe used to resolve translation or other localization\ndata if such localised data does not exist for\nthis specific locale.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locales/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.fallback_locales/1","doc":"* `locale_name` is any locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locales/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.fallback_locales/1","doc":"* `{:ok, list_of_locales}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locales/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.fallback_locales/1","doc":"Bonfire.Common.Localise.Cldr.Locale.fallback_locales(:\"fr-CA\")\n    => {:ok,\n         [#Cldr.LanguageTag , #Cldr.LanguageTag ,\n          #Cldr.LanguageTag ]}\n\n    # Fallbacks are typically formed by progressively\n    # stripping variant, territory and script from the\n    # given locale name. But not always - there are\n    # certain fallbacks that take a different path.\n\n    Bonfire.Common.Localise.Cldr.Locale.fallback_locales(:nb))\n    => {:ok,\n         [#Cldr.LanguageTag , #Cldr.LanguageTag ,\n          #Cldr.LanguageTag ]}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locales/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.locale_for_territory/1","doc":"Returns the \"best fit\" locale for a given territory.\n\nUsing the population percentage data from CLDR, the\nlanguage most commonly spoken in the given territory\nis used to form a locale name which is then validated\nagainst the given backend.\n\nFirst a territory-specific locale is validated and if\nthat fails, the base language only is validate.\n\nFor example, if the territory is `AU` then then the\nlanguage most spoken is \"en\". First, the locale \"en-AU\"\nis validated and if that fails, \"en\" is validated.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_for_territory/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.locale_for_territory/1","doc":"* `territory` is any ISO 3166 Alpha-2 territory\n  code that can be validated by `Cldr.validate_territory/1`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_for_territory/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.locale_for_territory/1","doc":"* `{:ok, language_tag}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_for_territory/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.locale_for_territory/1","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:AU)\n  Elixir.Bonfire.Common.Localise.Cldr.validate_locale(:\"en-AU\")\n\n  iex> Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:US)\n  Elixir.Bonfire.Common.Localise.Cldr.validate_locale(:\"en-US\")\n\n  iex> Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:ZZ)\n  {:error, {Cldr.UnknownTerritoryError, \"The territory :ZZ is unknown\"}}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_for_territory/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"Returns a \"best fit\" locale for a host name.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"* `host` is any valid host name\n\n* `options` is a keyword list of options. The default\n  is `[]`.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"* `:tlds` is a list of territory codes as upper-cased\n  atoms that are to be considered as top-level domains.\n  See `Cldr.Locale.locale_from_host/2` for the default\n  list.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"* `{:ok, langauge_tag}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"Certain top-level domains have become associated with content\nunderlated to the territory for who the domain is registered.\nTherefore Google (and perhaps others) do not associate these\nTLDs as belonging to the territory but rather are considered\ngeneric top-level domain names.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.locale_from_host \"a.b.com.au\"\n    Elixir.Bonfire.Common.Localise.Cldr.validate_locale(:\"en-AU\")\n\n    iex> Bonfire.Common.Localise.Cldr.Locale.locale_from_host(\"a.b.com.tv\")\n    {:error,\n     {Cldr.UnknownLocaleError, \"No locale was identified for territory \\\"tv\\\"\"}}\n\n    iex> Bonfire.Common.Localise.Cldr.Locale.locale_from_host(\"a.b.com\")\n    {:error,\n     {Cldr.UnknownLocaleError, \"No locale was identified for territory \\\"com\\\"\"}}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.new/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Locale.html#new/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.new!/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Locale.html#new!/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale/1","doc":"Returns the script direction for a locale.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#script_direction_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale/1","doc":"* `language_tag` is any language tag returned by `Cldr.Locale.new/2`\n  or any `locale_name` returned by `Cldr.known_locale_names/1`.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#script_direction_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale/1","doc":"* The script direction which is either `:ltr` (for left-to-right\n  scripts) or `:rtl` (for right-to-left scripts).","ref":"Bonfire.Common.Localise.Cldr.Locale.html#script_direction_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale \"en-US\"\n    :ltr\n\n    iex> Bonfire.Common.Localise.Cldr.Locale.script_direction_from_locale :ar\n    :rtl","ref":"Bonfire.Common.Localise.Cldr.Locale.html#script_direction_from_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.territory_from_host/1","doc":"Returns the last segment of a host that might\nbe a territory.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_host/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.territory_from_host/1","doc":"* `host` is any valid host name","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_host/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.territory_from_host/1","doc":"* `{:ok, territory}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_host/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.territory_from_host/1","doc":"iex> Cldr.Locale.territory_from_host(\"a.b.com.au\")\n    {:ok, :AU}\n\n    iex> Cldr.Locale.territory_from_host(\"a.b.com\")\n    {:error,\n     {Cldr.UnknownLocaleError, \"No locale was identified for territory \\\"com\\\"\"}}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_host/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.territory_from_locale/1","doc":"Returns the territory from a language tag or\nlocale name.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.territory_from_locale/1","doc":"* `locale` is any language tag returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new/1`\n  or a locale name in the list returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.territory_from_locale/1","doc":"* A territory code as an atom","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.territory_from_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.territory_from_locale \"en-US\"\n    :US\n\n    iex> Bonfire.Common.Localise.Cldr.Locale.territory_from_locale \"en-US-u-rg-GBzzzz\"\n    :GB","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale/1","doc":"Returns the time zone from a language tag or\nlocale name.","ref":"Bonfire.Common.Localise.Cldr.Locale.html#timezone_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale/1","doc":"* `locale` is any language tag returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new/1`\n  or a locale name in the list returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`","ref":"Bonfire.Common.Localise.Cldr.Locale.html#timezone_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale/1","doc":"* A time zone ID as a string or\n\n* `:error` if no time zone can be determined","ref":"Bonfire.Common.Localise.Cldr.Locale.html#timezone_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale \"en-US-u-tz-ausyd\"\n    \"Australia/Sydney\"","ref":"Bonfire.Common.Localise.Cldr.Locale.html#timezone_from_locale/1-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number","doc":"Formats numbers and currencies based upon CLDR's decimal formats specification.\n\nThe format specification is documentated in [Unicode TR35](http://unicode.org/reports/tr35/tr35-numbers.html#Number_Formats).\nThere are several classes of formatting including non-scientific, scientific,\nrules based (for spelling and ordinal formats), compact formats that display `1k`\nrather than `1,000` and so on.  See `Cldr.Number.to_string/2` for specific formatting\noptions.\n\n#","ref":"Bonfire.Common.Localise.Cldr.Number.html"},{"type":"module","title":"Non-Scientific Notation Formatting - Bonfire.Common.Localise.Cldr.Number","doc":"The following description applies to formats that do not use scientific\nnotation or significant digits:\n\n* If the number of actual integer digits exceeds the maximum integer digits,\n  then only the least significant digits are shown. For example, 1997 is\n  formatted as \"97\" if the maximum integer digits is set to 2.\n\n* If the number of actual integer digits is less than the minimum integer\n  digits, then leading zeros are added. For example, 1997 is formatted as\n  \"01997\" if the minimum integer digits is set to 5.\n\n* If the number of actual fraction digits exceeds the maximum fraction\n  digits, then half-even rounding it performed to the maximum fraction\n  digits. For example, 0.125 is formatted as \"0.12\" if the maximum fraction\n  digits is 2. This behavior can be changed by specifying a rounding\n  increment and a rounding mode.\n\n* If the number of actual fraction digits is less than the minimum fraction\n  digits, then trailing zeros are added. For example, 0.125 is formatted as\n  \"0.1250\" if the minimum fraction digits is set to 4.\n\n* Trailing fractional zeros are not displayed if they occur j positions after\n  the decimal, where j is less than the maximum fraction digits. For example,\n  0.10004 is formatted as \"0.1\" if the maximum fraction digits is four or\n  less.\n\n#","ref":"Bonfire.Common.Localise.Cldr.Number.html#module-non-scientific-notation-formatting"},{"type":"module","title":"Scientific Notation Formatting - Bonfire.Common.Localise.Cldr.Number","doc":"Numbers in scientific notation are expressed as the product of a mantissa and\na power of ten, for example, 1234 can be expressed as 1.234 x 10^3. The\nmantissa is typically in the half-open interval [1.0, 10.0) or sometimes\n[0.0, 1.0), but it need not be. In a pattern, the exponent character\nimmediately followed by one or more digit characters indicates scientific\nnotation. Example: \"0.###E0\" formats the number 1234 as \"1.234E3\".\n\n* The number of digit characters after the exponent character gives the\n  minimum exponent digit count. There is no maximum. Negative exponents are\n  formatted using the localized minus sign, not the prefix and suffix from\n  the pattern. This allows patterns such as \"0.###E0 m/s\". To prefix positive\n  exponents with a localized plus sign, specify '+' between the exponent and\n  the digits: \"0.###E+0\" will produce formats \"1E+1\", \"1E+0\", \"1E-1\", and so\n  on. (In localized patterns, use the localized plus sign rather than '+'.)\n\n* The minimum number of integer digits is achieved by adjusting the exponent.\n  Example: 0.00123 formatted with \"00.###E0\" yields \"12.3E-4\". This only\n  happens if there is no maximum number of integer digits. If there is a\n  maximum, then the minimum number of integer digits is fixed at one.\n\n* The maximum number of integer digits, if present, specifies the exponent\n  grouping. The most common use of this is to generate engineering notation,\n  in which the exponent is a multiple of three, for example, \"##0.###E0\". The\n  number 12345 is formatted using \"##0.####E0\" as \"12.345E3\".\n\n* When using scientific notation, the formatter controls the digit counts\n  using significant digits logic. The maximum number of significant digits\n  limits the total number of integer and fraction digits that will be shown\n  in the mantissa; it does not affect parsing. For example, 12345 formatted\n  with \"##0.##E0\" is \"12.3E3\". Exponential patterns may not contain grouping\n  separators.\n\n#","ref":"Bonfire.Common.Localise.Cldr.Number.html#module-scientific-notation-formatting"},{"type":"module","title":"Significant Digits - Bonfire.Common.Localise.Cldr.Number","doc":"There are two ways of controlling how many digits are shows: (a)\nsignificant digits counts, or (b) integer and fraction digit counts. Integer\nand fraction digit counts are described above. When a formatter is using\nsignificant digits counts, it uses however many integer and fraction digits\nare required to display the specified number of significant digits. It may\nignore min/max integer/fraction digits, or it may use them to the extent\npossible.","ref":"Bonfire.Common.Localise.Cldr.Number.html#module-significant-digits"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"Parse a string locale-aware manner and return\na number.","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"* `string` is any `String.t`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"* `:number` is one of `:integer`, `:float`,\n  `:decimal` or `nil`. The default is `nil`\n  meaning that the type auto-detected as either\n  an `integer` or a `float`.\n\n* `:locale` is any locale returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag.t`. The default is\n  `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"* A number of the requested or default type or\n\n* `{:error, {exception, error}}` if no number could be determined","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"This function parses a string to return a number but\nin a locale-aware manner. It will normalise grouping\ncharacters and decimal separators, different forms of\nthe `+` and `-` symbols that appear in Unicode and\nstrips any `_` characters that might be used for\nformatting in a string. It then parses the number\nusing the Elixir standard library functions.","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.parse/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.parse(\"＋1.000,34\", locale: \"de\")\n    {:ok, 1000.34}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.parse(\"-1_000_000.34\")\n    {:ok, -1000000.34}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.parse(\"1.000\", locale: \"de\", number: :integer)\n    {:ok, 1000}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.parse(\"＋1.000,34\", locale: \"de\", number: :integer)\n    {:error,\n      {Cldr.Number.ParseError,\n       \"The string \\\"＋1.000,34\\\" could not be parsed as a number\"}}","ref":"Bonfire.Common.Localise.Cldr.Number.html#parse/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.resolve_currencies/2","doc":"Resolve curencies from strings within\na list.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currencies/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.resolve_currencies/2","doc":"* `list` is any list in which currency\n  names and symbols are expected\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currencies/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.resolve_currencies/2","doc":"* `:locale` is any valid locale returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`\n  The default is `Bonfire.Common.Localise.Cldr.get_locale()`\n\n* `:only` is an `atom` or list of `atoms` representing the\n  currencies or currency types to be considered for a match.\n  The equates to a list of acceptable currencies for parsing.\n  See the notes below for currency types.\n\n* `:except` is an `atom` or list of `atoms` representing the\n  currencies or currency types to be not considered for a match.\n  This equates to a list of unacceptable currencies for parsing.\n  See the notes below for currency types.\n\n* `:fuzzy` is a float greater than `0.0` and less than or\n  equal to `1.0` which is used as input to\n  `String.jaro_distance/2` to determine is the provided\n  currency string is *close enough* to a known currency\n  string for it to identify definitively a currency code.\n  It is recommended to use numbers greater than `0.8` in\n  order to reduce false positives.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currencies/2-options"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Number.resolve_currencies/2","doc":"The `:only` and `:except` options accept a list of\ncurrency codes and/or currency types.  The following\ntypes are recognised.\n\nIf both `:only` and `:except` are specified,\nthe `:except` entries take priority - that means\nany entries in `:except` are removed from the `:only`\nentries.\n\n  * `:all`, the default, considers all currencies\n\n  * `:current` considers those currencies that have a `:to`\n    date of nil and which also is a known ISO4217 currency\n\n  * `:historic` is the opposite of `:current`\n\n  * `:tender` considers currencies that are legal tender\n\n  * `:unannotated` considers currencies that don't have\n    \"(some string)\" in their names.  These are usually\n    financial instruments.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currencies/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.resolve_currencies/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.scan(\"100 US dollars\")\n    ...> |> Bonfire.Common.Localise.Cldr.Number.resolve_currencies\n    [100, :USD]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"100 eurosports\")\n    ...> |> Bonfire.Common.Localise.Cldr.Number.resolve_currencies(fuzzy: 0.75)\n    [100, :EUR]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"100 dollars des États-Unis\")\n    ...> |> Bonfire.Common.Localise.Cldr.Number.resolve_currencies(locale: \"fr\")\n    [100, :USD]","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currencies/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"Resolve a currency from a string","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"* `list` is any list in which currency\n  names and symbols are expected\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"* `:locale` is any valid locale returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`\n  The default is `Bonfire.Common.Localise.Cldr.get_locale()`\n\n* `:only` is an `atom` or list of `atoms` representing the\n  currencies or currency types to be considered for a match.\n  The equates to a list of acceptable currencies for parsing.\n  See the notes below for currency types.\n\n* `:except` is an `atom` or list of `atoms` representing the\n  currencies or currency types to be not considered for a match.\n  This equates to a list of unacceptable currencies for parsing.\n  See the notes below for currency types.\n\n* `:fuzzy` is a float greater than `0.0` and less than or\n  equal to `1.0` which is used as input to\n  `String.jaro_distance/2` to determine is the provided\n  currency string is *close enough* to a known currency\n  string for it to identify definitively a currency code.\n  It is recommended to use numbers greater than `0.8` in\n  order to reduce false positives.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"* An ISO4217 currency code as an atom or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"The `:only` and `:except` options accept a list of\ncurrency codes and/or currency types.  The following\ntypes are recognised.\n\nIf both `:only` and `:except` are specified,\nthe `:except` entries take priority - that means\nany entries in `:except` are removed from the `:only`\nentries.\n\n  * `:all`, the default, considers all currencies\n\n  * `:current` considers those currencies that have a `:to`\n    date of nil and which also is a known ISO4217 currency\n\n  * `:historic` is the opposite of `:current`\n\n  * `:tender` considers currencies that are legal tender\n\n  * `:unannotated` considers currencies that don't have\n    \"(some string)\" in their names.  These are usually\n    financial instruments.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.resolve_currency/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.resolve_currency(\"US dollars\")\n    [:USD]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.resolve_currency(\"100 eurosports\", fuzzy: 0.75)\n    [:EUR]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.resolve_currency(\"dollars des États-Unis\", locale: \"fr\")\n    [:USD]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.resolve_currency(\"not a known currency\", locale: \"fr\")\n    {:error,\n     {Cldr.UnknownCurrencyError,\n      \"The currency \\\"not a known currency\\\" is unknown or not supported\"}}","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_currency/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.resolve_per/2","doc":"Resolve and tokenize percent or permille\nfrom the beginning and/or the end of a string","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_per/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.resolve_per/2","doc":"* `list` is any list in which percent\n  and permille symbols are expected\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_per/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.resolve_per/2","doc":"* `:locale` is any valid locale returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`\n  The default is `options[:backend].get_locale()`","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_per/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.resolve_per/2","doc":"* An `:percent` or `permille` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_per/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.resolve_per/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.resolve_per \"11%\"\n    [\"11\", :percent]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.resolve_per \"% of linguists\"\n    [:percent, \" of linguists\"]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.resolve_per \"% of linguists %\"\n    [:percent, \" of linguists \", :percent]","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_per/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.resolve_pers/2","doc":"Resolve and tokenize percent and permille\nsybols from strings within a list.\n\nPercent and permille symbols can be identified\nat the beginning and/or the end of a string.","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_pers/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.resolve_pers/2","doc":"* `list` is any list in which percent and\n  permille symbols are expected\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_pers/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.resolve_pers/2","doc":"* `:locale` is any valid locale returned by `Cldr.known_locale_names/1`\n  or a `t:Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`\n  The default is `options[:backend].get_locale()`","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_pers/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.resolve_pers/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.scan(\"100%\")\n    ...> |> Bonfire.Common.Localise.Cldr.Number.resolve_pers()\n    [100, :percent]","ref":"Bonfire.Common.Localise.Cldr.Number.html#resolve_pers/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"Scans a string locale-aware manner and returns\na list of strings and numbers.","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"* `string` is any `String.t`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"* `:number` is one of `:integer`, `:float`,\n  `:decimal` or `nil`. The default is `nil`\n  meaning that the type auto-detected as either\n  an `integer` or a `float`.\n\n* `:locale` is any locale returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag.t`. The default is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"* A list of strings and numbers","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"Number parsing is performed by `Cldr.Number.Parser.parse/2`\nand any options provided are passed to that function.","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.scan/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.scan(\"£1_000_000.34\")\n    [\"£\", 1000000.34]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"I want £1_000_000 dollars\")\n    [\"I want £\", 1000000, \" dollars\"]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"The prize is 23\")\n    [\"The prize is \", 23]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"The lottery number is 23 for the next draw\")\n    [\"The lottery number is \", 23, \" for the next draw\"]\n\n    iex> Bonfire.Common.Localise.Cldr.Number.scan(\"The loss is -1.000 euros\", locale: \"de\", number: :integer)\n    [\"The loss is \", -1000, \" euros\"]","ref":"Bonfire.Common.Localise.Cldr.Number.html#scan/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_approx_string/2","doc":"Formats a number and applies the `:approximately` format for\na locale and number system.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_approx_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_approx_string/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted.\n  See `Cldr.Number.to_string/3` for a description of the available\n  options.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_approx_string/2-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.to_approx_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_approx_string 1234\n    {:ok, \"~1,234\"}","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_approx_string/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_at_least_string/2","doc":"Formats a number and applies the `:at_least` format for\na locale and number system.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_least_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_at_least_string/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted.\n  See `Bonfire.Common.Localise.Cldr.Number.to_string/2` for a description of the available\n  options.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_least_string/2-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.to_at_least_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_at_least_string 1234\n    {:ok, \"1,234+\"}","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_least_string/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_at_most_string/2","doc":"Formats a number and applies the `:at_most` format for\na locale and number system.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_most_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_at_most_string/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted.\n  See `Cldr.Number.to_string/3` for a description of the available\n  options.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_most_string/2-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.to_at_most_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_at_most_string 1234\n    {:ok, \"≤1,234\"}","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_at_most_string/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_range_string/2","doc":"Formats the first and last numbers of a range and applies\nthe `:range` format for a locale and number system.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_range_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_range_string/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted.\n  See `Cldr.Number.to_string/3` for a description of the available\n  options.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_range_string/2-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.to_range_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_range_string 1234..5678\n    {:ok, \"1,234–5,678\"}","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_range_string/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"Returns a number formatted into a string according to a format pattern and options.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"* `format`: the format style or a format string defining how the number is\n  formatted. See `Cldr.Number.Format` for how format strings can be constructed.\n  See `Cldr.Number.Format.format_styles_for/3` to return available format styles\n  for a locale. The default `format` is `:standard`.\n\n* If `:format` is set to `:long` or `:short` then the formatting depends on\n  whether `:currency` is specified. If not specified then the number is\n  formatted as `:decimal_long` or `:decimal_short`. If `:currency` is\n  specified the number is formatted as `:currency_long` or\n  `:currency_short` and `:fractional_digits` is set to 0 as a default.\n\n* `:format` may also be a format defined by CLDR's Rules Based Number\n  Formats (RBNF).  Further information is found in the module `Cldr.Rbnf`.\n  The most commonly used formats in this category are to spell out the\n  number in a the locales language.  The applicable formats are `:spellout`,\n  `:spellout_year`, `:ordinal`.  A number can also be formatted as roman\n  numbers by using the format `:roman` or `:roman_lower`.\n\n* `currency`: is the currency for which the number is formatted. For\n  available currencies see `Cldr.Currency.known_currencies/0`. This option\n  is required if `:format` is set to `:currency`.  If `currency` is set\n  and no `:format` is set, `:format` will be set to `:currency` as well.\n\n* `currency_symbol`: Allows overriding a currency symbol. The alternatives\n  are:\n  * `:iso` the ISO currency code will be used instead of the default\n    currency symbol.\n  * `:narrow` uses the narrow symbol defined for the locale. The same\n    narrow symbol can be defined for more than one currency and therefore this\n    should be used with care. If no narrow symbol is defined, the standard\n    symbol is used.\n  * `:symbol` uses the standard symbol defined in CLDR. A symbol is unique\n    for each currency and can be safely used.\n  * \"string\" uses `string` as the currency symbol\n  * `:standard` (the default and recommended) uses the CLDR-defined symbol\n    based upon the currency format for the locale.\n\n* `:cash`: a boolean which indicates whether a number being formatted as a\n  `:currency` is to be considered a cash value or not. Currencies can be\n  rounded differently depending on whether `:cash` is `true` or `false`.\n  *This option is deprecated in favour of `currency_digits: :cash`.\n\n* `:currency_digits` indicates which of the rounding and digits should be\n  used. The options are `:accounting` which is the default, `:cash` or\n  `:iso`\n\n* `:rounding_mode`: determines how a number is rounded to meet the precision\n  of the format requested. The available rounding modes are `:down`,\n  :half_up, :half_even, :ceiling, :floor, :half_down, :up. The default is\n  `:half_even`.\n\n* `:number_system`: determines which of the number systems for a locale\n  should be used to define the separators and digits for the formatted\n  number. If `number_system` is an `atom` then `number_system` is\n  interpreted as a number system. If the `:number_system` is\n  `binary` then it is interpreted as a number system name. See\n  `Cldr.Number.System.number_system_names_for/2`. The default is `:default`.\n\n* `:locale`: determines the locale in which the number is formatted. See\n  `Cldr.known_locale_names/0`. The default is`Cldr.get_locale/0` which is the\n  locale currently in affect for this `Process` and which is set by\n  `Cldr.put_locale/1`.\n\n* If `:fractional_digits` is set to a positive integer value then the number\n  will be rounded to that number of digits and displayed accordingly - overriding\n  settings that would be applied by default.  For example, currencies have\n  fractional digits defined reflecting each currencies minor unit.  Setting\n  `:fractional_digits` will override that setting.\n\n* If `:maximum_integer_digits` is set to a positive integer value then the\n  number is left truncated before formatting. For example if the number `1234`\n  is formatted with the option `maximum_integer_digits: 2`, the number is\n  truncated to `34` and formatted.\n\n* If `:round_nearest` is set to a positive integer value then the number\n  will be rounded to nearest increment of that value - overriding\n  settings that would be applied by default.\n\n* `:minimum_grouping_digits` overrides the CLDR definition of minimum grouping\n  digits. For example in the locale `es` the number `1234` is formatted by default\n  as `1345` because the locale defines the `minimium_grouping_digits` as `2`. If\n  `minimum_grouping_digits: 1` is set as an option the number is formatting as\n  `1.345`. The `:minimum_grouping_digits` is added to the grouping defined by\n  the number format.  If the sum of these two digits is greater than the number\n  of digits in the integer (or fractional) part of the number then no grouping\n  is performed.\n\n* `:wrapper` is a 2-arity function that will be called for each number component\n  with parameters `string` and `tag` where `tag` is one of `:number`,\n  `:currency_symbol`, `:currency_space`, `:literal`, `:quote`, `:percent`,\n  `:permille`, `:minus` or `:plus`. The function must return a string. The\n  function can be used to wrap format elements in HTML or other tags.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-options"},{"type":"function","title":"Locale extensions affecting formatting - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"A locale identifier can specify options that affect number formatting.\nThese options are:\n\n* `nu`: defines the number system to be used if none is specified by the `:number_system`\n  option to `to_string/2`\n\nThis key is part of the [u extension](https://unicode.org/reports/tr35/#u_Extension) and\nthat document should be consulted for details on how to construct a locale identifier with these\nextensions.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-locale-extensions-affecting-formatting"},{"type":"function","title":"Wrapping format elements - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"Wrapping elements is particularly useful when formatting a number with a\ncurrency symbol and the requirement is to have different HTML formatting\napplied to the symbol than the number.  For example:\n\n    iex> Cldr.Number.to_string(100, format: :currency, currency: :USD, wrapper: fn\n    ...>   string, :currency_symbol -> \" \"   string   \" \"\n    ...>   string, :number -> \" \"   string   \" \"\n    ...>   string, :currency_space -> \" \"   string   \" \"\n    ...>   string, _other -> string\n    ...> end)\n    {:ok, \" $  100.00 \"}\n\nIt is also possible and recommended to use the `Phoenix.HTML.Tag.content_tag/3`\nfunction if wrapping HTML tags since these will ensure HTML entities are\ncorrectly encoded.  For example:\n\n    iex> Cldr.Number.to_string(100, format: :currency, currency: :USD, wrapper: fn\n    ...>   string, :currency_symbol -> Phoenix.HTML.Tag.content_tag(:span, string, class: \"symbol\")\n    ...>   string, :number -> Phoenix.HTML.Tag.content_tag(:span, string, class: \"number\")\n    ...>   string, :currency_space -> Phoenix.HTML.Tag.content_tag(:span, string)\n    ...>   string, _other -> string\n    ...> end)\n    {:ok, \" $  100.00 \"}\n\nWhen formatting a number the format is parsed into format elements that might include\na currency symbol, a literal string, inserted text between a currency symbol and the\ncurrency amount, a percent sign, the number itself and several other elements.  In\nsome cases it is helpful to be apply specific formatting to each element.\nThis can be achieved by specifying a `:wrapper` option. This option takes a 2-arity\nfunction as an argument. For each element of the format the wrapper function is called\nwith two parameters:  the format element as a string and an atom representing the\nelement type. The wrapper function is required to return a string that is then\ninserted in the final formatted number.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-wrapping-format-elements"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345\n    {:ok, \"12,345\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, locale: \"fr\"\n    {:ok, \"12 345\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1345.32, currency: :EUR, locale: \"es\", minimum_grouping_digits: 1\n    {:ok, \"1.345,32 €\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1345.32, currency: :EUR, locale: \"es\"\n    {:ok, \"1345,32 €\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, locale: \"fr\", currency: \"USD\"\n    {:ok, \"12 345,00 $US\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, format: \"#E0\"\n    {:ok, \"1.2345E4\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, format: :accounting, currency: \"THB\"\n    {:ok, \"THB 12,345.00\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string -12345, format: :accounting, currency: \"THB\"\n    {:ok, \"(THB 12,345.00)\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, format: :accounting, currency: \"THB\",\n    ...> locale: \"th\"\n    {:ok, \"฿12,345.00\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 12345, format: :accounting, currency: \"THB\",\n    ...> locale: \"th\", number_system: :native\n    {:ok, \"฿๑๒,๓๔๕.๐๐\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1244.30, format: :long\n    {:ok, \"1 thousand\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1244.30, format: :long, currency: \"USD\"\n    {:ok, \"1,244 US dollars\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1244.30, format: :short\n    {:ok, \"1K\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1244.30, format: :short, currency: \"EUR\"\n    {:ok, \"€1K\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1234, format: :spellout\n    {:ok, \"one thousand two hundred thirty-four\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1234, format: :spellout_verbose\n    {:ok, \"one thousand two hundred and thirty-four\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 1989, format: :spellout_year\n    {:ok, \"nineteen eighty-nine\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 123, format: :ordinal\n    {:ok, \"123rd\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 123, format: :roman\n    {:ok, \"CXXIII\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string 123, locale: \"th-u-nu-thai\"\n    {:ok, \"๑๒๓\"}","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-examples"},{"type":"function","title":"Errors - Bonfire.Common.Localise.Cldr.Number.to_string/2","doc":"An error tuple `{:error, reason}` will be returned if an error is detected.\nThe two most likely causes of an error return are:\n\n  * A format cannot be compiled. In this case the error tuple will look like:\n\n```\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string(12345, format: \"0#\")\n    {:error, {Cldr.FormatCompileError,\n      \"Decimal format compiler: syntax error before: \\\"#\\\"\"}}\n```\n\n  * The format style requested is not defined for the `locale` and\n    `number_system`. This happens typically when the number system is\n    `:algorithmic` rather than the more common `:numeric`. In this case the error\n    return looks like:\n\n```\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string(1234, locale: \"he\", number_system: \"hebr\", format: :percent)\n    {:error, {Cldr.UnknownFormatError,\n      \"The locale :he with number system :hebr does not define a format :percent\"}}\n```","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string/2-errors"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.to_string!/2","doc":"Same as the execution of `to_string/2` but raises an exception if an error would be\nreturned.","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.to_string!/2","doc":"* `number` is an integer, float or Decimal to be formatted\n\n* `options` is a keyword list defining how the number is to be formatted. See\n  `Bonfire.Common.Localise.Cldr.Number.to_string/2`","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string!/2-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.to_string!/2","doc":"* a formatted number as a string or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.to_string!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.to_string! 12345\n    \"12,345\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string! 12345, locale: \"fr\"\n    \"12 345\"","ref":"Bonfire.Common.Localise.Cldr.Number.html#to_string!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.validate_number_system/2","doc":"Return a valid number system from a provided locale and number\nsystem name or type.\n\nThe number system or number system type must be valid for the\ngiven locale.  If a number system type is provided, the\nunderlying number system is returned.","ref":"Bonfire.Common.Localise.Cldr.Number.html#validate_number_system/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.validate_number_system/2","doc":"* `locale` is any valid locale name returned by `Cldr.known_locale_names/1`\n  or a `Cldr.LanguageTag` struct returned by `Cldr.Locale.new!/2`\n\n* `system_name` is any number system name returned by\n  `Cldr.known_number_systems/0` or a number system type\n  returned by `Cldr.known_number_system_types/0`","ref":"Bonfire.Common.Localise.Cldr.Number.html#validate_number_system/2-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.validate_number_system/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.validate_number_system \"en\", :latn\n    {:ok, :latn}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.validate_number_system \"en\", :default\n    {:ok, :latn}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.validate_number_system \"en\", :unknown\n    {:error,\n     {Cldr.UnknownNumberSystemError, \"The number system :unknown is unknown\"}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.validate_number_system \"zz\", :default\n    {:error, {Cldr.InvalidLanguageError, \"The language \\\"zz\\\" is invalid\"}}","ref":"Bonfire.Common.Localise.Cldr.Number.html#validate_number_system/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal","doc":"Implements cardinal plural rules for numbers.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.available_locale_names/0","doc":"The locale names for which plural rules are defined.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#available_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.known_locale_names/0","doc":"The configured locales for which plural rules are defined.\n\nReturns the intersection of `Bonfire.Common.Localise.Cldr.known_locale_names/0` and\nthe locales for which Cardinal plural rules are defined.\n\nThere are many `Cldr` locales which don't have their own plural\nrules so this list is the intersection of `Cldr`'s configured\nlocales and those that have rules.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#known_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule/3","doc":"Return the plural key for a given number in a given locale\n\nReturns which plural key (`:zero`, `:one`, `:two`, `:few`,\n`:many` or `:other`) a given number fits into within the\ncontext of a given locale.\n\nNote that these key names should not be interpreted\nliterally.  For example, the key returned from\n`Cldr.Number.Ordinal.plural_rule(0, \"en\")` is actually\n`:other`, not `:zero`.\n\nThis key can then be used to format a number, date, time, unit,\nlist or other content in a plural-sensitive way.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rule/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule/3","doc":"* `number` is any `integer`, `float` or `Decimal`\n\n* `locale` is any locale returned by `Cldr.Locale.new!/2` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\n* `rounding` is one of `[:down, :up, :ceiling, :floor, :half_even, :half_up, :half_down]`.  The\n  default is `:half_even`.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rule/3-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule 0, \"fr\"\n    :one\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule 0, \"en\"\n    :other","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rule/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rules/0","doc":"Returns all the plural rules defined in CLDR.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rules/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rules_for/1","doc":"Return the plural rules for a locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rules_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rules_for/1","doc":"* `locale` is any locale returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\nThe rules are returned in AST form after parsing.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rules_for/1-arguments"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize/3","doc":"Pluralize a number using cardinal plural rules\nand a substitution map.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#pluralize/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize/3","doc":"* `number` is an integer, float or Decimal\n\n* `locale` is any locale returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\n* `substitutions` is a map that maps plural keys to a string.\n  The valid substitution keys are `:zero`, `:one`, `:two`,\n  `:few`, `:many` and `:other`.\n\nSee also `Bonfire.Common.Localise.Cldr.Number.Cardinal.Cardinal.plural_rule/3`.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#pluralize/3-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 1, \"en\", %{one: \"one\"}\n    \"one\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 2, \"en\", %{one: \"one\"}\n    nil\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 2, \"en\", %{one: \"one\", two: \"two\", other: \"other\"}\n    \"other\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 22, \"en\", %{one: \"one\", two: \"two\", other: \"other\"}\n    \"other\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize Decimal.new(1), \"en\", %{one: \"one\"}\n    \"one\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize Decimal.new(2), \"en\", %{one: \"one\"}\n    nil\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize Decimal.new(2), \"en\", %{one: \"one\", two: \"two\"}\n    nil\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 1..10, \"ar\", %{one: \"one\", few: \"few\", other: \"other\"}\n    \"few\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize 1..10, \"en\", %{one: \"one\", few: \"few\", other: \"other\"}\n    \"other\"","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#pluralize/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Format","doc":"Functions to manage the collection of number patterns defined in Cldr.\n\nNumber patterns affect how numbers are interpreted in a localized context.\nHere are some examples, based on the French locale. The \".\" shows where the\ndecimal point should go. The \",\" shows where the thousands separator should\ngo. A \"0\" indicates zero-padding: if the number is too short, a zero (in the\nlocale's numeric set) will go there. A \"#\" indicates no padding: if the\nnumber is too short, nothing goes there. A \"¤\" shows where the currency sign\nwill go. The following illustrates the effects of different patterns for the\nFrench locale, with the number \"1234.567\". Notice how the pattern characters\n',' and '.' are replaced by the characters appropriate for the locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html"},{"type":"module","title":"Number Pattern Examples - Bonfire.Common.Localise.Cldr.Number.Format","doc":"| Pattern\t      | Currency\t      | Text        |\n| ------------- | :-------------: | ----------: |\n| #,##0.##\t    | n/a\t            | 1 234,57    |\n| #,##0.###\t    | n/a\t            | 1 234,567   |\n| ###0.#####\t  | n/a\t            | 1234,567    |\n| ###0.0000#\t  | n/a\t            | 1234,5670   |\n| 00000.0000\t  | n/a\t            | 01234,5670  |\n| #,##0.00 ¤\t  | EUR\t            | 1 234,57 €  |\n\nThe number of # placeholder characters before the decimal do not matter,\nsince no limit is placed on the maximum number of digits. There should,\nhowever, be at least one zero some place in the pattern. In currency formats,\nthe number of digits after the decimal also do not matter, since the\ninformation in the supplemental data (see Supplemental Currency Data) is used\nto override the number of decimal places — and the rounding — according to\nthe currency that is being formatted. That can be seen in the above chart,\nwith the difference between Yen and Euro formatting.\n\nDetails of the number formats are described in the\n[Unicode documentation](http://unicode.org/reports/tr35/tr35-numbers.html#Number_Format_Patterns)","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#module-number-pattern-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for/1","doc":"Returns the decimal formats defined for a given locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for/1","doc":"* `{:ok, map}` where map is a map of decimal formats\n  keyed by number system or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for/1-returns"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for!/1","doc":"Returns the decimal formats defined for a given locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for!/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for!/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for!/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.all_formats_for!/1","doc":"* `{:ok, map}` where map is a map of decimal formats\n  keyed by number system or\n\n* raises an exception\n\nSee `Bonfire.Common.Localise.Cldr.Number.Format.Number.Format.all_formats_for/1` for further information.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#all_formats_for!/1-returns"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.currency_spacing/2","doc":"Returns the currency space for a given locale and\nnumber system.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#currency_spacing/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list/0","doc":"Returns the list of decimal formats in the configured locales including\nthe list of locales configured for precompilation in `config.exs`.\n\nThis function exists to allow the decimal formatter\nto precompile all the known formats at compile time.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#decimal_format_list/0"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list/0","doc":"#=> Bonfire.Common.Localise.Cldr.Number.Format.Format.decimal_format_list\n    [\"#\", \"#,##,##0%\",\n    \"#,##,##0.###\", \"#,##,##0.00¤\", \"#,##,##0.00¤;(#,##,##0.00¤)\",\n    \"#,##,##0 %\", \"#,##0%\", \"#,##0.###\", \"#,##0.00 ¤\",\n    \"#,##0.00 ¤;(#,##0.00 ¤)\", \"#,##0.00¤\", \"#,##0.00¤;(#,##0.00¤)\",\n    \"#,##0 %\", \"#0%\", \"#0.######\", \"#0.00 ¤\", \"#E0\", \"%#,##0\", \"% #,##0\",\n    \"0\", \"0.000000E+000\", \"0000 M ¤\", \"0000¤\", \"000G ¤\", \"000K ¤\", \"000M ¤\",\n    \"000T ¤\", \"000mM ¤\", \"000m ¤\", \"000 Bio'.' ¤\", \"000 Bln ¤\", \"000 Bn ¤\",\n    \"000 B ¤\", \"000 E ¤\", \"000 K ¤\", \"000 MRD ¤\", \"000 Md ¤\", \"000 Mio'.' ¤\",\n    \"000 Mio ¤\", \"000 Mld ¤\", \"000 Mln ¤\", \"000 Mn ¤\", \"000 Mrd'.' ¤\",\n    \"000 Mrd ¤\", \"000 Mr ¤\", \"000 M ¤\", \"000 NT ¤\", \"000 N ¤\", \"000 Tn ¤\",\n    \"000 Tr ¤\", ...]","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#decimal_format_list/0-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list_for/1","doc":"Returns the list of decimal formats for a configured locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#decimal_format_list_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list_for/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.\n\nThis function exists to allow the decimal formatter to precompile all\nthe known formats at compile time. Its use is not otherwise recommended.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#decimal_format_list_for/1-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Format.decimal_format_list_for(:en)\n    {:ok, [\"#,##0%\", \"#,##0.###\", \"#,##0.00\", \"#,##0.00;(#,##0.00)\",\"#E0\",\n     \"0 billion\", \"0 million\", \"0 thousand\",\n     \"0 trillion\", \"00 billion\", \"00 million\", \"00 thousand\", \"00 trillion\",\n     \"000 billion\", \"000 million\", \"000 thousand\", \"000 trillion\", \"000B\", \"000K\",\n     \"000M\", \"000T\", \"00B\", \"00K\", \"00M\", \"00T\", \"0B\", \"0K\", \"0M\", \"0T\",\n     \"¤#,##0.00\", \"¤#,##0.00;(¤#,##0.00)\", \"¤000B\", \"¤000K\", \"¤000M\",\n     \"¤000T\", \"¤00B\", \"¤00K\", \"¤00M\", \"¤00T\", \"¤0B\", \"¤0K\", \"¤0M\", \"¤0T\",\n     \"¤ #,##0.00\", \"¤ #,##0.00;(¤ #,##0.00)\", \"¤ 000B\", \"¤ 000K\", \"¤ 000M\",\n     \"¤ 000T\", \"¤ 00B\", \"¤ 00K\", \"¤ 00M\", \"¤ 00T\", \"¤ 0B\", \"¤ 0K\", \"¤ 0M\", \"¤ 0T\"]}","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#decimal_format_list_for/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for/1","doc":"Returns the default grouping for a locale as a map.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for/1","doc":"* `{:ok, grouping}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for(:en)\n    {:ok, %{fraction: %{first: 0, rest: 0}, integer: %{first: 3, rest: 3}}}","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for!/1","doc":"Returns the default grouping for a locale\nor raises on error.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for!/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for!/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for!/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for!/1","doc":"* `grouping` as a map or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for!/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for!/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Format.default_grouping_for!(:en)\n    %{fraction: %{first: 0, rest: 0}, integer: %{first: 3, rest: 3}}","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#default_grouping_for!/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.formats_for/2","doc":"Return the predfined formats for a given `locale` and `number_system`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#formats_for/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.formats_for/2","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system` is any valid number system or number system type returned\n  by `Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#formats_for/2-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.Format.formats_for/2","doc":"Bonfire.Common.Localise.Cldr.Number.Format.formats_for :fr, :native\n    #=> %Cldr.Number.Format{\n      accounting: \"#,##0.00 ¤;(#,##0.00 ¤)\",\n      currency: \"#,##0.00 ¤\",\n      percent: \"#,##0 %\",\n      scientific: \"#E0\",\n      standard: \"#,##0.###\"\n      currency_short: [{\"1000\", [one: \"0 k ¤\", other: \"0 k ¤\"]},\n       {\"10000\", [one: \"00 k ¤\", other: \"00 k ¤\"]},\n       {\"100000\", [one: \"000 k ¤\", other: \"000 k ¤\"]},\n       {\"1000000\", [one: \"0 M ¤\", other: \"0 M ¤\"]},\n       {\"10000000\", [one: \"00 M ¤\", other: \"00 M ¤\"]},\n       {\"100000000\", [one: \"000 M ¤\", other: \"000 M ¤\"]},\n       {\"1000000000\", [one: \"0 Md ¤\", other: \"0 Md ¤\"]},\n       {\"10000000000\", [one: \"00 Md ¤\", other: \"00 Md ¤\"]},\n       {\"100000000000\", [one: \"000 Md ¤\", other: \"000 Md ¤\"]},\n       {\"1000000000000\", [one: \"0 Bn ¤\", other: \"0 Bn ¤\"]},\n       {\"10000000000000\", [one: \"00 Bn ¤\", other: \"00 Bn ¤\"]},\n       {\"100000000000000\", [one: \"000 Bn ¤\", other: \"000 Bn ¤\"]}],\n       ...\n      }","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#formats_for/2-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.formats_for!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#formats_for!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for/1","doc":"Returns the minimum grouping digits for a locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for/1","doc":"* `{:ok, minumum_digits}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for(\"en\")\n    {:ok, 1}","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for!/1","doc":"Returns the minimum grouping digits for a locale\nor raises on error.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for!/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for!/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for!/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for!/1","doc":"* `minumum_digits` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for!/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for!/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Format.minimum_grouping_digits_for!(\"en\")\n    1","ref":"Bonfire.Common.Localise.Cldr.Number.Format.html#minimum_grouping_digits_for!/1-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.metadata!/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.html#metadata!/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.to_string/3","doc":"Formats a number according to a decimal format string.","ref":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.html#to_string/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.to_string/3","doc":"* `number` is an integer, float or Decimal\n\n* `format` is a format string.  See `Bonfire.Common.Localise.Cldr.Number` for further information.\n\n* `options` is a map of options.  See `Bonfire.Common.Localise.Cldr.Number.to_string/2`\n  for further information.","ref":"Bonfire.Common.Localise.Cldr.Number.Formatter.Decimal.html#to_string/3-arguments"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal","doc":"Implements ordinal plural rules for numbers.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.available_locale_names/0","doc":"The locale names for which plural rules are defined.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#available_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.known_locale_names/0","doc":"The configured locales for which plural rules are defined.\n\nReturns the intersection of `Bonfire.Common.Localise.Cldr.known_locale_names/0` and\nthe locales for which Ordinal plural rules are defined.\n\nThere are many `Cldr` locales which don't have their own plural\nrules so this list is the intersection of `Cldr`'s configured\nlocales and those that have rules.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#known_locale_names/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule/3","doc":"Return the plural key for a given number in a given locale\n\nReturns which plural key (`:zero`, `:one`, `:two`, `:few`,\n`:many` or `:other`) a given number fits into within the\ncontext of a given locale.\n\nNote that these key names should not be interpreted\nliterally.  For example, the key returned from\n`Cldr.Number.Ordinal.plural_rule(0, \"en\")` is actually\n`:other`, not `:zero`.\n\nThis key can then be used to format a number, date, time, unit,\nlist or other content in a plural-sensitive way.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rule/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule/3","doc":"* `number` is any `integer`, `float` or `Decimal`\n\n* `locale` is any locale returned by `Cldr.Locale.new!/2` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\n* `rounding` is one of `[:down, :up, :ceiling, :floor, :half_even, :half_up, :half_down]`.  The\n  default is `:half_even`.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rule/3-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule 0, \"fr\"\n    :other\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule 1, \"en\"\n    :one","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rule/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rules/0","doc":"Returns all the plural rules defined in CLDR.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rules/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rules_for/1","doc":"Return the plural rules for a locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rules_for/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rules_for/1","doc":"* `locale` is any locale returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\nThe rules are returned in AST form after parsing.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rules_for/1-arguments"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize/3","doc":"Pluralize a number using ordinal plural rules\nand a substitution map.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#pluralize/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize/3","doc":"* `number` is an integer, float or Decimal or a `Range.t{}`.  When a range, The\n  is that in any usage, the start value is strictly less than the end value,\n  and that no values are negative. Results for any cases that do not meet\n  these criteria are undefined.\n\n* `locale` is any locale returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1` or any\n  `locale_name` returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n\n* `substitutions` is a map that maps plural keys to a string.\n  The valid substitution keys are `:zero`, `:one`, `:two`,\n  `:few`, `:many` and `:other`.\n\nSee also `Bonfire.Common.Localise.Cldr.Number.Ordinal.Ordinal.plural_rule/3`.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#pluralize/3-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 1, :en, %{one: \"one\"}\n    \"one\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 2, :en, %{one: \"one\"}\n    nil\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 2, :en, %{one: \"one\", two: \"two\"}\n    \"two\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 22, :en, %{one: \"one\", two: \"two\", other: \"other\"}\n    \"two\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize Decimal.new(1), :en, %{one: \"one\"}\n    \"one\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize Decimal.new(2), :en, %{one: \"one\"}\n    nil\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize Decimal.new(2), :en, %{one: \"one\", two: \"two\"}\n    \"two\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 1..10, \"ar\", %{one: \"one\", few: \"few\", other: \"other\"}\n    \"other\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize 1..10, \"en\", %{one: \"one\", few: \"few\", other: \"other\"}\n    \"other\"","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#pluralize/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range","doc":"Implements plural rules for ranges","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.plural_rule/3","doc":"Returns a final plural type for a start-of-range plural\ntype, an end-of-range plural type and a locale.","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html#plural_rule/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.plural_rule/3","doc":"* `first` is a plural type for the start of a range\n\n* `last` is a plural type for the end of a range\n\n* `locale` is any `Cldr.LanguageTag.t` or a language name\n  (not locale name)","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html#plural_rule/3-arguments"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.plural_rule/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.plural_rule :other, :few, \"ar\"\n    :few","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html#plural_rule/3-example"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Symbol","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.all_decimal_symbols/0","doc":"Returns a list of all decimal symbols defined\nby the locales configured in this backend as\na list.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#all_decimal_symbols/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.all_decimal_symbols_class/0","doc":"Returns a list of all decimal symbols defined\nby the locales configured in this backend as\na string.\n\nThis string can be used as a character class\nwhen builing a regular expression.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#all_decimal_symbols_class/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.all_grouping_symbols/0","doc":"Returns a list of all grouping symbols defined\nby the locales configured in this backend as\na list.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#all_grouping_symbols/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.all_grouping_symbols_class/0","doc":"Returns a list of all grouping symbols defined\nby the locales configured in this backend as\na string.\n\nThis string can be used as a character class\nwhen builing a regular expression.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#all_grouping_symbols_class/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for/1","doc":"Returns a map of `Cldr.Number.Symbol.t` structs of the number symbols for each\nof the number systems of a locale.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#number_symbols_for/1"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for/1","doc":"* `locale` is any valid locale name returned by\n  `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by\n  `Bonfire.Common.Localise.Cldr.Locale.new!/1`. The default\n  is `Bonfire.Common.Localise.Cldr.get_locale/0`.","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#number_symbols_for/1-options"},{"type":"function","title":"Example: - Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for(:th)\n    {:ok, %{\n       latn: %Cldr.Number.Symbol{\n         decimal: \".\",\n         exponential: \"E\",\n         group: \",\",\n         infinity: \"∞\",\n         list: \";\",\n         minus_sign: \"-\",\n         nan: \"NaN\",\n         per_mille: \"‰\",\n         percent_sign: \"%\",\n         plus_sign: \"+\",\n         superscripting_exponent: \"×\",\n         time_separator: \":\"\n       },\n       thai: %Cldr.Number.Symbol{\n         decimal: \".\",\n         exponential: \"E\",\n         group: \",\",\n         infinity: \"∞\",\n         list: \";\",\n         minus_sign: \"-\",\n         nan: \"NaN\",\n         per_mille: \"‰\",\n         percent_sign: \"%\",\n         plus_sign: \"+\",\n         superscripting_exponent: \"×\",\n         time_separator: \":\"\n       }\n     }}","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#number_symbols_for/1-example"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Symbol.html#number_symbols_for/2"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.System","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_system_for/2","doc":"Returns the actual number system from a number system type.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by ``Cldr.Locale.new!/2``\n\n* `system_name` is any number system name returned by\n  `Cldr.known_number_systems/0` or a number system type\n  returned by `Cldr.known_number_system_types/0`\n\nThis function will decode a number system type into the actual\nnumber system.  If the number system provided can't be decoded\nit is returned as is.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_for/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.number_system_for/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_for \"th\", :latn\n    {:ok, %{digits: \"0123456789\", type: :numeric}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_for \"en\", :default\n    {:ok, %{digits: \"0123456789\", type: :numeric}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_for \"he\", :traditional\n    {:ok, %{rules: \"hebrew\", type: :algorithmic}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_for \"en\", :native\n    {:ok, %{digits: \"0123456789\", type: :numeric}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_for \"en\", :finance\n    {\n      :error,\n      {Cldr.UnknownNumberSystemError,\n        \"The number system :finance is unknown for the locale named :en. Valid number systems are %{default: :latn, native: :latn}\"}\n    }","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_for/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale/1","doc":"Returns the number system from a language tag or\nlocale name.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_from_locale/1"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale/1","doc":"* `locale` is any language tag returned be `Cldr.Locale.new/2`\n  or a locale name in the list returned by `Cldr.known_locale_names/1`","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_from_locale/1-arguments"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale/1","doc":"* A number system name as an atom","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_from_locale/1-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale \"en-US-u-nu-thai\"\n    :thai\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_from_locale \"en-US\"\n    :latn","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_from_locale/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_system_names_for/1","doc":"Returns the number systems available for a locale\nor `{:error, message}` if the locale is not known.\n\n* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_names_for/1"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.number_system_names_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_names_for \"en\"\n    {:ok, [:latn]}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_system_names_for \"zz\"\n    {:error, {Cldr.InvalidLanguageError, \"The language \\\"zz\\\" is invalid\"}}","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_names_for/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_system_names_for!/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_names_for!/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_system_types_for/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_system_types_for/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1","doc":"Returns the number systems available for a locale\nor `{:error, message}` if the locale is not known.\n\n* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1`","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_systems_for/1"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.number_systems_for \"en\"\n    {:ok, %{default: :latn, native: :latn}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_systems_for \"th\"\n    {:ok, %{default: :latn, native: :thai}}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.number_systems_for \"zz\"\n    {:error, {Cldr.InvalidLanguageError, \"The language \\\"zz\\\" is invalid\"}}","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_systems_for/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_systems_for!/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_systems_for!/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.number_systems_like/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#number_systems_like/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.system_name_from/2","doc":"Returns a number system name for a given locale and number system reference.\n\n* `system_name` is any number system name returned by\n  `Bonfire.Common.Localise.Cldr.known_number_systems/0` or a number system type\n  returned by `Bonfire.Common.Localise.Cldr.known_number_system_types/0`\n\n* `locale` is any valid locale name returned by `Bonfire.Common.Localise.Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct returned by `Bonfire.Common.Localise.Cldr.Locale.new!/1`\n\nNumber systems can be references in one of two ways:\n\n* As a number system type such as :default, :native, :traditional and\n  :finance. This allows references to a number system for a locale in a\n  consistent fashion for a given use\n\n* WIth the number system name directly, such as :latn, :arab or any of the\n  other 70 or so\n\nThis function dereferences the supplied `system_name` and returns the\nactual system name.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#system_name_from/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.system_name_from/2","doc":"ex> Bonfire.Common.Localise.Cldr.Number.System.system_name_from(:default, \"en\")\n    {:ok, :latn}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.system_name_from(\"latn\", \"en\")\n    {:ok, :latn}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.system_name_from(:native, \"en\")\n    {:ok, :latn}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.system_name_from(:nope, \"en\")\n    {\n      :error,\n      {Cldr.UnknownNumberSystemError, \"The number system :nope is unknown\"}\n    }\n\nNote that return value is not guaranteed to be a valid\nnumber system for the given locale as demonstrated in the third example.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#system_name_from/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.to_system/2","doc":"Converts a number into the representation of\na non-latin number system.\n\nThis function converts numbers to a known\nnumber system only, it does not provide number\nformatting.\n\n* `number` is a `float`, `integer` or `Decimal`\n\n* `system_name` is any number system name returned by\n  `Cldr.known_number_systems/0` or a number system type\n  returned by `Cldr.known_number_system_types/0`\n\nThere are two types of number systems in CLDR:\n\n* `:numeric` in which the number system defines\n  a direct mapping between the latin digits `0..9`\n  into a the number system equivalent.  In this case,\n` to_system/2` invokes `Cldr.Number.Transliterate.transliterate_digits/3`\n  for the given number.\n\n* `:algorithmic` in which the number system\n  does not have the same structure as the `:latn`\n  number system and therefore the conversion is\n  done algorithmically.  For CLDR the algorithm\n  is implemented through `Cldr.Rbnf` rulesets.\n  These rulesets are considered by CLDR to be\n  less rigorous than the `:numeric` number systems\n  and caution and testing for a specific use case\n  is recommended.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#to_system/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.to_system/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.to_system 123456, :hebr\n    {:ok, \"קכ״ג׳תנ״ו\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.to_system 123, :hans\n    {:ok, \"一百二十三\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.to_system 123, :hant\n    {:ok, \"一百二十三\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.to_system 123, :hansfin\n    {:ok, \"壹佰贰拾叁\"}","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#to_system/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.System.to_system!/2","doc":"Converts a number into the representation of\na non-latin number system. Returns a converted\nstring or raises on error.\n\n* `number` is a `float`, `integer` or `Decimal`\n\n* `system_name` is any number system name returned by\n  `Bonfire.Common.Localise.Cldr.known_number_systems/0` or a number system type\n  returned by `Bonfire.Common.Localise.Cldr.known_number_system_types/0`\n\nSee `Bonfire.Common.Localise.Cldr.Number.System.to_system/2` for further\ninformation.","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#to_system!/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.System.to_system!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Number.System.to_system! 123, :hans\n    \"一百二十三\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.to_system! 123, :hant\n    \"一百二十三\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.System.to_system! 123, :hansfin\n    \"壹佰贰拾叁\"","ref":"Bonfire.Common.Localise.Cldr.Number.System.html#to_system!/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Number.Transliterate","doc":"Transliteration for digits and separators.\n\nTransliterating a string is an expensive business.  First the string has to\nbe exploded into its component graphemes.  Then for each grapheme we have\nto map to the equivalent in the other `{locale, number_system}`.  Then we\nhave to reassemble the string.\n\nEffort is made to short circuit where possible. Transliteration is not\nrequired for any `{locale, number_system}` that is the same as `{\"en\",\n\"latn\"}` since the implementation uses this combination for the placeholders during\nformatting already. When short circuiting is possible (typically the en-*\nlocales with \"latn\" number_system - the total number of short circuited\nlocales is 211 of the 537 in CLDR) the overall number formatting is twice as\nfast than when formal transliteration is required.\n\n#","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html"},{"type":"module","title":"Configuring precompilation of digit transliterations - Bonfire.Common.Localise.Cldr.Number.Transliterate","doc":"This module includes `Cldr.Number.Transliterate.transliterate_digits/3` which transliterates\ndigits between number systems.  For example from :arabic to :latn.  Since generating a\ntransliteration map is slow, pairs of transliterations can be configured so that the\ntransliteration map is created at compile time and therefore speeding up transliteration at\nrun time.\n\nTo configure these transliteration pairs, add the to the `use Cldr` configuration\nin a backend module:\n\n    defmodule MyApp.Cldr do\n      use Cldr,\n      locale: [\"en\", \"fr\", \"th\"],\n      default_locale: \"en\",\n      precompile_transliterations: [{:latn, :thai}, {:arab, :thai}]\n    end\n\nWhere each tuple in the list configures one transliteration map.  In this example, two maps are\nconfigured: from `:latn` to `:thai` and from `:arab` to `:thai`.\n\nA list of configurable number systems is returned by `Cldr.Number.System.numeric_systems/0`.\n\nIf a transliteration is requested between two number pairs that have not been configured for\nprecompilation, a warning is logged.","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#module-configuring-precompilation-of-digit-transliterations"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate/3","doc":"Transliterates from latin digits to another number system's digits.\n\nTransliterates the latin digits 0..9 to their equivalents in\nanother number system. Also transliterates the decimal and grouping\nseparators as well as the plus, minus and exponent symbols. Any other character\nin the string will be returned \"as is\".","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate/3","doc":"* `sequence` is the string to be transliterated.\n\n* `locale` is any known locale, defaulting to `Bonfire.Common.Localise.Cldr.get_locale/0`.\n\n* `number_system` is any known number system. If expressed as a `string` it\n  is the actual name of a known number system. If epressed as an `atom` it is\n  used as a key to look up a number system for the locale (the usual keys are\n  `:default` and `:native` but :traditional and :finance are also part of the\n  standard). See `Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1` for a locale to\n  see what number system types are defined. The default is `:default`.\n\nFor available number systems see `Cldr.Number.System.number_systems/0`\nand `Bonfire.Common.Localise.Cldr.Number.System.number_systems_for/1`.  Also see\n`Bonfire.Common.Localise.Cldr.Number.Symbol.number_symbols_for/1`.","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate/3-arguments"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"123556\")\n    \"123556\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"123,556.000\", \"fr\", :default)\n    \"123 556,000\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"123556\", \"th\", :default)\n    \"123556\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"123556\", \"th\", \"thai\")\n    \"๑๒๓๕๕๖\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"123556\", \"th\", :native)\n    \"๑๒๓๕๕๖\"\n\n    iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate(\"Some number is: 123556\", \"th\", \"thai\")\n    \"Some number is: ๑๒๓๕๕๖\"","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate!/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate!/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate_digits/3","doc":"Transliterates digits from one number system to another number system\n\n* `digits` is binary representation of a number\n\n* `from_system` and `to_system` are number system names in atom form.  See\n`Cldr.Number.System.numeric_systems/0` for available number systems.","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate_digits/3"},{"type":"function","title":"Example - Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate_digits/3","doc":"iex> Bonfire.Common.Localise.Cldr.Number.Transliterate.transliterate_digits \"٠١٢٣٤٥٦٧٨٩\", :arab, :latn\n    \"0123456789\"","ref":"Bonfire.Common.Localise.Cldr.Number.Transliterate.html#transliterate_digits/3-example"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem","doc":"Functions to implement the number system rule-based-number-format rules of CLDR.\n\nThese rules are defined only on the \"und\" locale and represent specialised\nnumber formatting.\n\nThe standard public API for RBNF is via the `Cldr.Number.to_string/2` function.\n\nThe functions on this module are defined at compile time based upon the RBNF rules\ndefined in the Unicode CLDR data repository.  Available rules are identified by:\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.rule_sets(:und)\n    ...> |> Enum.sort()\n    [\n      :armenian_lower,\n      :armenian_upper,\n      :cyrillic_lower,\n      :ethiopic,\n      :georgian,\n      :greek_lower,\n      :greek_upper,\n      :hebrew,\n      :hebrew_item,\n      :roman_lower,\n      :roman_upper,\n      :tamil,\n      :zz_default\n    ]\n\nA rule can then be invoked on an available rule_set.  For example\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.roman_upper(123, :und)\n    \"CXXIII\"\n\nThis particular call is equivalent to the call through the public API of:\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string(123, format: :roman)\n    {:ok, \"CXXIII\"}","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.all_rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#all_rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.armenian_lower/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#armenian_lower/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.armenian_lower/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#armenian_lower/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.armenian_upper/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#armenian_upper/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.armenian_upper/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#armenian_upper/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower_1_10/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower_1_10/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower_final/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower_final/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower_post/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower_post/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.cyrillic_lower_thousands/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#cyrillic_lower_thousands/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic_p1/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic_p1/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic_p2/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic_p2/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic_p3/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic_p3/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.ethiopic_p/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#ethiopic_p/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.georgian/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#georgian/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.georgian/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#georgian/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_lower/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_lower/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_lower/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_lower/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_numeral_majuscules/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_numeral_majuscules/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_numeral_minuscules/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_numeral_minuscules/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_upper/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_upper/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.greek_upper/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#greek_upper/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew_0_99/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew_0_99/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew_item/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew_item/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew_item/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew_item/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew_item_hundreds/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew_item_hundreds/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.hebrew_thousands/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#hebrew_thousands/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.roman_lower/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#roman_lower/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.roman_lower/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#roman_lower/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.roman_upper/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#roman_upper/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.roman_upper/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#roman_upper/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.rule_sets/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#rule_sets/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.tamil/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#tamil/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.tamil/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#tamil/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.tamil_thousands/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#tamil_thousands/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.zz_default/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#zz_default/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.zz_default/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.NumberSystem.html#zz_default/2"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal","doc":"Functions to implement the ordinal rule-based-number-format rules of CLDR.\n\nAs CLDR notes, the data is incomplete or non-existent for many languages.  It\nis considered complete for English however.\n\nThe standard public API for RBNF is via the `Cldr.Number.to_string/2` function.\n\nThe functions on this module are defined at compile time based upon the RBNF rules\ndefined in the Unicode CLDR data repository.  Available rules are identified by:\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.rule_sets(:en)\n    [:digits_ordinal]\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.rule_sets(\"fr\")\n    ...> |> Enum.sort()\n    [\n      :digits_ordinal,\n      :digits_ordinal_feminine,\n      :digits_ordinal_feminine_plural,\n      :digits_ordinal_masculine,\n      :digits_ordinal_masculine_plural\n    ]\n\nA rule can then be invoked on an available rule_set.  For example\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal(123, :en)\n    \"123rd\"\n\nThis call is equivalent to the call through the public API of:\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string(123, format: :ordinal)\n    {:ok, \"123rd\"}","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.all_rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#all_rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_feminine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_feminine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_feminine_plural/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_feminine_plural/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_indicator_m/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_indicator_m/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_masculine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_masculine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_masculine_adjective/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_masculine_adjective/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.digits_ordinal_masculine_plural/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#digits_ordinal_masculine_plural/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.dord_femabbrev/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#dord_femabbrev/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.dord_mascabbrev/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#dord_mascabbrev/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.rule_sets/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Ordinal.html#rule_sets/1"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout","doc":"Functions to implement the spellout rule-based-number-format rules of CLDR.\n\nAs CLDR notes, the data is incomplete or non-existent for many languages.  It\nis considered complete for English however.\n\nThe standard public API for RBNF is via the `Cldr.Number.to_string/2` function.\n\nThe functions on this module are defined at compile time based upon the RBNF rules\ndefined in the Unicode CLDR data repository.  Available rules are identified by:\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.Spellout.rule_sets(\"en\")\n    ...> |> Enum.sort()\n    [\n      :spellout_cardinal,\n      :spellout_cardinal_verbose,\n      :spellout_numbering,\n      :spellout_numbering_verbose,\n      :spellout_numbering_year,\n      :spellout_ordinal,\n      :spellout_ordinal_verbose\n    ]\n\nA rule can then be invoked on an available rule_set. For example:\n\n    iex> Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal(123, \"en\")\n    \"one hundred twenty-third\"\n\nThis call is equivalent to the call through the public API of:\n\n    iex> Bonfire.Common.Localise.Cldr.Number.to_string(123, format: :spellout)\n    {:ok, \"one hundred twenty-three\"}","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.after_hundred/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#after_hundred/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.after_thousand_or_more/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#after_thousand_or_more/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.all_rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#all_rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.and/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#and/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.and_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#and_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.cents_f/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#cents_f/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.cents_m/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#cents_m/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.cents_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#cents_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.commas/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#commas/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.commas_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#commas_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.et_un/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#et_un/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.et_une/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#et_une/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.et_unieme/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#et_unieme/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.fem_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#fem_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.fem_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#fem_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.fem_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#fem_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.lenient_parse/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#lenient_parse/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.mille_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#mille_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_no_final/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_no_final/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_a_nofinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_a_nofinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_i_nofinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_i_nofinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msc_with_o_nofinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msc_with_o_nofinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msco_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msco_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msco_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msco_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.msco_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#msco_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esima/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esima/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esima_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esima_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esima_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esima_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esima_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esima_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esime/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esime/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esime_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esime_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esime_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esime_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esime_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esime_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimi/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimi/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimi_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimi_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimi_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimi_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimi_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimi_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimo/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimo/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimo_with_a/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimo_with_a/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimo_with_i/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimo_with_i/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.ordinal_esimo_with_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#ordinal_esimo_with_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.r2d_year/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#r2d_year/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.rule_sets/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#rule_sets/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.rule_sets/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#rule_sets/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal_feminine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal_feminine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal_feminine_cents/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal_feminine_cents/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal_masculine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal_masculine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal_masculine_cents/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal_masculine_cents/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_cardinal_verbose/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_cardinal_verbose/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_leading/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_leading/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_numbering/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_numbering/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_numbering_cents/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_numbering_cents/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_numbering_verbose/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_numbering_verbose/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_numbering_year/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_numbering_year/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_feminine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_feminine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_feminine_cont/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_feminine_cont/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_feminine_conts/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_feminine_conts/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_feminine_plural/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_feminine_plural/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_masculine/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_masculine/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_masculine_adjective/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_masculine_adjective/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_masculine_cont/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_masculine_cont/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_masculine_conts/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_masculine_conts/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_masculine_plural/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_masculine_plural/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.spellout_ordinal_verbose/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#spellout_ordinal_verbose/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.subcents_f/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#subcents_f/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.subcents_m/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#subcents_m/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.subcents_o/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#subcents_o/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.teen/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#teen/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.th/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#th/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.tieth/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#tieth/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.x_ty/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Rbnf.Spellout.html#x_ty/2"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Time","doc":"","ref":"Bonfire.Common.Localise.Cldr.Time.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.to_string/2","doc":"Formats a time according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html)","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string/2"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Time.to_string/2","doc":"* `{:ok, formatted_time}` or\n\n* `{:error, reason}`.","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string/2-returns"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Time.to_string/2","doc":"* `time` is a `%DateTime{}` or `%NaiveDateTime{}` struct or any map that contains the keys\n  `hour`, `minute`, `second` and optionally `calendar` and `microsecond`\n\n* `options` is a keyword list of options for formatting.","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Time.to_string/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string.\n   The default is `:medium`.\n\n* `locale:` any locale returned by `Cldr.known_locale_names/1`.  The default is `\n  Cldr.get_locale()`.\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated.\n\n* `era: :variant` will use a variant for the era is one is available in the locale.\n  In the \"en\" locale, for example, `era: :variant` will return \"BCE\" instead of \"BC\".\n\n* `period: :variant` will use a variant for the time period and flexible time period if\n  one is available in the locale.  For example, in the \"en\" locale `period: :variant` will\n  return \"pm\" instead of \"PM\".","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Time.to_string/2","doc":"iex> Cldr.Time.to_string ~T[07:35:13.215217]\n    {:ok, \"7:35:13 AM\"}\n\n    iex> Cldr.Time.to_string ~T[07:35:13.215217], format: :short\n    {:ok, \"7:35 AM\"}\n\n    iex> Cldr.Time.to_string ~T[07:35:13.215217], format: :medium, locale: \"fr\"\n    {:ok, \"07:35:13\"}\n\n    iex> Cldr.Time.to_string ~T[07:35:13.215217], format: :medium\n    {:ok, \"7:35:13 AM\"}\n\n    iex> {:ok, datetime} = DateTime.from_naive(~N[2000-01-01 23:59:59.0], \"Etc/UTC\")\n    iex> Cldr.Time.to_string datetime, format: :long\n    {:ok, \"11:59:59 PM UTC\"}","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.to_string!/2","doc":"Formats a time according to a format string\nas defined in CLDR and described in [TR35](http://unicode.org/reports/tr35/tr35-dates.html).","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Time.to_string!/2","doc":"* `time` is a `%DateTime{}` or `%NaiveDateTime{}` struct or any map that contains the keys\n  `hour`, `minute`, `second` and optionally `calendar` and `microsecond`\n\n* `options` is a keyword list of options for formatting.","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Time.to_string!/2","doc":"* `format:` `:short` | `:medium` | `:long` | `:full` or a format string.\n     The default is `:medium`.\n\n  * `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n    or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n  * `number_system:` a number system into which the formatted date digits should\n    be transliterated.\n\n  * `era: :variant` will use a variant for the era is one is available in the locale.\n    In the \"en\" locale, for example, `era: :variant` will return \"BCE\" instead of \"BC\".\n\n  * `period: :variant` will use a variant for the time period and flexible time period if\n    one is available in the locale.  For example, in the \"en\" locale `period: :variant` will\n    return \"pm\" instead of \"PM\".","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Time.to_string!/2","doc":"* `formatted_time_string` or\n\n* raises an exception.","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Time.to_string!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Time.to_string! ~T[07:35:13.215217]\n    \"7:35:13 AM\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.to_string! ~T[07:35:13.215217], format: :short\n    \"7:35 AM\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.to_string ~T[07:35:13.215217], format: :short, period: :variant\n    {:ok, \"7:35 AM\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.to_string! ~T[07:35:13.215217], format: :medium, locale: \"fr\"\n    \"07:35:13\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.to_string! ~T[07:35:13.215217], format: :medium\n    \"7:35:13 AM\"\n\n    iex> {:ok, datetime} = DateTime.from_naive(~N[2000-01-01 23:59:59.0], \"Etc/UTC\")\n    iex> Bonfire.Common.Localise.Cldr.Time.to_string! datetime, format: :long\n    \"11:59:59 PM UTC\"","ref":"Bonfire.Common.Localise.Cldr.Time.html#to_string!/2-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Time.Interval","doc":"Interval formats allow for software to format intervals like \"Jan 10-12, 2008\" as a\nshorter and more natural format than \"Jan 10, 2008 - Jan 12, 2008\". They are designed\nto take a start and end date, time or datetime plus a formatting pattern\nand use that information to produce a localized format.\n\nSee `Cldr.Interval.to_string/3` and `Cldr.Time.Interval.to_string/3`","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.Interval.do_to_string/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#do_to_string/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.Interval.do_to_string!/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#do_to_string!/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"Returns a string representing the formatted\ninterval formed by two times.","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"* `from` is any map that conforms to the\n  `Calendar.time` type.\n\n* `to` is any map that conforms to the\n  `Calendar.time` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :time]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone time.","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The\n  alternatives are `:time`, `:zone`,\n  and `:flex`. The default is `:time`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"* `{:ok, string}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configured locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  time is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Time.Interval.to_string/3","doc":"iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], ~T[10:03:00], format: :short\n    {:ok, \"10 – 10 AM\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], ~T[10:03:00], format: :medium\n    {:ok, \"10:00 – 10:03 AM\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], ~T[10:03:00], format: :long\n    {:ok, \"10:00 – 10:03 AM\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], ~T[10:03:00],\n    ...> format: :long, style: :flex\n    {:ok, \"10:00 – 10:03 in the morning\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:00:00.0Z],\n    ...> format: :long, style: :flex\n    {:ok, \"12:00 – 10:00 in the morning\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:00:00.0Z],\n    ...> format: :long, style: :zone\n    {:ok, \"12:00 – 10:00 AM Etc/UTC\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], ~T[10:03:00],\n    ...> format: :long, style: :flex, locale: \"th\"\n    {:ok, \"10:00 – 10:03 ในตอนเช้า\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string ~T[10:00:00], nil\n    {:ok, \"10:00:00 AM –\"}","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string/3-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"Returns a string representing the formatted\ninterval formed by two times or raises an\nexception.","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"* `from` is any map that conforms to the\n  `Calendar.time` type.\n\n* `to` is any map that conforms to the\n  `Calendar.time` type. `to` must occur\n  on or after `from`.\n\n* `options` is a keyword list of options. The default is\n  `[format: :medium, style: :time]`.\n\nEither `from` or `to` may also be `nil`, in which case an\nopen interval is formatted and the non-nil item is formatted\nas a standalone time.","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"* `:format` is one of `:short`, `:medium` or `:long` or a\n  specific format type or a string representing of an interval\n  format. The default is `:medium`.\n\n* `:style` supports dfferent formatting styles. The\n  alternatives are `:time`, `:zone`,\n  and `:flex`. The default is `:time`.\n\n* `locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Elixir.Bonfire.Common.Localise.Cldr.get_locale/0`\n\n* `number_system:` a number system into which the formatted date digits should\n  be transliterated","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"* `string` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"* For more information on interval format string\n  see `Cldr.Interval`.\n\n* The available predefined formats that can be applied are the\n  keys of the map returned by `Cldr.DateTime.Format.interval_formats(\"en\", :gregorian)`\n  where `\"en\"` can be replaced by any configured locale name and `:gregorian`\n  is the underlying CLDR calendar type.\n\n* In the case where `from` and `to` are equal, a single\n  time is formatted instead of an interval","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Time.Interval.to_string!/3","doc":"iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~T[10:00:00], ~T[10:03:00], format: :short\n    \"10 – 10 AM\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~T[10:00:00], ~T[10:03:00], format: :medium\n    \"10:00 – 10:03 AM\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~T[10:00:00], ~T[10:03:00], format: :long\n    \"10:00 – 10:03 AM\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~T[10:00:00], ~T[10:03:00],\n    ...> format: :long, style: :flex\n    \"10:00 – 10:03 in the morning\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:00:00.0Z],\n    ...> format: :long, style: :flex\n    \"12:00 – 10:00 in the morning\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~U[2020-01-01 00:00:00.0Z], ~U[2020-01-01 10:00:00.0Z],\n    ...> format: :long, style: :zone\n    \"12:00 – 10:00 AM Etc/UTC\"\n\n    iex> Bonfire.Common.Localise.Cldr.Time.Interval.to_string! ~T[10:00:00], ~T[10:03:00],\n    ...> format: :long, style: :flex, locale: \"th\"\n    \"10:00 – 10:03 ในตอนเช้า\"","ref":"Bonfire.Common.Localise.Cldr.Time.Interval.html#to_string!/3-examples"},{"type":"module","title":"Bonfire.Common.Localise.Cldr.Unit","doc":"Supports the CLDR Units definitions which provide for the localization of many\nunit types.","ref":"Bonfire.Common.Localise.Cldr.Unit.html"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.add/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#add/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.add!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#add!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.compatible?/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#compatible?/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.convert/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#convert/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.convert!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#convert!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.decompose/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#decompose/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.default_gender/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#default_gender/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.default_style/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#default_style/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.display_name/2","doc":"Returns the localized display name\nfor a unit.\n\nThe returned text is generally suitable\nfor including in UI elements such as\nselection boxes.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#display_name/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.display_name/2","doc":"* `unit` is any `t:Cldr.Unit` or any\n  unit name returned by `Cldr.Unit.known_units/0`.\n\n* `options` is a keyword list of options.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#display_name/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.display_name/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`.\n\n* `:style` is one of those returned by `Cldr.Unit.available_styles`.\n  The current styles are `:long`, `:short` and `:narrow`.\n  The default is `style: :long`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#display_name/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.display_name/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.display_name :liter\n    \"liters\"\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.display_name :liter, locale: \"fr\"\n    \"litres\"\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.display_name :liter, locale: \"fr\", style: :short\n    \"l\"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#display_name/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.div/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#div/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.div!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#div!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.grammatical_features/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#grammatical_features/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.grammatical_gender/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#grammatical_gender/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.known_styles/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#known_styles/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.known_unit_categories/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#known_unit_categories/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.known_units/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#known_units/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.localize/1","doc":"Localizes a unit according to the current\nprocesses locale and backend.\n\nThe current process's locale is set with\n`Cldr.put_locale/1`.\n\nSee `Cldr.Unit.localize/3` for further\ndetails.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#localize/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.localize/2","doc":"Localizes a unit according to a territory\n\nA territory can be derived from a `t:Cldr.Locale.locale_name`\nor `t:Cldr.LangaugeTag`.\n\nUse this function if you have a unit which\nshould be presented in a user interface using\nunits relevant to the audience. For example, a\nunit `#Cldr.Unit100, :meter>` might be better\npresented to a US audience as `#Cldr.Unit `.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#localize/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.localize/2","doc":"* `unit` is any unit returned by `Cldr.Unit.new/2`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Unit.html#localize/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.localize/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `backend.get_locale/0`\n\n* `:territory` is any valid territory code returned by\n  `Cldr.known_territories/0`. The default is the territory defined\n  as part of the `:locale`. The option `:territory` has a precedence\n  over the territory in a locale.\n\n* `:usage` is the way in which the unit is intended\n  to be used.  The available `usage` varyies according\n  to the unit category.  See `Cldr.Unit.preferred_units/3`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#localize/2-options"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.localize/2","doc":"iex> unit = Cldr.Unit.new!(1.83, :meter)\n    iex> Bonfire.Common.Localise.Cldr.Unit.localize(unit, usage: :person_height, territory: :US)\n    [\n      Cldr.Unit.new!(:foot, 6, usage: :person_height),\n      Cldr.Unit.new!(:inch, \"0.04724409448818897637795275598\", usage: :person_height)\n    ]","ref":"Bonfire.Common.Localise.Cldr.Unit.html#localize/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system?/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system?/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_for/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_for/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_for/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_for/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_for_territory/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_for_territory/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_for_territory/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_for_territory/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_from_locale/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_from_locale/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_from_locale/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_from_locale/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_system_from_locale/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_system_from_locale/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.measurement_systems_for_unit/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#measurement_systems_for_unit/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.mult/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#mult/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.mult!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#mult!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.new/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#new/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.new!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#new!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.parse/2","doc":"Parse a string to create a new unit.\n\nThis function attempts to parse a string\ninto a `number` and `unit type`. If successful\nit attempts to create a new unit using\n`Cldr.Unit.new/3`.\n\nThe parsed `unit type` is aliased against all the\nknown unit names for a give locale (or the current\nlocale if no locale is specified). The known\naliases for unit types can be returned with\n`MyApp.Cldr.Unit.unit_strings_for/1` where `MyApp.Cldr`\nis the name of a backend module.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.parse/2","doc":"* `unit string` is any string to be parsed and if\n  possible used to create a new `t:Cldr.Unit`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.parse/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.parse/2","doc":"* `{:ok, unit}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.parse/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.parse \"1kg\"\n    Cldr.Unit.new(1, :kilogram)\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse \"1 tages\", locale: \"de\"\n    Cldr.Unit.new(1, :day)\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse \"1 tag\", locale: \"de\"\n    Cldr.Unit.new(1, :day)\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse(\"42 millispangels\")\n    {:error, {Cldr.UnknownUnitError, \"Unknown unit was detected at \\\"spangels\\\"\"}}","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.parse!/2","doc":"Parse a string to create a new unit or\nraises an exception.\n\nThis function attempts to parse a string\ninto a `number` and `unit type`. If successful\nit attempts to create a new unit using\n`Cldr.Unit.new/3`.\n\nThe parsed `unit type` is un-aliased against all the\nknown unit names for a give locale (or the current\nlocale if no locale is specified). The known\naliases for unit types can be returned with\n`MyApp.Cldr.Unit.unit_strings_for/1` where `MyApp.Cldr`\nis the name of a backend module.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.parse!/2","doc":"* `unit string` is any string to be parsed and if\n  possible used to create a new `t:Cldr.Unit`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.parse!/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.parse!/2","doc":"* `unit` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.parse!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.parse! \"1kg\"\n    Cldr.Unit.new!(1, :kilogram)\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse! \"1 tages\", locale: \"de\"\n    Cldr.Unit.new!(1, :day)\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse!(\"42 candela per lux\")\n    Cldr.Unit.new!(42, \"candela per lux\")\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse!(\"42 millispangels\")\n    ** (Cldr.UnknownUnitError) Unknown unit was detected at \"spangels\"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"Parse a string to find a matching unit-atom.\n\nThis function attempts to parse a string and\nextract the `unit type`.\n\nThe parsed `unit type` is aliased against all the\nknown unit names for a give locale (or the current\nlocale if no locale is specified). The known\naliases for unit types can be returned with\n`MyApp.Cldr.Unit.unit_strings_for/1` where `MyApp.Cldr`\nis the name of a backend module.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"* `unit_name_string` is any string to be parsed and converted into a `unit type`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag` struct. The default is `Cldr.get_locale/0`\n\n* `:backend` is any module that includes `use Cldr` and therefore\n  is a `Cldr` backend module. The default is `Cldr.default_backend!/0`.\n\n* `:only` is a unit category or unit, or a list of unit categories and units.\n  The parsed unit must match one of the categories or units in order to\n  be valid. This is helpful when disambiguating parsed units. For example,\n  parsing \"w\" could be either `:watt` or `:weeks`. Specifying `only: :duration`\n  would return `:weeks`. Specifying `only: :power` would return `:watt`\n\n* `:except` is the oppostte of `:only`. The parsed unit must *not*\n  match the specified unit or category, or unit categories and units.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"* `{:ok, unit_name}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"* When both `:only` and `:except` options are passed, both\n  conditions must be true in order to return a parsed result.\n\n* Only units returned by `Cldr.Unit.known_units/0` can be\n  used in the `:only` and `:except` filters.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"kg\"\n    {:ok, :kilogram}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"w\"\n    {:ok, :watt}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"w\", only: :duration\n    {:ok, :week}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"m\", only: [:year, :month, :day]\n    {:ok, :month}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"tages\", locale: \"de\"\n    {:ok, :day}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name \"tag\", locale: \"de\"\n    {:ok, :day}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name(\"millispangels\")\n    {:error, {Cldr.UnknownUnitError, \"Unknown unit was detected at \\\"spangels\\\"\"}}","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"Parse a string to find a matching unit-atom.\n\nThis function attempts to parse a string and\nextract the `unit type`.\n\nThe parsed `unit type` is aliased against all the\nknown unit names for a give locale (or the current\nlocale if no locale is specified). The known\naliases for unit types can be returned with\n`MyApp.Cldr.Unit.unit_strings_for/1` where `MyApp.Cldr`\nis the name of a backend module.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"* `unit_name_string` is any string to be parsed and converted into a `unit type`\n\n* `options` is a keyword list of options","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `t:Cldr.LanguageTag` struct. The default is `Cldr.get_locale/0`\n\n* `:backend` is any module that includes `use Cldr` and therefore\n  is a `Cldr` backend module. The default is `Cldr.default_backend!/0`.\n\n* `:only` is a unit category or unit, or a list of unit categories and units.\n  The parsed unit must match one of the categories or units in order to\n  be valid. This is helpful when disambiguating parsed units. For example,\n  parsing \"w\" could be either `watts` or `:week`. Specifying `only: :duration`\n  would return `:week`. Specifying `only: :power` would return `:watts`\n\n* `:except` is the oppostte of `:only`. The parsed unit must *not*\n  match the specified unit or category, or unit categories and units.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"* `unit_name` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"* When both `:only` and `:except` options are passed, both\n  conditions must be true in order to return a parsed result.\n\n* Only units returned by `Cldr.Unit.known_units/0` can be\n  used in the `:only` and `:except` filters.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"kg\"\n    :kilogram\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"w\"\n    :watt\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"w\", only: :duration\n    :week\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"m\", only: [:year, :month, :day]\n    :month\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"tages\", locale: \"de\"\n    :day\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name! \"tag\", locale: \"de\"\n    :day\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.parse_unit_name!(\"millispangels\")\n    ** (Cldr.UnknownUnitError) Unknown unit was detected at \"spangels\"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#parse_unit_name!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"Returns a list of the preferred units for a given\nunit, locale, use case and scope.\n\nThe units used to represent length, volume and so on\ndepend on a given territory, measurement system and usage.\n\nFor example, in the US, people height is most commonly\nreferred to in `inches`, or informally as `feet and inches`.\nIn most of the rest of the world it is `centimeters`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"* `unit` is any unit returned by `Cldr.Unit.new/2`.\n\n* `backend` is any Cldr backend module. That is, any module\n  that includes `use Cldr`. The default is `Cldr.default_backend/0`\n\n* `options` is a keyword list of options or a\n  `Cldr.Unit.Conversion.Options` struct. The default\n  is `[]`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"* `:usage` is the unit usage. for example `;person` for a unit\n  type of length. The available usage for a given unit category can\n  be seen with `Cldr.Unit.unit_category_usage/0`. The default is `nil`\n\n* `:scope` is either `:small` or `nil`. In some usage, the units\n  used are different when the unit size is small. It is up to the\n  developer to determine when `scope: :small` is appropriate.\n\n* `:alt` is either `:informal` or `nil`. Like `:scope`, the units\n  in use depend on whether they are being used in a formal or informal\n  context.\n\n* `:locale` is any locale returned by `Cldr.validate_locale/2`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"* `{:ok, unit_list, formatting_options}` or\n\n* `{:error, {exception, reason}}`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2-returns"},{"type":"function","title":"Notes - Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"`formatting_options` is a keyword list of options\nthat can be passed to `Cldr.Unit.to_string/3`. Its\nprimary intended usage is for localizing a unit that\ndecomposes into more than one unit (for example when\n2 meters might become 6 feet 6 inches.) In such\ncases, the last unit in the list (in this case the\ninches) is formatted with the `formatting_options`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2-notes"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.preferred_units/2","doc":"iex> meter = Cldr.Unit.new!(:meter, 1)\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units meter, locale: \"en-US\", usage: :person_height\n    {:ok, [:foot, :inch], []}\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units meter, locale: \"en-US\", usage: :person\n    {:ok, [:inch], []}\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units meter, locale: \"en-AU\", usage: :person\n    {:ok, [:centimeter], []}\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units meter, locale: \"en-US\", usage: :road\n    {:ok, [:foot], [round_nearest: 1]}\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units meter, locale: \"en-AU\", usage: :road\n    {:ok, [:meter], [round_nearest: 1]}","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.preferred_units!/2","doc":"Returns a list of the preferred units for a given\nunit, locale, use case and scope.\n\nThe units used to represent length, volume and so on\ndepend on a given territory, measurement system and usage.\n\nFor example, in the US, people height is most commonly\nreferred to in `inches`, or informally as `feet and inches`.\nIn most of the rest of the world it is `centimeters`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.preferred_units!/2","doc":"* `unit` is any unit returned by `Cldr.Unit.new/2`.\n\n* `backend` is any Cldr backend module. That is, any module\n  that includes `use Cldr`. The default is `Cldr.default_backend/0`\n\n* `options` is a keyword list of options or a\n  `Cldr.Unit.Conversion.Options` struct. The default\n  is `[]`.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.preferred_units!/2","doc":"* `:usage` is the unit usage. for example `;person` for a unit\n  type of length. The available usage for a given unit category can\n  be seen with `Cldr.Unit.unit_category_usage/0`. The default is `nil`\n\n* `:scope` is either `:small` or `nil`. In some usage, the units\n  used are different when the unit size is small. It is up to the\n  developer to determine when `scope: :small` is appropriate.\n\n* `:alt` is either `:informal` or `nil`. Like `:scope`, the units\n  in use depend on whether they are being used in a formal or informal\n  context.\n\n* `:locale` is any locale returned by `Cldr.validate_locale/2`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.preferred_units!/2","doc":"* `unit_list` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.preferred_units!/2","doc":"iex> meter = Cldr.Unit.new!(:meter, 2)\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units! meter, locale: \"en-US\", usage: :person_height\n    [:foot, :inch]\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units! meter, locale: \"en-AU\", usage: :person\n    [:centimeter]\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units! meter, locale: \"en-US\", usage: :road\n    [:foot]\n    iex> Bonfire.Common.Localise.Cldr.Unit.preferred_units! meter, locale: \"en-AU\", usage: :road\n    [:meter]","ref":"Bonfire.Common.Localise.Cldr.Unit.html#preferred_units!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.round/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#round/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.round/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#round/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.round/3","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#round/3"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.styles/0","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#styles/0"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.sub/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#sub/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.sub!/2","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#sub!/2"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.to_iolist/2","doc":"Formats a number into an iolist according to a unit definition\nfor a locale.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.to_iolist/2","doc":"* `list_or_number` is any number (integer, float or Decimal) or a\n  `t:Cldr.Unit` struct or a list of `t:Cldr.Unit` structs\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.to_iolist/2","doc":"* `:unit` is any unit returned by `Cldr.Unit.known_units/0`. Ignored if\n  the number to be formatted is a `t:Cldr.Unit` struct\n\n* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n* `:style` is one of those returned by `Cldr.Unit.known_styles`.\n  The current styles are `:long`, `:short` and `:narrow`.\n  The default is `style: :long`\n\n* `:grammatical_case` indicates that a localisation for the given\n  locale and given grammatical case should be used. See `Cldr.Unit.known_grammatical_cases/0`\n  for the list of known grammatical cases. Note that not all locales\n  define all cases. However all locales do define the `:nominative`\n  case, which is also the default.\n\n* `:gender` indicates that a localisation for the given\n  locale and given grammatical gender should be used. See `Cldr.Unit.known_grammatical_genders/0`\n  for the list of known grammatical genders. Note that not all locales\n  define all genders. The default gender is `Bonfire.Common.Localise.Cldr.Unit.default_gender/1`\n  for the given locale.\n\n* `:list_options` is a keyword list of options for formatting a list\n  which is passed through to `Cldr.List.to_string/3`. This is only\n  applicable when formatting a list of units.\n\n* Any other options are passed to `Cldr.Number.to_string/2`\n  which is used to format the `number`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.to_iolist/2","doc":"* `{:ok, io_list}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.to_iolist/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.to_iolist Cldr.Unit.new!(:gallon, 123)\n    {:ok, [\"123\", \" gallons\"]}","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.to_iolist!/2","doc":"Formats a unit using `to_iolist/3` but raises if there is\nan error.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.to_iolist!/2","doc":"* `list_or_number` is any number (integer, float or Decimal) or a\n  `t:Cldr.Unit` struct or a list of `t:Cldr.Unit` structs\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.to_iolist!/2","doc":"* `:unit` is any unit returned by `Cldr.Unit.known_units/0`. Ignored if\n  the number to be formatted is a `t:Cldr.Unit` struct\n\n* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n* `:style` is one of those returned by `Cldr.Unit.known_styles/0`.\n  The current styles are `:long`, `:short` and `:narrow`.\n  The default is `style: :long`.\n\n* `:grammatical_case` indicates that a localisation for the given\n  locale and given grammatical case should be used. See `Cldr.Unit.known_grammatical_cases/0`\n  for the list of known grammatical cases. Note that not all locales\n  define all cases. However all locales do define the `:nominative`\n  case, which is also the default.\n\n* `:gender` indicates that a localisation for the given\n  locale and given grammatical gender should be used. See `Cldr.Unit.known_grammatical_genders/0`\n  for the list of known grammatical genders. Note that not all locales\n  define all genders. The default gender is `Bonfire.Common.Localise.Cldr.Unit.default_gender/1`\n  for the given locale.\n\n* `:list_options` is a keyword list of options for formatting a list\n  which is passed through to `Cldr.List.to_string/3`. This is only\n  applicable when formatting a list of units.\n\n* Any other options are passed to `Cldr.Number.to_string/2`\n  which is used to format the `number`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.to_iolist!/2","doc":"* `io_list` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.to_iolist!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.to_iolist! 123, unit: :gallon\n    [\"123\", \" gallons\"]","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_iolist!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.to_string/2","doc":"Formats a number into a string according to a unit definition for a locale.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.to_string/2","doc":"* `list_or_number` is any number (integer, float or Decimal) or a\n  `t:Cldr.Unit` struct or a list of `t:Cldr.Unit` structs\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.to_string/2","doc":"* `:unit` is any unit returned by `Cldr.Unit.known_units/0`. Ignored if\n  the number to be formatted is a `t:Cldr.Unit` struct\n\n* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n* `:style` is one of those returned by `Cldr.Unit.known_styles`.\n  The current styles are `:long`, `:short` and `:narrow`.\n  The default is `style: :long`\n\n* `:grammatical_case` indicates that a localisation for the given\n  locale and given grammatical case should be used. See `Cldr.Unit.known_grammatical_cases/0`\n  for the list of known grammatical cases. Note that not all locales\n  define all cases. However all locales do define the `:nominative`\n  case, which is also the default.\n\n* `:gender` indicates that a localisation for the given\n  locale and given grammatical gender should be used. See `Cldr.Unit.known_grammatical_genders/0`\n  for the list of known grammatical genders. Note that not all locales\n  define all genders. The default gender is `Bonfire.Common.Localise.Cldr.Unit.default_gender/1`\n  for the given locale.\n\n* `:list_options` is a keyword list of options for formatting a list\n  which is passed through to `Cldr.List.to_string/3`. This is only\n  applicable when formatting a list of units.\n\n* Any other options are passed to `Cldr.Number.to_string/2`\n  which is used to format the `number`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.to_string/2","doc":"* `{:ok, formatted_string}` or\n\n* `{:error, {exception, message}}`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.to_string/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 123)\n    {:ok, \"123 gallons\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1)\n    {:ok, \"1 gallon\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1), locale: \"af\"\n    {:ok, \"1 gelling\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1), locale: \"af-NA\"\n    {:ok, \"1 gelling\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1), locale: \"bs\"\n    {:ok, \"1 galon\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1234), format: :long\n    {:ok, \"1 thousand gallons\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:gallon, 1234), format: :short\n    {:ok, \"1K gallons\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:megahertz, 1234)\n    {:ok, \"1,234 megahertz\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:megahertz, 1234), style: :narrow\n    {:ok, \"1,234MHz\"}\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string Cldr.Unit.new!(:megabyte, 1234), locale: \"en\", style: :unknown\n    {:error, {Cldr.UnknownFormatError, \"The unit style :unknown is not known.\"}}","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.to_string!/2","doc":"Formats a list using `to_string/3` but raises if there is\nan error.","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string!/2"},{"type":"function","title":"Arguments - Bonfire.Common.Localise.Cldr.Unit.to_string!/2","doc":"* `list_or_number` is any number (integer, float or Decimal) or a\n  `t:Cldr.Unit` struct or a list of `t:Cldr.Unit` structs\n\n* `options` is a keyword list","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string!/2-arguments"},{"type":"function","title":"Options - Bonfire.Common.Localise.Cldr.Unit.to_string!/2","doc":"* `:unit` is any unit returned by `Cldr.Unit.known_units/0`. Ignored if\n  the number to be formatted is a `t:Cldr.Unit` struct\n\n* `:locale` is any valid locale name returned by `Cldr.known_locale_names/0`\n  or a `Cldr.LanguageTag` struct.  The default is `Cldr.get_locale/0`\n\n* `:style` is one of those returned by `Cldr.Unit.known_styles`.\n  The current styles are `:long`, `:short` and `:narrow`.\n  The default is `style: :long`\n\n* `:grammatical_case` indicates that a localisation for the given\n  locale and given grammatical case should be used. See `Cldr.Unit.known_grammatical_cases/0`\n  for the list of known grammatical cases. Note that not all locales\n  define all cases. However all locales do define the `:nominative`\n  case, which is also the default.\n\n* `:gender` indicates that a localisation for the given\n  locale and given grammatical gender should be used. See `Cldr.Unit.known_grammatical_genders/0`\n  for the list of known grammatical genders. Note that not all locales\n  define all genders. The default gender is `Bonfire.Common.Localise.Cldr.Unit.default_gender/1`\n  for the given locale.\n\n* `:list_options` is a keyword list of options for formatting a list\n  which is passed through to `Cldr.List.to_string/3`. This is only\n  applicable when formatting a list of units.\n\n* Any other options are passed to `Cldr.Number.to_string/2`\n  which is used to format the `number`","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string!/2-options"},{"type":"function","title":"Returns - Bonfire.Common.Localise.Cldr.Unit.to_string!/2","doc":"* `formatted_string` or\n\n* raises an exception","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string!/2-returns"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Cldr.Unit.to_string!/2","doc":"iex> Bonfire.Common.Localise.Cldr.Unit.to_string! 123, unit: :gallon\n    \"123 gallons\"\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string! 1, unit: :gallon\n    \"1 gallon\"\n\n    iex> Bonfire.Common.Localise.Cldr.Unit.to_string! 1, unit: :gallon, locale: \"af\"\n    \"1 gelling\"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#to_string!/2-examples"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.unit_category/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#unit_category/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.unit_strings_for/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#unit_strings_for/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.validate_style/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#validate_style/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.validate_unit/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#validate_unit/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.value/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#value/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.zero/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#zero/1"},{"type":"function","title":"Bonfire.Common.Localise.Cldr.Unit.zero?/1","doc":"","ref":"Bonfire.Common.Localise.Cldr.Unit.html#zero?/1"},{"type":"module","title":"Bonfire.Common.Localise.Gettext","doc":"Default Gettext module\nIt is recommended to use the more convenient macros in `Bonfire.Common.Localise.Gettext.Helpers` instead.","ref":"Bonfire.Common.Localise.Gettext.html"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dgettext/3","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dgettext/3"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dgettext_noop/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dgettext_noop/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dngettext/5","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dngettext/5"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dngettext_noop/3","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dngettext_noop/3"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dpgettext/4","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpgettext/4"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dpgettext_noop/3","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpgettext_noop/3"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dpngettext/6","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpngettext/6"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.dpngettext_noop/4","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpngettext_noop/4"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.gettext/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#gettext/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.gettext_comment/1","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#gettext_comment/1"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.gettext_noop/1","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#gettext_noop/1"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.handle_missing_bindings/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_bindings/2"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.handle_missing_plural_translation/7","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_plural_translation/7"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.handle_missing_translation/5","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_translation/5"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.lgettext/5","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#lgettext/5"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.lngettext/7","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#lngettext/7"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.ngettext/4","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#ngettext/4"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.ngettext_noop/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#ngettext_noop/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.pgettext/3","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pgettext/3"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.pgettext_noop/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pgettext_noop/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.pngettext/5","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pngettext/5"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.pngettext_noop/3","doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pngettext_noop/3"},{"type":"module","title":"Bonfire.Common.Localise.Gettext.Helpers","doc":"A module providing Internationalization with a gettext-based API.\n\nBy using [Gettext](https://hexdocs.pm/gettext),\nyour module gains a set of macros for translations, for example:\n\n    import Bonfire.Common.Localise.Gettext\n\n    # Simple translation\n\n    usage:\n       \n       \n       \n\n\n    output:\n      Hello\n      Hello Bookchin\n      Hi\n\n\n    # Plural translation\n\n    usage:\n       \n       \n\n    output:\n      Hi friends\n      Hiya Bookchin\n\nSee the [Gettext Docs](https://hexdocs.pm/gettext) for details.","ref":"Bonfire.Common.Localise.Gettext.Helpers.html"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.Helpers.l/4","doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#l/4"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.Helpers.localise_dynamic/2","doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#localise_dynamic/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.Helpers.localise_strings/2","doc":"Localise a list of strings at compile time","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#localise_strings/2"},{"type":"macro","title":"Bonfire.Common.Localise.Gettext.Helpers.lp/6","doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#lp/6"},{"type":"module","title":"Bonfire.Common.Localise.Gettext.Plural","doc":"Defines a plural forms module for Gettext that uses CLDR plural rules\nhttps://cldr.unicode.org/index/cldr-spec/plural-rules","ref":"Bonfire.Common.Localise.Gettext.Plural.html"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.Plural.nplurals/1","doc":"Returns the number of plural forms for a given locale.\n\n* `locale` is either a locale name in the list\n  `{:__aliases__, [counter: {Bonfire.Common.Localise.Gettext.Plural, 2}, line: 6, column: 42], [:Bonfire, :Common, :Localise, :Cldr]}.known_locale_names/0` or\n  a `%LanguageTag{}` as returned by `Cldr.Locale.new/2`","ref":"Bonfire.Common.Localise.Gettext.Plural.html#nplurals/1"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Gettext.Plural.nplurals/1","doc":"iex> Bonfire.Common.Localise.Gettext.Plural.nplurals(\"pl\")\n    4\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.nplurals(\"en\")\n    2","ref":"Bonfire.Common.Localise.Gettext.Plural.html#nplurals/1-examples"},{"type":"function","title":"Bonfire.Common.Localise.Gettext.Plural.plural/2","doc":"Returns the plural form of a number for a given\nlocale.\n\n* `locale` is either a locale name in the list `{:__aliases__, [counter: {Bonfire.Common.Localise.Gettext.Plural, 2}, line: 6, column: 42], [:Bonfire, :Common, :Localise, :Cldr]}.known_locale_names/0` or\n  a `%LanguageTag{}` as returned by `Cldr.Locale.new/2`","ref":"Bonfire.Common.Localise.Gettext.Plural.html#plural/2"},{"type":"function","title":"Examples - Bonfire.Common.Localise.Gettext.Plural.plural/2","doc":"iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"pl\", 1)\n    0\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"pl\", 2)\n    1\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"pl\", 5)\n    2\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"pl\", 112)\n    2\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"en\", 1)\n    0\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"en\", 2)\n    1\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"en\", 112)\n    1\n\n    iex> Bonfire.Common.Localise.Gettext.Plural.plural(\"en_GB\", 112)\n    1","ref":"Bonfire.Common.Localise.Gettext.Plural.html#plural/2-examples"},{"type":"module","title":"Bonfire.Common.Media","doc":"Helpers for handling images and media URLs","ref":"Bonfire.Common.Media.html"},{"type":"function","title":"Bonfire.Common.Media.avatar_fallback/1","doc":"","ref":"Bonfire.Common.Media.html#avatar_fallback/1"},{"type":"function","title":"Bonfire.Common.Media.avatar_media/1","doc":"Takes a Media map (or an object containing one) and returns the avatar's URL.","ref":"Bonfire.Common.Media.html#avatar_media/1"},{"type":"function","title":"Bonfire.Common.Media.avatar_url/1","doc":"","ref":"Bonfire.Common.Media.html#avatar_url/1"},{"type":"function","title":"Bonfire.Common.Media.banner_fallback/0","doc":"","ref":"Bonfire.Common.Media.html#banner_fallback/0"},{"type":"function","title":"Bonfire.Common.Media.banner_url/1","doc":"Takes a Media map (or an object containing one) and returns the banner's URL.","ref":"Bonfire.Common.Media.html#banner_url/1"},{"type":"function","title":"Bonfire.Common.Media.extract_tar/2","doc":"Returns a map containing all files and their contents from a tar or compressed tar.gz archive.","ref":"Bonfire.Common.Media.html#extract_tar/2"},{"type":"function","title":"Bonfire.Common.Media.image_url/1","doc":"Takes a Media map (or an object containing one) and returns the image's URL.","ref":"Bonfire.Common.Media.html#image_url/1"},{"type":"function","title":"Bonfire.Common.Media.maybe_dominant_color/4","doc":"","ref":"Bonfire.Common.Media.html#maybe_dominant_color/4"},{"type":"function","title":"Bonfire.Common.Media.media_url/1","doc":"Takes a Media map (or an object containing one) and returns a URL for the media","ref":"Bonfire.Common.Media.html#media_url/1"},{"type":"function","title":"Bonfire.Common.Media.read_tar_files/3","doc":"","ref":"Bonfire.Common.Media.html#read_tar_files/3"},{"type":"function","title":"Bonfire.Common.Media.thumbnail_url/1","doc":"","ref":"Bonfire.Common.Media.html#thumbnail_url/1"},{"type":"module","title":"Bonfire.Common.Modularity.DeclareHelpers","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html"},{"type":"function","title":"Bonfire.Common.Modularity.DeclareHelpers.app/1","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#app/1"},{"type":"function","title":"Bonfire.Common.Modularity.DeclareHelpers.component_props/1","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#component_props/1"},{"type":"function","title":"Bonfire.Common.Modularity.DeclareHelpers.component_type/1","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#component_type/1"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_extension/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_extension/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_nav_component/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_nav_component/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_nav_link/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_nav_link/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_settings_component/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_settings_component/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_settings_nav_component/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_settings_nav_component/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_settings_nav_link/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_settings_nav_link/2"},{"type":"macro","title":"Bonfire.Common.Modularity.DeclareHelpers.declare_widget/2","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#declare_widget/2"},{"type":"function","title":"Bonfire.Common.Modularity.DeclareHelpers.generate_link/3","doc":"","ref":"Bonfire.Common.Modularity.DeclareHelpers.html#generate_link/3"},{"type":"module","title":"Bonfire.Common.Module.Override","doc":"Utility to clone a module under a new name","ref":"Bonfire.Common.Module.Override.html"},{"type":"function","title":"Bonfire.Common.Module.Override.clone/2","doc":"Clone the existing module under a new name","ref":"Bonfire.Common.Module.Override.html#clone/2"},{"type":"function","title":"Bonfire.Common.Module.Override.clone_original/2","doc":"","ref":"Bonfire.Common.Module.Override.html#clone_original/2"},{"type":"function","title":"Bonfire.Common.Module.Override.module_name_atom/1","doc":"","ref":"Bonfire.Common.Module.Override.html#module_name_atom/1"},{"type":"function","title":"Bonfire.Common.Module.Override.module_name_string/1","doc":"","ref":"Bonfire.Common.Module.Override.html#module_name_string/1"},{"type":"function","title":"Bonfire.Common.Module.Override.module_original_name_atom/2","doc":"","ref":"Bonfire.Common.Module.Override.html#module_original_name_atom/2"},{"type":"function","title":"Bonfire.Common.Module.Override.module_original_name_str/2","doc":"","ref":"Bonfire.Common.Module.Override.html#module_original_name_str/2"},{"type":"module","title":"Bonfire.Common.Needles","doc":"","ref":"Bonfire.Common.Needles.html"},{"type":"function","title":"Bonfire.Common.Needles.dataloader/1","doc":"Batch loading of associations for GraphQL API","ref":"Bonfire.Common.Needles.html#dataloader/1"},{"type":"function","title":"Bonfire.Common.Needles.exists?/2","doc":"","ref":"Bonfire.Common.Needles.html#exists?/2"},{"type":"function","title":"Bonfire.Common.Needles.filter_one/1","doc":"","ref":"Bonfire.Common.Needles.html#filter_one/1"},{"type":"function","title":"Bonfire.Common.Needles.filters/3","doc":"","ref":"Bonfire.Common.Needles.html#filters/3"},{"type":"function","title":"Bonfire.Common.Needles.follow!/2","doc":"","ref":"Bonfire.Common.Needles.html#follow!/2"},{"type":"function","title":"Bonfire.Common.Needles.follow_function_error/2","doc":"","ref":"Bonfire.Common.Needles.html#follow_function_error/2"},{"type":"function","title":"Bonfire.Common.Needles.forge!/1","doc":"Forge a pointer from a pointable object\n\nDoes not hit the database.\n\nIs safe so long as the provided struct participates in the meta abstraction.","ref":"Bonfire.Common.Needles.html#forge!/1"},{"type":"function","title":"Bonfire.Common.Needles.forge!/2","doc":"Forges a pointer to a participating meta entity.\n\nDoes not hit the database, is safe so long as the entry we wish to\nsynthesise a pointer for represents a legitimate entry in the database.","ref":"Bonfire.Common.Needles.html#forge!/2"},{"type":"function","title":"Bonfire.Common.Needles.get/2","doc":"","ref":"Bonfire.Common.Needles.html#get/2"},{"type":"function","title":"Bonfire.Common.Needles.get!/2","doc":"","ref":"Bonfire.Common.Needles.html#get!/2"},{"type":"function","title":"Bonfire.Common.Needles.id_binary/1","doc":"","ref":"Bonfire.Common.Needles.html#id_binary/1"},{"type":"function","title":"Bonfire.Common.Needles.id_filter/2","doc":"","ref":"Bonfire.Common.Needles.html#id_filter/2"},{"type":"function","title":"Bonfire.Common.Needles.list!/2","doc":"","ref":"Bonfire.Common.Needles.html#list!/2"},{"type":"function","title":"Bonfire.Common.Needles.list_by_type!/3","doc":"","ref":"Bonfire.Common.Needles.html#list_by_type!/3"},{"type":"function","title":"Bonfire.Common.Needles.list_ids/0","doc":"","ref":"Bonfire.Common.Needles.html#list_ids/0"},{"type":"function","title":"Bonfire.Common.Needles.many/2","doc":"","ref":"Bonfire.Common.Needles.html#many/2"},{"type":"function","title":"Bonfire.Common.Needles.many!/2","doc":"","ref":"Bonfire.Common.Needles.html#many!/2"},{"type":"function","title":"Bonfire.Common.Needles.maybe_forge/1","doc":"Turns a thing into a pointer if it is not already or returns nil","ref":"Bonfire.Common.Needles.html#maybe_forge/1"},{"type":"function","title":"Bonfire.Common.Needles.maybe_forge!/1","doc":"Turns a thing into a pointer if it is not already. Errors if it cannot be performed","ref":"Bonfire.Common.Needles.html#maybe_forge!/1"},{"type":"function","title":"Bonfire.Common.Needles.maybe_resolve/4","doc":"","ref":"Bonfire.Common.Needles.html#maybe_resolve/4"},{"type":"function","title":"Bonfire.Common.Needles.one/2","doc":"","ref":"Bonfire.Common.Needles.html#one/2"},{"type":"function","title":"Bonfire.Common.Needles.one!/2","doc":"","ref":"Bonfire.Common.Needles.html#one!/2"},{"type":"function","title":"Bonfire.Common.Needles.pointer_preloads/2","doc":"","ref":"Bonfire.Common.Needles.html#pointer_preloads/2"},{"type":"function","title":"Bonfire.Common.Needles.pointer_query/2","doc":"Prepare a query for generic pointer objects","ref":"Bonfire.Common.Needles.html#pointer_query/2"},{"type":"function","title":"Bonfire.Common.Needles.preload!/2","doc":"Follows one or more pointers and adds the pointed records to the `pointed` attrs","ref":"Bonfire.Common.Needles.html#preload!/2"},{"type":"function","title":"Bonfire.Common.Needles.query/3","doc":"","ref":"Bonfire.Common.Needles.html#query/3"},{"type":"module","title":"Bonfire.Common.Needles.Pointers.Queries","doc":"","ref":"Bonfire.Common.Needles.Pointers.Queries.html"},{"type":"function","title":"Bonfire.Common.Needles.Pointers.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Needles.Pointers.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Common.Needles.Pointers.Queries.query/1","doc":"","ref":"Bonfire.Common.Needles.Pointers.Queries.html#query/1"},{"type":"function","title":"Bonfire.Common.Needles.Pointers.Queries.query/2","doc":"","ref":"Bonfire.Common.Needles.Pointers.Queries.html#query/2"},{"type":"function","title":"Bonfire.Common.Needles.Pointers.Queries.schema_module/0","doc":"","ref":"Bonfire.Common.Needles.Pointers.Queries.html#schema_module/0"},{"type":"module","title":"Bonfire.Common.Needles.Preload","doc":"","ref":"Bonfire.Common.Needles.Preload.html"},{"type":"function","title":"Bonfire.Common.Needles.Preload.maybe_preload_nested_pointers/3","doc":"","ref":"Bonfire.Common.Needles.Preload.html#maybe_preload_nested_pointers/3"},{"type":"function","title":"Bonfire.Common.Needles.Preload.maybe_preload_pointer/2","doc":"","ref":"Bonfire.Common.Needles.Preload.html#maybe_preload_pointer/2"},{"type":"function","title":"Bonfire.Common.Needles.Preload.maybe_preload_pointers/3","doc":"","ref":"Bonfire.Common.Needles.Preload.html#maybe_preload_pointers/3"},{"type":"module","title":"Bonfire.Common.Needles.Tables","doc":"","ref":"Bonfire.Common.Needles.Tables.html"},{"type":"function","title":"Bonfire.Common.Needles.Tables.list_ids/0","doc":"","ref":"Bonfire.Common.Needles.Tables.html#list_ids/0"},{"type":"function","title":"Bonfire.Common.Needles.Tables.list_schemas/0","doc":"","ref":"Bonfire.Common.Needles.Tables.html#list_schemas/0"},{"type":"function","title":"Bonfire.Common.Needles.Tables.list_tables/1","doc":"Lists all Pointable Tables","ref":"Bonfire.Common.Needles.Tables.html#list_tables/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.list_tables_debug/0","doc":"","ref":"Bonfire.Common.Needles.Tables.html#list_tables_debug/0"},{"type":"function","title":"Bonfire.Common.Needles.Tables.many/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#many/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.one/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#one/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.one!/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#one!/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.schema_or_table!/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#schema_or_table!/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.table!/1","doc":"Retrieves the Table that a pointer points to\nNote: Throws an error if the table cannot be found","ref":"Bonfire.Common.Needles.Tables.html#table!/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.table_fields/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#table_fields/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.table_fields_meta/1","doc":"","ref":"Bonfire.Common.Needles.Tables.html#table_fields_meta/1"},{"type":"module","title":"Bonfire.Common.Needles.Tables.Queries","doc":"","ref":"Bonfire.Common.Needles.Tables.Queries.html"},{"type":"function","title":"Bonfire.Common.Needles.Tables.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Needles.Tables.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Common.Needles.Tables.Queries.query/1","doc":"","ref":"Bonfire.Common.Needles.Tables.Queries.html#query/1"},{"type":"function","title":"Bonfire.Common.Needles.Tables.Queries.query/2","doc":"","ref":"Bonfire.Common.Needles.Tables.Queries.html#query/2"},{"type":"module","title":"Bonfire.Common.PubSub","doc":"","ref":"Bonfire.Common.PubSub.html"},{"type":"function","title":"Bonfire.Common.PubSub.broadcast/2","doc":"Broadcast some data for realtime updates, for example to a feed or thread","ref":"Bonfire.Common.PubSub.html#broadcast/2"},{"type":"macro","title":"Bonfire.Common.PubSub.broadcast_with_telemetry/2","doc":"Broadcast while attaching telemetry info. The receiving module must `use Bonfire.Common.PubSub` to correctly unwrap the Event","ref":"Bonfire.Common.PubSub.html#broadcast_with_telemetry/2"},{"type":"function","title":"Bonfire.Common.PubSub.broadcast_with_telemetry/3","doc":"","ref":"Bonfire.Common.PubSub.html#broadcast_with_telemetry/3"},{"type":"function","title":"Bonfire.Common.PubSub.current_function/1","doc":"","ref":"Bonfire.Common.PubSub.html#current_function/1"},{"type":"function","title":"Bonfire.Common.PubSub.subscribe/2","doc":"Subscribe to something for realtime updates, like a feed or thread","ref":"Bonfire.Common.PubSub.html#subscribe/2"},{"type":"module","title":"Bonfire.Common.PubSub.Event","doc":"","ref":"Bonfire.Common.PubSub.Event.html"},{"type":"behaviour","title":"Bonfire.Common.QueryModule","doc":"Properly query some data using the appropriate module depending on its schema.\n\nBack by a global cache of known query_modules to be queried by their schema, or vice versa.\n\nUse of the QueryModule Service requires:\n\n1. Exporting `query_module/0` in relevant modules (in schemas pointing to query modules and/or in query modules pointing to schemas), returning a Module atom\n2. To populate `:nee, :search_path` in config the list of OTP applications where query_modules are declared.\n3. Start the `Bonfire.Common.QueryModule` application before querying.\n4. OTP 21.2 or greater, though we recommend using the most recent\n   release available.\n\nWhile this module is a GenServer, it is only responsible for setup\nof the cache and then exits with :ignore having done so. It is not\nrecommended to restart the service as this will lead to a stop the\nworld garbage collection of all processes and the copying of the\nentire cache to each process that has queried it since its last\nlocal garbage collection.","ref":"Bonfire.Common.QueryModule.html"},{"type":"function","title":"Bonfire.Common.QueryModule.app_modules/0","doc":"","ref":"Bonfire.Common.QueryModule.html#app_modules/0"},{"type":"function","title":"Bonfire.Common.QueryModule.apply_error/2","doc":"","ref":"Bonfire.Common.QueryModule.html#apply_error/2"},{"type":"callback","title":"Bonfire.Common.QueryModule.context_module/0","doc":"Points to the related context module","ref":"Bonfire.Common.QueryModule.html#c:context_module/0"},{"type":"function","title":"Bonfire.Common.QueryModule.linked_context_modules/0","doc":"","ref":"Bonfire.Common.QueryModule.html#linked_context_modules/0"},{"type":"function","title":"Bonfire.Common.QueryModule.linked_schema_modules/0","doc":"","ref":"Bonfire.Common.QueryModule.html#linked_schema_modules/0"},{"type":"function","title":"Bonfire.Common.QueryModule.maybe_query/3","doc":"","ref":"Bonfire.Common.QueryModule.html#maybe_query/3"},{"type":"function","title":"Bonfire.Common.QueryModule.maybe_query_module/1","doc":"","ref":"Bonfire.Common.QueryModule.html#maybe_query_module/1"},{"type":"function","title":"Bonfire.Common.QueryModule.modules/0","doc":"","ref":"Bonfire.Common.QueryModule.html#modules/0"},{"type":"function","title":"Bonfire.Common.QueryModule.query_function_error/3","doc":"","ref":"Bonfire.Common.QueryModule.html#query_function_error/3"},{"type":"callback","title":"Bonfire.Common.QueryModule.query_module/0","doc":"Declares a query module","ref":"Bonfire.Common.QueryModule.html#c:query_module/0"},{"type":"function","title":"Bonfire.Common.QueryModule.query_module/1","doc":"Get a Queryable identified by name or id.","ref":"Bonfire.Common.QueryModule.html#query_module/1"},{"type":"function","title":"Bonfire.Common.QueryModule.query_module!/1","doc":"Look up a Queryable by name or id, throw :not_found if not found.","ref":"Bonfire.Common.QueryModule.html#query_module!/1"},{"type":"function","title":"Bonfire.Common.QueryModule.query_modules/1","doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.QueryModule.html#query_modules/1"},{"type":"callback","title":"Bonfire.Common.QueryModule.schema_module/0","doc":"Points to the related schema module","ref":"Bonfire.Common.QueryModule.html#c:schema_module/0"},{"type":"module","title":"Bonfire.Common.Repo","doc":"Ecto Repo and related common functions","ref":"Bonfire.Common.Repo.html"},{"type":"function","title":"Bonfire.Common.Repo.aggregate/3","doc":"","ref":"Bonfire.Common.Repo.html#aggregate/3"},{"type":"function","title":"Bonfire.Common.Repo.aggregate/4","doc":"","ref":"Bonfire.Common.Repo.html#aggregate/4"},{"type":"function","title":"Bonfire.Common.Repo.all/2","doc":"","ref":"Bonfire.Common.Repo.html#all/2"},{"type":"function","title":"Bonfire.Common.Repo.checked_out?/0","doc":"","ref":"Bonfire.Common.Repo.html#checked_out?/0"},{"type":"function","title":"Bonfire.Common.Repo.checkout/2","doc":"","ref":"Bonfire.Common.Repo.html#checkout/2"},{"type":"function","title":"Bonfire.Common.Repo.child_spec/1","doc":"","ref":"Bonfire.Common.Repo.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.Repo.config/0","doc":"","ref":"Bonfire.Common.Repo.html#config/0"},{"type":"function","title":"Bonfire.Common.Repo.default_options/1","doc":"","ref":"Bonfire.Common.Repo.html#default_options/1"},{"type":"function","title":"Bonfire.Common.Repo.default_repo_opts/0","doc":"","ref":"Bonfire.Common.Repo.html#default_repo_opts/0"},{"type":"function","title":"Bonfire.Common.Repo.delete/2","doc":"","ref":"Bonfire.Common.Repo.html#delete/2"},{"type":"function","title":"Bonfire.Common.Repo.delete!/2","doc":"","ref":"Bonfire.Common.Repo.html#delete!/2"},{"type":"function","title":"Bonfire.Common.Repo.delete_all/2","doc":"","ref":"Bonfire.Common.Repo.html#delete_all/2"},{"type":"function","title":"Bonfire.Common.Repo.delete_many/1","doc":"Execute a query to delete all matching records.","ref":"Bonfire.Common.Repo.html#delete_many/1"},{"type":"function","title":"Bonfire.Common.Repo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Bonfire.Common.Repo.html#disconnect_all/2"},{"type":"function","title":"Bonfire.Common.Repo.exists?/2","doc":"","ref":"Bonfire.Common.Repo.html#exists?/2"},{"type":"function","title":"Bonfire.Common.Repo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Bonfire.Common.Repo.html#explain/3"},{"type":"function","title":"Bonfire.Common.Repo.fetch/2","doc":"Execute a query for one result where the primary key matches the given id, and return either an {:ok, result} tuple or a {:error, :not_found}","ref":"Bonfire.Common.Repo.html#fetch/2"},{"type":"function","title":"Bonfire.Common.Repo.fetch_all/2","doc":"Execute a query for multiple results given one or multiple IDs.","ref":"Bonfire.Common.Repo.html#fetch_all/2"},{"type":"function","title":"Bonfire.Common.Repo.fetch_by/2","doc":"Execute a query for one result (using a keyword list to specify the key/value to query with), and return either an {:ok, result} tuple or a {:error, :not_found}","ref":"Bonfire.Common.Repo.html#fetch_by/2"},{"type":"function","title":"Bonfire.Common.Repo.find/3","doc":"Like Repo.single, except on failure, adds an error to the changeset","ref":"Bonfire.Common.Repo.html#find/3"},{"type":"function","title":"Bonfire.Common.Repo.get/3","doc":"","ref":"Bonfire.Common.Repo.html#get/3"},{"type":"function","title":"Bonfire.Common.Repo.get!/3","doc":"","ref":"Bonfire.Common.Repo.html#get!/3"},{"type":"function","title":"Bonfire.Common.Repo.get_by/3","doc":"","ref":"Bonfire.Common.Repo.html#get_by/3"},{"type":"function","title":"Bonfire.Common.Repo.get_by!/3","doc":"","ref":"Bonfire.Common.Repo.html#get_by!/3"},{"type":"function","title":"Bonfire.Common.Repo.get_dynamic_repo/0","doc":"","ref":"Bonfire.Common.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"Bonfire.Common.Repo.in_transaction?/0","doc":"","ref":"Bonfire.Common.Repo.html#in_transaction?/0"},{"type":"function","title":"Bonfire.Common.Repo.insert/2","doc":"","ref":"Bonfire.Common.Repo.html#insert/2"},{"type":"function","title":"Bonfire.Common.Repo.insert!/2","doc":"","ref":"Bonfire.Common.Repo.html#insert!/2"},{"type":"function","title":"Bonfire.Common.Repo.insert_all/3","doc":"","ref":"Bonfire.Common.Repo.html#insert_all/3"},{"type":"function","title":"Bonfire.Common.Repo.insert_all_or_ignore/2","doc":"","ref":"Bonfire.Common.Repo.html#insert_all_or_ignore/2"},{"type":"function","title":"Bonfire.Common.Repo.insert_or_ignore/1","doc":"","ref":"Bonfire.Common.Repo.html#insert_or_ignore/1"},{"type":"function","title":"Bonfire.Common.Repo.insert_or_ignore/2","doc":"","ref":"Bonfire.Common.Repo.html#insert_or_ignore/2"},{"type":"function","title":"Bonfire.Common.Repo.insert_or_update/2","doc":"","ref":"Bonfire.Common.Repo.html#insert_or_update/2"},{"type":"function","title":"Bonfire.Common.Repo.insert_or_update!/2","doc":"","ref":"Bonfire.Common.Repo.html#insert_or_update!/2"},{"type":"function","title":"Bonfire.Common.Repo.load/2","doc":"","ref":"Bonfire.Common.Repo.html#load/2"},{"type":"function","title":"Bonfire.Common.Repo.make_subquery/1","doc":"","ref":"Bonfire.Common.Repo.html#make_subquery/1"},{"type":"function","title":"Bonfire.Common.Repo.many/2","doc":"Execute a query for multiple results and return the results.","ref":"Bonfire.Common.Repo.html#many/2"},{"type":"function","title":"Bonfire.Common.Repo.many_paginated/3","doc":"Execute a query for multiple results and return one page of results.\nThis uses the main implementation for pagination, which is cursor-based and powered by the `Paginator` library.","ref":"Bonfire.Common.Repo.html#many_paginated/3"},{"type":"function","title":"Bonfire.Common.Repo.maybe_one/2","doc":"Execute a query for one result and return either an result or a fallback value (`nil` by default)","ref":"Bonfire.Common.Repo.html#maybe_one/2"},{"type":"function","title":"Bonfire.Common.Repo.maybe_preload/3","doc":"","ref":"Bonfire.Common.Repo.html#maybe_preload/3"},{"type":"function","title":"Bonfire.Common.Repo.migrate/0","doc":"","ref":"Bonfire.Common.Repo.html#migrate/0"},{"type":"function","title":"Bonfire.Common.Repo.one/2","doc":"","ref":"Bonfire.Common.Repo.html#one/2"},{"type":"function","title":"Bonfire.Common.Repo.one!/2","doc":"","ref":"Bonfire.Common.Repo.html#one!/2"},{"type":"function","title":"Bonfire.Common.Repo.paginate/2","doc":"Different implementation for pagination using Scrivener (used by eg. rauversion)","ref":"Bonfire.Common.Repo.html#paginate/2"},{"type":"function","title":"Bonfire.Common.Repo.preload/3","doc":"","ref":"Bonfire.Common.Repo.html#preload/3"},{"type":"function","title":"Bonfire.Common.Repo.preload_all/2","doc":"","ref":"Bonfire.Common.Repo.html#preload_all/2"},{"type":"function","title":"Bonfire.Common.Repo.preload_mixins/2","doc":"","ref":"Bonfire.Common.Repo.html#preload_mixins/2"},{"type":"function","title":"Bonfire.Common.Repo.prepare_query/3","doc":"","ref":"Bonfire.Common.Repo.html#prepare_query/3"},{"type":"function","title":"Bonfire.Common.Repo.put/1","doc":"Like `insert/1`, but understands remapping changeset errors to attr\nnames from config (and only config, no overrides at present!)","ref":"Bonfire.Common.Repo.html#put/1"},{"type":"function","title":"Bonfire.Common.Repo.put_dynamic_repo/1","doc":"","ref":"Bonfire.Common.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"Bonfire.Common.Repo.put_many/1","doc":"Like `put/1` but for multiple `changesets`","ref":"Bonfire.Common.Repo.html#put_many/1"},{"type":"function","title":"Bonfire.Common.Repo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Bonfire.Common.Repo.html#query/3"},{"type":"function","title":"Bonfire.Common.Repo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Bonfire.Common.Repo.html#query!/3"},{"type":"function","title":"Bonfire.Common.Repo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Bonfire.Common.Repo.html#query_many/3"},{"type":"function","title":"Bonfire.Common.Repo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Bonfire.Common.Repo.html#query_many!/3"},{"type":"function","title":"Bonfire.Common.Repo.reload/2","doc":"","ref":"Bonfire.Common.Repo.html#reload/2"},{"type":"function","title":"Bonfire.Common.Repo.reload!/2","doc":"","ref":"Bonfire.Common.Repo.html#reload!/2"},{"type":"function","title":"Bonfire.Common.Repo.rollback/1","doc":"","ref":"Bonfire.Common.Repo.html#rollback/1"},{"type":"function","title":"Bonfire.Common.Repo.single/1","doc":"Execute a query for one result and return either an `{:ok, result}` or `{:error, :not_found}` tuple","ref":"Bonfire.Common.Repo.html#single/1"},{"type":"function","title":"Bonfire.Common.Repo.sql/3","doc":"","ref":"Bonfire.Common.Repo.html#sql/3"},{"type":"function","title":"Bonfire.Common.Repo.start_link/1","doc":"","ref":"Bonfire.Common.Repo.html#start_link/1"},{"type":"function","title":"Bonfire.Common.Repo.stop/1","doc":"","ref":"Bonfire.Common.Repo.html#stop/1"},{"type":"function","title":"Bonfire.Common.Repo.stream/2","doc":"","ref":"Bonfire.Common.Repo.html#stream/2"},{"type":"function","title":"Bonfire.Common.Repo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Bonfire.Common.Repo.html#to_sql/2"},{"type":"function","title":"Bonfire.Common.Repo.trace/1","doc":"Can be used to log specific queries (by calling function) in production","ref":"Bonfire.Common.Repo.html#trace/1"},{"type":"function","title":"Bonfire.Common.Repo.transact_many/1","doc":"","ref":"Bonfire.Common.Repo.html#transact_many/1"},{"type":"function","title":"Bonfire.Common.Repo.transact_with/1","doc":"Run a transaction, similar to `Repo.transaction/1`, but it expects an ok or error\ntuple. If an error tuple is returned, the transaction is aborted.","ref":"Bonfire.Common.Repo.html#transact_with/1"},{"type":"function","title":"Bonfire.Common.Repo.transaction/2","doc":"","ref":"Bonfire.Common.Repo.html#transaction/2"},{"type":"function","title":"Bonfire.Common.Repo.update/2","doc":"","ref":"Bonfire.Common.Repo.html#update/2"},{"type":"function","title":"Bonfire.Common.Repo.update!/2","doc":"","ref":"Bonfire.Common.Repo.html#update!/2"},{"type":"function","title":"Bonfire.Common.Repo.update_all/3","doc":"","ref":"Bonfire.Common.Repo.html#update_all/3"},{"type":"function","title":"Bonfire.Common.Repo.upsert/3","doc":"Inserts or updates data in the database with upsert semantics.\n\n* `cs` - The changeset or schema to insert or update.\n* `keys_or_attrs_to_update` - A list of keys or a map of attributes to update.\n* `conflict_target` - The column(s) or constraint to check for conflicts, defaults to `[:id]`.","ref":"Bonfire.Common.Repo.html#upsert/3"},{"type":"function","title":"Bonfire.Common.Repo.upsert_all/3","doc":"","ref":"Bonfire.Common.Repo.html#upsert_all/3"},{"type":"module","title":"Bonfire.Common.Repo.Delete","doc":"","ref":"Bonfire.Common.Repo.Delete.html"},{"type":"function","title":"Bonfire.Common.Repo.Delete.deletion_result/1","doc":"","ref":"Bonfire.Common.Repo.Delete.html#deletion_result/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.deletion_result!/1","doc":"","ref":"Bonfire.Common.Repo.Delete.html#deletion_result!/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.hard_delete/1","doc":"Actually deletes an entry from the database","ref":"Bonfire.Common.Repo.Delete.html#hard_delete/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.hard_delete!/1","doc":"Deletes an entry from the database, or throws an error","ref":"Bonfire.Common.Repo.Delete.html#hard_delete!/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.maybe_allow_delete?/2","doc":"","ref":"Bonfire.Common.Repo.Delete.html#maybe_allow_delete?/2"},{"type":"function","title":"Bonfire.Common.Repo.Delete.schema/1","doc":"","ref":"Bonfire.Common.Repo.Delete.html#schema/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.soft_delete/1","doc":"Just marks an entry as deleted in the database","ref":"Bonfire.Common.Repo.Delete.html#soft_delete/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.soft_delete!/1","doc":"Marks an entry as deleted in the database or throws an error","ref":"Bonfire.Common.Repo.Delete.html#soft_delete!/1"},{"type":"function","title":"Bonfire.Common.Repo.Delete.soft_delete_changeset/4","doc":"Creates a changeset for deleting an entity","ref":"Bonfire.Common.Repo.Delete.html#soft_delete_changeset/4"},{"type":"function","title":"Bonfire.Common.Repo.Delete.undelete/1","doc":"","ref":"Bonfire.Common.Repo.Delete.html#undelete/1"},{"type":"module","title":"Bonfire.Common.Repo.Preload","doc":"Preload helpers for Ecto Repo","ref":"Bonfire.Common.Repo.Preload.html"},{"type":"function","title":"Bonfire.Common.Repo.Preload.aggregate/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#aggregate/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.aggregate/4","doc":"","ref":"Bonfire.Common.Repo.Preload.html#aggregate/4"},{"type":"function","title":"Bonfire.Common.Repo.Preload.all/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#all/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.checked_out?/0","doc":"","ref":"Bonfire.Common.Repo.Preload.html#checked_out?/0"},{"type":"function","title":"Bonfire.Common.Repo.Preload.checkout/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#checkout/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.child_spec/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.config/0","doc":"","ref":"Bonfire.Common.Repo.Preload.html#config/0"},{"type":"function","title":"Bonfire.Common.Repo.Preload.default_options/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#default_options/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.delete/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#delete/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.delete!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#delete!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.delete_all/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#delete_all/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Bonfire.Common.Repo.Preload.html#disconnect_all/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.exists?/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#exists?/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Bonfire.Common.Repo.Preload.html#explain/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.get/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#get/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.get!/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#get!/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.get_by/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#get_by/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.get_by!/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#get_by!/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.get_dynamic_repo/0","doc":"","ref":"Bonfire.Common.Repo.Preload.html#get_dynamic_repo/0"},{"type":"function","title":"Bonfire.Common.Repo.Preload.in_transaction?/0","doc":"","ref":"Bonfire.Common.Repo.Preload.html#in_transaction?/0"},{"type":"function","title":"Bonfire.Common.Repo.Preload.insert/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#insert/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.insert!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#insert!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.insert_all/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#insert_all/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.insert_or_update/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#insert_or_update/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.insert_or_update!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#insert_or_update!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.load/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#load/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.maybe_preload/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preload/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.maybe_preloads_per_nested_schema/4","doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preloads_per_nested_schema/4"},{"type":"function","title":"Bonfire.Common.Repo.Preload.maybe_preloads_per_schema/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preloads_per_schema/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.one/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#one/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.one!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#one!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.preload/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#preload/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.preload_all/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#preload_all/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.preload_mixins/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#preload_mixins/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.prepare_query/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#prepare_query/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.put_dynamic_repo/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#put_dynamic_repo/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Bonfire.Common.Repo.Preload.html#query/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Bonfire.Common.Repo.Preload.html#query!/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Bonfire.Common.Repo.Preload.html#query_many/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Bonfire.Common.Repo.Preload.html#query_many!/3"},{"type":"function","title":"Bonfire.Common.Repo.Preload.reload/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#reload/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.reload!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#reload!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.rollback/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#rollback/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.schema_mixins/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#schema_mixins/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.start_link/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#start_link/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.stop/1","doc":"","ref":"Bonfire.Common.Repo.Preload.html#stop/1"},{"type":"function","title":"Bonfire.Common.Repo.Preload.stream/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#stream/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Bonfire.Common.Repo.Preload.html#to_sql/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.transaction/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#transaction/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.update/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#update/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.update!/2","doc":"","ref":"Bonfire.Common.Repo.Preload.html#update!/2"},{"type":"function","title":"Bonfire.Common.Repo.Preload.update_all/3","doc":"","ref":"Bonfire.Common.Repo.Preload.html#update_all/3"},{"type":"module","title":"Bonfire.Common.Repo.Utils","doc":"Helper functions for changesets","ref":"Bonfire.Common.Repo.Utils.html"},{"type":"function","title":"Bonfire.Common.Repo.Utils.change_disabled/1","doc":"Keeps disabled_at in accord with is_disabled","ref":"Bonfire.Common.Repo.Utils.html#change_disabled/1"},{"type":"function","title":"Bonfire.Common.Repo.Utils.change_muted/1","doc":"Keeps muted_at in accord with is_muted","ref":"Bonfire.Common.Repo.Utils.html#change_muted/1"},{"type":"function","title":"Bonfire.Common.Repo.Utils.change_public/1","doc":"Keeps published_at in accord with is_public","ref":"Bonfire.Common.Repo.Utils.html#change_public/1"},{"type":"macro","title":"Bonfire.Common.Repo.Utils.match_admin/0","doc":"","ref":"Bonfire.Common.Repo.Utils.html#match_admin/0"},{"type":"function","title":"Bonfire.Common.Repo.Utils.validate_email/2","doc":"Validates an email for correctness","ref":"Bonfire.Common.Repo.Utils.html#validate_email/2"},{"type":"function","title":"Bonfire.Common.Repo.Utils.validate_email_domain/2","doc":"","ref":"Bonfire.Common.Repo.Utils.html#validate_email_domain/2"},{"type":"module","title":"Bonfire.Common.RepoTemplate","doc":"","ref":"Bonfire.Common.RepoTemplate.html"},{"type":"module","title":"Bonfire.Common.RuntimeConfig","doc":"","ref":"Bonfire.Common.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Common.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Common.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Common.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Common.RuntimeConfig.html#config_module/0"},{"type":"function","title":"Bonfire.Common.RuntimeConfig.skip_test_tags/1","doc":"","ref":"Bonfire.Common.RuntimeConfig.html#skip_test_tags/1"},{"type":"behaviour","title":"Bonfire.Common.SchemaModule","doc":"Find a context or query module via its schema, backed by a global cache of known schema modules to be queried by their schema, or vice versa (eg. via ContextModule).","ref":"Bonfire.Common.SchemaModule.html"},{"type":"function","title":"Bonfire.Common.SchemaModule.app_modules/0","doc":"","ref":"Bonfire.Common.SchemaModule.html#app_modules/0"},{"type":"callback","title":"Bonfire.Common.SchemaModule.context_module/0","doc":"Points to the related context module","ref":"Bonfire.Common.SchemaModule.html#c:context_module/0"},{"type":"function","title":"Bonfire.Common.SchemaModule.linked_context_modules/0","doc":"","ref":"Bonfire.Common.SchemaModule.html#linked_context_modules/0"},{"type":"function","title":"Bonfire.Common.SchemaModule.linked_query_modules/0","doc":"","ref":"Bonfire.Common.SchemaModule.html#linked_query_modules/0"},{"type":"function","title":"Bonfire.Common.SchemaModule.modules/0","doc":"","ref":"Bonfire.Common.SchemaModule.html#modules/0"},{"type":"callback","title":"Bonfire.Common.SchemaModule.query_module/0","doc":"Points to the related query module","ref":"Bonfire.Common.SchemaModule.html#c:query_module/0"},{"type":"callback","title":"Bonfire.Common.SchemaModule.schema_module/0","doc":"Declares a schema module","ref":"Bonfire.Common.SchemaModule.html#c:schema_module/0"},{"type":"module","title":"Bonfire.Common.Settings","doc":"","ref":"Bonfire.Common.Settings.html"},{"type":"function","title":"Bonfire.Common.Settings.get/3","doc":"Get config value for a config key (optionally from a specific OTP app or Bonfire extension)\n\nThese two calls have the same result (i.e. specifying a module as the first key will add the OTP app of that module as the first key):\n`get([:bonfire_me, Bonfire.Me.Users])`\n`get(Bonfire.Me.Users)`\n\nSame with these two (i.e. not specifying a module or app as the first key will default to the main OTP app):\n`get([:random_atom, :sub_key])`\n`get([:bonfire, :random_atom, :sub_key])`","ref":"Bonfire.Common.Settings.html#get/3"},{"type":"function","title":"Bonfire.Common.Settings.get!/2","doc":"","ref":"Bonfire.Common.Settings.html#get!/2"},{"type":"function","title":"Bonfire.Common.Settings.load_instance_settings/0","doc":"","ref":"Bonfire.Common.Settings.html#load_instance_settings/0"},{"type":"function","title":"Bonfire.Common.Settings.map_put_in/3","doc":"","ref":"Bonfire.Common.Settings.html#map_put_in/3"},{"type":"function","title":"Bonfire.Common.Settings.put/3","doc":"Put a setting using a key like `:key` or list of nested keys like `[:top_key, :sub_key]`","ref":"Bonfire.Common.Settings.html#put/3"},{"type":"function","title":"Bonfire.Common.Settings.reset_all/0","doc":"","ref":"Bonfire.Common.Settings.html#reset_all/0"},{"type":"function","title":"Bonfire.Common.Settings.reset_instance/0","doc":"","ref":"Bonfire.Common.Settings.html#reset_instance/0"},{"type":"function","title":"Bonfire.Common.Settings.set/2","doc":"Set several settings at once.\nAccepts nested attributes as map with string keys (which are transformed into keyword list), or a keyword list.\nDetermines what scope to use & sets/updates settings for it.","ref":"Bonfire.Common.Settings.html#set/2"},{"type":"module","title":"Bonfire.Common.Settings.LiveHandler","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html"},{"type":"function","title":"Bonfire.Common.Settings.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Common.Settings.LiveHandler.input_name/1","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#input_name/1"},{"type":"function","title":"Bonfire.Common.Settings.LiveHandler.maybe_assign_input_value_from_keys/1","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#maybe_assign_input_value_from_keys/1"},{"type":"function","title":"Bonfire.Common.Settings.LiveHandler.scoped/2","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#scoped/2"},{"type":"function","title":"Bonfire.Common.Settings.LiveHandler.set_image_setting/5","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#set_image_setting/5"},{"type":"macro","title":"Bonfire.Common.Settings.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Common.Settings.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Common.Settings.LoadInstanceConfig","doc":"Loads instance Settings from DB into Elixir's Config\n\nWhile this module is a GenServer, it is only responsible for querying the settings, putting them in Config, and then exits with :ignore having done so.","ref":"Bonfire.Common.Settings.LoadInstanceConfig.html"},{"type":"function","title":"Bonfire.Common.Settings.LoadInstanceConfig.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Common.Settings.LoadInstanceConfig.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.Settings.LoadInstanceConfig.load_config/0","doc":"","ref":"Bonfire.Common.Settings.LoadInstanceConfig.html#load_config/0"},{"type":"function","title":"Bonfire.Common.Settings.LoadInstanceConfig.start_link/1","doc":"Populates the global cache with table data via introspection.","ref":"Bonfire.Common.Settings.LoadInstanceConfig.html#start_link/1"},{"type":"module","title":"Bonfire.Common.Simulation","doc":"","ref":"Bonfire.Common.Simulation.html"},{"type":"function","title":"Bonfire.Common.Simulation.ap_url_base/0","doc":"Picks a unique random url for an ap endpoint","ref":"Bonfire.Common.Simulation.html#ap_url_base/0"},{"type":"function","title":"Bonfire.Common.Simulation.base64/0","doc":"Generates random base64 text","ref":"Bonfire.Common.Simulation.html#base64/0"},{"type":"function","title":"Bonfire.Common.Simulation.bool/0","doc":"Generates a random boolean","ref":"Bonfire.Common.Simulation.html#bool/0"},{"type":"function","title":"Bonfire.Common.Simulation.canonical_url/0","doc":"Picks a random canonical url and makes it unique","ref":"Bonfire.Common.Simulation.html#canonical_url/0"},{"type":"function","title":"Bonfire.Common.Simulation.content_type/0","doc":"Generate a random content type","ref":"Bonfire.Common.Simulation.html#content_type/0"},{"type":"function","title":"Bonfire.Common.Simulation.content_url/0","doc":"Picks a remote url from a set of available ones.","ref":"Bonfire.Common.Simulation.html#content_url/0"},{"type":"function","title":"Bonfire.Common.Simulation.date_of_birth/0","doc":"Generates a random date of birth based on an age range of 18-99","ref":"Bonfire.Common.Simulation.html#date_of_birth/0"},{"type":"function","title":"Bonfire.Common.Simulation.domain/0","doc":"Generates a random domain name","ref":"Bonfire.Common.Simulation.html#domain/0"},{"type":"function","title":"Bonfire.Common.Simulation.email/0","doc":"Generates a random unique email","ref":"Bonfire.Common.Simulation.html#email/0"},{"type":"function","title":"Bonfire.Common.Simulation.email_user/0","doc":"Generates the first half of an email address","ref":"Bonfire.Common.Simulation.html#email_user/0"},{"type":"function","title":"Bonfire.Common.Simulation.falsehood/0","doc":"Returns false","ref":"Bonfire.Common.Simulation.html#falsehood/0"},{"type":"function","title":"Bonfire.Common.Simulation.float/0","doc":"Generate a random floating point number","ref":"Bonfire.Common.Simulation.html#float/0"},{"type":"function","title":"Bonfire.Common.Simulation.future_date/0","doc":"Picks a date up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_date/0"},{"type":"function","title":"Bonfire.Common.Simulation.future_datetime/0","doc":"Picks a datetime up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_datetime/0"},{"type":"function","title":"Bonfire.Common.Simulation.future_datetime_iso/0","doc":"Same as future_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#future_datetime_iso/0"},{"type":"function","title":"Bonfire.Common.Simulation.icon/0","doc":"Picks an icon url","ref":"Bonfire.Common.Simulation.html#icon/0"},{"type":"function","title":"Bonfire.Common.Simulation.image/0","doc":"Picks an image url","ref":"Bonfire.Common.Simulation.html#image/0"},{"type":"function","title":"Bonfire.Common.Simulation.integer/0","doc":"Generate a random signed integer","ref":"Bonfire.Common.Simulation.html#integer/0"},{"type":"function","title":"Bonfire.Common.Simulation.license/0","doc":"A random license for content","ref":"Bonfire.Common.Simulation.html#license/0"},{"type":"function","title":"Bonfire.Common.Simulation.location/0","doc":"Returns a city and country","ref":"Bonfire.Common.Simulation.html#location/0"},{"type":"function","title":"Bonfire.Common.Simulation.long_count/0","doc":"","ref":"Bonfire.Common.Simulation.html#long_count/0"},{"type":"function","title":"Bonfire.Common.Simulation.long_list/1","doc":"","ref":"Bonfire.Common.Simulation.html#long_list/1"},{"type":"function","title":"Bonfire.Common.Simulation.markdown/0","doc":"","ref":"Bonfire.Common.Simulation.html#markdown/0"},{"type":"function","title":"Bonfire.Common.Simulation.maybe_bool/0","doc":"Generate a random boolean that can also be nil","ref":"Bonfire.Common.Simulation.html#maybe_bool/0"},{"type":"function","title":"Bonfire.Common.Simulation.maybe_one_of/1","doc":"","ref":"Bonfire.Common.Simulation.html#maybe_one_of/1"},{"type":"function","title":"Bonfire.Common.Simulation.med_count/0","doc":"","ref":"Bonfire.Common.Simulation.html#med_count/0"},{"type":"function","title":"Bonfire.Common.Simulation.med_list/1","doc":"","ref":"Bonfire.Common.Simulation.html#med_list/1"},{"type":"function","title":"Bonfire.Common.Simulation.name/0","doc":"Picks a name","ref":"Bonfire.Common.Simulation.html#name/0"},{"type":"function","title":"Bonfire.Common.Simulation.neg_integer/0","doc":"Generate a random negative integer","ref":"Bonfire.Common.Simulation.html#neg_integer/0"},{"type":"function","title":"Bonfire.Common.Simulation.one_of/1","doc":"","ref":"Bonfire.Common.Simulation.html#one_of/1"},{"type":"function","title":"Bonfire.Common.Simulation.paragraph/0","doc":"Generates a random paragraph","ref":"Bonfire.Common.Simulation.html#paragraph/0"},{"type":"function","title":"Bonfire.Common.Simulation.password/0","doc":"Generates a random password string","ref":"Bonfire.Common.Simulation.html#password/0"},{"type":"function","title":"Bonfire.Common.Simulation.past_date/0","doc":"Picks a date up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_date/0"},{"type":"function","title":"Bonfire.Common.Simulation.past_datetime/0","doc":"Picks a datetime up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_datetime/0"},{"type":"function","title":"Bonfire.Common.Simulation.past_datetime_iso/0","doc":"Same as past_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#past_datetime_iso/0"},{"type":"function","title":"Bonfire.Common.Simulation.path/0","doc":"Picks a path from a set of available files.","ref":"Bonfire.Common.Simulation.html#path/0"},{"type":"function","title":"Bonfire.Common.Simulation.pos_integer/0","doc":"Generate a random positive integer","ref":"Bonfire.Common.Simulation.html#pos_integer/0"},{"type":"function","title":"Bonfire.Common.Simulation.preferred_username/0","doc":"Picks a unique preferred_username","ref":"Bonfire.Common.Simulation.html#preferred_username/0"},{"type":"function","title":"Bonfire.Common.Simulation.short_count/0","doc":"","ref":"Bonfire.Common.Simulation.html#short_count/0"},{"type":"function","title":"Bonfire.Common.Simulation.short_list/1","doc":"","ref":"Bonfire.Common.Simulation.html#short_list/1"},{"type":"function","title":"Bonfire.Common.Simulation.signing_key/0","doc":"Picks a fake signing key","ref":"Bonfire.Common.Simulation.html#signing_key/0"},{"type":"function","title":"Bonfire.Common.Simulation.some/2","doc":"Repeats a function count times if count_or_range is a positive integer.\n\nIf count_or_range is a positive range, a random number from this\nrange is selected and that value used as a count","ref":"Bonfire.Common.Simulation.html#some/2"},{"type":"function","title":"Bonfire.Common.Simulation.summary/0","doc":"Picks a summary text paragraph","ref":"Bonfire.Common.Simulation.html#summary/0"},{"type":"function","title":"Bonfire.Common.Simulation.title/0","doc":"","ref":"Bonfire.Common.Simulation.html#title/0"},{"type":"function","title":"Bonfire.Common.Simulation.truth/0","doc":"Returns true","ref":"Bonfire.Common.Simulation.html#truth/0"},{"type":"function","title":"Bonfire.Common.Simulation.ulid/0","doc":"Generates a random unique ulid","ref":"Bonfire.Common.Simulation.html#ulid/0"},{"type":"function","title":"Bonfire.Common.Simulation.url/0","doc":"Generates a random url","ref":"Bonfire.Common.Simulation.html#url/0"},{"type":"function","title":"Bonfire.Common.Simulation.username/0","doc":"Generates a random username","ref":"Bonfire.Common.Simulation.html#username/0"},{"type":"function","title":"Bonfire.Common.Simulation.uuid/0","doc":"Generates a random unique uuid","ref":"Bonfire.Common.Simulation.html#uuid/0"},{"type":"function","title":"Bonfire.Common.Simulation.verb/0","doc":"A verb to be used for an activity.","ref":"Bonfire.Common.Simulation.html#verb/0"},{"type":"function","title":"Bonfire.Common.Simulation.website/0","doc":"A website address","ref":"Bonfire.Common.Simulation.html#website/0"},{"type":"module","title":"Bonfire.Common.StartupTimer","doc":"Open the console without starting the app: `iex -S mix run --no-start` or `just imix run --no-start`\n\nAnd then run `Bonfire.Common.StartupTimer.run()`","ref":"Bonfire.Common.StartupTimer.html"},{"type":"function","title":"Bonfire.Common.StartupTimer.run/1","doc":"","ref":"Bonfire.Common.StartupTimer.html#run/1"},{"type":"module","title":"Bonfire.Common.Test.Interactive","doc":"This utility allows to get the same effect of using\n`fcwatch | mix test --stale --listen-on-stdin` to watch for\ncode changes and run stale tests, but with more control and\nwithout the starting time penalty.\n\nNote that watching requires fswatch on your system.\nEg on Mac run `brew install fswatch`.\n\nTo use it, in your project's `.iex` file add:\n```\nunless GenServer.whereis(Bonfire.Common.Test.Interactive) do\n  {:ok, pid} = Bonfire.Common.Test.Interactive.start_link()\n  # Process will not exit when the iex goes out\n  Process.unlink(pid)\nend\nimport Bonfire.Common.Test.Interactive.Helpers\n```\nThen to call `iex` and run tests just do:\n```\nMIX_ENV=test iex -S mix\n```\nThe `Bonfire.Common.Test.Interactive.Helpers` allows to call `f` and `s` and `a`\nto run failed, stale and all tests respectively.\nYou can call `w` to watch tests and `uw` to unwatch.\nThere is a really simple throttle mecanism that disallow running the suite concurrently.","ref":"Bonfire.Common.Test.Interactive.html"},{"type":"function","title":"Bonfire.Common.Test.Interactive.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Common.Test.Interactive.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.run_all_tests/1","doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_all_tests/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.run_failed_tests/1","doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_failed_tests/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.run_stale_tests/1","doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_stale_tests/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.setup_test_repo/1","doc":"Sets up database options for tests\n\nYou can tell a specific test to not wrap in a transaction and rollback with:\n`@tag db_sandbox: false`","ref":"Bonfire.Common.Test.Interactive.html#setup_test_repo/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.start_link/0","doc":"","ref":"Bonfire.Common.Test.Interactive.html#start_link/0"},{"type":"function","title":"Bonfire.Common.Test.Interactive.unlock/0","doc":"","ref":"Bonfire.Common.Test.Interactive.html#unlock/0"},{"type":"function","title":"Bonfire.Common.Test.Interactive.unwatch_tests/0","doc":"","ref":"Bonfire.Common.Test.Interactive.html#unwatch_tests/0"},{"type":"function","title":"Bonfire.Common.Test.Interactive.watch_tests/1","doc":"","ref":"Bonfire.Common.Test.Interactive.html#watch_tests/1"},{"type":"module","title":"Bonfire.Common.Test.Interactive.Helpers","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.f/1","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#f/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.ready/0","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#ready/0"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.s/1","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#s/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.ta/1","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#ta/1"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.uw/0","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#uw/0"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Helpers.w/1","doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#w/1"},{"type":"module","title":"Bonfire.Common.Test.Interactive.Observer","doc":"","ref":"Bonfire.Common.Test.Interactive.Observer.html"},{"type":"function","title":"Bonfire.Common.Test.Interactive.Observer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Common.Test.Interactive.Observer.html#child_spec/1"},{"type":"module","title":"Bonfire.Common.TestInstanceRepo","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.aggregate/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#aggregate/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.aggregate/4","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#aggregate/4"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.all/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#all/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.apply/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#apply/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.checked_out?/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#checked_out?/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.checkout/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#checkout/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.child_spec/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#child_spec/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.config/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#config/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.default_endpoint/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#default_endpoint/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.default_options/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#default_options/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.default_repo/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#default_repo/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.default_repo_opts/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#default_repo_opts/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.delete/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#delete/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.delete!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#delete!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.delete_all/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#delete_all/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.delete_many/1","doc":"Execute a query to delete all matching records.","ref":"Bonfire.Common.TestInstanceRepo.html#delete_many/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#disconnect_all/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.exists?/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#exists?/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#explain/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.fetch/2","doc":"Execute a query for one result where the primary key matches the given id, and return either an {:ok, result} tuple or a {:error, :not_found}","ref":"Bonfire.Common.TestInstanceRepo.html#fetch/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.fetch_all/2","doc":"Execute a query for multiple results given one or multiple IDs.","ref":"Bonfire.Common.TestInstanceRepo.html#fetch_all/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.fetch_by/2","doc":"Execute a query for one result (using a keyword list to specify the key/value to query with), and return either an {:ok, result} tuple or a {:error, :not_found}","ref":"Bonfire.Common.TestInstanceRepo.html#fetch_by/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.find/3","doc":"Like Repo.single, except on failure, adds an error to the changeset","ref":"Bonfire.Common.TestInstanceRepo.html#find/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.get/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#get/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.get!/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#get!/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.get_by/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#get_by/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.get_by!/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#get_by!/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.get_dynamic_repo/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#get_dynamic_repo/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.in_transaction?/0","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#in_transaction?/0"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_all/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_all/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_all_or_ignore/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_all_or_ignore/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_or_ignore/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_or_ignore/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_or_ignore/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_or_ignore/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_or_update/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_or_update/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.insert_or_update!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#insert_or_update!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.load/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#load/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.make_subquery/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#make_subquery/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.many/2","doc":"Execute a query for multiple results and return the results.","ref":"Bonfire.Common.TestInstanceRepo.html#many/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.many_paginated/3","doc":"Execute a query for multiple results and return one page of results.\nThis uses the main implementation for pagination, which is cursor-based and powered by the `Paginator` library.","ref":"Bonfire.Common.TestInstanceRepo.html#many_paginated/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.maybe_declare_test_instance/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#maybe_declare_test_instance/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.maybe_one/2","doc":"Execute a query for one result and return either an result or a fallback value (`nil` by default)","ref":"Bonfire.Common.TestInstanceRepo.html#maybe_one/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.maybe_preload/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#maybe_preload/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.one/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#one/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.one!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#one!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.paginate/2","doc":"Different implementation for pagination using Scrivener (used by eg. rauversion)","ref":"Bonfire.Common.TestInstanceRepo.html#paginate/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.preload/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#preload/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.preload_all/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#preload_all/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.preload_mixins/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#preload_mixins/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.prepare_query/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#prepare_query/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.process_put/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#process_put/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.put/1","doc":"Like `insert/1`, but understands remapping changeset errors to attr\nnames from config (and only config, no overrides at present!)","ref":"Bonfire.Common.TestInstanceRepo.html#put/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.put_dynamic_repo/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#put_dynamic_repo/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.put_many/1","doc":"Like `put/1` but for multiple `changesets`","ref":"Bonfire.Common.TestInstanceRepo.html#put_many/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#query/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#query!/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#query_many/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#query_many!/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.reload/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#reload/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.reload!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#reload!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.rollback/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#rollback/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.single/1","doc":"Execute a query for one result and return either an `{:ok, result}` or `{:error, :not_found}` tuple","ref":"Bonfire.Common.TestInstanceRepo.html#single/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.sql/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#sql/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.start_link/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#start_link/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.stop/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#stop/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.stream/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#stream/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Bonfire.Common.TestInstanceRepo.html#to_sql/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.trace/1","doc":"Can be used to log specific queries (by calling function) in production","ref":"Bonfire.Common.TestInstanceRepo.html#trace/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.transact_many/1","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#transact_many/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.transact_with/1","doc":"Run a transaction, similar to `Repo.transaction/1`, but it expects an ok or error\ntuple. If an error tuple is returned, the transaction is aborted.","ref":"Bonfire.Common.TestInstanceRepo.html#transact_with/1"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.transaction/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#transaction/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.update/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#update/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.update!/2","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#update!/2"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.update_all/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#update_all/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.upsert/3","doc":"Inserts or updates data in the database with upsert semantics.\n\n* `cs` - The changeset or schema to insert or update.\n* `keys_or_attrs_to_update` - A list of keys or a map of attributes to update.\n* `conflict_target` - The column(s) or constraint to check for conflicts, defaults to `[:id]`.","ref":"Bonfire.Common.TestInstanceRepo.html#upsert/3"},{"type":"function","title":"Bonfire.Common.TestInstanceRepo.upsert_all/3","doc":"","ref":"Bonfire.Common.TestInstanceRepo.html#upsert_all/3"},{"type":"module","title":"Bonfire.Common.Text","doc":"","ref":"Bonfire.Common.Text.html"},{"type":"function","title":"Bonfire.Common.Text.blank?/1","doc":"","ref":"Bonfire.Common.Text.html#blank?/1"},{"type":"function","title":"Bonfire.Common.Text.camelise/1","doc":"","ref":"Bonfire.Common.Text.html#camelise/1"},{"type":"function","title":"Bonfire.Common.Text.code_syntax/2","doc":"","ref":"Bonfire.Common.Text.html#code_syntax/2"},{"type":"function","title":"Bonfire.Common.Text.contains?/2","doc":"","ref":"Bonfire.Common.Text.html#contains?/2"},{"type":"function","title":"Bonfire.Common.Text.contains_html?/1","doc":"","ref":"Bonfire.Common.Text.html#contains_html?/1"},{"type":"function","title":"Bonfire.Common.Text.hash/2","doc":"","ref":"Bonfire.Common.Text.html#hash/2"},{"type":"function","title":"Bonfire.Common.Text.list_checkboxes/1","doc":"","ref":"Bonfire.Common.Text.html#list_checkboxes/1"},{"type":"function","title":"Bonfire.Common.Text.list_checked_boxes/1","doc":"","ref":"Bonfire.Common.Text.html#list_checked_boxes/1"},{"type":"function","title":"Bonfire.Common.Text.list_unchecked_boxes/1","doc":"","ref":"Bonfire.Common.Text.html#list_unchecked_boxes/1"},{"type":"function","title":"Bonfire.Common.Text.make_local_links_live/1","doc":"","ref":"Bonfire.Common.Text.html#make_local_links_live/1"},{"type":"function","title":"Bonfire.Common.Text.markdown_as_html_earmark/2","doc":"","ref":"Bonfire.Common.Text.html#markdown_as_html_earmark/2"},{"type":"function","title":"Bonfire.Common.Text.markdown_as_html_mdex/2","doc":"","ref":"Bonfire.Common.Text.html#markdown_as_html_mdex/2"},{"type":"function","title":"Bonfire.Common.Text.markdown_checkboxes/1","doc":"","ref":"Bonfire.Common.Text.html#markdown_checkboxes/1"},{"type":"function","title":"Bonfire.Common.Text.maybe_emote/2","doc":"","ref":"Bonfire.Common.Text.html#maybe_emote/2"},{"type":"function","title":"Bonfire.Common.Text.maybe_markdown_to_html/2","doc":"","ref":"Bonfire.Common.Text.html#maybe_markdown_to_html/2"},{"type":"function","title":"Bonfire.Common.Text.maybe_normalize_html/1","doc":"","ref":"Bonfire.Common.Text.html#maybe_normalize_html/1"},{"type":"function","title":"Bonfire.Common.Text.maybe_render_templated/2","doc":"","ref":"Bonfire.Common.Text.html#maybe_render_templated/2"},{"type":"function","title":"Bonfire.Common.Text.maybe_sane_html/1","doc":"It is recommended to call this before storing any that data is coming in from the user or from a remote instance","ref":"Bonfire.Common.Text.html#maybe_sane_html/1"},{"type":"function","title":"Bonfire.Common.Text.maybe_to_snake/1","doc":"takes a string as input and converts it to snake_case","ref":"Bonfire.Common.Text.html#maybe_to_snake/1"},{"type":"function","title":"Bonfire.Common.Text.normalise_links/2","doc":"","ref":"Bonfire.Common.Text.html#normalise_links/2"},{"type":"function","title":"Bonfire.Common.Text.random_string/1","doc":"","ref":"Bonfire.Common.Text.html#random_string/1"},{"type":"function","title":"Bonfire.Common.Text.regex_list/2","doc":"","ref":"Bonfire.Common.Text.html#regex_list/2"},{"type":"function","title":"Bonfire.Common.Text.sentence_truncate/3","doc":"","ref":"Bonfire.Common.Text.html#sentence_truncate/3"},{"type":"function","title":"Bonfire.Common.Text.slug/1","doc":"","ref":"Bonfire.Common.Text.html#slug/1"},{"type":"function","title":"Bonfire.Common.Text.strlen/1","doc":"","ref":"Bonfire.Common.Text.html#strlen/1"},{"type":"function","title":"Bonfire.Common.Text.text_only/1","doc":"","ref":"Bonfire.Common.Text.html#text_only/1"},{"type":"function","title":"Bonfire.Common.Text.truncate/3","doc":"","ref":"Bonfire.Common.Text.html#truncate/3"},{"type":"function","title":"Bonfire.Common.Text.underscore_truncate/2","doc":"","ref":"Bonfire.Common.Text.html#underscore_truncate/2"},{"type":"function","title":"Bonfire.Common.Text.upcase_first/1","doc":"","ref":"Bonfire.Common.Text.html#upcase_first/1"},{"type":"function","title":"Bonfire.Common.Text.verb_infinitive/1","doc":"Uses the `Verbs` library to convert an English conjugated verb back to inifinitive form.\nCurrently only supports irregular verbs.","ref":"Bonfire.Common.Text.html#verb_infinitive/1"},{"type":"module","title":"Bonfire.Common.TextExtended","doc":"","ref":"Bonfire.Common.TextExtended.html"},{"type":"function","title":"Bonfire.Common.TextExtended.blank?/1","doc":"","ref":"Bonfire.Common.TextExtended.html#blank?/1"},{"type":"function","title":"Bonfire.Common.TextExtended.camelise/1","doc":"","ref":"Bonfire.Common.TextExtended.html#camelise/1"},{"type":"function","title":"Bonfire.Common.TextExtended.code_syntax/2","doc":"","ref":"Bonfire.Common.TextExtended.html#code_syntax/2"},{"type":"function","title":"Bonfire.Common.TextExtended.contains?/2","doc":"","ref":"Bonfire.Common.TextExtended.html#contains?/2"},{"type":"function","title":"Bonfire.Common.TextExtended.contains_html?/1","doc":"","ref":"Bonfire.Common.TextExtended.html#contains_html?/1"},{"type":"function","title":"Bonfire.Common.TextExtended.hash/1","doc":"","ref":"Bonfire.Common.TextExtended.html#hash/1"},{"type":"function","title":"Bonfire.Common.TextExtended.hash/2","doc":"","ref":"Bonfire.Common.TextExtended.html#hash/2"},{"type":"function","title":"Bonfire.Common.TextExtended.list_checkboxes/1","doc":"","ref":"Bonfire.Common.TextExtended.html#list_checkboxes/1"},{"type":"function","title":"Bonfire.Common.TextExtended.list_checked_boxes/1","doc":"","ref":"Bonfire.Common.TextExtended.html#list_checked_boxes/1"},{"type":"function","title":"Bonfire.Common.TextExtended.list_unchecked_boxes/1","doc":"","ref":"Bonfire.Common.TextExtended.html#list_unchecked_boxes/1"},{"type":"function","title":"Bonfire.Common.TextExtended.make_local_links_live/1","doc":"","ref":"Bonfire.Common.TextExtended.html#make_local_links_live/1"},{"type":"function","title":"Bonfire.Common.TextExtended.markdown_as_html_earmark/2","doc":"","ref":"Bonfire.Common.TextExtended.html#markdown_as_html_earmark/2"},{"type":"function","title":"Bonfire.Common.TextExtended.markdown_as_html_mdex/2","doc":"","ref":"Bonfire.Common.TextExtended.html#markdown_as_html_mdex/2"},{"type":"function","title":"Bonfire.Common.TextExtended.markdown_checkboxes/1","doc":"","ref":"Bonfire.Common.TextExtended.html#markdown_checkboxes/1"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_emote/1","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_emote/1"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_emote/2","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_emote/2"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_markdown_to_html/1","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_markdown_to_html/1"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_markdown_to_html/2","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_markdown_to_html/2"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_normalize_html/1","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_normalize_html/1"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_render_templated/2","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_render_templated/2"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_sane_html/1","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_sane_html/1"},{"type":"function","title":"Bonfire.Common.TextExtended.maybe_to_snake/1","doc":"","ref":"Bonfire.Common.TextExtended.html#maybe_to_snake/1"},{"type":"function","title":"Bonfire.Common.TextExtended.normalise_links/1","doc":"","ref":"Bonfire.Common.TextExtended.html#normalise_links/1"},{"type":"function","title":"Bonfire.Common.TextExtended.normalise_links/2","doc":"","ref":"Bonfire.Common.TextExtended.html#normalise_links/2"},{"type":"function","title":"Bonfire.Common.TextExtended.random_string/0","doc":"","ref":"Bonfire.Common.TextExtended.html#random_string/0"},{"type":"function","title":"Bonfire.Common.TextExtended.random_string/1","doc":"","ref":"Bonfire.Common.TextExtended.html#random_string/1"},{"type":"function","title":"Bonfire.Common.TextExtended.regex_list/2","doc":"","ref":"Bonfire.Common.TextExtended.html#regex_list/2"},{"type":"function","title":"Bonfire.Common.TextExtended.sentence_truncate/1","doc":"","ref":"Bonfire.Common.TextExtended.html#sentence_truncate/1"},{"type":"function","title":"Bonfire.Common.TextExtended.sentence_truncate/2","doc":"","ref":"Bonfire.Common.TextExtended.html#sentence_truncate/2"},{"type":"function","title":"Bonfire.Common.TextExtended.sentence_truncate/3","doc":"","ref":"Bonfire.Common.TextExtended.html#sentence_truncate/3"},{"type":"function","title":"Bonfire.Common.TextExtended.slug/1","doc":"","ref":"Bonfire.Common.TextExtended.html#slug/1"},{"type":"function","title":"Bonfire.Common.TextExtended.strlen/1","doc":"","ref":"Bonfire.Common.TextExtended.html#strlen/1"},{"type":"function","title":"Bonfire.Common.TextExtended.text_only/1","doc":"","ref":"Bonfire.Common.TextExtended.html#text_only/1"},{"type":"function","title":"Bonfire.Common.TextExtended.truncate/1","doc":"","ref":"Bonfire.Common.TextExtended.html#truncate/1"},{"type":"function","title":"Bonfire.Common.TextExtended.truncate/2","doc":"","ref":"Bonfire.Common.TextExtended.html#truncate/2"},{"type":"function","title":"Bonfire.Common.TextExtended.truncate/3","doc":"","ref":"Bonfire.Common.TextExtended.html#truncate/3"},{"type":"function","title":"Bonfire.Common.TextExtended.underscore_truncate/1","doc":"","ref":"Bonfire.Common.TextExtended.html#underscore_truncate/1"},{"type":"function","title":"Bonfire.Common.TextExtended.underscore_truncate/2","doc":"","ref":"Bonfire.Common.TextExtended.html#underscore_truncate/2"},{"type":"function","title":"Bonfire.Common.TextExtended.upcase_first/1","doc":"","ref":"Bonfire.Common.TextExtended.html#upcase_first/1"},{"type":"function","title":"Bonfire.Common.TextExtended.verb_infinitive/1","doc":"","ref":"Bonfire.Common.TextExtended.html#verb_infinitive/1"},{"type":"module","title":"Bonfire.Common.Types","doc":"","ref":"Bonfire.Common.Types.html"},{"type":"function","title":"Bonfire.Common.Types.all_object_type_names/0","doc":"Outputs the names all object types, for the purpose of adding to the localisation strings, as long as the output is piped through to localise_strings/1 at compile time.","ref":"Bonfire.Common.Types.html#all_object_type_names/0"},{"type":"function","title":"Bonfire.Common.Types.defines_struct?/1","doc":"Takes an object or module name and checks if it defines a struct","ref":"Bonfire.Common.Types.html#defines_struct?/1"},{"type":"function","title":"Bonfire.Common.Types.is_numeric/1","doc":"Takes a value and returns true if it's a number or can be converted to a float","ref":"Bonfire.Common.Types.html#is_numeric/1"},{"type":"function","title":"Bonfire.Common.Types.is_ulid?/1","doc":"Takes a string and returns true if it is a valid ULID (Universally Unique Lexicographically Sortable Identifier)","ref":"Bonfire.Common.Types.html#is_ulid?/1"},{"type":"function","title":"Bonfire.Common.Types.is_uuid?/1","doc":"Takes a string and returns true if it is a valid UUID (Universally Unique Identifier)","ref":"Bonfire.Common.Types.html#is_uuid?/1"},{"type":"function","title":"Bonfire.Common.Types.maybe_convert_ulids/1","doc":"Takes a map or list of maps, and if the value of a key in the map is a ULID, it replaces it with the corresponding Crockford Base32 encoded string.","ref":"Bonfire.Common.Types.html#maybe_convert_ulids/1"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_atom/1","doc":"Takes a string and returns an atom if it can be converted to one, else returns the input itself","ref":"Bonfire.Common.Types.html#maybe_to_atom/1"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_atom!/1","doc":"Takes a string or an atom and returns an atom if it is one or can be converted to one, else returns nil.","ref":"Bonfire.Common.Types.html#maybe_to_atom!/1"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_atom_or_module/3","doc":"","ref":"Bonfire.Common.Types.html#maybe_to_atom_or_module/3"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_float/2","doc":"Converts a value to a floating-point number if possible. If the value cannot be converted to a float, it returns a fallback value (which defaults to 0 if not provided)","ref":"Bonfire.Common.Types.html#maybe_to_float/2"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_integer/2","doc":"Converts a value to an integer if possible. If the value is not an integer, it attempts to convert it to a float and then rounds it to the nearest integer. Otherwise it returns a fallback value (which defaults to 0 if not provided).","ref":"Bonfire.Common.Types.html#maybe_to_integer/2"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_module/2","doc":"Takes a string and returns the corresponding Elixir module if it exists and is not disabled in the app.","ref":"Bonfire.Common.Types.html#maybe_to_module/2"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_snake_atom/1","doc":"Takes a string as input, converts it to snake_case, and converts it to an atom if such an atom exists, otherwise returns nil.","ref":"Bonfire.Common.Types.html#maybe_to_snake_atom/1"},{"type":"function","title":"Bonfire.Common.Types.maybe_to_string/1","doc":"Handles multiple cases where the input value is of a different type (atom, list, tuple, etc.) and returns a string representation of it.","ref":"Bonfire.Common.Types.html#maybe_to_string/1"},{"type":"function","title":"Bonfire.Common.Types.module_to_human_readable/1","doc":"Takes a module name (as a string or an atom) and converts it to a human-readable string. It removes the `Elixir.` prefix (if it exists) and any other prefixes (eg. `Bonfire.Common.`) and converts the final part of the module name to a string in title case (eg. `Types`).","ref":"Bonfire.Common.Types.html#module_to_human_readable/1"},{"type":"function","title":"Bonfire.Common.Types.module_to_str/1","doc":"Takes a module atom and converts it to a string, or a string and removes the `Elixir.` prefix if it exists.","ref":"Bonfire.Common.Types.html#module_to_str/1"},{"type":"function","title":"Bonfire.Common.Types.object_type/1","doc":"Takes an object, module name, or string, and returns the type of the object. The function uses various patterns to match different object types (such as associations, Pointables, edges/verbs, etc.). If none of the patterns match, the function returns nil.","ref":"Bonfire.Common.Types.html#object_type/1"},{"type":"function","title":"Bonfire.Common.Types.object_type_display/1","doc":"","ref":"Bonfire.Common.Types.html#object_type_display/1"},{"type":"function","title":"Bonfire.Common.Types.sanitise_name/1","doc":"Used for mapping schema types to user-friendly names.\n\nGiven a string representing a schema type name, returns a sanitised version of it, or nil for object types (or mixins) that shouldn't be displayed.","ref":"Bonfire.Common.Types.html#sanitise_name/1"},{"type":"function","title":"Examples - Bonfire.Common.Types.sanitise_name/1","doc":"iex> sanitise_name(\"Apactivity\")\n  \"Federated Object\"","ref":"Bonfire.Common.Types.html#sanitise_name/1-examples"},{"type":"function","title":"Bonfire.Common.Types.table_id/1","doc":"Given a schema module, returns its table ID (i.e. Pointable ULID).","ref":"Bonfire.Common.Types.html#table_id/1"},{"type":"function","title":"Examples - Bonfire.Common.Types.table_id/1","doc":"iex> table_id(Bonfire.Data.Social.APActivity)\n  \"30NF1REAPACTTAB1ENVMBER0NE\"","ref":"Bonfire.Common.Types.html#table_id/1-examples"},{"type":"function","title":"Bonfire.Common.Types.table_type/1","doc":"Given an object or module name, returns its respective table table ID (i.e. Pointable ULID).","ref":"Bonfire.Common.Types.html#table_type/1"},{"type":"function","title":"Examples - Bonfire.Common.Types.table_type/1","doc":"iex> table_type(%Bonfire.Data.Social.APActivity{})\n  \"30NF1REAPACTTAB1ENVMBER0NE\"\n  \n  iex> table_type(%Needle.Pointer{table_id: \"30NF1REAPACTTAB1ENVMBER0NE\"})\n  \"30NF1REAPACTTAB1ENVMBER0NE\"\n\n  iex> table_type(Bonfire.Data.Social.APActivity)\n  \"30NF1REAPACTTAB1ENVMBER0NE\"","ref":"Bonfire.Common.Types.html#table_type/1-examples"},{"type":"function","title":"Bonfire.Common.Types.table_types/1","doc":"Given a list of schema types, returns a list of their respective table types. Filters out any empty values.","ref":"Bonfire.Common.Types.html#table_types/1"},{"type":"function","title":"Examples - Bonfire.Common.Types.table_types/1","doc":"iex> table_types([:activity, :person])\n  [\"activities\", \"people\"]\n\nGiven a single schema type, returns its respective table type.","ref":"Bonfire.Common.Types.html#table_types/1-examples"},{"type":"function","title":"Examples - Bonfire.Common.Types.table_types/1","doc":"iex> table_types(:activity)\n  \"activities\"","ref":"Bonfire.Common.Types.html#table_types/1-examples"},{"type":"function","title":"Bonfire.Common.Types.typeof/1","doc":"Takes an object and returns its data type as a module name or atom","ref":"Bonfire.Common.Types.html#typeof/1"},{"type":"function","title":"Bonfire.Common.Types.ulid/1","doc":"Takes an object or list of objects and returns the ULID (Universally Unique Lexicographically Sortable Identifier) ID(s) if present in the object.","ref":"Bonfire.Common.Types.html#ulid/1"},{"type":"function","title":"Bonfire.Common.Types.ulid!/1","doc":"Takes an object and returns the ULID (Universally Unique Lexicographically Sortable Identifier) ID if present in the object. Throws an error if the ULID ID is not present.","ref":"Bonfire.Common.Types.html#ulid!/1"},{"type":"function","title":"Bonfire.Common.Types.ulids/1","doc":"","ref":"Bonfire.Common.Types.html#ulids/1"},{"type":"function","title":"Bonfire.Common.Types.ulids_or/2","doc":"","ref":"Bonfire.Common.Types.html#ulids_or/2"},{"type":"module","title":"Bonfire.Common.URIs","doc":"","ref":"Bonfire.Common.URIs.html"},{"type":"function","title":"Bonfire.Common.URIs.base_domain/1","doc":"","ref":"Bonfire.Common.URIs.html#base_domain/1"},{"type":"function","title":"Bonfire.Common.URIs.base_uri/1","doc":"Return the homepage URI (as struct) of the local instance","ref":"Bonfire.Common.URIs.html#base_uri/1"},{"type":"function","title":"Bonfire.Common.URIs.base_url/1","doc":"Return the homepage URL (as string) of the local instance","ref":"Bonfire.Common.URIs.html#base_url/1"},{"type":"function","title":"Bonfire.Common.URIs.canonical_url/1","doc":"Returns the canonical URL (i.e. the one used for ActivityPub federation) of an object","ref":"Bonfire.Common.URIs.html#canonical_url/1"},{"type":"function","title":"Bonfire.Common.URIs.fallback/1","doc":"","ref":"Bonfire.Common.URIs.html#fallback/1"},{"type":"function","title":"Bonfire.Common.URIs.fallback/2","doc":"","ref":"Bonfire.Common.URIs.html#fallback/2"},{"type":"function","title":"Bonfire.Common.URIs.fallback/3","doc":"","ref":"Bonfire.Common.URIs.html#fallback/3"},{"type":"function","title":"Bonfire.Common.URIs.is_uri?/1","doc":"Returns true if the given string is a valid URI.","ref":"Bonfire.Common.URIs.html#is_uri?/1"},{"type":"function","title":"Bonfire.Common.URIs.maybe_generate_canonical_url/1","doc":"","ref":"Bonfire.Common.URIs.html#maybe_generate_canonical_url/1"},{"type":"function","title":"Bonfire.Common.URIs.path/3","doc":"Returns the path (URL on the local instance) for the given object/struct (eg. a User), view or schema module, or path name (atom defined in routes), along with optional arguments.","ref":"Bonfire.Common.URIs.html#path/3"},{"type":"function","title":"Bonfire.Common.URIs.path_by_id/4","doc":"","ref":"Bonfire.Common.URIs.html#path_by_id/4"},{"type":"function","title":"Bonfire.Common.URIs.remote_canonical_url/1","doc":"","ref":"Bonfire.Common.URIs.html#remote_canonical_url/1"},{"type":"function","title":"Bonfire.Common.URIs.url_path/2","doc":"Returns the full URL (including domain and path) for a given object, module, or path name.","ref":"Bonfire.Common.URIs.html#url_path/2"},{"type":"function","title":"Bonfire.Common.URIs.validate_uri/1","doc":"Validates a URI string.","ref":"Bonfire.Common.URIs.html#validate_uri/1"},{"type":"module","title":"Bonfire.Common.Utils","doc":"Various very commonly used utility functions for the Bonfire application.","ref":"Bonfire.Common.Utils.html"},{"type":"function","title":"Bonfire.Common.Utils.apply_error/3","doc":"","ref":"Bonfire.Common.Utils.html#apply_error/3"},{"type":"function","title":"Bonfire.Common.Utils.apply_task/3","doc":"Runs a function asynchronously in a Task. Simply a shorthand for calling functions in `Task` and `Task.Supervisor` but with support for multi-tenancy in the spawned process. \n\n- `Task.async/1` the caller creates a new process links and monitors it. Once the task action finishes, a message is sent to the caller with the result. `Task.await/2` is used to read the message sent by the task. When using `async`, you *must* `await` a reply as they are always sent. \n\n- `Task.start_link/1` is suggested instead if you are not expecting a reply. It starts a statically supervised task as part of a supervision tree, linked to the calling process (meaning it will be stopped when the caller stops). \n\n- `Task.start/1` can be used for fire-and-forget tasks, like side-effects, when you have no interest on its results nor if it completes successfully (because if the server is shut down it won't be restarted).\n\nFor more serious tasks, consider using `Oban` or `apply_task_supervised/3` for supervised tasks when possible:\n\n- `Task.Supervisor.start_child/2` allows you to start a fire-and-forget task when you don't care about its results or if it completes successfully or not.\n\n- `Task.Supervisor.async/2` + `Task.await/2` allows you to execute tasks concurrently and retrieve its result. If the task fails, the caller will also fail.","ref":"Bonfire.Common.Utils.html#apply_task/3"},{"type":"function","title":"Bonfire.Common.Utils.apply_task_supervised/3","doc":"","ref":"Bonfire.Common.Utils.html#apply_task_supervised/3"},{"type":"function","title":"Bonfire.Common.Utils.current_account/2","doc":"Returns the current account from socket, assigns, or options.","ref":"Bonfire.Common.Utils.html#current_account/2"},{"type":"function","title":"Bonfire.Common.Utils.current_account_and_or_user_ids/1","doc":"","ref":"Bonfire.Common.Utils.html#current_account_and_or_user_ids/1"},{"type":"function","title":"Bonfire.Common.Utils.current_account_auth!/2","doc":"","ref":"Bonfire.Common.Utils.html#current_account_auth!/2"},{"type":"function","title":"Bonfire.Common.Utils.current_account_id/2","doc":"","ref":"Bonfire.Common.Utils.html#current_account_id/2"},{"type":"function","title":"Bonfire.Common.Utils.current_user/2","doc":"Returns the current user from socket, assigns, or options.","ref":"Bonfire.Common.Utils.html#current_user/2"},{"type":"function","title":"Bonfire.Common.Utils.current_user_auth!/2","doc":"","ref":"Bonfire.Common.Utils.html#current_user_auth!/2"},{"type":"function","title":"Bonfire.Common.Utils.current_user_id/2","doc":"Returns the current user ID from socket, assigns, or options.","ref":"Bonfire.Common.Utils.html#current_user_id/2"},{"type":"function","title":"Bonfire.Common.Utils.current_user_required!/1","doc":"","ref":"Bonfire.Common.Utils.html#current_user_required!/1"},{"type":"function","title":"Bonfire.Common.Utils.e/2","doc":"Returns a value, or a fallback if nil/false","ref":"Bonfire.Common.Utils.html#e/2"},{"type":"function","title":"Bonfire.Common.Utils.e/3","doc":"Extracts a value from a map (and various other data structures), or returns a fallback if not present or empty. If more arguments are provided it looks for nested data (with the last argument always being the fallback).","ref":"Bonfire.Common.Utils.html#e/3"},{"type":"function","title":"Bonfire.Common.Utils.e/4","doc":"Returns a value from a nested map, or a fallback if not present","ref":"Bonfire.Common.Utils.html#e/4"},{"type":"function","title":"Bonfire.Common.Utils.e/5","doc":"","ref":"Bonfire.Common.Utils.html#e/5"},{"type":"function","title":"Bonfire.Common.Utils.e/6","doc":"","ref":"Bonfire.Common.Utils.html#e/6"},{"type":"function","title":"Bonfire.Common.Utils.e/7","doc":"","ref":"Bonfire.Common.Utils.html#e/7"},{"type":"function","title":"Bonfire.Common.Utils.e/8","doc":"","ref":"Bonfire.Common.Utils.html#e/8"},{"type":"function","title":"Bonfire.Common.Utils.empty?/1","doc":"Returns true if the given value is nil, an empty map, an empty list, or an empty string.","ref":"Bonfire.Common.Utils.html#empty?/1"},{"type":"function","title":"Bonfire.Common.Utils.maybe/2","doc":"Applies change_fn if the first parameter is not nil.","ref":"Bonfire.Common.Utils.html#maybe/2"},{"type":"function","title":"Bonfire.Common.Utils.maybe_apply/4","doc":"Helpers for calling hypothetical functions in other modules. Returns the result of calling a function with the given arguments, or the result of fallback function if the primary function is not defined (by default just logging an error message).","ref":"Bonfire.Common.Utils.html#maybe_apply/4"},{"type":"function","title":"Bonfire.Common.Utils.maybe_from_opts/3","doc":"Returns the value of a key from options keyword list or map, or a fallback if not present or empty.","ref":"Bonfire.Common.Utils.html#maybe_from_opts/3"},{"type":"function","title":"Bonfire.Common.Utils.ok_unwrap/2","doc":"Unwraps an `{:ok, val}` tuple, returning the value, or returns a fallback value (nil by default) if the tuple is `{:error, _}` or `:error`.","ref":"Bonfire.Common.Utils.html#ok_unwrap/2"},{"type":"function","title":"Bonfire.Common.Utils.round_nearest/1","doc":"","ref":"Bonfire.Common.Utils.html#round_nearest/1"},{"type":"function","title":"Bonfire.Common.Utils.round_nearest/2","doc":"","ref":"Bonfire.Common.Utils.html#round_nearest/2"},{"type":"function","title":"Bonfire.Common.Utils.socket_connected?/1","doc":"","ref":"Bonfire.Common.Utils.html#socket_connected?/1"},{"type":"function","title":"Bonfire.Common.Utils.to_options/1","doc":"Converts a map, user, socket, tuple, etc, to a keyword list for standardised use as function options.","ref":"Bonfire.Common.Utils.html#to_options/1"},{"type":"module","title":"Bonfire.Ecto","doc":"`Bonfire.Epics` helpers for working with `Ecto`","ref":"Bonfire.Ecto.html"},{"type":"module","title":"Bonfire.Ecto.Acts.Begin","doc":"An Act that enters a transaction unless it senses that it would be futile.","ref":"Bonfire.Ecto.Acts.Begin.html"},{"type":"function","title":"Bonfire.Ecto.Acts.Begin.run/2","doc":"","ref":"Bonfire.Ecto.Acts.Begin.html#run/2"},{"type":"module","title":"Bonfire.Ecto.Acts.Commit","doc":"A placeholder marker used by Begin to identify when to commit the transaction.","ref":"Bonfire.Ecto.Acts.Commit.html"},{"type":"function","title":"Bonfire.Ecto.Acts.Commit.run/2","doc":"","ref":"Bonfire.Ecto.Acts.Commit.html#run/2"},{"type":"module","title":"Bonfire.Ecto.Acts.Delete","doc":"An act that marks a changeset or struct for deletion","ref":"Bonfire.Ecto.Acts.Delete.html"},{"type":"function","title":"Bonfire.Ecto.Acts.Delete.maybe_delete/2","doc":"","ref":"Bonfire.Ecto.Acts.Delete.html#maybe_delete/2"},{"type":"function","title":"Bonfire.Ecto.Acts.Delete.run/2","doc":"","ref":"Bonfire.Ecto.Acts.Delete.html#run/2"},{"type":"module","title":"Bonfire.Ecto.Acts.Work","doc":"An act that performs queued up work in a transaction.\n\nWork is queued up with calls to `add/2` in earlier acts and when run, this act will apply the\nappropriate actions.\n\nOnly runs if there are no epic or changesets errors.","ref":"Bonfire.Ecto.Acts.Work.html"},{"type":"function","title":"Bonfire.Ecto.Acts.Work.add/2","doc":"Records that a particular key contains a changeset for processing.\n\nUse in earlier acts, to schedule work for in-transaction.\n\nIf you wish to delete, you must ensure you set the changeset's `:action` key to `:delete`.","ref":"Bonfire.Ecto.Acts.Work.html#add/2"},{"type":"module","title":"Bonfire.Epics","doc":"","ref":"Bonfire.Epics.html"},{"type":"macro","title":"Bonfire.Epics.maybe_debug/3","doc":"","ref":"Bonfire.Epics.html#maybe_debug/3"},{"type":"macro","title":"Bonfire.Epics.maybe_debug/4","doc":"","ref":"Bonfire.Epics.html#maybe_debug/4"},{"type":"macro","title":"Bonfire.Epics.smart/4","doc":"Like `debug`, but will omit fully outputting the inspectable thing\nand still print the message if only `:debug` is set","ref":"Bonfire.Epics.html#smart/4"},{"type":"behaviour","title":"Bonfire.Epics.Act","doc":"","ref":"Bonfire.Epics.Act.html"},{"type":"macro","title":"Bonfire.Epics.Act.debug/3","doc":"","ref":"Bonfire.Epics.Act.html#debug/3"},{"type":"function","title":"Bonfire.Epics.Act.new/1","doc":"","ref":"Bonfire.Epics.Act.html#new/1"},{"type":"function","title":"Bonfire.Epics.Act.new/2","doc":"","ref":"Bonfire.Epics.Act.html#new/2"},{"type":"function","title":"Bonfire.Epics.Act.new/3","doc":"","ref":"Bonfire.Epics.Act.html#new/3"},{"type":"callback","title":"Bonfire.Epics.Act.run/2","doc":"","ref":"Bonfire.Epics.Act.html#c:run/2"},{"type":"type","title":"Bonfire.Epics.Act.ret/0","doc":"","ref":"Bonfire.Epics.Act.html#t:ret/0"},{"type":"type","title":"Bonfire.Epics.Act.t/0","doc":"","ref":"Bonfire.Epics.Act.html#t:t/0"},{"type":"module","title":"Bonfire.Epics.Debug","doc":"","ref":"Bonfire.Epics.Debug.html"},{"type":"function","title":"Bonfire.Epics.Debug.do_maybe_debug/4","doc":"","ref":"Bonfire.Epics.Debug.html#do_maybe_debug/4"},{"type":"function","title":"Bonfire.Epics.Debug.opts/2","doc":"","ref":"Bonfire.Epics.Debug.html#opts/2"},{"type":"module","title":"Bonfire.Epics.Epic","doc":"","ref":"Bonfire.Epics.Epic.html"},{"type":"function","title":"Bonfire.Epics.Epic.add_error/2","doc":"","ref":"Bonfire.Epics.Epic.html#add_error/2"},{"type":"function","title":"Bonfire.Epics.Epic.add_error/5","doc":"","ref":"Bonfire.Epics.Epic.html#add_error/5"},{"type":"function","title":"Bonfire.Epics.Epic.append/2","doc":"","ref":"Bonfire.Epics.Epic.html#append/2"},{"type":"function","title":"Bonfire.Epics.Epic.assign/2","doc":"","ref":"Bonfire.Epics.Epic.html#assign/2"},{"type":"function","title":"Bonfire.Epics.Epic.assign/3","doc":"","ref":"Bonfire.Epics.Epic.html#assign/3"},{"type":"macro","title":"Bonfire.Epics.Epic.debug/3","doc":"","ref":"Bonfire.Epics.Epic.html#debug/3"},{"type":"function","title":"Bonfire.Epics.Epic.from_config!/2","doc":"Loads an epic from the app's config","ref":"Bonfire.Epics.Epic.html#from_config!/2"},{"type":"function","title":"Bonfire.Epics.Epic.from_spec!/1","doc":"Loads an epic from a specification of steps","ref":"Bonfire.Epics.Epic.html#from_spec!/1"},{"type":"macro","title":"Bonfire.Epics.Epic.maybe_debug/3","doc":"","ref":"Bonfire.Epics.Epic.html#maybe_debug/3"},{"type":"function","title":"Bonfire.Epics.Epic.new/1","doc":"","ref":"Bonfire.Epics.Epic.html#new/1"},{"type":"function","title":"Bonfire.Epics.Epic.prepend/2","doc":"","ref":"Bonfire.Epics.Epic.html#prepend/2"},{"type":"function","title":"Bonfire.Epics.Epic.render_errors/1","doc":"","ref":"Bonfire.Epics.Epic.html#render_errors/1"},{"type":"function","title":"Bonfire.Epics.Epic.run/1","doc":"","ref":"Bonfire.Epics.Epic.html#run/1"},{"type":"function","title":"Bonfire.Epics.Epic.update/4","doc":"","ref":"Bonfire.Epics.Epic.html#update/4"},{"type":"type","title":"Bonfire.Epics.Epic.t/0","doc":"","ref":"Bonfire.Epics.Epic.html#t:t/0"},{"type":"exception","title":"Bonfire.Epics.Error","doc":"","ref":"Bonfire.Epics.Error.html"},{"type":"function","title":"Bonfire.Epics.Error.message/1","doc":"","ref":"Bonfire.Epics.Error.html#message/1"},{"type":"module","title":"Bonfire.Epics.Test","doc":"","ref":"Bonfire.Epics.Test.html"},{"type":"macro","title":"Bonfire.Epics.Test.assert_epic_ok/1","doc":"","ref":"Bonfire.Epics.Test.html#assert_epic_ok/1"},{"type":"function","title":"Bonfire.Epics.Test.debug_error/1","doc":"","ref":"Bonfire.Epics.Test.html#debug_error/1"},{"type":"module","title":"Bonfire.Files","doc":"This module contains general functions for handling files, and also an Ecto schema which is a multimixin for storing one or more media attached to a Pointable object.\n\nAn uploader definition must be provided for each new upload, or will be automatically chosen based on the file type.\n\nA few definitions exist as defaults inside of this namespace, but you can also define\nyour own - a `Bonfire.Files.Definition` is an extension of `Waffle.Definition`,\nhowever the `allowed_media_types/0` and `max_file_size/0` callback are added, \nwith which you need to define what media types are accepted for these types of uploads.\n(You can also return `:all` to accept all media types).\n\nTo use the uploader:\n\n```\niex> {:ok, media} = Bonfire.Files.upload(MyUploader, context, %{path: \"./150.png\"})\niex> media.media_type\n\"image/png\"\niex> Bonfire.Files.remote_url(MyUploader, media)\n\"/uploads/my/01F3AY6JV30G06BY4DR9BTW5EH\"\n```","ref":"Bonfire.Files.html"},{"type":"function","title":"Bonfire.Files.ap_publish_activity/1","doc":"","ref":"Bonfire.Files.html#ap_publish_activity/1"},{"type":"function","title":"Bonfire.Files.ap_receive_attachments/2","doc":"","ref":"Bonfire.Files.html#ap_receive_attachments/2"},{"type":"function","title":"Bonfire.Files.data_url/2","doc":"","ref":"Bonfire.Files.html#data_url/2"},{"type":"function","title":"Bonfire.Files.extract_metadata/1","doc":"","ref":"Bonfire.Files.html#extract_metadata/1"},{"type":"function","title":"Bonfire.Files.file_extension/1","doc":"","ref":"Bonfire.Files.html#file_extension/1"},{"type":"function","title":"Bonfire.Files.file_extension_only/1","doc":"","ref":"Bonfire.Files.html#file_extension_only/1"},{"type":"function","title":"Bonfire.Files.full_url/2","doc":"","ref":"Bonfire.Files.html#full_url/2"},{"type":"function","title":"Bonfire.Files.normalise_size/2","doc":"","ref":"Bonfire.Files.html#normalise_size/2"},{"type":"function","title":"Bonfire.Files.remote_url/3","doc":"Return the URL that a local file has.","ref":"Bonfire.Files.html#remote_url/3"},{"type":"function","title":"Bonfire.Files.upload/5","doc":"Attempt to store a file, returning an upload, for any parent item that\nparticipates in the meta abstraction, providing the user/context of\nthe upload.","ref":"Bonfire.Files.html#upload/5"},{"type":"function","title":"Bonfire.Files.validate/3","doc":"","ref":"Bonfire.Files.html#validate/3"},{"type":"module","title":"Bonfire.Files.Acts.AttachMedia","doc":"Saves uploaded files as attachments to the post.\n\nAct Options:\n  * `:changeset` - key in assigns to find changeset, required\n  * `:attrs` - epic options key to find the attributes at, default: `:post_attrs`.\n  * `:uploads` - epic options key to find the uploaded media objects at, default: `:uploaded_media`.","ref":"Bonfire.Files.Acts.AttachMedia.html"},{"type":"function","title":"Bonfire.Files.Acts.AttachMedia.cast/2","doc":"","ref":"Bonfire.Files.Acts.AttachMedia.html#cast/2"},{"type":"function","title":"Bonfire.Files.Acts.AttachMedia.run/2","doc":"","ref":"Bonfire.Files.Acts.AttachMedia.html#run/2"},{"type":"module","title":"Bonfire.Files.Acts.URLPreviews","doc":"Fetch and save metadata of URLs\n\nAct Options:\n  * `:changeset` - key in assigns to find changeset, required\n  * `:attrs` - epic options key to find the attributes at, default: `:post_attrs`.\n  * `:uploads` - epic options key to find the uploaded media objects at, default: `:urls`.","ref":"Bonfire.Files.Acts.URLPreviews.html"},{"type":"function","title":"Bonfire.Files.Acts.URLPreviews.maybe_fetch_and_save/2","doc":"","ref":"Bonfire.Files.Acts.URLPreviews.html#maybe_fetch_and_save/2"},{"type":"function","title":"Bonfire.Files.Acts.URLPreviews.run/2","doc":"","ref":"Bonfire.Files.Acts.URLPreviews.html#run/2"},{"type":"module","title":"Bonfire.Files.BannerUploader","doc":"Uploader for larger images, for example, a profile page banner.\n\nDoes not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.BannerUploader.html"},{"type":"function","title":"Bonfire.Files.BannerUploader.acl/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.asset_host/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.async/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.attach/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.blurhash/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.blurred/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.bucket/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.bucket/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.default_url/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.default_url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.delete/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.filename/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.prepare/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.remote_url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.BannerUploader.store/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.transform/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.upload/4","doc":"","ref":"Bonfire.Files.BannerUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.url/3","doc":"","ref":"Bonfire.Files.BannerUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.BannerUploader.urls/2","doc":"","ref":"Bonfire.Files.BannerUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.BannerUploader.validate/1","doc":"","ref":"Bonfire.Files.BannerUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.Blurred","doc":"","ref":"Bonfire.Files.Blurred.html"},{"type":"function","title":"Bonfire.Files.Blurred.blurhash/2","doc":"","ref":"Bonfire.Files.Blurred.html#blurhash/2"},{"type":"function","title":"Bonfire.Files.Blurred.blurred/2","doc":"Create a blurred JPEG (deprecated in favour of blurhash)","ref":"Bonfire.Files.Blurred.html#blurred/2"},{"type":"module","title":"Bonfire.Files.CapsuleIntegration.Attacher","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.attach/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#attach/3"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.storages/2","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#storages/2"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.store/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#store/3"},{"type":"function","title":"Bonfire.Files.CapsuleIntegration.Attacher.upload/3","doc":"","ref":"Bonfire.Files.CapsuleIntegration.Attacher.html#upload/3"},{"type":"behaviour","title":"Bonfire.Files.Definition","doc":"Extension to Waffle.Definition, adding support for checking against media types\nparsed through magic bytes instead of file extensions, which can be modified by the user.\n\nYou can still use validate/2 and other waffle callbacks.","ref":"Bonfire.Files.Definition.html"},{"type":"callback","title":"Bonfire.Files.Definition.allowed_media_types/0","doc":"","ref":"Bonfire.Files.Definition.html#c:allowed_media_types/0"},{"type":"module","title":"Bonfire.Files.DocumentUploader","doc":"","ref":"Bonfire.Files.DocumentUploader.html"},{"type":"function","title":"Bonfire.Files.DocumentUploader.acl/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.asset_host/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.async/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.attach/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.blurhash/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.blurred/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.bucket/0","doc":"Definition for any type of document, allows most media types\nthat support documents, archives, video and audio.","ref":"Bonfire.Files.DocumentUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.bucket/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.default_url/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.default_url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.delete/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.filename/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.prepare/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.remote_url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.DocumentUploader.store/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.transform/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.upload/4","doc":"","ref":"Bonfire.Files.DocumentUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.url/3","doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.DocumentUploader.urls/2","doc":"","ref":"Bonfire.Files.DocumentUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.DocumentUploader.validate/1","doc":"","ref":"Bonfire.Files.DocumentUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.FaviconStore","doc":"","ref":"Bonfire.Files.FaviconStore.html"},{"type":"function","title":"Bonfire.Files.FaviconStore.acl/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#acl/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.allowed_media_types/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.asset_host/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.async/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#async/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.attach/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#attach/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.blurhash/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.blurred/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#blurred/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.bucket/0","doc":"Definition for storing media types for a URL","ref":"Bonfire.Files.FaviconStore.html#bucket/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.bucket/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#bucket/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.cached_or_async_fetch_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#cached_or_async_fetch_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.cached_or_fetch/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#cached_or_fetch/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.default_url/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.default_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.delete/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#delete/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.favicon_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#favicon_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.filename/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#filename/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.max_file_size/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.prefix_dir/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.prepare/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#prepare/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.remote_file_headers/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.remote_url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.s3_object_headers/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.storage_dir/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.FaviconStore.store/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#store/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.transform/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#transform/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.upload/4","doc":"","ref":"Bonfire.Files.FaviconStore.html#upload/4"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/1"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.url/3","doc":"","ref":"Bonfire.Files.FaviconStore.html#url/3"},{"type":"function","title":"Bonfire.Files.FaviconStore.urls/2","doc":"","ref":"Bonfire.Files.FaviconStore.html#urls/2"},{"type":"function","title":"Bonfire.Files.FaviconStore.validate/1","doc":"","ref":"Bonfire.Files.FaviconStore.html#validate/1"},{"type":"module","title":"Bonfire.Files.FileDenied","doc":"","ref":"Bonfire.Files.FileDenied.html"},{"type":"function","title":"Bonfire.Files.FileDenied.new/1","doc":"","ref":"Bonfire.Files.FileDenied.html#new/1"},{"type":"type","title":"Bonfire.Files.FileDenied.t/0","doc":"","ref":"Bonfire.Files.FileDenied.html#t:t/0"},{"type":"module","title":"Bonfire.Files.IconUploader","doc":"","ref":"Bonfire.Files.IconUploader.html"},{"type":"function","title":"Bonfire.Files.IconUploader.acl/2","doc":"","ref":"Bonfire.Files.IconUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.IconUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.IconUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.IconUploader.asset_host/0","doc":"","ref":"Bonfire.Files.IconUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.IconUploader.async/0","doc":"","ref":"Bonfire.Files.IconUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.IconUploader.attach/2","doc":"","ref":"Bonfire.Files.IconUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.IconUploader.blurhash/1","doc":"","ref":"Bonfire.Files.IconUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.IconUploader.blurred/1","doc":"","ref":"Bonfire.Files.IconUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.IconUploader.bucket/0","doc":"Uploader for smaller image icons, usually used as avatars.\n\nTODO: Support resizing.","ref":"Bonfire.Files.IconUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.IconUploader.bucket/1","doc":"","ref":"Bonfire.Files.IconUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.IconUploader.default_url/1","doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.IconUploader.default_url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.delete/1","doc":"","ref":"Bonfire.Files.IconUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.IconUploader.filename/2","doc":"","ref":"Bonfire.Files.IconUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.IconUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.IconUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.IconUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.IconUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.IconUploader.prepare/1","doc":"","ref":"Bonfire.Files.IconUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.IconUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.IconUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.IconUploader.remote_url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.IconUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.IconUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.IconUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.IconUploader.store/1","doc":"","ref":"Bonfire.Files.IconUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.IconUploader.transform/2","doc":"","ref":"Bonfire.Files.IconUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.IconUploader.upload/4","doc":"","ref":"Bonfire.Files.IconUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.IconUploader.url/1","doc":"","ref":"Bonfire.Files.IconUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.IconUploader.url/2","doc":"","ref":"Bonfire.Files.IconUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.IconUploader.url/3","doc":"","ref":"Bonfire.Files.IconUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.IconUploader.urls/2","doc":"","ref":"Bonfire.Files.IconUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.IconUploader.validate/1","doc":"","ref":"Bonfire.Files.IconUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.Image.Edit","doc":"","ref":"Bonfire.Files.Image.Edit.html"},{"type":"function","title":"Bonfire.Files.Image.Edit.banner/3","doc":"","ref":"Bonfire.Files.Image.Edit.html#banner/3"},{"type":"function","title":"Bonfire.Files.Image.Edit.blur/2","doc":"","ref":"Bonfire.Files.Image.Edit.html#blur/2"},{"type":"function","title":"Bonfire.Files.Image.Edit.dominant_color/3","doc":"Returns the dominant color of an image (given as path, binary, or stream) as HEX value.\n\n`bins` is an integer number of color frequency bins the image is divided into. The default is 10.","ref":"Bonfire.Files.Image.Edit.html#dominant_color/3"},{"type":"function","title":"Bonfire.Files.Image.Edit.image/3","doc":"","ref":"Bonfire.Files.Image.Edit.html#image/3"},{"type":"function","title":"Bonfire.Files.Image.Edit.thumbnail/1","doc":"","ref":"Bonfire.Files.Image.Edit.html#thumbnail/1"},{"type":"function","title":"Bonfire.Files.Image.Edit.thumbnail_image/2","doc":"","ref":"Bonfire.Files.Image.Edit.html#thumbnail_image/2"},{"type":"function","title":"Bonfire.Files.Image.Edit.thumbnail_pdf/1","doc":"","ref":"Bonfire.Files.Image.Edit.html#thumbnail_pdf/1"},{"type":"module","title":"Bonfire.Files.ImageUploader","doc":"Uploader for larger images, for example, a profile page banner.\n\nDoes not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.ImageUploader.html"},{"type":"function","title":"Bonfire.Files.ImageUploader.acl/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#acl/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.allowed_media_types/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#allowed_media_types/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.asset_host/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#asset_host/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.async/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#async/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.attach/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#attach/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.blurhash/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#blurhash/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.blurred/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#blurred/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.bucket/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.bucket/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.default_url/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.default_url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.delete/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#delete/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.filename/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#filename/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.max_file_size/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#max_file_size/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.prefix_dir/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#prefix_dir/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.prepare/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#prepare/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.remote_file_headers/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_file_headers/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.remote_url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.s3_object_headers/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#s3_object_headers/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.storage_dir/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.storage_dir_prefix/0","doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir_prefix/0"},{"type":"function","title":"Bonfire.Files.ImageUploader.store/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#store/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.transform/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#transform/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.upload/4","doc":"","ref":"Bonfire.Files.ImageUploader.html#upload/4"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/1"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.url/3","doc":"","ref":"Bonfire.Files.ImageUploader.html#url/3"},{"type":"function","title":"Bonfire.Files.ImageUploader.urls/2","doc":"","ref":"Bonfire.Files.ImageUploader.html#urls/2"},{"type":"function","title":"Bonfire.Files.ImageUploader.validate/1","doc":"","ref":"Bonfire.Files.ImageUploader.html#validate/1"},{"type":"module","title":"Bonfire.Files.LiveHandler","doc":"","ref":"Bonfire.Files.LiveHandler.html"},{"type":"function","title":"Bonfire.Files.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Files.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Files.LiveHandler.handle_progress/3","doc":"","ref":"Bonfire.Files.LiveHandler.html#handle_progress/3"},{"type":"function","title":"Bonfire.Files.LiveHandler.set_fallback/5","doc":"","ref":"Bonfire.Files.LiveHandler.html#set_fallback/5"},{"type":"macro","title":"Bonfire.Files.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Files.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Files.Media","doc":"","ref":"Bonfire.Files.Media.html"},{"type":"function","title":"Bonfire.Files.Media.hard_delete/2","doc":"Delete an upload, removing any associated files.","ref":"Bonfire.Files.Media.html#hard_delete/2"},{"type":"function","title":"Bonfire.Files.Media.insert/4","doc":"","ref":"Bonfire.Files.Media.html#insert/4"},{"type":"function","title":"Bonfire.Files.Media.many/1","doc":"","ref":"Bonfire.Files.Media.html#many/1"},{"type":"function","title":"Bonfire.Files.Media.one/1","doc":"","ref":"Bonfire.Files.Media.html#one/1"},{"type":"function","title":"Bonfire.Files.Media.soft_delete/1","doc":"Delete an upload, removing it from indexing, but the files remain available.","ref":"Bonfire.Files.Media.html#soft_delete/1"},{"type":"function","title":"Bonfire.Files.Media.update_by/2","doc":"","ref":"Bonfire.Files.Media.html#update_by/2"},{"type":"type","title":"Bonfire.Files.Media.t/0","doc":"","ref":"Bonfire.Files.Media.html#t:t/0"},{"type":"module","title":"Bonfire.Files.Media.Queries","doc":"","ref":"Bonfire.Files.Media.Queries.html"},{"type":"function","title":"Bonfire.Files.Media.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Files.Media.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Files.Media.Queries.query/1","doc":"","ref":"Bonfire.Files.Media.Queries.html#query/1"},{"type":"function","title":"Bonfire.Files.Media.Queries.query/2","doc":"","ref":"Bonfire.Files.Media.Queries.html#query/2"},{"type":"module","title":"Bonfire.Files.Prepare","doc":"","ref":"Bonfire.Files.Prepare.html"},{"type":"function","title":"Bonfire.Files.Prepare.prepare/2","doc":"","ref":"Bonfire.Files.Prepare.html#prepare/2"},{"type":"module","title":"Bonfire.Files.ResponsiveImage","doc":"Resizes images at compile time (when possible) or runtime:\n\n```\nuse Bonfire.Files.ResponsiveImage\n\n~H( )\nor\n~H( )\n\nor for paths only known at runtime:\n~H( )\nor\n~H( )\n```","ref":"Bonfire.Files.ResponsiveImage.html"},{"type":"macro","title":"Bonfire.Files.ResponsiveImage.compile_src/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#compile_src/2"},{"type":"macro","title":"Bonfire.Files.ResponsiveImage.compile_srcset/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#compile_srcset/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize/1","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize/1"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.resize_timed/1","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#resize_timed/1"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.src/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#src/2"},{"type":"function","title":"Bonfire.Files.ResponsiveImage.srcset/2","doc":"","ref":"Bonfire.Files.ResponsiveImage.html#srcset/2"},{"type":"module","title":"Bonfire.Files.Routes","doc":"","ref":"Bonfire.Files.Routes.html"},{"type":"module","title":"Bonfire.Files.RuntimeConfig","doc":"","ref":"Bonfire.Files.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Files.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Files.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Files.Simulation","doc":"","ref":"Bonfire.Files.Simulation.html"},{"type":"function","title":"Bonfire.Files.Simulation.cleanup/1","doc":"","ref":"Bonfire.Files.Simulation.html#cleanup/1"},{"type":"function","title":"Bonfire.Files.Simulation.fake_upload/2","doc":"","ref":"Bonfire.Files.Simulation.html#fake_upload/2"},{"type":"function","title":"Bonfire.Files.Simulation.geometry/1","doc":"","ref":"Bonfire.Files.Simulation.html#geometry/1"},{"type":"function","title":"Bonfire.Files.Simulation.icon_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#icon_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.image_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#image_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.pdf_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#pdf_file/0"},{"type":"function","title":"Bonfire.Files.Simulation.text_file/0","doc":"","ref":"Bonfire.Files.Simulation.html#text_file/0"},{"type":"module","title":"Bonfire.Files.Versions","doc":"","ref":"Bonfire.Files.Versions.html"},{"type":"module","title":"Bonfire.Mailer","doc":"","ref":"Bonfire.Mailer.html"},{"type":"function","title":"Bonfire.Mailer.config/0","doc":"","ref":"Bonfire.Mailer.html#config/0"},{"type":"function","title":"Bonfire.Mailer.deliver/1","doc":"","ref":"Bonfire.Mailer.html#deliver/1"},{"type":"function","title":"Bonfire.Mailer.deliver_later/2","doc":"","ref":"Bonfire.Mailer.html#deliver_later/2"},{"type":"function","title":"Bonfire.Mailer.deliver_later!/2","doc":"","ref":"Bonfire.Mailer.html#deliver_later!/2"},{"type":"function","title":"Bonfire.Mailer.deliver_now/2","doc":"","ref":"Bonfire.Mailer.html#deliver_now/2"},{"type":"function","title":"Bonfire.Mailer.deliver_now!/2","doc":"","ref":"Bonfire.Mailer.html#deliver_now!/2"},{"type":"function","title":"Bonfire.Mailer.do_send/2","doc":"","ref":"Bonfire.Mailer.html#do_send/2"},{"type":"function","title":"Bonfire.Mailer.handle_error/2","doc":"","ref":"Bonfire.Mailer.html#handle_error/2"},{"type":"function","title":"Bonfire.Mailer.send/4","doc":"","ref":"Bonfire.Mailer.html#send/4"},{"type":"function","title":"Bonfire.Mailer.send_app_feedback/3","doc":"","ref":"Bonfire.Mailer.html#send_app_feedback/3"},{"type":"function","title":"Bonfire.Mailer.send_async/3","doc":"","ref":"Bonfire.Mailer.html#send_async/3"},{"type":"function","title":"Bonfire.Mailer.send_now/3","doc":"","ref":"Bonfire.Mailer.html#send_now/3"},{"type":"module","title":"Bonfire.Mailer.Checker","doc":"Functions for checking the validity of email addresses and domains","ref":"Bonfire.Mailer.Checker.html"},{"type":"function","title":"Bonfire.Mailer.Checker.validate_domain/1","doc":"Checks whether an email domain is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_domain/1"},{"type":"function","title":"Bonfire.Mailer.Checker.validate_email/1","doc":"Checks whether an email is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_email/1"},{"type":"type","title":"Bonfire.Mailer.Checker.error_reason/0","doc":"","ref":"Bonfire.Mailer.Checker.html#t:error_reason/0"},{"type":"module","title":"Bonfire.Mailer.RuntimeConfig","doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Mailer.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Mailer.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#config_module/0"},{"type":"function","title":"Bonfire.Mailer.RuntimeConfig.mail_blackhole/1","doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#mail_blackhole/1"},{"type":"function","title":"Bonfire.Mailer.RuntimeConfig.mail_service/2","doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#mail_service/2"},{"type":"module","title":"Bonfire.Web.Endpoint","doc":"","ref":"Bonfire.Web.Endpoint.html"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast/3","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast/3"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast!/3","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast!/3"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast_from/4","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast_from/4"},{"type":"function","title":"Bonfire.Web.Endpoint.broadcast_from!/4","doc":"","ref":"Bonfire.Web.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"Bonfire.Web.Endpoint.call/2","doc":"","ref":"Bonfire.Web.Endpoint.html#call/2"},{"type":"function","title":"Bonfire.Web.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"Bonfire.Web.Endpoint.html#child_spec/1"},{"type":"function","title":"Bonfire.Web.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"Bonfire.Web.Endpoint.html#config/2"},{"type":"function","title":"Bonfire.Web.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.Endpoint.html#config_change/2"},{"type":"function","title":"Bonfire.Web.Endpoint.generate_reverse_router!/1","doc":"(re)generates the reverse router (useful so it can be re-generated when extensions are enabled/disabled)","ref":"Bonfire.Web.Endpoint.html#generate_reverse_router!/1"},{"type":"function","title":"Bonfire.Web.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.Endpoint.html#host/0"},{"type":"function","title":"Bonfire.Web.Endpoint.include_assets/1","doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/1"},{"type":"function","title":"Bonfire.Web.Endpoint.include_assets/2","doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/2"},{"type":"function","title":"Bonfire.Web.Endpoint.init/1","doc":"","ref":"Bonfire.Web.Endpoint.html#init/1"},{"type":"function","title":"Bonfire.Web.Endpoint.local_broadcast/3","doc":"","ref":"Bonfire.Web.Endpoint.html#local_broadcast/3"},{"type":"function","title":"Bonfire.Web.Endpoint.local_broadcast_from/4","doc":"","ref":"Bonfire.Web.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"Bonfire.Web.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.Endpoint.html#path/1"},{"type":"function","title":"Bonfire.Web.Endpoint.reload!/1","doc":"","ref":"Bonfire.Web.Endpoint.html#reload!/1"},{"type":"function","title":"Bonfire.Web.Endpoint.script_name/0","doc":"Generates the script name.","ref":"Bonfire.Web.Endpoint.html#script_name/0"},{"type":"function","title":"Bonfire.Web.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"Bonfire.Web.Endpoint.html#server_info/1"},{"type":"function","title":"Bonfire.Web.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"Bonfire.Web.Endpoint.html#start_link/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.Endpoint.html#static_integrity/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"Bonfire.Web.Endpoint.html#static_lookup/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"Bonfire.Web.Endpoint.html#static_path/1"},{"type":"function","title":"Bonfire.Web.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"Bonfire.Web.Endpoint.html#static_url/0"},{"type":"function","title":"Bonfire.Web.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"Bonfire.Web.Endpoint.html#struct_url/0"},{"type":"function","title":"Bonfire.Web.Endpoint.subscribe/2","doc":"","ref":"Bonfire.Web.Endpoint.html#subscribe/2"},{"type":"function","title":"Bonfire.Web.Endpoint.unsubscribe/1","doc":"","ref":"Bonfire.Web.Endpoint.html#unsubscribe/1"},{"type":"function","title":"Bonfire.Web.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"Bonfire.Web.Endpoint.html#url/0"},{"type":"module","title":"Bonfire.Web.FakeRemoteEndpoint","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast!/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast!/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from!/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from!/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.call/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#call/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#child_spec/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config_change/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#host/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.init/1","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#init/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast/3","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast/3"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast_from/4","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast_from/4"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#path/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.script_name/0","doc":"Generates the script name.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#script_name/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"Bonfire.Web.FakeRemoteEndpoint.html#server_info/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#start_link/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_integrity/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_lookup/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_path/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_url/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#struct_url/0"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.subscribe/2","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#subscribe/2"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.unsubscribe/1","doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html#unsubscribe/1"},{"type":"function","title":"Bonfire.Web.FakeRemoteEndpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#url/0"},{"type":"module","title":"Bonfire.Web.Router","doc":"","ref":"Bonfire.Web.Router.html"},{"type":"function","title":"Bonfire.Web.Router.account_required/2","doc":"","ref":"Bonfire.Web.Router.html#account_required/2"},{"type":"function","title":"Bonfire.Web.Router.activity_json/2","doc":"","ref":"Bonfire.Web.Router.html#activity_json/2"},{"type":"function","title":"Bonfire.Web.Router.activity_json_or_html/2","doc":"","ref":"Bonfire.Web.Router.html#activity_json_or_html/2"},{"type":"function","title":"Bonfire.Web.Router.admin_required/2","doc":"","ref":"Bonfire.Web.Router.html#admin_required/2"},{"type":"function","title":"Bonfire.Web.Router.basic/2","doc":"","ref":"Bonfire.Web.Router.html#basic/2"},{"type":"function","title":"Bonfire.Web.Router.basic_html/2","doc":"","ref":"Bonfire.Web.Router.html#basic_html/2"},{"type":"function","title":"Bonfire.Web.Router.browser/2","doc":"","ref":"Bonfire.Web.Router.html#browser/2"},{"type":"function","title":"Bonfire.Web.Router.browser_unsafe/2","doc":"","ref":"Bonfire.Web.Router.html#browser_unsafe/2"},{"type":"function","title":"Bonfire.Web.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"Bonfire.Web.Router.html#call/2"},{"type":"function","title":"Bonfire.Web.Router.guest_only/2","doc":"","ref":"Bonfire.Web.Router.html#guest_only/2"},{"type":"function","title":"Bonfire.Web.Router.html_only/2","doc":"","ref":"Bonfire.Web.Router.html#html_only/2"},{"type":"function","title":"Bonfire.Web.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"Bonfire.Web.Router.html#init/1"},{"type":"function","title":"Bonfire.Web.Router.load_current_auth/2","doc":"","ref":"Bonfire.Web.Router.html#load_current_auth/2"},{"type":"function","title":"Bonfire.Web.Router.require_authenticated_user/2","doc":"","ref":"Bonfire.Web.Router.html#require_authenticated_user/2"},{"type":"function","title":"Bonfire.Web.Router.signed_activity_pub/2","doc":"","ref":"Bonfire.Web.Router.html#signed_activity_pub/2"},{"type":"function","title":"Bonfire.Web.Router.static/2","doc":"","ref":"Bonfire.Web.Router.html#static/2"},{"type":"function","title":"Bonfire.Web.Router.throttle_plug_attacks/2","doc":"","ref":"Bonfire.Web.Router.html#throttle_plug_attacks/2"},{"type":"function","title":"Bonfire.Web.Router.user_required/2","doc":"","ref":"Bonfire.Web.Router.html#user_required/2"},{"type":"function","title":"Bonfire.Web.Router.webfinger/2","doc":"","ref":"Bonfire.Web.Router.html#webfinger/2"},{"type":"function","title":"Bonfire.Web.Router.well_known_nodeinfo/2","doc":"","ref":"Bonfire.Web.Router.html#well_known_nodeinfo/2"},{"type":"module","title":"Bonfire.Web.Router.Reverse","doc":"","ref":"Bonfire.Web.Router.Reverse.html"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/2","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/2"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/3","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/3"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/4","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/4"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/5","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/5"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/6","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/6"},{"type":"function","title":"Bonfire.Web.Router.Reverse.path/7","doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/7"},{"type":"module","title":"Bonfire.Web.Routes","doc":"","ref":"Bonfire.Web.Routes.html"},{"type":"module","title":"Bonfire.Web.Telemetry","doc":"","ref":"Bonfire.Web.Telemetry.html"},{"type":"function","title":"Bonfire.Web.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Web.Telemetry.html#child_spec/1"},{"type":"function","title":"Bonfire.Web.Telemetry.metrics/0","doc":"","ref":"Bonfire.Web.Telemetry.html#metrics/0"},{"type":"function","title":"Bonfire.Web.Telemetry.start_link/1","doc":"","ref":"Bonfire.Web.Telemetry.html#start_link/1"},{"type":"module","title":"Bonfire.Federate.ActivityPub","doc":"","ref":"Bonfire.Federate.ActivityPub.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.disable/1","doc":"","ref":"Bonfire.Federate.ActivityPub.html#disable/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.federating?/1","doc":"","ref":"Bonfire.Federate.ActivityPub.html#federating?/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.federating_default?/0","doc":"","ref":"Bonfire.Federate.ActivityPub.html#federating_default?/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.repo/0","doc":"","ref":"Bonfire.Federate.ActivityPub.html#repo/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.set_federating/2","doc":"","ref":"Bonfire.Federate.ActivityPub.html#set_federating/2"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Adapter","doc":"Adapter functions delegated from the `ActivityPub` Library","ref":"Bonfire.Federate.ActivityPub.Adapter.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.base_url/0","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#base_url/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.external_followers_for_activity/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#external_followers_for_activity/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.federate_actor?/3","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#federate_actor?/3"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_username/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_username/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_follower_local_ids/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_follower_local_ids/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_following_local_ids/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_following_local_ids/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_locale/0","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_locale/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_or_create_service_actor/0","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_or_create_service_actor/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.get_redirect_url/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_redirect_url/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.handle_activity/1","doc":"Process incoming activities","ref":"Bonfire.Federate.ActivityPub.Adapter.html#handle_activity/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.maybe_create_remote_actor/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#maybe_create_remote_actor/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.maybe_publish_object/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#maybe_publish_object/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.redirect_to_actor/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#redirect_to_actor/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.update_local_actor/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_local_actor/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.update_local_actor_cache/1","doc":"For updating an Actor in cache after a User/etc is updated","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_local_actor_cache/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.update_remote_actor/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_remote_actor/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Adapter.update_remote_actor/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_remote_actor/2"},{"type":"module","title":"Bonfire.Federate.ActivityPub.AdapterUtils","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.all_actors/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#all_actors/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.all_recipients/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#all_recipients/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.ap_base_url/0","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#ap_base_url/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.character_module/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#character_module/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.character_to_actor/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#character_to_actor/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.create_author_object/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#create_author_object/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.create_remote_actor/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#create_remote_actor/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.create_service_character/0","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#create_service_character/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.determine_recipients/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#determine_recipients/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.determine_recipients/3","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#determine_recipients/3"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.determine_recipients/4","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#determine_recipients/4"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.format_actor/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#format_actor/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_actor_by_ap_id/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_actor_by_ap_id/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_actor_username/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_actor_username/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_author/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_author/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_by_url_ap_id_or_username/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_by_url_ap_id_or_username/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_character/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_character/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_character_by_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_character_by_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_character_by_ap_id!/1","doc":"without :ok / :error tuple","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_character_by_ap_id!/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_character_by_id/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_character_by_id/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_character_by_username/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_character_by_username/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_context_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_context_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_creator_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_creator_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_different_creator_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_different_creator_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_in_reply_to/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_in_reply_to/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_local_actor_by_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_local_actor_by_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_local_character_by_ap_id/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_local_character_by_ap_id/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_object_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_object_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_object_ap_id!/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_object_ap_id!/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_object_or_actor_by_ap_id!/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_object_or_actor_by_ap_id!/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_or_create_service_character/0","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_or_create_service_character/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_or_fetch_and_create_by_uri/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_or_fetch_and_create_by_uri/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_or_fetch_and_create_by_username/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_or_fetch_and_create_by_username/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_or_fetch_character_by_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_or_fetch_character_by_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.get_pointer_id_by_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#get_pointer_id_by_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.id_or_object_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#id_or_object_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.is_follow?/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#is_follow?/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.is_local?/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#is_local?/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.is_local_collection?/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#is_local_collection?/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.is_local_collection_or_built_in?/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#is_local_collection_or_built_in?/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.local_actor_ids/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#local_actor_ids/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.log/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#log/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_add_aliases/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_add_aliases/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_apply_or/4","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_apply_or/4"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_attach_property_value/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_attach_property_value/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_create_banner_object/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_create_banner_object/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_create_icon_object/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_create_icon_object/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_create_image_object/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_create_image_object/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_fix_image_object/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_fix_image_object/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_format_image_object_from_path/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_format_image_object_from_path/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.maybe_pointer_id_for_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#maybe_pointer_id_for_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.preload_peered/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#preload_peered/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.public_uri/0","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#public_uri/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.return_pointable/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#return_pointable/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.return_pointer/2","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#return_pointer/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.the_ap_id/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#the_ap_id/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.AdapterUtils.validate_url/1","doc":"","ref":"Bonfire.Federate.ActivityPub.AdapterUtils.html#validate_url/1"},{"type":"module","title":"Bonfire.Federate.ActivityPub.BoundariesMRF","doc":"Filter activities depending on their origin instance, actor, or other criteria","ref":"Bonfire.Federate.ActivityPub.BoundariesMRF.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.BoundariesMRF.actor_blocked?/3","doc":"","ref":"Bonfire.Federate.ActivityPub.BoundariesMRF.html#actor_blocked?/3"},{"type":"behaviour","title":"Bonfire.Federate.ActivityPub.FederationModules","doc":"A automatically-generated global list of federation modules which can queried by activity and/or object type.\n\nTo add a module to this list, you should declare `@behaviour Bonfire.Federate.ActivityPub.FederationModules` in it and define a `federation_module/0` function which returns a list of object and/or activity types which that module handles.\n\nExample:\n```\n@behaviour Bonfire.Federate.ActivityPub.FederationModules\ndef federation_module,\n  do: [\n    \"Announce\",\n    {\"Create\", \"Announce\"},\n    {\"Undo\", \"Announce\"},\n    {\"Delete\", \"Announce\"}\n  ]\n```\n\nYou should also then implement these two functions:\n- for outgoing federation: `ap_publish_activity(subject_struct, verb, object_struct)`\n- for incoming federation: `ap_receive_activity(subject_struct, activity_json, object_json)`","ref":"Bonfire.Federate.ActivityPub.FederationModules.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.app_modules/0","doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#app_modules/0"},{"type":"callback","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module/0","doc":"Get a Federation Module identified by activity and/or object type, given a activity and/or object (string or {activity, object} tuple).","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#c:federation_module/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module/2","doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module!/2","doc":"Look up a Federation Module, throw :not_found if not found.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module!/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_modules/1","doc":"Look up many types at once, throw :not_found if any of them are not found","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_modules/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_modules_data_types/0","doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_modules_data_types/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.maybe_federation_module/2","doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#maybe_federation_module/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.FederationModules.modules/0","doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#modules/0"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Incoming","doc":"","ref":"Bonfire.Federate.ActivityPub.Incoming.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Incoming.no_federation_module_match/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Incoming.html#no_federation_module_match/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Incoming.receive_activity/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Incoming.html#receive_activity/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Incoming.receive_activity/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Incoming.html#receive_activity/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Incoming.receive_object/2","doc":"Create an object without an activity","ref":"Bonfire.Federate.ActivityPub.Incoming.html#receive_object/2"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Instances","doc":"Federated instances\nContext for `Bonfire.Data.ActivityPub.Peer`","ref":"Bonfire.Federate.ActivityPub.Instances.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Instances.get/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#get/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Instances.get_or_create/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#get_or_create/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Instances.get_or_create_instance_circle/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#get_or_create_instance_circle/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Instances.is_blocked?/3","doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#is_blocked?/3"},{"type":"module","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter","doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.base_url/0","doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#base_url/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.gather_nodeinfo_data/0","doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#gather_nodeinfo_data/0"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Outgoing","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Outgoing.ap_activity!/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html#ap_activity!/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Outgoing.federate_outgoing?/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html#federate_outgoing?/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Outgoing.maybe_federate/4","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html#maybe_federate/4"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Outgoing.preparation_error/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html#preparation_error/2"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Outgoing.push_now!/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Outgoing.html#push_now!/1"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Peered","doc":"Federated actors or objects\nContext for `Bonfire.Data.ActivityPub.Peered`","ref":"Bonfire.Federate.ActivityPub.Peered.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Peered.create/3","doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#create/3"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Peered.get/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Peered.get_canonical_uri/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get_canonical_uri/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Peered.is_blocked?/3","doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#is_blocked?/3"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Peered.save_canonical_uri/2","doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#save_canonical_uri/2"},{"type":"module","title":"Bonfire.Federate.ActivityPub.RuntimeConfig","doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Federate.ActivityPub.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Federate.ActivityPub.Simulate","doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Simulate.actor_json/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#actor_json/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Simulate.fake_remote_user/1","doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#fake_remote_user/1"},{"type":"function","title":"Bonfire.Federate.ActivityPub.Simulate.webfingered/0","doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#webfingered/0"},{"type":"module","title":"Bonfire.Invite.Links","doc":"","ref":"Bonfire.Invite.Links.html"},{"type":"function","title":"Bonfire.Invite.Links.create/2","doc":"","ref":"Bonfire.Invite.Links.html#create/2"},{"type":"function","title":"Bonfire.Invite.Links.date_expires/1","doc":"","ref":"Bonfire.Invite.Links.html#date_expires/1"},{"type":"function","title":"Bonfire.Invite.Links.expired?/1","doc":"","ref":"Bonfire.Invite.Links.html#expired?/1"},{"type":"function","title":"Bonfire.Invite.Links.get/2","doc":"","ref":"Bonfire.Invite.Links.html#get/2"},{"type":"function","title":"Bonfire.Invite.Links.list_paginated/2","doc":"","ref":"Bonfire.Invite.Links.html#list_paginated/2"},{"type":"function","title":"Bonfire.Invite.Links.one/2","doc":"","ref":"Bonfire.Invite.Links.html#one/2"},{"type":"function","title":"Bonfire.Invite.Links.query/2","doc":"","ref":"Bonfire.Invite.Links.html#query/2"},{"type":"function","title":"Bonfire.Invite.Links.redeem/1","doc":"","ref":"Bonfire.Invite.Links.html#redeem/1"},{"type":"function","title":"Bonfire.Invite.Links.redeemable?/1","doc":"","ref":"Bonfire.Invite.Links.html#redeemable?/1"},{"type":"module","title":"Bonfire.Invite.Links.Fake","doc":"","ref":"Bonfire.Invite.Links.Fake.html"},{"type":"module","title":"Bonfire.Invite.Links.Integration","doc":"","ref":"Bonfire.Invite.Links.Integration.html"},{"type":"function","title":"Bonfire.Invite.Links.Integration.repo/0","doc":"","ref":"Bonfire.Invite.Links.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Invite.Links.LiveHandler","doc":"","ref":"Bonfire.Invite.Links.LiveHandler.html"},{"type":"function","title":"Bonfire.Invite.Links.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Invite.Links.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.Invite.Links.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Invite.Links.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Invite.Links.Web.Routes","doc":"","ref":"Bonfire.Invite.Links.Web.Routes.html"},{"type":"function","title":"Bonfire.Invite.Links.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Invite.Links.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.InviteLink","doc":"","ref":"Bonfire.InviteLink.html"},{"type":"function","title":"Bonfire.InviteLink.changeset/2","doc":"","ref":"Bonfire.InviteLink.html#changeset/2"},{"type":"module","title":"Bonfire.Localise","doc":"Runs at compile-time to include dynamic strings (like verb names and object types) in localisation string extraction.","ref":"Bonfire.Localise.html"},{"type":"module","title":"Bonfire.Logging","doc":"","ref":"Bonfire.Logging.html"},{"type":"function","title":"Bonfire.Logging.handle_event/4","doc":"","ref":"Bonfire.Logging.html#handle_event/4"},{"type":"function","title":"Bonfire.Logging.setup/2","doc":"","ref":"Bonfire.Logging.html#setup/2"},{"type":"function","title":"Bonfire.Logging.setup_oban/0","doc":"","ref":"Bonfire.Logging.html#setup_oban/0"},{"type":"function","title":"Bonfire.Logging.setup_opentelemetry/2","doc":"","ref":"Bonfire.Logging.html#setup_opentelemetry/2"},{"type":"module","title":"Bonfire.Me.Accounts","doc":"","ref":"Bonfire.Me.Accounts.html"},{"type":"function","title":"Bonfire.Me.Accounts.allow_signup?/1","doc":"","ref":"Bonfire.Me.Accounts.html#allow_signup?/1"},{"type":"function","title":"Bonfire.Me.Accounts.change_email/3","doc":"","ref":"Bonfire.Me.Accounts.html#change_email/3"},{"type":"function","title":"Bonfire.Me.Accounts.change_password/3","doc":"","ref":"Bonfire.Me.Accounts.html#change_password/3"},{"type":"function","title":"Bonfire.Me.Accounts.change_password/4","doc":"","ref":"Bonfire.Me.Accounts.html#change_password/4"},{"type":"function","title":"Bonfire.Me.Accounts.changeset/3","doc":"","ref":"Bonfire.Me.Accounts.html#changeset/3"},{"type":"function","title":"Bonfire.Me.Accounts.confirm_email/2","doc":"","ref":"Bonfire.Me.Accounts.html#confirm_email/2"},{"type":"function","title":"Bonfire.Me.Accounts.count/0","doc":"","ref":"Bonfire.Me.Accounts.html#count/0"},{"type":"function","title":"Bonfire.Me.Accounts.delete/2","doc":"Use `enqueue_delete/1` instead","ref":"Bonfire.Me.Accounts.html#delete/2"},{"type":"function","title":"Bonfire.Me.Accounts.do_signup/2","doc":"","ref":"Bonfire.Me.Accounts.html#do_signup/2"},{"type":"function","title":"Bonfire.Me.Accounts.enqueue_delete/1","doc":"","ref":"Bonfire.Me.Accounts.html#enqueue_delete/1"},{"type":"function","title":"Bonfire.Me.Accounts.fetch_current/1","doc":"","ref":"Bonfire.Me.Accounts.html#fetch_current/1"},{"type":"function","title":"Bonfire.Me.Accounts.get_by_email/1","doc":"","ref":"Bonfire.Me.Accounts.html#get_by_email/1"},{"type":"function","title":"Bonfire.Me.Accounts.get_current/1","doc":"","ref":"Bonfire.Me.Accounts.html#get_current/1"},{"type":"function","title":"Bonfire.Me.Accounts.instance_is_invite_only?/0","doc":"","ref":"Bonfire.Me.Accounts.html#instance_is_invite_only?/0"},{"type":"function","title":"Bonfire.Me.Accounts.is_admin?/1","doc":"","ref":"Bonfire.Me.Accounts.html#is_admin?/1"},{"type":"function","title":"Bonfire.Me.Accounts.is_first_account?/0","doc":"","ref":"Bonfire.Me.Accounts.html#is_first_account?/0"},{"type":"function","title":"Bonfire.Me.Accounts.login/2","doc":"Attempts to log in by password and either username or email.\n\nAccepts a map of parameters or a `LoginFields` changeset.\n\nOn success, returns `{:ok, account, user}` if a username was\nprovided and `{:ok, account, nil}` otherwise.\nOn error, returns `{:error, changeset}`","ref":"Bonfire.Me.Accounts.html#login/2"},{"type":"function","title":"Bonfire.Me.Accounts.login_valid?/2","doc":"","ref":"Bonfire.Me.Accounts.html#login_valid?/2"},{"type":"function","title":"Bonfire.Me.Accounts.maybe_redeem_invite/2","doc":"","ref":"Bonfire.Me.Accounts.html#maybe_redeem_invite/2"},{"type":"function","title":"Bonfire.Me.Accounts.redeemable_invite?/1","doc":"","ref":"Bonfire.Me.Accounts.html#redeemable_invite?/1"},{"type":"function","title":"Bonfire.Me.Accounts.request_confirm_email/2","doc":"","ref":"Bonfire.Me.Accounts.html#request_confirm_email/2"},{"type":"function","title":"Bonfire.Me.Accounts.request_forgot_password/1","doc":"","ref":"Bonfire.Me.Accounts.html#request_forgot_password/1"},{"type":"function","title":"Bonfire.Me.Accounts.signup/2","doc":"","ref":"Bonfire.Me.Accounts.html#signup/2"},{"type":"function","title":"Bonfire.Me.Accounts.update_is_admin/3","doc":"","ref":"Bonfire.Me.Accounts.html#update_is_admin/3"},{"type":"type","title":"Bonfire.Me.Accounts.changeset_name/0","doc":"","ref":"Bonfire.Me.Accounts.html#t:changeset_name/0"},{"type":"module","title":"Bonfire.Me.Accounts.ChangeEmailFields","doc":"","ref":"Bonfire.Me.Accounts.ChangeEmailFields.html"},{"type":"function","title":"Bonfire.Me.Accounts.ChangeEmailFields.changeset/2","doc":"","ref":"Bonfire.Me.Accounts.ChangeEmailFields.html#changeset/2"},{"type":"module","title":"Bonfire.Me.Accounts.ChangePasswordFields","doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html"},{"type":"function","title":"Bonfire.Me.Accounts.ChangePasswordFields.changeset/3","doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html#changeset/3"},{"type":"module","title":"Bonfire.Me.Accounts.ConfirmEmailFields","doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html"},{"type":"function","title":"Bonfire.Me.Accounts.ConfirmEmailFields.changeset/2","doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html#changeset/2"},{"type":"module","title":"Bonfire.Me.Accounts.ForgotPasswordFields","doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html"},{"type":"function","title":"Bonfire.Me.Accounts.ForgotPasswordFields.changeset/2","doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html#changeset/2"},{"type":"module","title":"Bonfire.Me.Accounts.LoginFields","doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html"},{"type":"function","title":"Bonfire.Me.Accounts.LoginFields.changeset/2","doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html#changeset/2"},{"type":"module","title":"Bonfire.Me.Accounts.Queries","doc":"","ref":"Bonfire.Me.Accounts.Queries.html"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.by_email/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#by_email/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.confirm_email/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#confirm_email/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.count/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#count/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.current/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#current/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.login_by_account_id/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_account_id/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.login_by_email/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_email/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.login_by_username/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_username/1"},{"type":"function","title":"Bonfire.Me.Accounts.Queries.request_confirm_email/1","doc":"","ref":"Bonfire.Me.Accounts.Queries.html#request_confirm_email/1"},{"type":"module","title":"Bonfire.Me.Accounts.SecondFactors","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.changeset/3","doc":"Sets or updates the TOTP secret.\nThe secret is a random 20 bytes binary that is used to generate the QR Code to\nenable 2FA using auth applications. It will only be updated if the OTP code\nsent is valid.","ref":"Bonfire.Me.Accounts.SecondFactors.html#changeset/3"},{"type":"function","title":"Examples - Bonfire.Me.Accounts.SecondFactors.changeset/3","doc":"iex> changeset(%AuthSecondFactor{secret:  >}, code: \"123456\")\n    %Ecto.Changeset{data: %AuthSecondFactor{}}","ref":"Bonfire.Me.Accounts.SecondFactors.html#changeset/3-examples"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.delete_account_totp/1","doc":"Disables the TOTP configuration for the given account.","ref":"Bonfire.Me.Accounts.SecondFactors.html#delete_account_totp/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.enabled?/0","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#enabled?/0"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.format_secret/1","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#format_secret/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.get_account_totp/1","doc":"Gets the %AuthSecondFactor{} entry, if any.","ref":"Bonfire.Me.Accounts.SecondFactors.html#get_account_totp/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.maybe_authenticate/2","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#maybe_authenticate/2"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.maybe_cast_totp_changeset/3","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#maybe_cast_totp_changeset/3"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.new/0","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new/0"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.new_qrcode/1","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_qrcode/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.new_struct/1","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_struct/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.new_uri/1","doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_uri/1"},{"type":"function","title":"Bonfire.Me.Accounts.SecondFactors.validate_account_totp/2","doc":"Validates if the given TOTP code is valid.","ref":"Bonfire.Me.Accounts.SecondFactors.html#validate_account_totp/2"},{"type":"module","title":"Bonfire.Me.Acts.Caretaker","doc":"An act that deals with maintaining a `Caretaker` record for a changeset.\n\nDuring insertion, adds an associated insert if a caretaker can be found in the epic options.\n\nDuring deletion, ensures that the related record will be cleaned up.\n\nEpic Options (insert):\n  * `:caretaker` - user that will take care of the post, falls back to `:current_user`\n  * `:current_user` - user that will taker care of the post, fallback if `:caretaker` is not set.\n\nAct Options:\n  * `:on` - key to find changeset, required.","ref":"Bonfire.Me.Acts.Caretaker.html"},{"type":"function","title":"Bonfire.Me.Acts.Caretaker.run/2","doc":"","ref":"Bonfire.Me.Acts.Caretaker.html#run/2"},{"type":"module","title":"Bonfire.Me.Acts.Creator","doc":"An act that deals with maintaining a `Created` record for a changeset.\n\nDuring insertion, adds an associated insert if a creator can be found in the epic options.\n\nDuring deletion, ensures that the related record will be cleaned up.\n\nEpic Options (insert):\n  * `:creator` - user that will create the post, falls back to `:current_user`\n  * `:current_user` - user that will create the post, fallback if `:creator` is not set.\n\nAct Options:\n  * `:on` - key to find changeset, required.","ref":"Bonfire.Me.Acts.Creator.html"},{"type":"module","title":"Bonfire.Me.Characters","doc":"","ref":"Bonfire.Me.Characters.html"},{"type":"function","title":"Bonfire.Me.Characters.by_username/1","doc":"","ref":"Bonfire.Me.Characters.html#by_username/1"},{"type":"function","title":"Bonfire.Me.Characters.by_username!/1","doc":"","ref":"Bonfire.Me.Characters.html#by_username!/1"},{"type":"function","title":"Bonfire.Me.Characters.by_username_q/1","doc":"","ref":"Bonfire.Me.Characters.html#by_username_q/1"},{"type":"function","title":"Bonfire.Me.Characters.changeset/3","doc":"","ref":"Bonfire.Me.Characters.html#changeset/3"},{"type":"function","title":"Bonfire.Me.Characters.character_mention_prefix/1","doc":"","ref":"Bonfire.Me.Characters.html#character_mention_prefix/1"},{"type":"function","title":"Bonfire.Me.Characters.character_url/1","doc":"","ref":"Bonfire.Me.Characters.html#character_url/1"},{"type":"function","title":"Bonfire.Me.Characters.clean_username/1","doc":"","ref":"Bonfire.Me.Characters.html#clean_username/1"},{"type":"function","title":"Bonfire.Me.Characters.display_username/4","doc":"","ref":"Bonfire.Me.Characters.html#display_username/4"},{"type":"function","title":"Bonfire.Me.Characters.get/1","doc":"","ref":"Bonfire.Me.Characters.html#get/1"},{"type":"function","title":"Bonfire.Me.Characters.hash_available?/1","doc":"","ref":"Bonfire.Me.Characters.html#hash_available?/1"},{"type":"function","title":"Bonfire.Me.Characters.hash_delete/1","doc":"","ref":"Bonfire.Me.Characters.html#hash_delete/1"},{"type":"function","title":"Bonfire.Me.Characters.indexing_object_format/1","doc":"","ref":"Bonfire.Me.Characters.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Me.Characters.q_by_id/1","doc":"","ref":"Bonfire.Me.Characters.html#q_by_id/1"},{"type":"function","title":"Bonfire.Me.Characters.remote_changeset/2","doc":"","ref":"Bonfire.Me.Characters.html#remote_changeset/2"},{"type":"function","title":"Bonfire.Me.Characters.schema_module/0","doc":"","ref":"Bonfire.Me.Characters.html#schema_module/0"},{"type":"function","title":"Bonfire.Me.Characters.update/2","doc":"","ref":"Bonfire.Me.Characters.html#update/2"},{"type":"function","title":"Bonfire.Me.Characters.username_available?/1","doc":"","ref":"Bonfire.Me.Characters.html#username_available?/1"},{"type":"module","title":"Bonfire.Me.DeleteWorker","doc":"","ref":"Bonfire.Me.DeleteWorker.html"},{"type":"function","title":"Bonfire.Me.DeleteWorker.care_taken/1","doc":"","ref":"Bonfire.Me.DeleteWorker.html#care_taken/1"},{"type":"function","title":"Bonfire.Me.DeleteWorker.closures/1","doc":"","ref":"Bonfire.Me.DeleteWorker.html#closures/1"},{"type":"function","title":"Bonfire.Me.DeleteWorker.delete/2","doc":"","ref":"Bonfire.Me.DeleteWorker.html#delete/2"},{"type":"function","title":"Bonfire.Me.DeleteWorker.delete_now/1","doc":"","ref":"Bonfire.Me.DeleteWorker.html#delete_now/1"},{"type":"function","title":"Bonfire.Me.DeleteWorker.enqueue_delete/1","doc":"","ref":"Bonfire.Me.DeleteWorker.html#enqueue_delete/1"},{"type":"function","title":"Bonfire.Me.DeleteWorker.perform/1","doc":"","ref":"Bonfire.Me.DeleteWorker.html#perform/1"},{"type":"module","title":"Bonfire.Me.Fake","doc":"","ref":"Bonfire.Me.Fake.html"},{"type":"function","title":"Bonfire.Me.Fake.fake_account!/2","doc":"","ref":"Bonfire.Me.Fake.html#fake_account!/2"},{"type":"function","title":"Bonfire.Me.Fake.fake_user!/3","doc":"","ref":"Bonfire.Me.Fake.html#fake_user!/3"},{"type":"module","title":"Bonfire.Me.Fake.Helpers","doc":"","ref":"Bonfire.Me.Fake.Helpers.html"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.atusername/0","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#atusername/0"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.avatar_url/0","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#avatar_url/0"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.avatar_url/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#avatar_url/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.character_subform/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#character_subform/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.confirm_token/0","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#confirm_token/0"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.create_user_form/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#create_user_form/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.credential_subform/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#credential_subform/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.email_subform/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#email_subform/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.icon_url/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#icon_url/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.image/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#image/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.image_url/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#image_url/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.profile_subform/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#profile_subform/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.signup_form/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#signup_form/1"},{"type":"function","title":"Bonfire.Me.Fake.Helpers.user_live/1","doc":"","ref":"Bonfire.Me.Fake.Helpers.html#user_live/1"},{"type":"module","title":"Bonfire.Me.Integration","doc":"","ref":"Bonfire.Me.Integration.html"},{"type":"function","title":"Bonfire.Me.Integration.indexing_format_created/2","doc":"","ref":"Bonfire.Me.Integration.html#indexing_format_created/2"},{"type":"function","title":"Bonfire.Me.Integration.indexing_format_creator/2","doc":"","ref":"Bonfire.Me.Integration.html#indexing_format_creator/2"},{"type":"function","title":"Bonfire.Me.Integration.is_local?/1","doc":"","ref":"Bonfire.Me.Integration.html#is_local?/1"},{"type":"function","title":"Bonfire.Me.Integration.mailer/0","doc":"","ref":"Bonfire.Me.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.Me.Integration.maybe_index/1","doc":"","ref":"Bonfire.Me.Integration.html#maybe_index/1"},{"type":"function","title":"Bonfire.Me.Integration.repo/0","doc":"","ref":"Bonfire.Me.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Me.Mails","doc":"","ref":"Bonfire.Me.Mails.html"},{"type":"function","title":"Bonfire.Me.Mails.confirm_email/2","doc":"","ref":"Bonfire.Me.Mails.html#confirm_email/2"},{"type":"function","title":"Bonfire.Me.Mails.forgot_password/1","doc":"","ref":"Bonfire.Me.Mails.html#forgot_password/1"},{"type":"function","title":"Bonfire.Me.Mails.render/3","doc":"","ref":"Bonfire.Me.Mails.html#render/3"},{"type":"function","title":"Bonfire.Me.Mails.signup_confirm_email/1","doc":"","ref":"Bonfire.Me.Mails.html#signup_confirm_email/1"},{"type":"module","title":"Bonfire.Me.Mails.EmailView","doc":"","ref":"Bonfire.Me.Mails.EmailView.html"},{"type":"function","title":"Bonfire.Me.Mails.EmailView.render_template/2","doc":"","ref":"Bonfire.Me.Mails.EmailView.html#render_template/2"},{"type":"module","title":"Bonfire.Me.Profiles","doc":"","ref":"Bonfire.Me.Profiles.html"},{"type":"function","title":"Bonfire.Me.Profiles.changeset/2","doc":"","ref":"Bonfire.Me.Profiles.html#changeset/2"},{"type":"function","title":"Bonfire.Me.Profiles.changeset_simple/2","doc":"","ref":"Bonfire.Me.Profiles.html#changeset_simple/2"},{"type":"function","title":"Bonfire.Me.Profiles.indexing_object_format/1","doc":"","ref":"Bonfire.Me.Profiles.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Me.Profiles.schema_module/0","doc":"","ref":"Bonfire.Me.Profiles.html#schema_module/0"},{"type":"module","title":"Bonfire.Me.Profiles.LiveHandler","doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html"},{"type":"function","title":"Bonfire.Me.Profiles.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Me.Profiles.LiveHandler.set_profile_image/5","doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html#set_profile_image/5"},{"type":"macro","title":"Bonfire.Me.Profiles.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Me.RuntimeConfig","doc":"","ref":"Bonfire.Me.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Me.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Me.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Me.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Me.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Me.SharedUsers","doc":"","ref":"Bonfire.Me.SharedUsers.html"},{"type":"function","title":"Bonfire.Me.SharedUsers.add_account/3","doc":"","ref":"Bonfire.Me.SharedUsers.html#add_account/3"},{"type":"function","title":"Bonfire.Me.SharedUsers.add_accounts/3","doc":"","ref":"Bonfire.Me.SharedUsers.html#add_accounts/3"},{"type":"function","title":"Bonfire.Me.SharedUsers.by_account/1","doc":"","ref":"Bonfire.Me.SharedUsers.html#by_account/1"},{"type":"function","title":"Bonfire.Me.SharedUsers.by_username_and_account_query/2","doc":"","ref":"Bonfire.Me.SharedUsers.html#by_username_and_account_query/2"},{"type":"function","title":"Bonfire.Me.SharedUsers.federation_module/0","doc":"","ref":"Bonfire.Me.SharedUsers.html#federation_module/0"},{"type":"function","title":"Bonfire.Me.SharedUsers.init_shared_user/2","doc":"","ref":"Bonfire.Me.SharedUsers.html#init_shared_user/2"},{"type":"module","title":"Bonfire.Me.Users","doc":"","ref":"Bonfire.Me.Users.html"},{"type":"function","title":"Bonfire.Me.Users.ap_receive_activity/3","doc":"","ref":"Bonfire.Me.Users.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Me.Users.by_account/1","doc":"","ref":"Bonfire.Me.Users.html#by_account/1"},{"type":"function","title":"Bonfire.Me.Users.by_ap_id/1","doc":"","ref":"Bonfire.Me.Users.html#by_ap_id/1"},{"type":"function","title":"Bonfire.Me.Users.by_ap_id!/1","doc":"","ref":"Bonfire.Me.Users.html#by_ap_id!/1"},{"type":"function","title":"Bonfire.Me.Users.by_canonical_uri/1","doc":"","ref":"Bonfire.Me.Users.html#by_canonical_uri/1"},{"type":"function","title":"Bonfire.Me.Users.by_id/2","doc":"","ref":"Bonfire.Me.Users.html#by_id/2"},{"type":"function","title":"Bonfire.Me.Users.by_username/2","doc":"","ref":"Bonfire.Me.Users.html#by_username/2"},{"type":"function","title":"Bonfire.Me.Users.by_username!/1","doc":"","ref":"Bonfire.Me.Users.html#by_username!/1"},{"type":"function","title":"Bonfire.Me.Users.by_username_and_account/2","doc":"Used for switch-user functionality","ref":"Bonfire.Me.Users.html#by_username_and_account/2"},{"type":"function","title":"Bonfire.Me.Users.changeset/4","doc":"","ref":"Bonfire.Me.Users.html#changeset/4"},{"type":"function","title":"Bonfire.Me.Users.check_active/1","doc":"","ref":"Bonfire.Me.Users.html#check_active/1"},{"type":"function","title":"Bonfire.Me.Users.check_active!/1","doc":"","ref":"Bonfire.Me.Users.html#check_active!/1"},{"type":"function","title":"Bonfire.Me.Users.count/1","doc":"","ref":"Bonfire.Me.Users.html#count/1"},{"type":"function","title":"Bonfire.Me.Users.create/2","doc":"","ref":"Bonfire.Me.Users.html#create/2"},{"type":"function","title":"Bonfire.Me.Users.create_remote/1","doc":"Creates a remote user","ref":"Bonfire.Me.Users.html#create_remote/1"},{"type":"function","title":"Bonfire.Me.Users.delete/2","doc":"Use `enqueue_delete/1` instead","ref":"Bonfire.Me.Users.html#delete/2"},{"type":"function","title":"Bonfire.Me.Users.enqueue_delete/1","doc":"","ref":"Bonfire.Me.Users.html#enqueue_delete/1"},{"type":"function","title":"Bonfire.Me.Users.federation_module/0","doc":"","ref":"Bonfire.Me.Users.html#federation_module/0"},{"type":"function","title":"Bonfire.Me.Users.fetch_current/1","doc":"","ref":"Bonfire.Me.Users.html#fetch_current/1"},{"type":"function","title":"Bonfire.Me.Users.flatten/1","doc":"","ref":"Bonfire.Me.Users.html#flatten/1"},{"type":"function","title":"Bonfire.Me.Users.format_actor/1","doc":"","ref":"Bonfire.Me.Users.html#format_actor/1"},{"type":"function","title":"Bonfire.Me.Users.get_current/1","doc":"","ref":"Bonfire.Me.Users.html#get_current/1"},{"type":"function","title":"Bonfire.Me.Users.get_current/2","doc":"","ref":"Bonfire.Me.Users.html#get_current/2"},{"type":"function","title":"Bonfire.Me.Users.get_only_in_account/1","doc":"","ref":"Bonfire.Me.Users.html#get_only_in_account/1"},{"type":"function","title":"Bonfire.Me.Users.indexing_object_format/1","doc":"","ref":"Bonfire.Me.Users.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Me.Users.is_active?/1","doc":"","ref":"Bonfire.Me.Users.html#is_active?/1"},{"type":"function","title":"Bonfire.Me.Users.is_first_user?/0","doc":"","ref":"Bonfire.Me.Users.html#is_first_user?/0"},{"type":"function","title":"Bonfire.Me.Users.list/1","doc":"","ref":"Bonfire.Me.Users.html#list/1"},{"type":"function","title":"Bonfire.Me.Users.list_admins/0","doc":"","ref":"Bonfire.Me.Users.html#list_admins/0"},{"type":"function","title":"Bonfire.Me.Users.list_all/1","doc":"","ref":"Bonfire.Me.Users.html#list_all/1"},{"type":"function","title":"Bonfire.Me.Users.list_paginated/2","doc":"","ref":"Bonfire.Me.Users.html#list_paginated/2"},{"type":"function","title":"Bonfire.Me.Users.make_admin/1","doc":"Grants a user superpowers.","ref":"Bonfire.Me.Users.html#make_admin/1"},{"type":"function","title":"Bonfire.Me.Users.maybe_count/1","doc":"","ref":"Bonfire.Me.Users.html#maybe_count/1"},{"type":"function","title":"Bonfire.Me.Users.maybe_index_user/1","doc":"","ref":"Bonfire.Me.Users.html#maybe_index_user/1"},{"type":"function","title":"Bonfire.Me.Users.query/2","doc":"","ref":"Bonfire.Me.Users.html#query/2"},{"type":"function","title":"Bonfire.Me.Users.query_module/0","doc":"","ref":"Bonfire.Me.Users.html#query_module/0"},{"type":"function","title":"Bonfire.Me.Users.remote_fetcher/0","doc":"","ref":"Bonfire.Me.Users.html#remote_fetcher/0"},{"type":"function","title":"Bonfire.Me.Users.revoke_admin/1","doc":"Revokes a user's superpowers.","ref":"Bonfire.Me.Users.html#revoke_admin/1"},{"type":"function","title":"Bonfire.Me.Users.schema_module/0","doc":"A User is a logical identity within the system belonging to an Account.","ref":"Bonfire.Me.Users.html#schema_module/0"},{"type":"function","title":"Bonfire.Me.Users.search/1","doc":"","ref":"Bonfire.Me.Users.html#search/1"},{"type":"function","title":"Bonfire.Me.Users.search_db/1","doc":"","ref":"Bonfire.Me.Users.html#search_db/1"},{"type":"function","title":"Bonfire.Me.Users.update/3","doc":"","ref":"Bonfire.Me.Users.html#update/3"},{"type":"function","title":"Bonfire.Me.Users.update_local_actor/2","doc":"","ref":"Bonfire.Me.Users.html#update_local_actor/2"},{"type":"function","title":"Bonfire.Me.Users.update_remote_actor/2","doc":"Updates a remote user","ref":"Bonfire.Me.Users.html#update_remote_actor/2"},{"type":"type","title":"Bonfire.Me.Users.changeset_extra/0","doc":"","ref":"Bonfire.Me.Users.html#t:changeset_extra/0"},{"type":"type","title":"Bonfire.Me.Users.changeset_name/0","doc":"","ref":"Bonfire.Me.Users.html#t:changeset_name/0"},{"type":"module","title":"Bonfire.Me.Users.LiveHandler","doc":"","ref":"Bonfire.Me.Users.LiveHandler.html"},{"type":"function","title":"Bonfire.Me.Users.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#handle_event/3"},{"type":"macro","title":"Bonfire.Me.Users.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Me.Users.LiveHandler.to_tuple/1","doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#to_tuple/1"},{"type":"module","title":"Bonfire.Me.Users.Queries","doc":"","ref":"Bonfire.Me.Users.Queries.html"},{"type":"function","title":"Bonfire.Me.Users.Queries.admins/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#admins/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.base_by_id/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#base_by_id/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_account/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_account/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_canonical_uri/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_canonical_uri/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_id/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_id/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_username_and_account/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_and_account/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_username_or_id/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_or_id/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.by_username_query/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_query/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.count/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#count/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.current/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#current/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.current/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#current/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.join_peered/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#join_peered/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.list/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#list/1"},{"type":"function","title":"Bonfire.Me.Users.Queries.query/2","doc":"","ref":"Bonfire.Me.Users.Queries.html#query/2"},{"type":"function","title":"Bonfire.Me.Users.Queries.schema_module/0","doc":"","ref":"Bonfire.Me.Users.Queries.html#schema_module/0"},{"type":"function","title":"Bonfire.Me.Users.Queries.search/1","doc":"","ref":"Bonfire.Me.Users.Queries.html#search/1"},{"type":"module","title":"Bonfire.Messages","doc":"","ref":"Bonfire.Messages.html"},{"type":"function","title":"Bonfire.Messages.ap_publish_activity/3","doc":"","ref":"Bonfire.Messages.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Messages.ap_receive_activity/3","doc":"","ref":"Bonfire.Messages.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Messages.changeset/4","doc":"","ref":"Bonfire.Messages.html#changeset/4"},{"type":"function","title":"Bonfire.Messages.draft/2","doc":"","ref":"Bonfire.Messages.html#draft/2"},{"type":"function","title":"Bonfire.Messages.federation_module/0","doc":"","ref":"Bonfire.Messages.html#federation_module/0"},{"type":"function","title":"Bonfire.Messages.filter/3","doc":"","ref":"Bonfire.Messages.html#filter/3"},{"type":"function","title":"Bonfire.Messages.list/3","doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Messages.html#list/3"},{"type":"function","title":"Bonfire.Messages.list/4","doc":"","ref":"Bonfire.Messages.html#list/4"},{"type":"function","title":"Bonfire.Messages.read/2","doc":"","ref":"Bonfire.Messages.html#read/2"},{"type":"function","title":"Bonfire.Messages.schema_module/0","doc":"","ref":"Bonfire.Messages.html#schema_module/0"},{"type":"function","title":"Bonfire.Messages.send/3","doc":"TODO: check boundaries, right now anyone can message anyone :/","ref":"Bonfire.Messages.html#send/3"},{"type":"module","title":"Bonfire.Messages.Fake","doc":"","ref":"Bonfire.Messages.Fake.html"},{"type":"function","title":"Bonfire.Messages.Fake.fake_comment!/4","doc":"","ref":"Bonfire.Messages.Fake.html#fake_comment!/4"},{"type":"function","title":"Bonfire.Messages.Fake.fake_post!/4","doc":"","ref":"Bonfire.Messages.Fake.html#fake_post!/4"},{"type":"function","title":"Bonfire.Messages.Fake.fake_remote_user!/0","doc":"","ref":"Bonfire.Messages.Fake.html#fake_remote_user!/0"},{"type":"module","title":"Bonfire.Messages.Integration","doc":"","ref":"Bonfire.Messages.Integration.html"},{"type":"function","title":"Bonfire.Messages.Integration.mailer/0","doc":"","ref":"Bonfire.Messages.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.Messages.Integration.repo/0","doc":"","ref":"Bonfire.Messages.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Posts","doc":"","ref":"Bonfire.Posts.html"},{"type":"function","title":"Bonfire.Posts.ap_publish_activity/3","doc":"","ref":"Bonfire.Posts.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Posts.ap_receive_activity/4","doc":"record an incoming ActivityPub post","ref":"Bonfire.Posts.html#ap_receive_activity/4"},{"type":"function","title":"Bonfire.Posts.changeset/4","doc":"","ref":"Bonfire.Posts.html#changeset/4"},{"type":"function","title":"Bonfire.Posts.count_total/0","doc":"","ref":"Bonfire.Posts.html#count_total/0"},{"type":"function","title":"Bonfire.Posts.delete/2","doc":"You should call `Objects.delete/2` instead","ref":"Bonfire.Posts.html#delete/2"},{"type":"function","title":"Bonfire.Posts.draft/2","doc":"","ref":"Bonfire.Posts.html#draft/2"},{"type":"function","title":"Bonfire.Posts.federation_module/0","doc":"","ref":"Bonfire.Posts.html#federation_module/0"},{"type":"function","title":"Bonfire.Posts.filter/3","doc":"","ref":"Bonfire.Posts.html#filter/3"},{"type":"function","title":"Bonfire.Posts.indexing_object_format/2","doc":"","ref":"Bonfire.Posts.html#indexing_object_format/2"},{"type":"function","title":"Bonfire.Posts.list_by/2","doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Posts.html#list_by/2"},{"type":"function","title":"Bonfire.Posts.list_paginated/2","doc":"List posts with pagination","ref":"Bonfire.Posts.html#list_paginated/2"},{"type":"function","title":"Bonfire.Posts.prepare_post_attrs/1","doc":"","ref":"Bonfire.Posts.html#prepare_post_attrs/1"},{"type":"function","title":"Bonfire.Posts.publish/1","doc":"","ref":"Bonfire.Posts.html#publish/1"},{"type":"function","title":"Bonfire.Posts.query/2","doc":"","ref":"Bonfire.Posts.html#query/2"},{"type":"function","title":"Bonfire.Posts.query_module/0","doc":"","ref":"Bonfire.Posts.html#query_module/0"},{"type":"function","title":"Bonfire.Posts.query_paginated/2","doc":"Query posts with pagination","ref":"Bonfire.Posts.html#query_paginated/2"},{"type":"function","title":"Bonfire.Posts.read/2","doc":"","ref":"Bonfire.Posts.html#read/2"},{"type":"function","title":"Bonfire.Posts.run_epic/3","doc":"","ref":"Bonfire.Posts.html#run_epic/3"},{"type":"function","title":"Bonfire.Posts.schema_module/0","doc":"","ref":"Bonfire.Posts.html#schema_module/0"},{"type":"module","title":"Bonfire.Posts.Acts.Posts.Publish","doc":"Creates a changeset for publishing a post\n\nEpic Options:\n  * `:current_user` - user that will create the post, required.\n  * `:post_attrs` (configurable) - attrs to create the post from, required.\n  * `:post_id` (configurable) - id to use for the created post (handy for creating\n    activitypub objects with an id representing their reported creation time)\n\nAct Options:\n  * `:id` - epic options key to find an id to force override with at, default: `:post_id`\n  * `:as` - key to assign changeset to, default: `:post`.\n  * `:attrs` - epic options key to find the attributes at, default: `:post_attrs`.","ref":"Bonfire.Posts.Acts.Posts.Publish.html"},{"type":"module","title":"Bonfire.Posts.Fake","doc":"","ref":"Bonfire.Posts.Fake.html"},{"type":"function","title":"Bonfire.Posts.Fake.fake_comment!/4","doc":"","ref":"Bonfire.Posts.Fake.html#fake_comment!/4"},{"type":"function","title":"Bonfire.Posts.Fake.fake_post!/4","doc":"","ref":"Bonfire.Posts.Fake.html#fake_post!/4"},{"type":"function","title":"Bonfire.Posts.Fake.fake_remote_user!/0","doc":"","ref":"Bonfire.Posts.Fake.html#fake_remote_user!/0"},{"type":"module","title":"Bonfire.Posts.Integration","doc":"","ref":"Bonfire.Posts.Integration.html"},{"type":"function","title":"Bonfire.Posts.Integration.mailer/0","doc":"","ref":"Bonfire.Posts.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.Posts.Integration.repo/0","doc":"","ref":"Bonfire.Posts.Integration.html#repo/0"},{"type":"module","title":"Bonfire.RuntimeConfig","doc":"","ref":"Bonfire.RuntimeConfig.html"},{"type":"function","title":"Bonfire.RuntimeConfig.config/0","doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the `Bonfire.Common.Config.LoadExtensionsConfig.load_configs` line","ref":"Bonfire.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Search","doc":"","ref":"Bonfire.Search.html"},{"type":"function","title":"Bonfire.Search.adapter/0","doc":"","ref":"Bonfire.Search.html#adapter/0"},{"type":"function","title":"Bonfire.Search.facet_from_map/1","doc":"","ref":"Bonfire.Search.html#facet_from_map/1"},{"type":"function","title":"Bonfire.Search.public_index/0","doc":"","ref":"Bonfire.Search.html#public_index/0"},{"type":"function","title":"Bonfire.Search.search/2","doc":"","ref":"Bonfire.Search.html#search/2"},{"type":"function","title":"Bonfire.Search.search/4","doc":"","ref":"Bonfire.Search.html#search/4"},{"type":"function","title":"Bonfire.Search.search_by_type/2","doc":"","ref":"Bonfire.Search.html#search_by_type/2"},{"type":"module","title":"Bonfire.Search.Acts.Queue","doc":"An act that enqueues publish/update/delete requests to meilisearch via an oban job queue.","ref":"Bonfire.Search.Acts.Queue.html"},{"type":"function","title":"Bonfire.Search.Acts.Queue.maybe_indexable_object/2","doc":"","ref":"Bonfire.Search.Acts.Queue.html#maybe_indexable_object/2"},{"type":"function","title":"Bonfire.Search.Acts.Queue.maybe_unindex/1","doc":"","ref":"Bonfire.Search.Acts.Queue.html#maybe_unindex/1"},{"type":"function","title":"Bonfire.Search.Acts.Queue.prepare_object/1","doc":"","ref":"Bonfire.Search.Acts.Queue.html#prepare_object/1"},{"type":"module","title":"Bonfire.Search.Fuzzy","doc":"","ref":"Bonfire.Search.Fuzzy.html"},{"type":"function","title":"Bonfire.Search.Fuzzy.do_search/4","doc":"","ref":"Bonfire.Search.Fuzzy.html#do_search/4"},{"type":"function","title":"Bonfire.Search.Fuzzy.search/4","doc":"","ref":"Bonfire.Search.Fuzzy.html#search/4"},{"type":"function","title":"Bonfire.Search.Fuzzy.search_filtered/2","doc":"","ref":"Bonfire.Search.Fuzzy.html#search_filtered/2"},{"type":"module","title":"Bonfire.Search.HTTP","doc":"","ref":"Bonfire.Search.HTTP.html"},{"type":"function","title":"Bonfire.Search.HTTP.http_adapter/0","doc":"","ref":"Bonfire.Search.HTTP.html#http_adapter/0"},{"type":"function","title":"Bonfire.Search.HTTP.http_error/5","doc":"","ref":"Bonfire.Search.HTTP.html#http_error/5"},{"type":"function","title":"Bonfire.Search.HTTP.http_request/4","doc":"","ref":"Bonfire.Search.HTTP.html#http_request/4"},{"type":"module","title":"Bonfire.Search.Indexer","doc":"","ref":"Bonfire.Search.Indexer.html"},{"type":"function","title":"Bonfire.Search.Indexer.host/1","doc":"","ref":"Bonfire.Search.Indexer.html#host/1"},{"type":"function","title":"Bonfire.Search.Indexer.index_public_object/1","doc":"","ref":"Bonfire.Search.Indexer.html#index_public_object/1"},{"type":"function","title":"Bonfire.Search.Indexer.init_index/2","doc":"","ref":"Bonfire.Search.Indexer.html#init_index/2"},{"type":"function","title":"Bonfire.Search.Indexer.maybe_delete_object/2","doc":"","ref":"Bonfire.Search.Indexer.html#maybe_delete_object/2"},{"type":"function","title":"Bonfire.Search.Indexer.maybe_index_object/1","doc":"","ref":"Bonfire.Search.Indexer.html#maybe_index_object/1"},{"type":"function","title":"Bonfire.Search.Indexer.maybe_indexable_and_discoverable/2","doc":"","ref":"Bonfire.Search.Indexer.html#maybe_indexable_and_discoverable/2"},{"type":"function","title":"Bonfire.Search.Indexer.maybe_indexable_object/1","doc":"","ref":"Bonfire.Search.Indexer.html#maybe_indexable_object/1"},{"type":"module","title":"Bonfire.Search.LiveHandler","doc":"","ref":"Bonfire.Search.LiveHandler.html"},{"type":"function","title":"Bonfire.Search.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Search.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Search.LiveHandler.live_search/4","doc":"","ref":"Bonfire.Search.LiveHandler.html#live_search/4"},{"type":"macro","title":"Bonfire.Search.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Search.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Search.Meili","doc":"","ref":"Bonfire.Search.Meili.html"},{"type":"function","title":"Bonfire.Search.Meili.api/4","doc":"","ref":"Bonfire.Search.Meili.html#api/4"},{"type":"function","title":"Bonfire.Search.Meili.create_index/2","doc":"","ref":"Bonfire.Search.Meili.html#create_index/2"},{"type":"function","title":"Bonfire.Search.Meili.delete/3","doc":"","ref":"Bonfire.Search.Meili.html#delete/3"},{"type":"function","title":"Bonfire.Search.Meili.get/1","doc":"","ref":"Bonfire.Search.Meili.html#get/1"},{"type":"function","title":"Bonfire.Search.Meili.get/3","doc":"","ref":"Bonfire.Search.Meili.html#get/3"},{"type":"function","title":"Bonfire.Search.Meili.index_exists/1","doc":"","ref":"Bonfire.Search.Meili.html#index_exists/1"},{"type":"function","title":"Bonfire.Search.Meili.list_facets/1","doc":"","ref":"Bonfire.Search.Meili.html#list_facets/1"},{"type":"function","title":"Bonfire.Search.Meili.patch/3","doc":"","ref":"Bonfire.Search.Meili.html#patch/3"},{"type":"function","title":"Bonfire.Search.Meili.post/3","doc":"","ref":"Bonfire.Search.Meili.html#post/3"},{"type":"function","title":"Bonfire.Search.Meili.put/3","doc":"","ref":"Bonfire.Search.Meili.html#put/3"},{"type":"function","title":"Bonfire.Search.Meili.search/2","doc":"","ref":"Bonfire.Search.Meili.html#search/2"},{"type":"function","title":"Bonfire.Search.Meili.set_facets/2","doc":"","ref":"Bonfire.Search.Meili.html#set_facets/2"},{"type":"function","title":"Bonfire.Search.Meili.set_searchable_fields/2","doc":"","ref":"Bonfire.Search.Meili.html#set_searchable_fields/2"},{"type":"function","title":"Bonfire.Search.Meili.settings/2","doc":"","ref":"Bonfire.Search.Meili.html#settings/2"},{"type":"module","title":"Bonfire.Search.RuntimeConfig","doc":"","ref":"Bonfire.Search.RuntimeConfig.html"},{"type":"function","title":"Bonfire.Search.RuntimeConfig.config/0","doc":"","ref":"Bonfire.Search.RuntimeConfig.html#config/0"},{"type":"function","title":"Bonfire.Search.RuntimeConfig.config_module/0","doc":"","ref":"Bonfire.Search.RuntimeConfig.html#config_module/0"},{"type":"module","title":"Bonfire.Search.Stopwords","doc":"Handles matching of needs & offers","ref":"Bonfire.Search.Stopwords.html"},{"type":"function","title":"Bonfire.Search.Stopwords.filter/2","doc":"Filters out pre-defined stop words.","ref":"Bonfire.Search.Stopwords.html#filter/2"},{"type":"function","title":"Bonfire.Search.Stopwords.split_sentences/1","doc":"","ref":"Bonfire.Search.Stopwords.html#split_sentences/1"},{"type":"function","title":"Bonfire.Search.Stopwords.split_words/1","doc":"","ref":"Bonfire.Search.Stopwords.html#split_words/1"},{"type":"function","title":"Bonfire.Search.Stopwords.stop_words/1","doc":"","ref":"Bonfire.Search.Stopwords.html#stop_words/1"},{"type":"module","title":"Bonfire.Search.Web.Routes","doc":"","ref":"Bonfire.Search.Web.Routes.html"},{"type":"function","title":"Bonfire.Search.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Search.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Seeder","doc":"A way to have data seeds that work similarly to migrations.\n\nTo generate a new seed: `mix phil_columns.gen.seed my_seed_name` will create a new module in `priv/repo/seeds`\n\nTo actually insert the seeds into your app, if that's not configured to be done automatically in your mix aliases, run `mix phil_columns.seed`\n\nTo roll-back: `mix phil_columns.rollback`","ref":"Bonfire.Seeder.html"},{"type":"module","title":"Bonfire.Social.APActivities","doc":"","ref":"Bonfire.Social.APActivities.html"},{"type":"function","title":"Bonfire.Social.APActivities.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.APActivities.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.APActivities.create/4","doc":"","ref":"Bonfire.Social.APActivities.html#create/4"},{"type":"function","title":"Bonfire.Social.APActivities.insert/3","doc":"","ref":"Bonfire.Social.APActivities.html#insert/3"},{"type":"function","title":"Bonfire.Social.APActivities.maybe_attach_video_oembed/3","doc":"","ref":"Bonfire.Social.APActivities.html#maybe_attach_video_oembed/3"},{"type":"module","title":"Bonfire.Social.Activities","doc":"","ref":"Bonfire.Social.Activities.html"},{"type":"function","title":"Bonfire.Social.Activities.activity_preloads/2","doc":"","ref":"Bonfire.Social.Activities.html#activity_preloads/2"},{"type":"function","title":"Bonfire.Social.Activities.activity_preloads/3","doc":"","ref":"Bonfire.Social.Activities.html#activity_preloads/3"},{"type":"function","title":"Bonfire.Social.Activities.activity_under_object/1","doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/1"},{"type":"function","title":"Bonfire.Social.Activities.activity_under_object/2","doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/2"},{"type":"function","title":"Bonfire.Social.Activities.activity_with_object_from_assigns/1","doc":"","ref":"Bonfire.Social.Activities.html#activity_with_object_from_assigns/1"},{"type":"function","title":"Bonfire.Social.Activities.all_verb_names/0","doc":"Outputs the names all object verbs, for the purpose of adding to the localisation strings, as long as the output is piped through to localise_strings/1 at compile time.","ref":"Bonfire.Social.Activities.html#all_verb_names/0"},{"type":"function","title":"Bonfire.Social.Activities.all_verb_names_extra/0","doc":"","ref":"Bonfire.Social.Activities.html#all_verb_names_extra/0"},{"type":"function","title":"Bonfire.Social.Activities.as_permitted_for/3","doc":"","ref":"Bonfire.Social.Activities.html#as_permitted_for/3"},{"type":"function","title":"Bonfire.Social.Activities.build_assoc/3","doc":"","ref":"Bonfire.Social.Activities.html#build_assoc/3"},{"type":"function","title":"Bonfire.Social.Activities.build_assoc/4","doc":"","ref":"Bonfire.Social.Activities.html#build_assoc/4"},{"type":"function","title":"Bonfire.Social.Activities.by_subject_verb_object_q/3","doc":"","ref":"Bonfire.Social.Activities.html#by_subject_verb_object_q/3"},{"type":"function","title":"Bonfire.Social.Activities.cast/4","doc":"","ref":"Bonfire.Social.Activities.html#cast/4"},{"type":"function","title":"Bonfire.Social.Activities.count_total/0","doc":"","ref":"Bonfire.Social.Activities.html#count_total/0"},{"type":"function","title":"Bonfire.Social.Activities.create/4","doc":"Create an Activity\nNOTE: you will usually want to use `cast/3` instead","ref":"Bonfire.Social.Activities.html#create/4"},{"type":"function","title":"Bonfire.Social.Activities.delete/1","doc":"Delete activities, using specific filters","ref":"Bonfire.Social.Activities.html#delete/1"},{"type":"function","title":"Bonfire.Social.Activities.delete_by_subject_verb_object/3","doc":"Delete an activity (usage by things like unlike)","ref":"Bonfire.Social.Activities.html#delete_by_subject_verb_object/3"},{"type":"function","title":"Bonfire.Social.Activities.delete_object/1","doc":"","ref":"Bonfire.Social.Activities.html#delete_object/1"},{"type":"function","title":"Bonfire.Social.Activities.fetch_cursor_value_fun/2","doc":"","ref":"Bonfire.Social.Activities.html#fetch_cursor_value_fun/2"},{"type":"function","title":"Bonfire.Social.Activities.get/2","doc":"Get an activity by its ID","ref":"Bonfire.Social.Activities.html#get/2"},{"type":"function","title":"Bonfire.Social.Activities.load_object/2","doc":"","ref":"Bonfire.Social.Activities.html#load_object/2"},{"type":"function","title":"Bonfire.Social.Activities.maybe_join_creator/2","doc":"query optimisation: only includes the subject if different from subject or current_user","ref":"Bonfire.Social.Activities.html#maybe_join_creator/2"},{"type":"function","title":"Bonfire.Social.Activities.maybe_join_subject/2","doc":"","ref":"Bonfire.Social.Activities.html#maybe_join_subject/2"},{"type":"function","title":"Bonfire.Social.Activities.maybe_remove_for_deleters_feeds/1","doc":"","ref":"Bonfire.Social.Activities.html#maybe_remove_for_deleters_feeds/1"},{"type":"function","title":"Bonfire.Social.Activities.object_from_activity/1","doc":"","ref":"Bonfire.Social.Activities.html#object_from_activity/1"},{"type":"function","title":"Bonfire.Social.Activities.object_preload_activity/2","doc":"","ref":"Bonfire.Social.Activities.html#object_preload_activity/2"},{"type":"function","title":"Bonfire.Social.Activities.object_preload_create_activity/1","doc":"","ref":"Bonfire.Social.Activities.html#object_preload_create_activity/1"},{"type":"function","title":"Bonfire.Social.Activities.object_under_activity/2","doc":"","ref":"Bonfire.Social.Activities.html#object_under_activity/2"},{"type":"function","title":"Bonfire.Social.Activities.order_cursor_fields/2","doc":"","ref":"Bonfire.Social.Activities.html#order_cursor_fields/2"},{"type":"function","title":"Bonfire.Social.Activities.order_pagination_opts/2","doc":"","ref":"Bonfire.Social.Activities.html#order_pagination_opts/2"},{"type":"function","title":"Bonfire.Social.Activities.put_assoc/3","doc":"","ref":"Bonfire.Social.Activities.html#put_assoc/3"},{"type":"function","title":"Bonfire.Social.Activities.put_assoc/4","doc":"","ref":"Bonfire.Social.Activities.html#put_assoc/4"},{"type":"function","title":"Bonfire.Social.Activities.query/2","doc":"","ref":"Bonfire.Social.Activities.html#query/2"},{"type":"function","title":"Bonfire.Social.Activities.query_module/0","doc":"","ref":"Bonfire.Social.Activities.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Activities.query_object_preload_activity/4","doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_activity/4"},{"type":"function","title":"Bonfire.Social.Activities.query_object_preload_create_activity/2","doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_create_activity/2"},{"type":"function","title":"Bonfire.Social.Activities.query_order/3","doc":"","ref":"Bonfire.Social.Activities.html#query_order/3"},{"type":"function","title":"Bonfire.Social.Activities.read/2","doc":"Get an activity by its object ID (usually a create activity)","ref":"Bonfire.Social.Activities.html#read/2"},{"type":"function","title":"Bonfire.Social.Activities.read_query/2","doc":"","ref":"Bonfire.Social.Activities.html#read_query/2"},{"type":"function","title":"Bonfire.Social.Activities.reply_to_as_permitted_for/3","doc":"","ref":"Bonfire.Social.Activities.html#reply_to_as_permitted_for/3"},{"type":"function","title":"Bonfire.Social.Activities.schema_module/0","doc":"","ref":"Bonfire.Social.Activities.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Activities.verb_congugate/1","doc":"","ref":"Bonfire.Social.Activities.html#verb_congugate/1"},{"type":"function","title":"Bonfire.Social.Activities.verb_display/1","doc":"","ref":"Bonfire.Social.Activities.html#verb_display/1"},{"type":"function","title":"Bonfire.Social.Activities.verb_id/1","doc":"","ref":"Bonfire.Social.Activities.html#verb_id/1"},{"type":"function","title":"Bonfire.Social.Activities.verb_maybe_modify/2","doc":"","ref":"Bonfire.Social.Activities.html#verb_maybe_modify/2"},{"type":"function","title":"Bonfire.Social.Activities.verb_name/1","doc":"","ref":"Bonfire.Social.Activities.html#verb_name/1"},{"type":"module","title":"Bonfire.Social.Acts.Activity","doc":"","ref":"Bonfire.Social.Acts.Activity.html"},{"type":"function","title":"Bonfire.Social.Acts.Activity.run/2","doc":"","ref":"Bonfire.Social.Acts.Activity.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Activity.UnderObject","doc":"","ref":"Bonfire.Social.Acts.Activity.UnderObject.html"},{"type":"function","title":"Bonfire.Social.Acts.Activity.UnderObject.run/2","doc":"","ref":"Bonfire.Social.Acts.Activity.UnderObject.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Federate","doc":"An Act that translates a post or changeset into some jobs for the\nAP publish worker. Handles creation, update and delete\n\nAct Options:\n  * `on` - key in assigns to find the post, default: `:post`\n  * `as` - key in assigns to assign indexable object, default: `:post_index`","ref":"Bonfire.Social.Acts.Federate.html"},{"type":"function","title":"Bonfire.Social.Acts.Federate.run/2","doc":"","ref":"Bonfire.Social.Acts.Federate.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Feeds","doc":"NOT USED - Finds a list of appropriate feeds into which to post.\n\nEpic Options:\n  * `:current_user` - current user. required.\n  * `:boundary` - preset string or custom boundaries. default: nil\n\nAct Options:\n  * `:changeset` - key in assigns to find changeset, required","ref":"Bonfire.Social.Acts.Feeds.html"},{"type":"function","title":"Bonfire.Social.Acts.Feeds.run/2","doc":"","ref":"Bonfire.Social.Acts.Feeds.html#run/2"},{"type":"function","title":"Bonfire.Social.Acts.Feeds.thread_id/1","doc":"","ref":"Bonfire.Social.Acts.Feeds.html#thread_id/1"},{"type":"module","title":"Bonfire.Social.Acts.LivePush","doc":"","ref":"Bonfire.Social.Acts.LivePush.html"},{"type":"function","title":"Bonfire.Social.Acts.LivePush.run/2","doc":"","ref":"Bonfire.Social.Acts.LivePush.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Objects.Delete","doc":"Delete something + specified associations with a changeset","ref":"Bonfire.Social.Acts.Objects.Delete.html"},{"type":"module","title":"Bonfire.Social.Acts.PostContents","doc":"","ref":"Bonfire.Social.Acts.PostContents.html"},{"type":"function","title":"Bonfire.Social.Acts.PostContents.run/2","doc":"","ref":"Bonfire.Social.Acts.PostContents.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Sensitivity","doc":"","ref":"Bonfire.Social.Acts.Sensitivity.html"},{"type":"function","title":"Bonfire.Social.Acts.Sensitivity.run/2","doc":"","ref":"Bonfire.Social.Acts.Sensitivity.html#run/2"},{"type":"module","title":"Bonfire.Social.Acts.Threaded","doc":"","ref":"Bonfire.Social.Acts.Threaded.html"},{"type":"function","title":"Bonfire.Social.Acts.Threaded.run/2","doc":"","ref":"Bonfire.Social.Acts.Threaded.html#run/2"},{"type":"module","title":"Bonfire.Social.Bookmarks","doc":"","ref":"Bonfire.Social.Bookmarks.html"},{"type":"function","title":"Bonfire.Social.Bookmarks.bookmark/3","doc":"","ref":"Bonfire.Social.Bookmarks.html#bookmark/3"},{"type":"function","title":"Bonfire.Social.Bookmarks.bookmarked?/2","doc":"","ref":"Bonfire.Social.Bookmarks.html#bookmarked?/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.by_bookmarked/2","doc":"","ref":"Bonfire.Social.Bookmarks.html#by_bookmarked/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.by_bookmarker/2","doc":"","ref":"Bonfire.Social.Bookmarks.html#by_bookmarker/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.count/2","doc":"","ref":"Bonfire.Social.Bookmarks.html#count/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.get/3","doc":"","ref":"Bonfire.Social.Bookmarks.html#get/3"},{"type":"function","title":"Bonfire.Social.Bookmarks.get!/3","doc":"","ref":"Bonfire.Social.Bookmarks.html#get!/3"},{"type":"function","title":"Bonfire.Social.Bookmarks.insert/3","doc":"","ref":"Bonfire.Social.Bookmarks.html#insert/3"},{"type":"function","title":"Bonfire.Social.Bookmarks.list_by/2","doc":"List bookmarks by a user","ref":"Bonfire.Social.Bookmarks.html#list_by/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.list_my/1","doc":"List the current user's bookmarks","ref":"Bonfire.Social.Bookmarks.html#list_my/1"},{"type":"function","title":"Bonfire.Social.Bookmarks.list_of/2","doc":"List bookmarkers of something(s)","ref":"Bonfire.Social.Bookmarks.html#list_of/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.query/2","doc":"","ref":"Bonfire.Social.Bookmarks.html#query/2"},{"type":"function","title":"Bonfire.Social.Bookmarks.query_module/0","doc":"","ref":"Bonfire.Social.Bookmarks.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Bookmarks.schema_module/0","doc":"","ref":"Bonfire.Social.Bookmarks.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Bookmarks.unbookmark/3","doc":"","ref":"Bonfire.Social.Bookmarks.html#unbookmark/3"},{"type":"module","title":"Bonfire.Social.Boosts","doc":"","ref":"Bonfire.Social.Boosts.html"},{"type":"function","title":"Bonfire.Social.Boosts.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Boosts.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Boosts.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Boosts.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Boosts.boost/3","doc":"","ref":"Bonfire.Social.Boosts.html#boost/3"},{"type":"function","title":"Bonfire.Social.Boosts.boosted?/2","doc":"","ref":"Bonfire.Social.Boosts.html#boosted?/2"},{"type":"function","title":"Bonfire.Social.Boosts.count/2","doc":"","ref":"Bonfire.Social.Boosts.html#count/2"},{"type":"function","title":"Bonfire.Social.Boosts.date_last_boosted/2","doc":"","ref":"Bonfire.Social.Boosts.html#date_last_boosted/2"},{"type":"function","title":"Bonfire.Social.Boosts.federation_module/0","doc":"","ref":"Bonfire.Social.Boosts.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Boosts.get/3","doc":"","ref":"Bonfire.Social.Boosts.html#get/3"},{"type":"function","title":"Bonfire.Social.Boosts.get!/3","doc":"","ref":"Bonfire.Social.Boosts.html#get!/3"},{"type":"function","title":"Bonfire.Social.Boosts.list_by/2","doc":"List boosts by the user","ref":"Bonfire.Social.Boosts.html#list_by/2"},{"type":"function","title":"Bonfire.Social.Boosts.list_my/1","doc":"List current user's boosts","ref":"Bonfire.Social.Boosts.html#list_my/1"},{"type":"function","title":"Bonfire.Social.Boosts.list_of/2","doc":"List boost of an object","ref":"Bonfire.Social.Boosts.html#list_of/2"},{"type":"function","title":"Bonfire.Social.Boosts.list_paginated/2","doc":"","ref":"Bonfire.Social.Boosts.html#list_paginated/2"},{"type":"function","title":"Bonfire.Social.Boosts.maybe_boost/3","doc":"","ref":"Bonfire.Social.Boosts.html#maybe_boost/3"},{"type":"function","title":"Bonfire.Social.Boosts.query/2","doc":"","ref":"Bonfire.Social.Boosts.html#query/2"},{"type":"function","title":"Bonfire.Social.Boosts.query_module/0","doc":"","ref":"Bonfire.Social.Boosts.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Boosts.schema_module/0","doc":"","ref":"Bonfire.Social.Boosts.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Boosts.unboost/3","doc":"","ref":"Bonfire.Social.Boosts.html#unboost/3"},{"type":"module","title":"Bonfire.Social.Edges","doc":"","ref":"Bonfire.Social.Edges.html"},{"type":"function","title":"Bonfire.Social.Edges.changeset/5","doc":"","ref":"Bonfire.Social.Edges.html#changeset/5"},{"type":"function","title":"Bonfire.Social.Edges.changeset_base/4","doc":"","ref":"Bonfire.Social.Edges.html#changeset_base/4"},{"type":"function","title":"Bonfire.Social.Edges.count/3","doc":"","ref":"Bonfire.Social.Edges.html#count/3"},{"type":"function","title":"Bonfire.Social.Edges.count_for_subject/4","doc":"","ref":"Bonfire.Social.Edges.html#count_for_subject/4"},{"type":"function","title":"Bonfire.Social.Edges.delete_by_both/3","doc":"","ref":"Bonfire.Social.Edges.html#delete_by_both/3"},{"type":"function","title":"Bonfire.Social.Edges.delete_by_object/1","doc":"","ref":"Bonfire.Social.Edges.html#delete_by_object/1"},{"type":"function","title":"Bonfire.Social.Edges.delete_by_subject/1","doc":"","ref":"Bonfire.Social.Edges.html#delete_by_subject/1"},{"type":"function","title":"Bonfire.Social.Edges.edge_module_query/2","doc":"","ref":"Bonfire.Social.Edges.html#edge_module_query/2"},{"type":"function","title":"Bonfire.Social.Edges.exists?/4","doc":"","ref":"Bonfire.Social.Edges.html#exists?/4"},{"type":"function","title":"Bonfire.Social.Edges.filters_from_opts/1","doc":"","ref":"Bonfire.Social.Edges.html#filters_from_opts/1"},{"type":"function","title":"Bonfire.Social.Edges.get/4","doc":"","ref":"Bonfire.Social.Edges.html#get/4"},{"type":"function","title":"Bonfire.Social.Edges.get!/4","doc":"","ref":"Bonfire.Social.Edges.html#get!/4"},{"type":"function","title":"Bonfire.Social.Edges.insert/3","doc":"","ref":"Bonfire.Social.Edges.html#insert/3"},{"type":"function","title":"Bonfire.Social.Edges.insert/5","doc":"","ref":"Bonfire.Social.Edges.html#insert/5"},{"type":"function","title":"Bonfire.Social.Edges.last/4","doc":"retrieves the last edge of a given type, subject, and object from the database","ref":"Bonfire.Social.Edges.html#last/4"},{"type":"function","title":"Bonfire.Social.Edges.last_date/4","doc":"retrieves the date of the last edge of a given type, subject, and object from the database","ref":"Bonfire.Social.Edges.html#last_date/4"},{"type":"function","title":"Bonfire.Social.Edges.put_edge_assoc/3","doc":"","ref":"Bonfire.Social.Edges.html#put_edge_assoc/3"},{"type":"function","title":"Bonfire.Social.Edges.put_edge_assoc/4","doc":"","ref":"Bonfire.Social.Edges.html#put_edge_assoc/4"},{"type":"function","title":"Bonfire.Social.Edges.query/2","doc":"","ref":"Bonfire.Social.Edges.html#query/2"},{"type":"function","title":"Bonfire.Social.Edges.query_parent/3","doc":"","ref":"Bonfire.Social.Edges.html#query_parent/3"},{"type":"module","title":"Bonfire.Social.Fake","doc":"","ref":"Bonfire.Social.Fake.html"},{"type":"function","title":"Bonfire.Social.Fake.fake_remote_user!/0","doc":"","ref":"Bonfire.Social.Fake.html#fake_remote_user!/0"},{"type":"module","title":"Bonfire.Social.FeedActivities","doc":"","ref":"Bonfire.Social.FeedActivities.html"},{"type":"function","title":"Bonfire.Social.FeedActivities.cast/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#cast/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.cast/3","doc":"","ref":"Bonfire.Social.FeedActivities.html#cast/3"},{"type":"function","title":"Bonfire.Social.FeedActivities.count/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#count/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.count_subjects/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#count_subjects/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.count_total/0","doc":"","ref":"Bonfire.Social.FeedActivities.html#count_total/0"},{"type":"function","title":"Bonfire.Social.FeedActivities.delete/1","doc":"Remove activities from feeds, using specific filters","ref":"Bonfire.Social.FeedActivities.html#delete/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.delete/2","doc":"Remove one or more activities from all feeds","ref":"Bonfire.Social.FeedActivities.html#delete/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed/2","doc":"Gets a feed by id or ids or a thing/things containing an id/ids.","ref":"Bonfire.Social.FeedActivities.html#feed/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_contains?/3","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_contains?/3"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_ids_and_opts/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_ids_and_opts/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_many_paginated/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_many_paginated/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_name/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_name/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_paginated/2","doc":"Return a page of Feed Activities (reverse chronological) + pagination metadata\nTODO: consolidate with `feed/2`","ref":"Bonfire.Social.FeedActivities.html#feed_paginated/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_paginated/3","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_paginated/3"},{"type":"function","title":"Bonfire.Social.FeedActivities.feed_with_object/3","doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_with_object/3"},{"type":"function","title":"Bonfire.Social.FeedActivities.feeds_for_activity/1","doc":"Gets a list of feed ids this activity was published to from the database.\n\nCurrently only used by the ActivityPub integration.","ref":"Bonfire.Social.FeedActivities.html#feeds_for_activity/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.filters_from_opts/1","doc":"","ref":"Bonfire.Social.FeedActivities.html#filters_from_opts/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.get_feed_ids/1","doc":"Computes the feed ids for `get_feed_publishes/2`.\n\nOptions:\n* `:inbox` - list of objects whose inbox we should attempt to insert into.\n* `:outbox` - list of objects whose outbox we should attempt to insert into.\n* `:notifications` - list of objects whose notifications we should attempt to insert into.\n* `:feeds` - list of ids (or objects containing IDs of feeds to post to.","ref":"Bonfire.Social.FeedActivities.html#get_feed_ids/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.get_feed_publishes/1","doc":"Creates the underlying data for `put_feed_publishes/2`.","ref":"Bonfire.Social.FeedActivities.html#get_feed_publishes/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.mark_all_seen/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#mark_all_seen/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.maybe_feed_publish/5","doc":"Creates a new local activity or takes an existing one and publishes to specified feeds","ref":"Bonfire.Social.FeedActivities.html#maybe_feed_publish/5"},{"type":"function","title":"Bonfire.Social.FeedActivities.my_feed/2","doc":"Gets a user's home feed, a combination of all feeds the user is subscribed to.","ref":"Bonfire.Social.FeedActivities.html#my_feed/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.publish/4","doc":"Creates a new local activity and publishes to appropriate feeds\nTODO: make this re-use the changeset-based code like in Epics instead of duplicating logic (currently it is only used in VF extension anyway)","ref":"Bonfire.Social.FeedActivities.html#publish/4"},{"type":"function","title":"Bonfire.Social.FeedActivities.put_feed_publishes/2","doc":"Arranges for an insert changeset to also publish to feeds related to some objects.\n\nOptions: see `get_feed_ids/1`","ref":"Bonfire.Social.FeedActivities.html#put_feed_publishes/2"},{"type":"function","title":"Bonfire.Social.FeedActivities.query/3","doc":"Return a boundarised query for a feed","ref":"Bonfire.Social.FeedActivities.html#query/3"},{"type":"function","title":"Bonfire.Social.FeedActivities.query_module/0","doc":"","ref":"Bonfire.Social.FeedActivities.html#query_module/0"},{"type":"function","title":"Bonfire.Social.FeedActivities.schema_module/0","doc":"","ref":"Bonfire.Social.FeedActivities.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.FeedActivities.skip_verbs_default/0","doc":"","ref":"Bonfire.Social.FeedActivities.html#skip_verbs_default/0"},{"type":"function","title":"Bonfire.Social.FeedActivities.the_object/1","doc":"","ref":"Bonfire.Social.FeedActivities.html#the_object/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.to_feed_options/1","doc":"","ref":"Bonfire.Social.FeedActivities.html#to_feed_options/1"},{"type":"function","title":"Bonfire.Social.FeedActivities.unseen_count/2","doc":"","ref":"Bonfire.Social.FeedActivities.html#unseen_count/2"},{"type":"module","title":"Bonfire.Social.Feeds","doc":"","ref":"Bonfire.Social.Feeds.html"},{"type":"function","title":"Bonfire.Social.Feeds.admin_notifications/1","doc":"","ref":"Bonfire.Social.Feeds.html#admin_notifications/1"},{"type":"function","title":"Bonfire.Social.Feeds.admins_notifications/0","doc":"","ref":"Bonfire.Social.Feeds.html#admins_notifications/0"},{"type":"function","title":"Bonfire.Social.Feeds.admins_notifications/1","doc":"","ref":"Bonfire.Social.Feeds.html#admins_notifications/1"},{"type":"function","title":"Bonfire.Social.Feeds.do_target_feeds/5","doc":"","ref":"Bonfire.Social.Feeds.html#do_target_feeds/5"},{"type":"function","title":"Bonfire.Social.Feeds.feed_id/2","doc":"","ref":"Bonfire.Social.Feeds.html#feed_id/2"},{"type":"function","title":"Bonfire.Social.Feeds.feed_id!/2","doc":"","ref":"Bonfire.Social.Feeds.html#feed_id!/2"},{"type":"function","title":"Bonfire.Social.Feeds.feed_ids/2","doc":"","ref":"Bonfire.Social.Feeds.html#feed_ids/2"},{"type":"function","title":"Bonfire.Social.Feeds.feed_ids_to_publish/3","doc":"","ref":"Bonfire.Social.Feeds.html#feed_ids_to_publish/3"},{"type":"function","title":"Bonfire.Social.Feeds.feed_ids_to_publish/4","doc":"","ref":"Bonfire.Social.Feeds.html#feed_ids_to_publish/4"},{"type":"function","title":"Bonfire.Social.Feeds.inbox_of_obj_creator/1","doc":"","ref":"Bonfire.Social.Feeds.html#inbox_of_obj_creator/1"},{"type":"function","title":"Bonfire.Social.Feeds.maybe_create_feed/2","doc":"","ref":"Bonfire.Social.Feeds.html#maybe_create_feed/2"},{"type":"function","title":"Bonfire.Social.Feeds.maybe_creator_notification/3","doc":"","ref":"Bonfire.Social.Feeds.html#maybe_creator_notification/3"},{"type":"function","title":"Bonfire.Social.Feeds.maybe_custom_feeds/1","doc":"","ref":"Bonfire.Social.Feeds.html#maybe_custom_feeds/1"},{"type":"function","title":"Bonfire.Social.Feeds.maybe_my_outbox_feed_id/2","doc":"","ref":"Bonfire.Social.Feeds.html#maybe_my_outbox_feed_id/2"},{"type":"function","title":"Bonfire.Social.Feeds.my_feed_id/2","doc":"","ref":"Bonfire.Social.Feeds.html#my_feed_id/2"},{"type":"function","title":"Bonfire.Social.Feeds.my_home_feed_ids/2","doc":"","ref":"Bonfire.Social.Feeds.html#my_home_feed_ids/2"},{"type":"function","title":"Bonfire.Social.Feeds.named_feed_id/2","doc":"","ref":"Bonfire.Social.Feeds.html#named_feed_id/2"},{"type":"function","title":"Bonfire.Social.Feeds.reply_and_or_mentions_notifications_feeds/5","doc":"","ref":"Bonfire.Social.Feeds.html#reply_and_or_mentions_notifications_feeds/5"},{"type":"function","title":"Bonfire.Social.Feeds.schema_module/0","doc":"","ref":"Bonfire.Social.Feeds.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Feeds.target_feeds/3","doc":"","ref":"Bonfire.Social.Feeds.html#target_feeds/3"},{"type":"type","title":"Bonfire.Social.Feeds.feed_name/0","doc":"Names a predefined feed attached to a user","ref":"Bonfire.Social.Feeds.html#t:feed_name/0"},{"type":"module","title":"Bonfire.Social.Feeds.LiveHandler","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.actions_update_many/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#actions_update_many/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.activity_update_many/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#activity_update_many/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.assign_feed/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#assign_feed/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.feed_assigns_maybe_async/4","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#feed_assigns_maybe_async/4"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.feed_default_assigns/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#feed_default_assigns/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.feed_extra_preloads_list/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#feed_extra_preloads_list/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.feed_live_update_many_preloads?/0","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#feed_live_update_many_preloads?/0"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.handle_info/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_info/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.handle_params/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_params/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.insert_feed/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#insert_feed/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.load_user_feed_assigns/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#load_user_feed_assigns/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.load_user_feed_assigns/4","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#load_user_feed_assigns/4"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.object_preloads/0","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#object_preloads/0"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.paginate_feed/4","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_feed/4"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.paginate_fetch_assign_default/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_fetch_assign_default/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.paginate_opts/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_opts/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.preload_activity_and_object_assocs/3","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#preload_activity_and_object_assocs/3"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.remove_activity/1","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#remove_activity/1"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.reply_to_activity/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#reply_to_activity/2"},{"type":"macro","title":"Bonfire.Social.Feeds.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Social.Feeds.LiveHandler.user_feed_assign_or_load_async/4","doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#user_feed_assign_or_load_async/4"},{"type":"module","title":"Bonfire.Social.Flags","doc":"","ref":"Bonfire.Social.Flags.html"},{"type":"function","title":"Bonfire.Social.Flags.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Flags.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Flags.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Flags.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Flags.by_flagged/1","doc":"","ref":"Bonfire.Social.Flags.html#by_flagged/1"},{"type":"function","title":"Bonfire.Social.Flags.by_flagger/1","doc":"","ref":"Bonfire.Social.Flags.html#by_flagger/1"},{"type":"function","title":"Bonfire.Social.Flags.federation_module/0","doc":"","ref":"Bonfire.Social.Flags.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Flags.flag/3","doc":"","ref":"Bonfire.Social.Flags.html#flag/3"},{"type":"function","title":"Bonfire.Social.Flags.flagged?/2","doc":"","ref":"Bonfire.Social.Flags.html#flagged?/2"},{"type":"function","title":"Bonfire.Social.Flags.get/3","doc":"","ref":"Bonfire.Social.Flags.html#get/3"},{"type":"function","title":"Bonfire.Social.Flags.get!/3","doc":"","ref":"Bonfire.Social.Flags.html#get!/3"},{"type":"function","title":"Bonfire.Social.Flags.instance_moderators/0","doc":"","ref":"Bonfire.Social.Flags.html#instance_moderators/0"},{"type":"function","title":"Bonfire.Social.Flags.list/1","doc":"","ref":"Bonfire.Social.Flags.html#list/1"},{"type":"function","title":"Bonfire.Social.Flags.list_by/2","doc":"List flags by the user and which are in their outbox","ref":"Bonfire.Social.Flags.html#list_by/2"},{"type":"function","title":"Bonfire.Social.Flags.list_my/1","doc":"List current user's flags, which are in their outbox","ref":"Bonfire.Social.Flags.html#list_my/1"},{"type":"function","title":"Bonfire.Social.Flags.list_of/2","doc":"List flag of an object and which are in a feed","ref":"Bonfire.Social.Flags.html#list_of/2"},{"type":"function","title":"Bonfire.Social.Flags.list_paginated/2","doc":"","ref":"Bonfire.Social.Flags.html#list_paginated/2"},{"type":"function","title":"Bonfire.Social.Flags.list_preloaded/1","doc":"","ref":"Bonfire.Social.Flags.html#list_preloaded/1"},{"type":"function","title":"Bonfire.Social.Flags.moderators/1","doc":"","ref":"Bonfire.Social.Flags.html#moderators/1"},{"type":"function","title":"Bonfire.Social.Flags.query/2","doc":"","ref":"Bonfire.Social.Flags.html#query/2"},{"type":"function","title":"Bonfire.Social.Flags.query_module/0","doc":"","ref":"Bonfire.Social.Flags.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Flags.schema_module/0","doc":"","ref":"Bonfire.Social.Flags.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Flags.unflag/2","doc":"","ref":"Bonfire.Social.Flags.html#unflag/2"},{"type":"module","title":"Bonfire.Social.Graph","doc":"","ref":"Bonfire.Social.Graph.html"},{"type":"function","title":"Bonfire.Social.Graph.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Social.Graph.html#child_spec/1"},{"type":"function","title":"Bonfire.Social.Graph.graph_add/3","doc":"","ref":"Bonfire.Social.Graph.html#graph_add/3"},{"type":"function","title":"Bonfire.Social.Graph.graph_clear/0","doc":"","ref":"Bonfire.Social.Graph.html#graph_clear/0"},{"type":"function","title":"Bonfire.Social.Graph.graph_conn/0","doc":"","ref":"Bonfire.Social.Graph.html#graph_conn/0"},{"type":"function","title":"Bonfire.Social.Graph.graph_distance/2","doc":"","ref":"Bonfire.Social.Graph.html#graph_distance/2"},{"type":"function","title":"Bonfire.Social.Graph.graph_distances/1","doc":"","ref":"Bonfire.Social.Graph.html#graph_distances/1"},{"type":"function","title":"Bonfire.Social.Graph.graph_meta/1","doc":"","ref":"Bonfire.Social.Graph.html#graph_meta/1"},{"type":"function","title":"Bonfire.Social.Graph.graph_query/2","doc":"","ref":"Bonfire.Social.Graph.html#graph_query/2"},{"type":"function","title":"Bonfire.Social.Graph.graph_remove/3","doc":"","ref":"Bonfire.Social.Graph.html#graph_remove/3"},{"type":"function","title":"Bonfire.Social.Graph.init/1","doc":"","ref":"Bonfire.Social.Graph.html#init/1"},{"type":"function","title":"Bonfire.Social.Graph.init_and_load/0","doc":"","ref":"Bonfire.Social.Graph.html#init_and_load/0"},{"type":"function","title":"Bonfire.Social.Graph.load_from_db/0","doc":"","ref":"Bonfire.Social.Graph.html#load_from_db/0"},{"type":"function","title":"Bonfire.Social.Graph.maybe_applications/0","doc":"","ref":"Bonfire.Social.Graph.html#maybe_applications/0"},{"type":"function","title":"Bonfire.Social.Graph.start_link/1","doc":"","ref":"Bonfire.Social.Graph.html#start_link/1"},{"type":"module","title":"Bonfire.Social.Graph.Aliases","doc":"","ref":"Bonfire.Social.Graph.Aliases.html"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.add/3","doc":"Alias someone/something.","ref":"Bonfire.Social.Graph.Aliases.html#add/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.all_by_object/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#all_by_object/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.all_by_subject/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#all_by_subject/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.all_objects_by_subject/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#all_objects_by_subject/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.all_subjects_by_object/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#all_subjects_by_object/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.exists?/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#exists?/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.federation_module/0","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.get/3","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#get/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.get!/3","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#get!/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.insert/3","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#insert/3"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.list_aliased/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#list_aliased/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.list_aliases/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#list_aliases/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.list_my_aliased/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#list_my_aliased/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.list_my_aliases/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#list_my_aliases/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.move/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#move/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.move_following/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#move_following/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.query/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#query/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.query_module/0","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.remove/2","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#remove/2"},{"type":"function","title":"Bonfire.Social.Graph.Aliases.schema_module/0","doc":"","ref":"Bonfire.Social.Graph.Aliases.html#schema_module/0"},{"type":"module","title":"Bonfire.Social.Graph.Fake","doc":"","ref":"Bonfire.Social.Graph.Fake.html"},{"type":"function","title":"Bonfire.Social.Graph.Fake.fake_follow!/0","doc":"","ref":"Bonfire.Social.Graph.Fake.html#fake_follow!/0"},{"type":"function","title":"Bonfire.Social.Graph.Fake.fake_incoming_follow!/0","doc":"","ref":"Bonfire.Social.Graph.Fake.html#fake_incoming_follow!/0"},{"type":"function","title":"Bonfire.Social.Graph.Fake.fake_outgoing_follow!/0","doc":"","ref":"Bonfire.Social.Graph.Fake.html#fake_outgoing_follow!/0"},{"type":"function","title":"Bonfire.Social.Graph.Fake.fake_remote_user!/0","doc":"","ref":"Bonfire.Social.Graph.Fake.html#fake_remote_user!/0"},{"type":"module","title":"Bonfire.Social.Graph.Follows","doc":"","ref":"Bonfire.Social.Graph.Follows.html"},{"type":"function","title":"Bonfire.Social.Graph.Follows.accept/2","doc":"Accepts a follow request, publishes to feeds and federates.\nParameter are a Request (or its ID) plus the subject as current_user","ref":"Bonfire.Social.Graph.Follows.html#accept/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.accept_from/2","doc":"Accepts a follow request, publishes to feeds and federates.\nParameters are the requester plus the subject as current_user","ref":"Bonfire.Social.Graph.Follows.html#accept_from/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.all_by_object/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#all_by_object/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.all_by_subject/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#all_by_subject/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.all_followed_outboxes/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#all_followed_outboxes/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.all_objects_by_subject/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#all_objects_by_subject/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.all_subjects_by_object/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#all_subjects_by_object/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Graph.Follows.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Graph.Follows.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Graph.Follows.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Graph.Follows.federation_module/0","doc":"","ref":"Bonfire.Social.Graph.Follows.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Follows.follow/3","doc":"Follow someone/something. In case of success, publishes to feeds and federates.\n\nIf the user is not permitted to follow the object, or the object is\na remote actor, will instead request to follow.","ref":"Bonfire.Social.Graph.Follows.html#follow/3"},{"type":"function","title":"Bonfire.Social.Graph.Follows.following?/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#following?/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.get/3","doc":"","ref":"Bonfire.Social.Graph.Follows.html#get/3"},{"type":"function","title":"Bonfire.Social.Graph.Follows.get!/3","doc":"","ref":"Bonfire.Social.Graph.Follows.html#get!/3"},{"type":"function","title":"Bonfire.Social.Graph.Follows.ignore/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#ignore/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.invalidate_followed_outboxes_cache/1","doc":"","ref":"Bonfire.Social.Graph.Follows.html#invalidate_followed_outboxes_cache/1"},{"type":"function","title":"Bonfire.Social.Graph.Follows.list_followed/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#list_followed/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.list_followers/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#list_followers/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.list_my_followed/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#list_my_followed/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.list_my_followers/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#list_my_followers/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.query/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#query/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.query_module/0","doc":"","ref":"Bonfire.Social.Graph.Follows.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Follows.requested?/2","doc":"","ref":"Bonfire.Social.Graph.Follows.html#requested?/2"},{"type":"function","title":"Bonfire.Social.Graph.Follows.schema_module/0","doc":"","ref":"Bonfire.Social.Graph.Follows.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Follows.unfollow/3","doc":"","ref":"Bonfire.Social.Graph.Follows.html#unfollow/3"},{"type":"module","title":"Bonfire.Social.Graph.Import","doc":"","ref":"Bonfire.Social.Graph.Import.html"},{"type":"function","title":"Bonfire.Social.Graph.Import.blocks_from_csv/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#blocks_from_csv/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.blocks_from_csv_file/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#blocks_from_csv_file/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.follows_from_csv/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#follows_from_csv/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.follows_from_csv_file/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#follows_from_csv_file/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.ghosts_from_csv/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#ghosts_from_csv/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.ghosts_from_csv_file/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#ghosts_from_csv_file/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.import_from_csv_file/3","doc":"","ref":"Bonfire.Social.Graph.Import.html#import_from_csv_file/3"},{"type":"function","title":"Bonfire.Social.Graph.Import.perform/1","doc":"","ref":"Bonfire.Social.Graph.Import.html#perform/1"},{"type":"function","title":"Bonfire.Social.Graph.Import.perform/3","doc":"","ref":"Bonfire.Social.Graph.Import.html#perform/3"},{"type":"function","title":"Bonfire.Social.Graph.Import.silences_from_csv/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#silences_from_csv/2"},{"type":"function","title":"Bonfire.Social.Graph.Import.silences_from_csv_file/2","doc":"","ref":"Bonfire.Social.Graph.Import.html#silences_from_csv_file/2"},{"type":"module","title":"Bonfire.Social.Graph.Integration","doc":"","ref":"Bonfire.Social.Graph.Integration.html"},{"type":"function","title":"Bonfire.Social.Graph.Integration.mailer/0","doc":"","ref":"Bonfire.Social.Graph.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.Social.Graph.Integration.repo/0","doc":"","ref":"Bonfire.Social.Graph.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Social.Graph.Requests","doc":"","ref":"Bonfire.Social.Graph.Requests.html"},{"type":"function","title":"Bonfire.Social.Graph.Requests.accept/2","doc":"Request someone/something, and federate it","ref":"Bonfire.Social.Graph.Requests.html#accept/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.all_by_object/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#all_by_object/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.all_by_subject/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#all_by_subject/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.all_objects_by_subject/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#all_objects_by_subject/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.all_requested_outboxes/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#all_requested_outboxes/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.all_subjects_by_object/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#all_subjects_by_object/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.exists?/4","doc":"","ref":"Bonfire.Social.Graph.Requests.html#exists?/4"},{"type":"function","title":"Bonfire.Social.Graph.Requests.get/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#get/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.get/4","doc":"","ref":"Bonfire.Social.Graph.Requests.html#get/4"},{"type":"function","title":"Bonfire.Social.Graph.Requests.get!/4","doc":"","ref":"Bonfire.Social.Graph.Requests.html#get!/4"},{"type":"function","title":"Bonfire.Social.Graph.Requests.ignore/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#ignore/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.list_my_requested/1","doc":"","ref":"Bonfire.Social.Graph.Requests.html#list_my_requested/1"},{"type":"function","title":"Bonfire.Social.Graph.Requests.list_my_requesters/1","doc":"","ref":"Bonfire.Social.Graph.Requests.html#list_my_requesters/1"},{"type":"function","title":"Bonfire.Social.Graph.Requests.list_requested/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#list_requested/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.list_requesters/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#list_requesters/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.many/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#many/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.query/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#query/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.query_module/0","doc":"","ref":"Bonfire.Social.Graph.Requests.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Requests.request/4","doc":"Request someone/something, and federate it","ref":"Bonfire.Social.Graph.Requests.html#request/4"},{"type":"function","title":"Bonfire.Social.Graph.Requests.requested/2","doc":"","ref":"Bonfire.Social.Graph.Requests.html#requested/2"},{"type":"function","title":"Bonfire.Social.Graph.Requests.requested?/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#requested?/3"},{"type":"function","title":"Bonfire.Social.Graph.Requests.schema_module/0","doc":"","ref":"Bonfire.Social.Graph.Requests.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Graph.Requests.unrequest/3","doc":"","ref":"Bonfire.Social.Graph.Requests.html#unrequest/3"},{"type":"module","title":"Bonfire.Social.Integration","doc":"","ref":"Bonfire.Social.Integration.html"},{"type":"function","title":"Bonfire.Social.Integration.federate_outgoing?/1","doc":"","ref":"Bonfire.Social.Integration.html#federate_outgoing?/1"},{"type":"function","title":"Bonfire.Social.Integration.federating?/1","doc":"","ref":"Bonfire.Social.Integration.html#federating?/1"},{"type":"function","title":"Bonfire.Social.Integration.is_local?/1","doc":"","ref":"Bonfire.Social.Integration.html#is_local?/1"},{"type":"function","title":"Bonfire.Social.Integration.mailer/0","doc":"","ref":"Bonfire.Social.Integration.html#mailer/0"},{"type":"function","title":"Bonfire.Social.Integration.many/3","doc":"","ref":"Bonfire.Social.Integration.html#many/3"},{"type":"function","title":"Bonfire.Social.Integration.maybe_federate/5","doc":"","ref":"Bonfire.Social.Integration.html#maybe_federate/5"},{"type":"function","title":"Bonfire.Social.Integration.maybe_federate_and_gift_wrap_activity/4","doc":"","ref":"Bonfire.Social.Integration.html#maybe_federate_and_gift_wrap_activity/4"},{"type":"function","title":"Bonfire.Social.Integration.repo/0","doc":"","ref":"Bonfire.Social.Integration.html#repo/0"},{"type":"module","title":"Bonfire.Social.Likes","doc":"","ref":"Bonfire.Social.Likes.html"},{"type":"function","title":"Bonfire.Social.Likes.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Likes.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Likes.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Likes.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Likes.by_liked/2","doc":"","ref":"Bonfire.Social.Likes.html#by_liked/2"},{"type":"function","title":"Bonfire.Social.Likes.by_liker/2","doc":"","ref":"Bonfire.Social.Likes.html#by_liker/2"},{"type":"function","title":"Bonfire.Social.Likes.count/2","doc":"","ref":"Bonfire.Social.Likes.html#count/2"},{"type":"function","title":"Bonfire.Social.Likes.do_like/3","doc":"","ref":"Bonfire.Social.Likes.html#do_like/3"},{"type":"function","title":"Bonfire.Social.Likes.federation_module/0","doc":"","ref":"Bonfire.Social.Likes.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Likes.get/3","doc":"","ref":"Bonfire.Social.Likes.html#get/3"},{"type":"function","title":"Bonfire.Social.Likes.get!/3","doc":"","ref":"Bonfire.Social.Likes.html#get!/3"},{"type":"function","title":"Bonfire.Social.Likes.like/3","doc":"","ref":"Bonfire.Social.Likes.html#like/3"},{"type":"function","title":"Bonfire.Social.Likes.liked?/2","doc":"","ref":"Bonfire.Social.Likes.html#liked?/2"},{"type":"function","title":"Bonfire.Social.Likes.list_by/2","doc":"List likes by a user","ref":"Bonfire.Social.Likes.html#list_by/2"},{"type":"function","title":"Bonfire.Social.Likes.list_my/1","doc":"List the current user's likes","ref":"Bonfire.Social.Likes.html#list_my/1"},{"type":"function","title":"Bonfire.Social.Likes.list_of/2","doc":"List likers of something(s)","ref":"Bonfire.Social.Likes.html#list_of/2"},{"type":"function","title":"Bonfire.Social.Likes.list_paginated/2","doc":"","ref":"Bonfire.Social.Likes.html#list_paginated/2"},{"type":"function","title":"Bonfire.Social.Likes.query/2","doc":"","ref":"Bonfire.Social.Likes.html#query/2"},{"type":"function","title":"Bonfire.Social.Likes.query_module/0","doc":"","ref":"Bonfire.Social.Likes.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Likes.schema_module/0","doc":"","ref":"Bonfire.Social.Likes.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Likes.unlike/3","doc":"","ref":"Bonfire.Social.Likes.html#unlike/3"},{"type":"module","title":"Bonfire.Social.LivePush","doc":"","ref":"Bonfire.Social.LivePush.html"},{"type":"function","title":"Bonfire.Social.LivePush.hide_activity/2","doc":"","ref":"Bonfire.Social.LivePush.html#hide_activity/2"},{"type":"function","title":"Bonfire.Social.LivePush.notify/2","doc":"","ref":"Bonfire.Social.LivePush.html#notify/2"},{"type":"function","title":"Bonfire.Social.LivePush.notify/4","doc":"","ref":"Bonfire.Social.LivePush.html#notify/4"},{"type":"function","title":"Bonfire.Social.LivePush.notify_of_message/4","doc":"","ref":"Bonfire.Social.LivePush.html#notify_of_message/4"},{"type":"function","title":"Bonfire.Social.LivePush.notify_users/4","doc":"Sends a notification about an activity to a list of users, excluding the author/subject","ref":"Bonfire.Social.LivePush.html#notify_users/4"},{"type":"function","title":"Bonfire.Social.LivePush.prepare_activity/2","doc":"","ref":"Bonfire.Social.LivePush.html#prepare_activity/2"},{"type":"function","title":"Bonfire.Social.LivePush.push_activity/3","doc":"Receives an activity with a nested object, or vice versa, uses PubSub to pushes to feeds and optionally notifications","ref":"Bonfire.Social.LivePush.html#push_activity/3"},{"type":"function","title":"Bonfire.Social.LivePush.push_activity_object/4","doc":"Receives an activity *and* object, uses PubSub to pushes to feeds and optionally notifications, and returns an Activity.","ref":"Bonfire.Social.LivePush.html#push_activity_object/4"},{"type":"module","title":"Bonfire.Social.Objects","doc":"","ref":"Bonfire.Social.Objects.html"},{"type":"function","title":"Bonfire.Social.Objects.ap_maybe_delete/2","doc":"","ref":"Bonfire.Social.Objects.html#ap_maybe_delete/2"},{"type":"function","title":"Bonfire.Social.Objects.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.Objects.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.Objects.as_permitted_for/3","doc":"","ref":"Bonfire.Social.Objects.html#as_permitted_for/3"},{"type":"function","title":"Bonfire.Social.Objects.cast/4","doc":"Handles casting:\n* Creator\n* Caretaker\n* Threaded replies (when present)\n* Tags/Mentions (when present)\n* Acls\n* Activity","ref":"Bonfire.Social.Objects.html#cast/4"},{"type":"function","title":"Bonfire.Social.Objects.cast_acl/3","doc":"","ref":"Bonfire.Social.Objects.html#cast_acl/3"},{"type":"function","title":"Bonfire.Social.Objects.cast_basic/4","doc":"Handles casting:\n* Creator\n* Caretaker\n* Acls","ref":"Bonfire.Social.Objects.html#cast_basic/4"},{"type":"function","title":"Bonfire.Social.Objects.cast_caretaker/2","doc":"","ref":"Bonfire.Social.Objects.html#cast_caretaker/2"},{"type":"function","title":"Bonfire.Social.Objects.cast_creator/2","doc":"","ref":"Bonfire.Social.Objects.html#cast_creator/2"},{"type":"function","title":"Bonfire.Social.Objects.cast_creator_caretaker/2","doc":"","ref":"Bonfire.Social.Objects.html#cast_creator_caretaker/2"},{"type":"function","title":"Bonfire.Social.Objects.cast_mini/4","doc":"Handles casting:\n* Acls","ref":"Bonfire.Social.Objects.html#cast_mini/4"},{"type":"function","title":"Bonfire.Social.Objects.cast_publish/4","doc":"Handles casting:\n* Acls\n* Activity\n* Feed Publishes","ref":"Bonfire.Social.Objects.html#cast_publish/4"},{"type":"function","title":"Bonfire.Social.Objects.cast_sensitivity/2","doc":"","ref":"Bonfire.Social.Objects.html#cast_sensitivity/2"},{"type":"function","title":"Bonfire.Social.Objects.changeset_named/2","doc":"","ref":"Bonfire.Social.Objects.html#changeset_named/2"},{"type":"function","title":"Bonfire.Social.Objects.delete/2","doc":"","ref":"Bonfire.Social.Objects.html#delete/2"},{"type":"function","title":"Bonfire.Social.Objects.delete_apply_error/2","doc":"","ref":"Bonfire.Social.Objects.html#delete_apply_error/2"},{"type":"function","title":"Bonfire.Social.Objects.do_delete/2","doc":"","ref":"Bonfire.Social.Objects.html#do_delete/2"},{"type":"function","title":"Bonfire.Social.Objects.federation_module/0","doc":"","ref":"Bonfire.Social.Objects.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Objects.list_query/2","doc":"","ref":"Bonfire.Social.Objects.html#list_query/2"},{"type":"function","title":"Bonfire.Social.Objects.maybe_generic_delete/3","doc":"","ref":"Bonfire.Social.Objects.html#maybe_generic_delete/3"},{"type":"function","title":"Bonfire.Social.Objects.maybe_preload_activity_object/2","doc":"","ref":"Bonfire.Social.Objects.html#maybe_preload_activity_object/2"},{"type":"function","title":"Bonfire.Social.Objects.object_creator/1","doc":"","ref":"Bonfire.Social.Objects.html#object_creator/1"},{"type":"function","title":"Bonfire.Social.Objects.preload_creator/1","doc":"","ref":"Bonfire.Social.Objects.html#preload_creator/1"},{"type":"function","title":"Bonfire.Social.Objects.preload_reply_creator/1","doc":"","ref":"Bonfire.Social.Objects.html#preload_reply_creator/1"},{"type":"function","title":"Bonfire.Social.Objects.publish/5","doc":"","ref":"Bonfire.Social.Objects.html#publish/5"},{"type":"function","title":"Bonfire.Social.Objects.query_base/1","doc":"Returns a basic query over undeleted pointable objects in the system,\noptionally limited to one or more types.","ref":"Bonfire.Social.Objects.html#query_base/1"},{"type":"function","title":"Bonfire.Social.Objects.read/2","doc":"","ref":"Bonfire.Social.Objects.html#read/2"},{"type":"function","title":"Bonfire.Social.Objects.reset_preset_boundary/5","doc":"","ref":"Bonfire.Social.Objects.html#reset_preset_boundary/5"},{"type":"function","title":"Bonfire.Social.Objects.run_epic/3","doc":"","ref":"Bonfire.Social.Objects.html#run_epic/3"},{"type":"function","title":"Bonfire.Social.Objects.set_boundaries/4","doc":"","ref":"Bonfire.Social.Objects.html#set_boundaries/4"},{"type":"function","title":"Bonfire.Social.Objects.set_name/3","doc":"","ref":"Bonfire.Social.Objects.html#set_name/3"},{"type":"function","title":"Bonfire.Social.Objects.set_sensitivity/2","doc":"","ref":"Bonfire.Social.Objects.html#set_sensitivity/2"},{"type":"module","title":"Bonfire.Social.Objects.LiveHandler","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html"},{"type":"function","title":"Bonfire.Social.Objects.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Social.Objects.LiveHandler.load_object_assigns/1","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#load_object_assigns/1"},{"type":"function","title":"Bonfire.Social.Objects.LiveHandler.load_object_assigns/2","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#load_object_assigns/2"},{"type":"function","title":"Bonfire.Social.Objects.LiveHandler.not_found_fallback/3","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#not_found_fallback/3"},{"type":"macro","title":"Bonfire.Social.Objects.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#sigil_p/2"},{"type":"module","title":"Bonfire.Social.Pins","doc":"","ref":"Bonfire.Social.Pins.html"},{"type":"function","title":"Bonfire.Social.Pins.ap_publish_activity/3","doc":"","ref":"Bonfire.Social.Pins.html#ap_publish_activity/3"},{"type":"function","title":"Bonfire.Social.Pins.by_pinned/2","doc":"","ref":"Bonfire.Social.Pins.html#by_pinned/2"},{"type":"function","title":"Bonfire.Social.Pins.by_pinner/2","doc":"","ref":"Bonfire.Social.Pins.html#by_pinner/2"},{"type":"function","title":"Bonfire.Social.Pins.federation_module/0","doc":"","ref":"Bonfire.Social.Pins.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.Pins.get/3","doc":"","ref":"Bonfire.Social.Pins.html#get/3"},{"type":"function","title":"Bonfire.Social.Pins.get!/3","doc":"","ref":"Bonfire.Social.Pins.html#get!/3"},{"type":"function","title":"Bonfire.Social.Pins.list_by/2","doc":"List pins by a user","ref":"Bonfire.Social.Pins.html#list_by/2"},{"type":"function","title":"Bonfire.Social.Pins.list_instance_pins/1","doc":"","ref":"Bonfire.Social.Pins.html#list_instance_pins/1"},{"type":"function","title":"Bonfire.Social.Pins.list_my/1","doc":"List the current user's pins","ref":"Bonfire.Social.Pins.html#list_my/1"},{"type":"function","title":"Bonfire.Social.Pins.list_of/2","doc":"List pinners of something(s)","ref":"Bonfire.Social.Pins.html#list_of/2"},{"type":"function","title":"Bonfire.Social.Pins.pin/4","doc":"","ref":"Bonfire.Social.Pins.html#pin/4"},{"type":"function","title":"Bonfire.Social.Pins.pinned?/2","doc":"","ref":"Bonfire.Social.Pins.html#pinned?/2"},{"type":"function","title":"Bonfire.Social.Pins.query/2","doc":"","ref":"Bonfire.Social.Pins.html#query/2"},{"type":"function","title":"Bonfire.Social.Pins.query_module/0","doc":"","ref":"Bonfire.Social.Pins.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Pins.rank_pin/3","doc":"","ref":"Bonfire.Social.Pins.html#rank_pin/3"},{"type":"function","title":"Bonfire.Social.Pins.schema_module/0","doc":"","ref":"Bonfire.Social.Pins.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Pins.unpin/3","doc":"","ref":"Bonfire.Social.Pins.html#unpin/3"},{"type":"module","title":"Bonfire.Social.PostContents","doc":"Query and manipulate post contents","ref":"Bonfire.Social.PostContents.html"},{"type":"function","title":"Bonfire.Social.PostContents.all_text_content/1","doc":"","ref":"Bonfire.Social.PostContents.html#all_text_content/1"},{"type":"function","title":"Bonfire.Social.PostContents.ap_receive_activity/3","doc":"","ref":"Bonfire.Social.PostContents.html#ap_receive_activity/3"},{"type":"function","title":"Bonfire.Social.PostContents.ap_receive_attrs_prepare/4","doc":"","ref":"Bonfire.Social.PostContents.html#ap_receive_attrs_prepare/4"},{"type":"function","title":"Bonfire.Social.PostContents.cast/5","doc":"Given a changeset, post content attributes, creator, boundary and options, returns a changeset prepared with relevant attributes and associations","ref":"Bonfire.Social.PostContents.html#cast/5"},{"type":"function","title":"Bonfire.Social.PostContents.changeset/2","doc":"","ref":"Bonfire.Social.PostContents.html#changeset/2"},{"type":"function","title":"Bonfire.Social.PostContents.diff/2","doc":"","ref":"Bonfire.Social.PostContents.html#diff/2"},{"type":"function","title":"Bonfire.Social.PostContents.edit/3","doc":"","ref":"Bonfire.Social.PostContents.html#edit/3"},{"type":"function","title":"Bonfire.Social.PostContents.editor_output_content_type/1","doc":"","ref":"Bonfire.Social.PostContents.html#editor_output_content_type/1"},{"type":"function","title":"Bonfire.Social.PostContents.federation_module/0","doc":"","ref":"Bonfire.Social.PostContents.html#federation_module/0"},{"type":"function","title":"Bonfire.Social.PostContents.get/2","doc":"Given a post content ID, returns the corresponding post content","ref":"Bonfire.Social.PostContents.html#get/2"},{"type":"function","title":"Bonfire.Social.PostContents.get_versions/1","doc":"","ref":"Bonfire.Social.PostContents.html#get_versions/1"},{"type":"function","title":"Bonfire.Social.PostContents.get_versions_diffed/1","doc":"","ref":"Bonfire.Social.PostContents.html#get_versions_diffed/1"},{"type":"function","title":"Bonfire.Social.PostContents.indexing_object_format/1","doc":"","ref":"Bonfire.Social.PostContents.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Social.PostContents.maybe_detect_languages/2","doc":"","ref":"Bonfire.Social.PostContents.html#maybe_detect_languages/2"},{"type":"function","title":"Bonfire.Social.PostContents.maybe_prepare_contents/4","doc":"Given post content attributes, creator, boundary, and options, prepares the post contents for processing by detecting languages, mentions, hashtags, and urls.","ref":"Bonfire.Social.PostContents.html#maybe_prepare_contents/4"},{"type":"function","title":"Bonfire.Social.PostContents.merge_with_body_or_nil/2","doc":"","ref":"Bonfire.Social.PostContents.html#merge_with_body_or_nil/2"},{"type":"function","title":"Bonfire.Social.PostContents.no_known_output/2","doc":"","ref":"Bonfire.Social.PostContents.html#no_known_output/2"},{"type":"function","title":"Bonfire.Social.PostContents.one/2","doc":"Given a set of filters, returns a single post content matching those filters","ref":"Bonfire.Social.PostContents.html#one/2"},{"type":"function","title":"Bonfire.Social.PostContents.prepare_text/3","doc":"","ref":"Bonfire.Social.PostContents.html#prepare_text/3"},{"type":"function","title":"Bonfire.Social.PostContents.query/2","doc":"Given a set of filters, returns an Ecto.Query for matching post contents.","ref":"Bonfire.Social.PostContents.html#query/2"},{"type":"function","title":"Bonfire.Social.PostContents.query_base/0","doc":"","ref":"Bonfire.Social.PostContents.html#query_base/0"},{"type":"module","title":"Bonfire.Social.Seen","doc":"Track seen/unseen (similar to read/unread, but only indicates that it was displayed in a feed or other listing for the user, not that they actually read it) status of things (usually `Activities`)","ref":"Bonfire.Social.Seen.html"},{"type":"function","title":"Bonfire.Social.Seen.get/3","doc":"","ref":"Bonfire.Social.Seen.html#get/3"},{"type":"function","title":"Bonfire.Social.Seen.get!/3","doc":"","ref":"Bonfire.Social.Seen.html#get!/3"},{"type":"function","title":"Bonfire.Social.Seen.mark_seen/2","doc":"","ref":"Bonfire.Social.Seen.html#mark_seen/2"},{"type":"function","title":"Bonfire.Social.Seen.mark_unseen/2","doc":"","ref":"Bonfire.Social.Seen.html#mark_unseen/2"},{"type":"function","title":"Bonfire.Social.Seen.query/2","doc":"","ref":"Bonfire.Social.Seen.html#query/2"},{"type":"function","title":"Bonfire.Social.Seen.query_module/0","doc":"","ref":"Bonfire.Social.Seen.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Seen.schema_module/0","doc":"","ref":"Bonfire.Social.Seen.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Seen.seen?/2","doc":"","ref":"Bonfire.Social.Seen.html#seen?/2"},{"type":"module","title":"Bonfire.Social.Tags","doc":"","ref":"Bonfire.Social.Tags.html"},{"type":"function","title":"Bonfire.Social.Tags.auto_boost/2","doc":"","ref":"Bonfire.Social.Tags.html#auto_boost/2"},{"type":"function","title":"Bonfire.Social.Tags.cast/4","doc":"","ref":"Bonfire.Social.Tags.html#cast/4"},{"type":"function","title":"Bonfire.Social.Tags.indexing_format_tags/1","doc":"","ref":"Bonfire.Social.Tags.html#indexing_format_tags/1"},{"type":"function","title":"Bonfire.Social.Tags.maybe_auto_boost/3","doc":"","ref":"Bonfire.Social.Tags.html#maybe_auto_boost/3"},{"type":"function","title":"Bonfire.Social.Tags.maybe_boostable_categories/2","doc":"","ref":"Bonfire.Social.Tags.html#maybe_boostable_categories/2"},{"type":"function","title":"Bonfire.Social.Tags.maybe_process/3","doc":"","ref":"Bonfire.Social.Tags.html#maybe_process/3"},{"type":"function","title":"Bonfire.Social.Tags.maybe_tag/4","doc":"","ref":"Bonfire.Social.Tags.html#maybe_tag/4"},{"type":"module","title":"Bonfire.Social.Threads","doc":"","ref":"Bonfire.Social.Threads.html"},{"type":"function","title":"Bonfire.Social.Threads.ap_prepare/2","doc":"Key can be for eg. :thread_id or :reply_to_id","ref":"Bonfire.Social.Threads.html#ap_prepare/2"},{"type":"function","title":"Bonfire.Social.Threads.arrange_replies/2","doc":"","ref":"Bonfire.Social.Threads.html#arrange_replies/2"},{"type":"function","title":"Bonfire.Social.Threads.arrange_replies_tree/2","doc":"","ref":"Bonfire.Social.Threads.html#arrange_replies_tree/2"},{"type":"function","title":"Bonfire.Social.Threads.base_query/0","doc":"","ref":"Bonfire.Social.Threads.html#base_query/0"},{"type":"function","title":"Bonfire.Social.Threads.cast/4","doc":"Handles casting related to the reply and threading.\nIf it's not a reply or the user is not permitted to reply to the thing, a new thread will be created.","ref":"Bonfire.Social.Threads.html#cast/4"},{"type":"function","title":"Bonfire.Social.Threads.changeset/2","doc":"","ref":"Bonfire.Social.Threads.html#changeset/2"},{"type":"function","title":"Bonfire.Social.Threads.count_participants/2","doc":"Count participants in a thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#count_participants/2"},{"type":"function","title":"Bonfire.Social.Threads.fetch_participants/2","doc":"List participants in a thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#fetch_participants/2"},{"type":"function","title":"Bonfire.Social.Threads.filter/3","doc":"Group per-thread","ref":"Bonfire.Social.Threads.html#filter/3"},{"type":"function","title":"Bonfire.Social.Threads.find_reply_to/2","doc":"Returns `{:ok, reply}` or `{:error, reason}`, where `reason` may be:\n* `:not_found` - we could not find the object you are replying to.\n* `:not_permitted` - you do not have permission to reply to this.","ref":"Bonfire.Social.Threads.html#find_reply_to/2"},{"type":"function","title":"Bonfire.Social.Threads.find_thread/2","doc":"","ref":"Bonfire.Social.Threads.html#find_thread/2"},{"type":"function","title":"Bonfire.Social.Threads.list_participants/3","doc":"List participants of an activity or thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#list_participants/3"},{"type":"function","title":"Bonfire.Social.Threads.list_replies/2","doc":"","ref":"Bonfire.Social.Threads.html#list_replies/2"},{"type":"function","title":"Bonfire.Social.Threads.mark_all_seen/2","doc":"","ref":"Bonfire.Social.Threads.html#mark_all_seen/2"},{"type":"function","title":"Bonfire.Social.Threads.maybe_re_order_result/2","doc":"re-order distinct threads after DISTINCT ON ordered them by thread_id - Note: does not support pagination","ref":"Bonfire.Social.Threads.html#maybe_re_order_result/2"},{"type":"function","title":"Bonfire.Social.Threads.query/2","doc":"","ref":"Bonfire.Social.Threads.html#query/2"},{"type":"function","title":"Bonfire.Social.Threads.query_module/0","doc":"","ref":"Bonfire.Social.Threads.html#query_module/0"},{"type":"function","title":"Bonfire.Social.Threads.re_order_using_subquery/2","doc":"re-order distinct threads after DISTINCT ON ordered them by thread_id - Note: this results in (Ecto.QueryError) cannot preload associations in subquery in query","ref":"Bonfire.Social.Threads.html#re_order_using_subquery/2"},{"type":"function","title":"Bonfire.Social.Threads.read/2","doc":"","ref":"Bonfire.Social.Threads.html#read/2"},{"type":"function","title":"Bonfire.Social.Threads.schema_module/0","doc":"","ref":"Bonfire.Social.Threads.html#schema_module/0"},{"type":"function","title":"Bonfire.Social.Threads.unseen_count/2","doc":"","ref":"Bonfire.Social.Threads.html#unseen_count/2"},{"type":"function","title":"Bonfire.Social.Threads.unseen_query/2","doc":"","ref":"Bonfire.Social.Threads.html#unseen_query/2"},{"type":"module","title":"Bonfire.Social.Threads.LiveHandler","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.handle_event/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#handle_event/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.handle_info/2","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#handle_info/2"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.handle_params/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#handle_params/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.insert_comments/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#insert_comments/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.live_more/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#live_more/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.load_thread/1","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread/1"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.load_thread_assigns/1","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread_assigns/1"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.load_thread_maybe_async/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread_maybe_async/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.max_depth/1","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#max_depth/1"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.maybe_subscribe/2","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#maybe_subscribe/2"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.reply/3","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#reply/3"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.send_thread_updates/4","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#send_thread_updates/4"},{"type":"macro","title":"Bonfire.Social.Threads.LiveHandler.sigil_p/2","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#sigil_p/2"},{"type":"function","title":"Bonfire.Social.Threads.LiveHandler.thread_init/1","doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#thread_init/1"},{"type":"module","title":"Bonfire.System.OS.Monitor","doc":"","ref":"Bonfire.System.OS.Monitor.html"},{"type":"function","title":"Bonfire.System.OS.Monitor.format_bytes/1","doc":"Formats bytes.","ref":"Bonfire.System.OS.Monitor.html#format_bytes/1"},{"type":"function","title":"Bonfire.System.OS.Monitor.format_percent/1","doc":"Formats percent.","ref":"Bonfire.System.OS.Monitor.html#format_percent/1"},{"type":"function","title":"Bonfire.System.OS.Monitor.handle_alarm/2","doc":"","ref":"Bonfire.System.OS.Monitor.html#handle_alarm/2"},{"type":"function","title":"Bonfire.System.OS.Monitor.handle_event/2","doc":"","ref":"Bonfire.System.OS.Monitor.html#handle_event/2"},{"type":"function","title":"Bonfire.System.OS.Monitor.init/1","doc":"","ref":"Bonfire.System.OS.Monitor.html#init/1"},{"type":"module","title":"Bonfire.Tag","doc":"","ref":"Bonfire.Tag.html"},{"type":"function","title":"Bonfire.Tag.context_module/0","doc":"","ref":"Bonfire.Tag.html#context_module/0"},{"type":"function","title":"Bonfire.Tag.query_module/0","doc":"","ref":"Bonfire.Tag.html#query_module/0"},{"type":"function","title":"Bonfire.Tag.tag_things_changeset/2","doc":"Add things (Pointer objects) to a tag. You usually want to add tags to a thing instead, see `thing_tags_changeset`","ref":"Bonfire.Tag.html#tag_things_changeset/2"},{"type":"function","title":"Bonfire.Tag.thing_tags_changeset/2","doc":"Add tags to a thing (any Pointer object which defines a many_to_many relation to tag). This function applies to your object schema but is here for convenience.","ref":"Bonfire.Tag.html#thing_tags_changeset/2"},{"type":"function","title":"Bonfire.Tag.thing_tags_insert/2","doc":"","ref":"Bonfire.Tag.html#thing_tags_insert/2"},{"type":"module","title":"Bonfire.Tag.Autocomplete","doc":"","ref":"Bonfire.Tag.Autocomplete.html"},{"type":"function","title":"Bonfire.Tag.Autocomplete.api_tag_lookup/3","doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup/3"},{"type":"function","title":"Bonfire.Tag.Autocomplete.api_tag_lookup_public/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup_public/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.filter_results/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#filter_results/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.find_all_tags/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#find_all_tags/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.maybe_find_tags/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_find_tags/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.maybe_search/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_search/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.prefix_index/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#prefix_index/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_or_lookup/3","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_or_lookup/3"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_prefix/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_prefix/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.search_type/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_type/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_add_field/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_add_field/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_lookup_public/4","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_lookup_public/4"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search_from_tags/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_tags/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tag_search_from_text/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_text/2"},{"type":"function","title":"Bonfire.Tag.Autocomplete.tags_split/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#tags_split/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_all_prefixes/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_all_prefixes/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_prefixes/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_prefixes/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_tag_search/1","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/1"},{"type":"function","title":"Bonfire.Tag.Autocomplete.try_tag_search/2","doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/2"},{"type":"module","title":"Bonfire.Tag.Hashtag","doc":"","ref":"Bonfire.Tag.Hashtag.html"},{"type":"function","title":"Bonfire.Tag.Hashtag.changeset/2","doc":"","ref":"Bonfire.Tag.Hashtag.html#changeset/2"},{"type":"function","title":"Bonfire.Tag.Hashtag.get_or_create_by_name/1","doc":"","ref":"Bonfire.Tag.Hashtag.html#get_or_create_by_name/1"},{"type":"function","title":"Bonfire.Tag.Hashtag.normalize_name/1","doc":"","ref":"Bonfire.Tag.Hashtag.html#normalize_name/1"},{"type":"module","title":"Bonfire.Tag.Queries","doc":"","ref":"Bonfire.Tag.Queries.html"},{"type":"function","title":"Bonfire.Tag.Queries.filter/2","doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Tag.Queries.html#filter/2"},{"type":"function","title":"Bonfire.Tag.Queries.join_to/3","doc":"","ref":"Bonfire.Tag.Queries.html#join_to/3"},{"type":"function","title":"Bonfire.Tag.Queries.list_trending/3","doc":"","ref":"Bonfire.Tag.Queries.html#list_trending/3"},{"type":"function","title":"Bonfire.Tag.Queries.queries/4","doc":"","ref":"Bonfire.Tag.Queries.html#queries/4"},{"type":"function","title":"Bonfire.Tag.Queries.query/1","doc":"","ref":"Bonfire.Tag.Queries.html#query/1"},{"type":"function","title":"Bonfire.Tag.Queries.query/2","doc":"","ref":"Bonfire.Tag.Queries.html#query/2"},{"type":"module","title":"Bonfire.Tag.Simulate","doc":"","ref":"Bonfire.Tag.Simulate.html"},{"type":"module","title":"Bonfire.Tag.Tagged","doc":"","ref":"Bonfire.Tag.Tagged.html"},{"type":"function","title":"Bonfire.Tag.Tagged.all/0","doc":"","ref":"Bonfire.Tag.Tagged.html#all/0"},{"type":"function","title":"Bonfire.Tag.Tagged.changeset/2","doc":"","ref":"Bonfire.Tag.Tagged.html#changeset/2"},{"type":"function","title":"Bonfire.Tag.Tagged.latest/1","doc":"Get the latest tag added to a thing","ref":"Bonfire.Tag.Tagged.html#latest/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_tag/1","doc":"List the things tagged with a certain tag","ref":"Bonfire.Tag.Tagged.html#q_with_tag/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_thing/1","doc":"List the tags of a thing","ref":"Bonfire.Tag.Tagged.html#q_with_thing/1"},{"type":"function","title":"Bonfire.Tag.Tagged.q_with_type/1","doc":"List by type of tagged thing","ref":"Bonfire.Tag.Tagged.html#q_with_type/1"},{"type":"function","title":"Bonfire.Tag.Tagged.with_tag/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_tag/1"},{"type":"function","title":"Bonfire.Tag.Tagged.with_thing/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_thing/1"},{"type":"function","title":"Bonfire.Tag.Tagged.with_type/1","doc":"","ref":"Bonfire.Tag.Tagged.html#with_type/1"},{"type":"module","title":"Bonfire.Tag.Tags","doc":"","ref":"Bonfire.Tag.Tags.html"},{"type":"function","title":"Bonfire.Tag.Tags.find/2","doc":"","ref":"Bonfire.Tag.Tags.html#find/2"},{"type":"function","title":"Bonfire.Tag.Tags.get/2","doc":"","ref":"Bonfire.Tag.Tags.html#get/2"},{"type":"function","title":"Bonfire.Tag.Tags.indexing_object_format/1","doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format/1"},{"type":"function","title":"Bonfire.Tag.Tags.indexing_object_format_name/1","doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format_name/1"},{"type":"function","title":"Bonfire.Tag.Tags.list_trending/2","doc":"","ref":"Bonfire.Tag.Tags.html#list_trending/2"},{"type":"function","title":"Bonfire.Tag.Tags.list_trending_reset/2","doc":"","ref":"Bonfire.Tag.Tags.html#list_trending_reset/2"},{"type":"function","title":"Bonfire.Tag.Tags.many/2","doc":"Retrieves a list of tags by arbitrary filters.\nUsed by:\n* Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#many/2"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_find_tag/3","doc":"Try to find one (best-match) tag","ref":"Bonfire.Tag.Tags.html#maybe_find_tag/3"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_find_tags/3","doc":"Search / autocomplete for tags by name","ref":"Bonfire.Tag.Tags.html#maybe_find_tags/3"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_lookup_tag/2","doc":"Lookup a single for a tag by its name/username","ref":"Bonfire.Tag.Tags.html#maybe_lookup_tag/2"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_tag/4","doc":"Maybe tag something","ref":"Bonfire.Tag.Tags.html#maybe_tag/4"},{"type":"function","title":"Bonfire.Tag.Tags.maybe_taxonomy_tag/2","doc":"","ref":"Bonfire.Tag.Tags.html#maybe_taxonomy_tag/2"},{"type":"function","title":"Bonfire.Tag.Tags.one/2","doc":"Retrieves a single tag by arbitrary filters.\nUsed by:\n* GraphQL Item queries\n* ActivityPub integration\n* Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#one/2"},{"type":"function","title":"Bonfire.Tag.Tags.tag_ids/1","doc":"","ref":"Bonfire.Tag.Tags.html#tag_ids/1"},{"type":"function","title":"Bonfire.Tag.Tags.tag_something/4","doc":"tag existing thing with one or multiple Tags, Needle, or anything that can be made into a tag","ref":"Bonfire.Tag.Tags.html#tag_something/4"},{"type":"module","title":"Bonfire.Tag.TextContent.Formatter","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.escape_mention_handler/4","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#escape_mention_handler/4"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.linkify/2","doc":"Parses a text and replace plain text links with HTML. Returns a tuple with a result text, mentions, and hashtags.\n\nIf the 'safe_mention' option is given, only consecutive mentions at the start the post are actually mentioned.","ref":"Bonfire.Tag.TextContent.Formatter.html#linkify/2"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.nothing_handler/3","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#nothing_handler/3"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.tag_handler/4","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#tag_handler/4"},{"type":"function","title":"Bonfire.Tag.TextContent.Formatter.url_handler/3","doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#url_handler/3"},{"type":"module","title":"Bonfire.Tag.TextContent.Process","doc":"","ref":"Bonfire.Tag.TextContent.Process.html"},{"type":"function","title":"Bonfire.Tag.TextContent.Process.html_escape/2","doc":"","ref":"Bonfire.Tag.TextContent.Process.html#html_escape/2"},{"type":"function","title":"Bonfire.Tag.TextContent.Process.process/3","doc":"For use for things like a bio, where we want links but not to actually trigger mentions.","ref":"Bonfire.Tag.TextContent.Process.html#process/3"},{"type":"module","title":"Bonfire.Tag.Web.Routes","doc":"","ref":"Bonfire.Tag.Web.Routes.html"},{"type":"function","title":"Bonfire.Tag.Web.Routes.declare_routes/0","doc":"","ref":"Bonfire.Tag.Web.Routes.html#declare_routes/0"},{"type":"module","title":"Bonfire.Tags.Acts.AutoBoost","doc":"","ref":"Bonfire.Tags.Acts.AutoBoost.html"},{"type":"function","title":"Bonfire.Tags.Acts.AutoBoost.run/2","doc":"","ref":"Bonfire.Tags.Acts.AutoBoost.html#run/2"},{"type":"module","title":"Bonfire.Tags.Acts.Tag","doc":"","ref":"Bonfire.Tags.Acts.Tag.html"},{"type":"function","title":"Bonfire.Tags.Acts.Tag.run/2","doc":"","ref":"Bonfire.Tags.Acts.Tag.html#run/2"},{"type":"module","title":"Bonfire.Telemetry.Storage","doc":"","ref":"Bonfire.Telemetry.Storage.html"},{"type":"function","title":"Bonfire.Telemetry.Storage.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Bonfire.Telemetry.Storage.html#child_spec/1"},{"type":"function","title":"Bonfire.Telemetry.Storage.handle_event/4","doc":"","ref":"Bonfire.Telemetry.Storage.html#handle_event/4"},{"type":"function","title":"Bonfire.Telemetry.Storage.metrics_history/1","doc":"","ref":"Bonfire.Telemetry.Storage.html#metrics_history/1"},{"type":"function","title":"Bonfire.Telemetry.Storage.start_link/1","doc":"","ref":"Bonfire.Telemetry.Storage.html#start_link/1"},{"type":"module","title":"ActivityPub","doc":"Entrypoint to the ActivityPub API for processing incoming and outgoing federated objects (normalising, saving the the Object storage, passing them to the adapter, and queueing outgoing activities to be pushed out).\n\nIn general, the functions in this module take object-like map.\nThat includes a struct as the input for actor parameters.  Use the functions in the `ActivityPub.Actor` module (`ActivityPub.Actor.get_cached/1` for example) to retrieve those.","ref":"ActivityPub.html"},{"type":"function","title":"ActivityPub.accept/1","doc":"Generates and federates an Accept activity via the data passed through `params`.","ref":"ActivityPub.html#accept/1"},{"type":"function","title":"ActivityPub.accept_activity/1","doc":"","ref":"ActivityPub.html#accept_activity/1"},{"type":"function","title":"ActivityPub.announce/1","doc":"","ref":"ActivityPub.html#announce/1"},{"type":"function","title":"ActivityPub.block/1","doc":"","ref":"ActivityPub.html#block/1"},{"type":"function","title":"ActivityPub.create/1","doc":"Generates and federates a Create activity via the data passed through `params`.","ref":"ActivityPub.html#create/1"},{"type":"function","title":"ActivityPub.delete/3","doc":"","ref":"ActivityPub.html#delete/3"},{"type":"function","title":"ActivityPub.flag/1","doc":"","ref":"ActivityPub.html#flag/1"},{"type":"function","title":"ActivityPub.follow/1","doc":"Generates and federates a Follow activity.\n\nNote: the follow should be reflected as a Follow on the host database side only after receiving an `Accept` activity in response (though you could register it as a Request if your app has that concept)","ref":"ActivityPub.html#follow/1"},{"type":"function","title":"ActivityPub.like/1","doc":"Record a Like","ref":"ActivityPub.html#like/1"},{"type":"function","title":"ActivityPub.move/4","doc":"","ref":"ActivityPub.html#move/4"},{"type":"function","title":"ActivityPub.reject/1","doc":"Generates and federates a Reject activity via the data passed through `params`.","ref":"ActivityPub.html#reject/1"},{"type":"function","title":"ActivityPub.unannounce/1","doc":"","ref":"ActivityPub.html#unannounce/1"},{"type":"function","title":"ActivityPub.unblock/1","doc":"","ref":"ActivityPub.html#unblock/1"},{"type":"function","title":"ActivityPub.unfollow/1","doc":"Generates and federates an Unfollow activity.","ref":"ActivityPub.html#unfollow/1"},{"type":"function","title":"ActivityPub.unlike/1","doc":"","ref":"ActivityPub.html#unlike/1"},{"type":"function","title":"ActivityPub.update/1","doc":"","ref":"ActivityPub.html#update/1"},{"type":"module","title":"ActivityPub.Actor","doc":"An ActivityPub Actor type and functions for dealing with actors.","ref":"ActivityPub.Actor.html"},{"type":"function","title":"ActivityPub.Actor.actor?/1","doc":"","ref":"ActivityPub.Actor.html#actor?/1"},{"type":"function","title":"ActivityPub.Actor.actor_url/1","doc":"","ref":"ActivityPub.Actor.html#actor_url/1"},{"type":"function","title":"ActivityPub.Actor.check_actor_is_active/1","doc":"","ref":"ActivityPub.Actor.html#check_actor_is_active/1"},{"type":"function","title":"ActivityPub.Actor.deactivate/1","doc":"","ref":"ActivityPub.Actor.html#deactivate/1"},{"type":"function","title":"ActivityPub.Actor.delete/1","doc":"","ref":"ActivityPub.Actor.html#delete/1"},{"type":"function","title":"ActivityPub.Actor.fetch_by_username/2","doc":"Fetches a remote actor by username in `username@domain.tld` format","ref":"ActivityPub.Actor.html#fetch_by_username/2"},{"type":"function","title":"ActivityPub.Actor.format_remote_actor/1","doc":"","ref":"ActivityPub.Actor.html#format_remote_actor/1"},{"type":"function","title":"ActivityPub.Actor.format_username/1","doc":"","ref":"ActivityPub.Actor.html#format_username/1"},{"type":"function","title":"ActivityPub.Actor.format_username/2","doc":"","ref":"ActivityPub.Actor.html#format_username/2"},{"type":"function","title":"ActivityPub.Actor.get_cached/1","doc":"","ref":"ActivityPub.Actor.html#get_cached/1"},{"type":"function","title":"ActivityPub.Actor.get_cached!/1","doc":"","ref":"ActivityPub.Actor.html#get_cached!/1"},{"type":"function","title":"ActivityPub.Actor.get_cached_or_fetch/1","doc":"Tries to get a local actor by username or tries to fetch it remotely if username is provided in `username@domain.tld` format.","ref":"ActivityPub.Actor.html#get_cached_or_fetch/1"},{"type":"function","title":"ActivityPub.Actor.get_external_followers/1","doc":"","ref":"ActivityPub.Actor.html#get_external_followers/1"},{"type":"function","title":"ActivityPub.Actor.get_followers/1","doc":"","ref":"ActivityPub.Actor.html#get_followers/1"},{"type":"function","title":"ActivityPub.Actor.get_followings/1","doc":"","ref":"ActivityPub.Actor.html#get_followings/1"},{"type":"function","title":"ActivityPub.Actor.invalidate_cache/1","doc":"","ref":"ActivityPub.Actor.html#invalidate_cache/1"},{"type":"function","title":"ActivityPub.Actor.maybe_create_actor_from_object/1","doc":"","ref":"ActivityPub.Actor.html#maybe_create_actor_from_object/1"},{"type":"function","title":"ActivityPub.Actor.reactivate/1","doc":"","ref":"ActivityPub.Actor.html#reactivate/1"},{"type":"function","title":"ActivityPub.Actor.save_actor_tombstone/2","doc":"","ref":"ActivityPub.Actor.html#save_actor_tombstone/2"},{"type":"function","title":"ActivityPub.Actor.set_cache/1","doc":"","ref":"ActivityPub.Actor.html#set_cache/1"},{"type":"function","title":"ActivityPub.Actor.swap_or_create_actor_tombstone/1","doc":"","ref":"ActivityPub.Actor.html#swap_or_create_actor_tombstone/1"},{"type":"function","title":"ActivityPub.Actor.update_actor/1","doc":"Updates an existing actor struct by its AP ID.","ref":"ActivityPub.Actor.html#update_actor/1"},{"type":"function","title":"ActivityPub.Actor.update_actor/2","doc":"","ref":"ActivityPub.Actor.html#update_actor/2"},{"type":"type","title":"ActivityPub.Actor.t/0","doc":"","ref":"ActivityPub.Actor.html#t:t/0"},{"type":"module","title":"ActivityPub.Config","doc":"","ref":"ActivityPub.Config.html"},{"type":"function","title":"ActivityPub.Config.actors_and_collections/0","doc":"","ref":"ActivityPub.Config.html#actors_and_collections/0"},{"type":"function","title":"ActivityPub.Config.collection_types/0","doc":"","ref":"ActivityPub.Config.html#collection_types/0"},{"type":"function","title":"ActivityPub.Config.delete/1","doc":"","ref":"ActivityPub.Config.html#delete/1"},{"type":"function","title":"ActivityPub.Config.env/0","doc":"","ref":"ActivityPub.Config.html#env/0"},{"type":"function","title":"ActivityPub.Config.federating?/0","doc":"","ref":"ActivityPub.Config.html#federating?/0"},{"type":"function","title":"ActivityPub.Config.get/1","doc":"","ref":"ActivityPub.Config.html#get/1"},{"type":"function","title":"ActivityPub.Config.get/2","doc":"","ref":"ActivityPub.Config.html#get/2"},{"type":"function","title":"ActivityPub.Config.get!/1","doc":"","ref":"ActivityPub.Config.html#get!/1"},{"type":"macro","title":"ActivityPub.Config.is_in/2","doc":"For matching against the above list in guards TODO: use runtime config","ref":"ActivityPub.Config.html#is_in/2"},{"type":"function","title":"ActivityPub.Config.public_uri/0","doc":"","ref":"ActivityPub.Config.html#public_uri/0"},{"type":"function","title":"ActivityPub.Config.public_uris/0","doc":"","ref":"ActivityPub.Config.html#public_uris/0"},{"type":"function","title":"ActivityPub.Config.put/2","doc":"","ref":"ActivityPub.Config.html#put/2"},{"type":"function","title":"ActivityPub.Config.supported_activity_types/0","doc":"","ref":"ActivityPub.Config.html#supported_activity_types/0"},{"type":"function","title":"ActivityPub.Config.supported_actor_types/0","doc":"","ref":"ActivityPub.Config.html#supported_actor_types/0"},{"type":"exception","title":"ActivityPub.Config.Error","doc":"","ref":"ActivityPub.Config.Error.html"},{"type":"module","title":"ActivityPub.Federator","doc":"","ref":"ActivityPub.Federator.html"},{"type":"function","title":"ActivityPub.Federator.enqueue_incoming_ap_doc/1","doc":"","ref":"ActivityPub.Federator.html#enqueue_incoming_ap_doc/1"},{"type":"function","title":"ActivityPub.Federator.perform/2","doc":"","ref":"ActivityPub.Federator.html#perform/2"},{"type":"function","title":"ActivityPub.Federator.perform/3","doc":"","ref":"ActivityPub.Federator.html#perform/3"},{"type":"function","title":"ActivityPub.Federator.publish/1","doc":"","ref":"ActivityPub.Federator.html#publish/1"},{"type":"module","title":"ActivityPub.Federator.APPublisher","doc":"","ref":"ActivityPub.Federator.APPublisher.html"},{"type":"function","title":"ActivityPub.Federator.APPublisher.determine_inbox/4","doc":"Determine a user inbox to use based on heuristics.  These heuristics\nare based on an approximation of the ``sharedInbox`` rules in the\n[ActivityPub specification][ap-sharedinbox].\n\n   [ap-sharedinbox]: https://www.w3.org/TR/activitypub/#shared-inbox-delivery","ref":"ActivityPub.Federator.APPublisher.html#determine_inbox/4"},{"type":"function","title":"ActivityPub.Federator.APPublisher.gather_webfinger_links/1","doc":"","ref":"ActivityPub.Federator.APPublisher.html#gather_webfinger_links/1"},{"type":"function","title":"ActivityPub.Federator.APPublisher.is_representable?/1","doc":"","ref":"ActivityPub.Federator.APPublisher.html#is_representable?/1"},{"type":"function","title":"ActivityPub.Federator.APPublisher.maybe_federate_to_search_index/2","doc":"If you put the URL of the shared inbox of an ActivityPub instance in the following env variable, all public content will be pushed there via AP federation for search indexing purposes: PUSH_ALL_PUBLIC_CONTENT_TO_INSTANCE\n#TODO: move to adapter","ref":"ActivityPub.Federator.APPublisher.html#maybe_federate_to_search_index/2"},{"type":"function","title":"ActivityPub.Federator.APPublisher.publish/2","doc":"","ref":"ActivityPub.Federator.APPublisher.html#publish/2"},{"type":"function","title":"ActivityPub.Federator.APPublisher.publish_one/1","doc":"Publish a single message to a peer.  Takes a struct with the following\nparameters set:\n\n* `inbox`: the inbox to publish to\n* `json`: the JSON message body representing the ActivityPub message\n* `actor`: the actor which is signing the message\n* `id`: the ActivityStreams URI of the message","ref":"ActivityPub.Federator.APPublisher.html#publish_one/1"},{"type":"behaviour","title":"ActivityPub.Federator.Adapter","doc":"Contract for ActivityPub module adapters","ref":"ActivityPub.Federator.Adapter.html"},{"type":"function","title":"ActivityPub.Federator.Adapter.adapter/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#adapter/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.base_url/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#base_url/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.base_url/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:base_url/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.call_or/3","doc":"Run function from adapter if defined, otherwise return fallback value","ref":"ActivityPub.Federator.Adapter.html#call_or/3"},{"type":"function","title":"ActivityPub.Federator.Adapter.external_followers_for_activity/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#external_followers_for_activity/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.external_followers_for_activity/2","doc":"Compute and return a subset of followers that should receive a specific activity (optional)","ref":"ActivityPub.Federator.Adapter.html#c:external_followers_for_activity/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.federate_actor?/3","doc":"Whether this (local or remote) actor has federation enabled and/or is blocked on this instance\n\nactor: the actor to check (eg. Alice)\ndirection: :in or :out - whether we're dealing with incoming federation or outgoing (optional)\nby_actor: optionally another actor (eg. if Alice is sending something to Bob, this would be Bob)","ref":"ActivityPub.Federator.Adapter.html#federate_actor?/3"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_ap_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_ap_id/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_ap_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_ap_id/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_id/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_id/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_id/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_actor_by_username/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_actor_by_username/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_actor_by_username/1","doc":"Fetch an actor given its preferred username","ref":"ActivityPub.Federator.Adapter.html#c:get_actor_by_username/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_follower_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_follower_local_ids/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_follower_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:get_follower_local_ids/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_following_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_following_local_ids/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_following_local_ids/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:get_following_local_ids/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_locale/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_locale/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_locale/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:get_locale/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_or_create_service_actor/0","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_or_create_service_actor/0"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_or_create_service_actor/0","doc":"Creates an internal service actor by username, if missing.","ref":"ActivityPub.Federator.Adapter.html#c:get_or_create_service_actor/0"},{"type":"function","title":"ActivityPub.Federator.Adapter.get_redirect_url/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#get_redirect_url/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.get_redirect_url/1","doc":"Gets local url of an AP object to redirect in browser. Can take pointer id or an actor username.","ref":"ActivityPub.Federator.Adapter.html#c:get_redirect_url/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.handle_activity/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#handle_activity/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.handle_activity/1","doc":"Passes data to be handled by the host application","ref":"ActivityPub.Federator.Adapter.html#c:handle_activity/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_create_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_create_remote_actor/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.maybe_create_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:maybe_create_remote_actor/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_handle_activity/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_handle_activity/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.maybe_publish_object/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#maybe_publish_object/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.maybe_publish_object/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:maybe_publish_object/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_local_actor/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_local_actor/2"},{"type":"callback","title":"ActivityPub.Federator.Adapter.update_local_actor/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:update_local_actor/2"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_remote_actor/1"},{"type":"callback","title":"ActivityPub.Federator.Adapter.update_remote_actor/1","doc":"","ref":"ActivityPub.Federator.Adapter.html#c:update_remote_actor/1"},{"type":"function","title":"ActivityPub.Federator.Adapter.update_remote_actor/2","doc":"","ref":"ActivityPub.Federator.Adapter.html#update_remote_actor/2"},{"type":"module","title":"ActivityPub.Federator.Fetcher","doc":"Handles fetching AS2 objects from remote instances.","ref":"ActivityPub.Federator.Fetcher.html"},{"type":"function","title":"ActivityPub.Federator.Fetcher.allowed_recursion?/2","doc":"Returns `true` if the distance to target object does not exceed max configured value.\nServes to prevent fetching of very long threads, especially useful on smaller instances.\nAddresses memory leaks on recursive replies fetching.\nApplies to fetching of both ancestor (reply-to) and child (reply) objects.","ref":"ActivityPub.Federator.Fetcher.html#allowed_recursion?/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.enqueue_fetch/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#enqueue_fetch/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_collection/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_collection/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_fresh_object_from_id/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_fresh_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_object_from_id/2","doc":"Checks if an object exists in the AP and Adapter databases and fetches and creates it if not.","ref":"ActivityPub.Federator.Fetcher.html#fetch_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_objects_from_id/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_objects_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_outbox/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_outbox/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_remote_object_from_id/2","doc":"Fetches an AS2 object from remote AP ID.","ref":"ActivityPub.Federator.Fetcher.html#fetch_remote_object_from_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.fetch_replies/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#fetch_replies/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.get_cached_object_or_fetch_ap_id/2","doc":"Checks if an object exists in the AP database and fetches it if not (but does not send to Adapter).","ref":"ActivityPub.Federator.Fetcher.html#get_cached_object_or_fetch_ap_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.get_cached_object_or_fetch_pointer_id/2","doc":"Checks if an object exists in the AP database and prepares it if not (local objects only).","ref":"ActivityPub.Federator.Fetcher.html#get_cached_object_or_fetch_pointer_id/2"},{"type":"function","title":"ActivityPub.Federator.Fetcher.maybe_fetch/2","doc":"","ref":"ActivityPub.Federator.Fetcher.html#maybe_fetch/2"},{"type":"module","title":"ActivityPub.Federator.HTTP","doc":"Module for building and performing HTTP requests.","ref":"ActivityPub.Federator.HTTP.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.delete/4","doc":"Makes a DELETE request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#delete/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.get/3","doc":"Makes a GET request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#get/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.http_request/5","doc":"Builds and perform http request.\n\n# Arguments:\n`method` - :get, :post, :put, :delete\n`url`\n`body`\n`headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n`options` - custom, per-request middleware or adapter options\n\n# Returns:\n`{:ok, %Tesla.Env{}}` or `{:error, error}`","ref":"ActivityPub.Federator.HTTP.html#http_request/5"},{"type":"function","title":"ActivityPub.Federator.HTTP.post/4","doc":"Makes a POST request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#post/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.put/4","doc":"Makes a PUT request\n\nsee `ActivityPub.Federator.HTTP.http_request/5`","ref":"ActivityPub.Federator.HTTP.html#put/4"},{"type":"type","title":"ActivityPub.Federator.HTTP.t/0","doc":"","ref":"ActivityPub.Federator.HTTP.html#t:t/0"},{"type":"module","title":"ActivityPub.Federator.HTTP.Connection","doc":"Specifies connection options for HTTP requests","ref":"ActivityPub.Federator.HTTP.Connection.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.Connection.adapter_options/2","doc":"","ref":"ActivityPub.Federator.HTTP.Connection.html#adapter_options/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.Connection.new/1","doc":"","ref":"ActivityPub.Federator.HTTP.Connection.html#new/1"},{"type":"module","title":"ActivityPub.Federator.HTTP.RateLimit","doc":"Rate limit middleware for Tesla using Hammer\nBased on `TeslaExtra.RateLimit` and `TeslaExtra.RetryAfter`","ref":"ActivityPub.Federator.HTTP.RateLimit.html"},{"type":"module","title":"ActivityPub.Federator.HTTP.RequestBuilder","doc":"Helper functions for building HTTP requests","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.add_param/4","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#add_param/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.headers/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#headers/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.method/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#method/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.opts/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#opts/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.RequestBuilder.url/2","doc":"","ref":"ActivityPub.Federator.HTTP.RequestBuilder.html#url/2"},{"type":"module","title":"ActivityPub.Federator.HTTP.RetryAfter","doc":"Takes into account the Retry-After header returned by the server when the rate limit is exceeded.\n\nBased on `TeslaExtra.RetryAfter`","ref":"ActivityPub.Federator.HTTP.RetryAfter.html"},{"type":"module","title":"ActivityPub.Federator.HTTP.Tesla","doc":"","ref":"ActivityPub.Federator.HTTP.Tesla.html"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#delete/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#delete!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#get/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#get!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#head/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#head!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#options/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#options!/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#patch/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#patch!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#post/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#post!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#put/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"ActivityPub.Federator.HTTP.Tesla.html#put!/4"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.request/2","doc":"Perform a request.","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2"},{"type":"function","title":"Options - ActivityPub.Federator.HTTP.Tesla.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2-options"},{"type":"function","title":"Examples - ActivityPub.Federator.HTTP.Tesla.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#request/2-examples"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"ActivityPub.Federator.HTTP.Tesla.html#request!/2"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#trace/3"},{"type":"function","title":"ActivityPub.Federator.HTTP.Tesla.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"ActivityPub.Federator.HTTP.Tesla.html#trace!/3"},{"type":"type","title":"ActivityPub.Federator.HTTP.Tesla.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"ActivityPub.Federator.HTTP.Tesla.html#t:option/0"},{"type":"behaviour","title":"ActivityPub.Federator.Publisher","doc":"Defines the contract used by federation implementations to publish messages to\ntheir peers.\n# TODO: why not use `APPublisher` directly instead?","ref":"ActivityPub.Federator.Publisher.html"},{"type":"function","title":"ActivityPub.Federator.Publisher.enqueue_one/2","doc":"Enqueue publishing a single activity.","ref":"ActivityPub.Federator.Publisher.html#enqueue_one/2"},{"type":"function","title":"ActivityPub.Federator.Publisher.gather_webfinger_links/1","doc":"","ref":"ActivityPub.Federator.Publisher.html#gather_webfinger_links/1"},{"type":"callback","title":"ActivityPub.Federator.Publisher.gather_webfinger_links/1","doc":"Gathers links used by an outgoing federation module for WebFinger output.","ref":"ActivityPub.Federator.Publisher.html#c:gather_webfinger_links/1"},{"type":"callback","title":"ActivityPub.Federator.Publisher.is_representable?/1","doc":"Determine whether an activity can be relayed using the federation module.","ref":"ActivityPub.Federator.Publisher.html#c:is_representable?/1"},{"type":"function","title":"ActivityPub.Federator.Publisher.publish/2","doc":"","ref":"ActivityPub.Federator.Publisher.html#publish/2"},{"type":"callback","title":"ActivityPub.Federator.Publisher.publish/2","doc":"Relays an activity to all specified peers.","ref":"ActivityPub.Federator.Publisher.html#c:publish/2"},{"type":"callback","title":"ActivityPub.Federator.Publisher.publish_one/1","doc":"Relays an activity to a specified peer, determined by the parameters.  The\nparameters used are controlled by the federation module.","ref":"ActivityPub.Federator.Publisher.html#c:publish_one/1"},{"type":"module","title":"ActivityPub.Federator.Transformer","doc":"This module normalises outgoing data to conform with AS2/AP specs\nand handles incoming objects and activities","ref":"ActivityPub.Federator.Transformer.html"},{"type":"function","title":"ActivityPub.Federator.Transformer.add_emoji_tags/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#add_emoji_tags/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.determine_explicit_mentions/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#determine_explicit_mentions/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_actor/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_actor/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_addressing/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_addressing/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_addressing_list/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_addressing_list/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_attachments/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_attachments/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_content_map/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_content_map/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_context/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_context/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_emoji/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_emoji/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_explicit_addressing/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_explicit_addressing/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_in_reply_to/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_in_reply_to/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_object/2","doc":"Modifies an incoming AP object (mastodon format) to our internal format.","ref":"ActivityPub.Federator.Transformer.html#fix_object/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_quote_url/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_quote_url/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_replies/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_replies/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_summary/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_summary/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_tag/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_tag/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.fix_url/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#fix_url/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.format_input/3","doc":"","ref":"ActivityPub.Federator.Transformer.html#format_input/3"},{"type":"function","title":"ActivityPub.Federator.Transformer.handle_incoming/1","doc":"Handles incoming data, inserts it into the database and triggers side effects if the data is a supported activity type.","ref":"ActivityPub.Federator.Transformer.html#handle_incoming/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.maybe_handle_other_activity/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#maybe_handle_other_activity/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.maybe_handle_other_object/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#maybe_handle_other_object/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.prepare_outgoing/1","doc":"Translates MN Entity to an AP compatible format","ref":"ActivityPub.Federator.Transformer.html#prepare_outgoing/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.preserve_privacy_of_outgoing/2","doc":"","ref":"ActivityPub.Federator.Transformer.html#preserve_privacy_of_outgoing/2"},{"type":"function","title":"ActivityPub.Federator.Transformer.replies/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#replies/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.set_replies/1","doc":"Serialized Mastodon-compatible `replies` collection containing _self-replies_.\nBased on Mastodon's ActivityPub::NoteSerializer#replies.","ref":"ActivityPub.Federator.Transformer.html#set_replies/1"},{"type":"function","title":"ActivityPub.Federator.Transformer.take_emoji_tags/1","doc":"","ref":"ActivityPub.Federator.Transformer.html#take_emoji_tags/1"},{"type":"module","title":"ActivityPub.Federator.WebFinger","doc":"Serves and fetches data (mainly actor URI) necessary for federation when only the username and host is known.","ref":"ActivityPub.Federator.WebFinger.html"},{"type":"function","title":"ActivityPub.Federator.WebFinger.base_url/1","doc":"","ref":"ActivityPub.Federator.WebFinger.html#base_url/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.finger/1","doc":"Fetches webfinger data for an account given in \"@username@domain.tld\" format.","ref":"ActivityPub.Federator.WebFinger.html#finger/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.output/1","doc":"Serves a webfinger response for the requested username.","ref":"ActivityPub.Federator.WebFinger.html#output/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.represent_user/1","doc":"Formats gathered data into a JRD format.","ref":"ActivityPub.Federator.WebFinger.html#represent_user/1"},{"type":"function","title":"ActivityPub.Federator.WebFinger.webfinger_from_json/1","doc":"","ref":"ActivityPub.Federator.WebFinger.html#webfinger_from_json/1"},{"type":"module","title":"ActivityPub.Federator.Worker","doc":"Helpers for workers to `use`","ref":"ActivityPub.Federator.Worker.html"},{"type":"function","title":"ActivityPub.Federator.Worker.worker_args/1","doc":"","ref":"ActivityPub.Federator.Worker.html#worker_args/1"},{"type":"module","title":"ActivityPub.Federator.Workers.PublisherWorker","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.PublisherWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.PublisherWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.PublisherWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Federator.Workers.ReceiverWorker","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.ReceiverWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.ReceiverWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.ReceiverWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html"},{"type":"function","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker.enqueue/3","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html#enqueue/3"},{"type":"function","title":"ActivityPub.Federator.Workers.RemoteFetcherWorker.enqueueable/3","doc":"","ref":"ActivityPub.Federator.Workers.RemoteFetcherWorker.html#enqueueable/3"},{"type":"module","title":"ActivityPub.Fixtures","doc":"","ref":"ActivityPub.Fixtures.html"},{"type":"function","title":"ActivityPub.Fixtures.file/1","doc":"","ref":"ActivityPub.Fixtures.html#file/1"},{"type":"function","title":"ActivityPub.Fixtures.fixtures/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures/0"},{"type":"function","title":"ActivityPub.Fixtures.fixtures_generic/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures_generic/0"},{"type":"function","title":"ActivityPub.Fixtures.fixtures_get/0","doc":"","ref":"ActivityPub.Fixtures.html#fixtures_get/0"},{"type":"function","title":"ActivityPub.Fixtures.get/4","doc":"","ref":"ActivityPub.Fixtures.html#get/4"},{"type":"function","title":"ActivityPub.Fixtures.head/4","doc":"","ref":"ActivityPub.Fixtures.html#head/4"},{"type":"function","title":"ActivityPub.Fixtures.insert/1","doc":"","ref":"ActivityPub.Fixtures.html#insert/1"},{"type":"function","title":"ActivityPub.Fixtures.insert_all/0","doc":"","ref":"ActivityPub.Fixtures.html#insert_all/0"},{"type":"function","title":"ActivityPub.Fixtures.maybe_get_local/4","doc":"","ref":"ActivityPub.Fixtures.html#maybe_get_local/4"},{"type":"function","title":"ActivityPub.Fixtures.mock_global/1","doc":"","ref":"ActivityPub.Fixtures.html#mock_global/1"},{"type":"function","title":"ActivityPub.Fixtures.none/4","doc":"","ref":"ActivityPub.Fixtures.html#none/4"},{"type":"function","title":"ActivityPub.Fixtures.post/4","doc":"","ref":"ActivityPub.Fixtures.html#post/4"},{"type":"function","title":"ActivityPub.Fixtures.request/1","doc":"","ref":"ActivityPub.Fixtures.html#request/1"},{"type":"module","title":"ActivityPub.Instances","doc":"Instances context.","ref":"ActivityPub.Instances.html"},{"type":"function","title":"ActivityPub.Instances.filter_reachable/1","doc":"","ref":"ActivityPub.Instances.html#filter_reachable/1"},{"type":"function","title":"ActivityPub.Instances.host/1","doc":"","ref":"ActivityPub.Instances.html#host/1"},{"type":"function","title":"ActivityPub.Instances.reachability_datetime_threshold/0","doc":"","ref":"ActivityPub.Instances.html#reachability_datetime_threshold/0"},{"type":"function","title":"ActivityPub.Instances.reachable?/1","doc":"","ref":"ActivityPub.Instances.html#reachable?/1"},{"type":"function","title":"ActivityPub.Instances.set_consistently_unreachable/1","doc":"","ref":"ActivityPub.Instances.html#set_consistently_unreachable/1"},{"type":"function","title":"ActivityPub.Instances.set_reachable/1","doc":"","ref":"ActivityPub.Instances.html#set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.set_unreachable/2","doc":"","ref":"ActivityPub.Instances.html#set_unreachable/2"},{"type":"module","title":"ActivityPub.Instances.Instance","doc":"Instance.","ref":"ActivityPub.Instances.Instance.html"},{"type":"function","title":"ActivityPub.Instances.Instance.changeset/2","doc":"","ref":"ActivityPub.Instances.Instance.html#changeset/2"},{"type":"function","title":"ActivityPub.Instances.Instance.do_set_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#do_set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.filter_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#filter_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.host/1","doc":"","ref":"ActivityPub.Instances.Instance.html#host/1"},{"type":"function","title":"ActivityPub.Instances.Instance.reachable?/1","doc":"","ref":"ActivityPub.Instances.Instance.html#reachable?/1"},{"type":"function","title":"ActivityPub.Instances.Instance.set_reachable/1","doc":"","ref":"ActivityPub.Instances.Instance.html#set_reachable/1"},{"type":"function","title":"ActivityPub.Instances.Instance.set_unreachable/2","doc":"","ref":"ActivityPub.Instances.Instance.html#set_unreachable/2"},{"type":"behaviour","title":"ActivityPub.MRF","doc":"","ref":"ActivityPub.MRF.html"},{"type":"function","title":"ActivityPub.MRF.filter/2","doc":"","ref":"ActivityPub.MRF.html#filter/2"},{"type":"callback","title":"ActivityPub.MRF.filter/2","doc":"","ref":"ActivityPub.MRF.html#c:filter/2"},{"type":"function","title":"ActivityPub.MRF.filter/3","doc":"","ref":"ActivityPub.MRF.html#filter/3"},{"type":"function","title":"ActivityPub.MRF.get_policies/0","doc":"","ref":"ActivityPub.MRF.html#get_policies/0"},{"type":"function","title":"ActivityPub.MRF.subdomain_match?/2","doc":"","ref":"ActivityPub.MRF.html#subdomain_match?/2"},{"type":"function","title":"ActivityPub.MRF.subdomains_regex/1","doc":"","ref":"ActivityPub.MRF.html#subdomains_regex/1"},{"type":"module","title":"ActivityPub.MRF.SimplePolicy","doc":"Filter activities depending on their origin instance","ref":"ActivityPub.MRF.SimplePolicy.html"},{"type":"function","title":"ActivityPub.MRF.SimplePolicy.check_reject/2","doc":"","ref":"ActivityPub.MRF.SimplePolicy.html#check_reject/2"},{"type":"module","title":"ActivityPub.Object","doc":"","ref":"ActivityPub.Object.html"},{"type":"function","title":"ActivityPub.Object.actor_from_data/1","doc":"","ref":"ActivityPub.Object.html#actor_from_data/1"},{"type":"function","title":"ActivityPub.Object.actor_id_from_data/1","doc":"","ref":"ActivityPub.Object.html#actor_id_from_data/1"},{"type":"function","title":"ActivityPub.Object.changeset/1","doc":"","ref":"ActivityPub.Object.html#changeset/1"},{"type":"function","title":"ActivityPub.Object.changeset/2","doc":"","ref":"ActivityPub.Object.html#changeset/2"},{"type":"function","title":"ActivityPub.Object.common_changeset/1","doc":"","ref":"ActivityPub.Object.html#common_changeset/1"},{"type":"function","title":"ActivityPub.Object.delete/1","doc":"","ref":"ActivityPub.Object.html#delete/1"},{"type":"function","title":"ActivityPub.Object.do_insert/1","doc":"","ref":"ActivityPub.Object.html#do_insert/1"},{"type":"function","title":"ActivityPub.Object.do_update_existing/2","doc":"","ref":"ActivityPub.Object.html#do_update_existing/2"},{"type":"function","title":"ActivityPub.Object.fetch_latest_block/2","doc":"","ref":"ActivityPub.Object.html#fetch_latest_block/2"},{"type":"function","title":"ActivityPub.Object.fetch_latest_follow/2","doc":"","ref":"ActivityPub.Object.html#fetch_latest_follow/2"},{"type":"function","title":"ActivityPub.Object.get_activity_for_object_ap_id/2","doc":"","ref":"ActivityPub.Object.html#get_activity_for_object_ap_id/2"},{"type":"function","title":"ActivityPub.Object.get_ap_id/1","doc":"","ref":"ActivityPub.Object.html#get_ap_id/1"},{"type":"function","title":"ActivityPub.Object.get_cached/1","doc":"","ref":"ActivityPub.Object.html#get_cached/1"},{"type":"function","title":"ActivityPub.Object.get_cached!/1","doc":"","ref":"ActivityPub.Object.html#get_cached!/1"},{"type":"function","title":"ActivityPub.Object.get_existing_announce/2","doc":"Retruns an existing announce activity if the notice has already been announced","ref":"ActivityPub.Object.html#get_existing_announce/2"},{"type":"function","title":"ActivityPub.Object.get_existing_like/2","doc":"Returns an existing like if a user already liked an object","ref":"ActivityPub.Object.html#get_existing_like/2"},{"type":"function","title":"ActivityPub.Object.get_follow_activity/2","doc":"","ref":"ActivityPub.Object.html#get_follow_activity/2"},{"type":"function","title":"ActivityPub.Object.get_outbox_for_actor/2","doc":"","ref":"ActivityPub.Object.html#get_outbox_for_actor/2"},{"type":"function","title":"ActivityPub.Object.get_outbox_for_instance/0","doc":"","ref":"ActivityPub.Object.html#get_outbox_for_instance/0"},{"type":"function","title":"ActivityPub.Object.get_uncached/1","doc":"","ref":"ActivityPub.Object.html#get_uncached/1"},{"type":"function","title":"ActivityPub.Object.hard_delete/1","doc":"","ref":"ActivityPub.Object.html#hard_delete/1"},{"type":"function","title":"ActivityPub.Object.hashtags/1","doc":"","ref":"ActivityPub.Object.html#hashtags/1"},{"type":"function","title":"ActivityPub.Object.invalidate_cache/1","doc":"","ref":"ActivityPub.Object.html#invalidate_cache/1"},{"type":"function","title":"ActivityPub.Object.make_tombstone/2","doc":"","ref":"ActivityPub.Object.html#make_tombstone/2"},{"type":"function","title":"ActivityPub.Object.maybe_fetch/2","doc":"","ref":"ActivityPub.Object.html#maybe_fetch/2"},{"type":"function","title":"ActivityPub.Object.maybe_upsert/3","doc":"","ref":"ActivityPub.Object.html#maybe_upsert/3"},{"type":"function","title":"ActivityPub.Object.normalize/3","doc":"","ref":"ActivityPub.Object.html#normalize/3"},{"type":"function","title":"ActivityPub.Object.normalize_actors/1","doc":"","ref":"ActivityPub.Object.html#normalize_actors/1"},{"type":"function","title":"ActivityPub.Object.normalize_params/3","doc":"","ref":"ActivityPub.Object.html#normalize_params/3"},{"type":"function","title":"ActivityPub.Object.object_url/1","doc":"","ref":"ActivityPub.Object.html#object_url/1"},{"type":"function","title":"ActivityPub.Object.prepare_data/4","doc":"Prepares a struct to be inserted into the objects table","ref":"ActivityPub.Object.html#prepare_data/4"},{"type":"function","title":"ActivityPub.Object.self_replies_ids/2","doc":"","ref":"ActivityPub.Object.html#self_replies_ids/2"},{"type":"function","title":"ActivityPub.Object.set_cache/1","doc":"","ref":"ActivityPub.Object.html#set_cache/1"},{"type":"function","title":"ActivityPub.Object.swap_object_with_tombstone/1","doc":"","ref":"ActivityPub.Object.html#swap_object_with_tombstone/1"},{"type":"function","title":"ActivityPub.Object.update_and_set_cache/1","doc":"","ref":"ActivityPub.Object.html#update_and_set_cache/1"},{"type":"function","title":"ActivityPub.Object.update_changeset/2","doc":"","ref":"ActivityPub.Object.html#update_changeset/2"},{"type":"function","title":"ActivityPub.Object.update_existing/2","doc":"","ref":"ActivityPub.Object.html#update_existing/2"},{"type":"function","title":"ActivityPub.Object.update_state/3","doc":"Updates a follow activity's state (for locked accounts).","ref":"ActivityPub.Object.html#update_state/3"},{"type":"type","title":"ActivityPub.Object.t/0","doc":"","ref":"ActivityPub.Object.html#t:t/0"},{"type":"module","title":"ActivityPub.Pruner","doc":"Prunes objects from the database.","ref":"ActivityPub.Pruner.html"},{"type":"function","title":"ActivityPub.Pruner.prune_all/1","doc":"","ref":"ActivityPub.Pruner.html#prune_all/1"},{"type":"function","title":"ActivityPub.Pruner.prune_deletes/1","doc":"","ref":"ActivityPub.Pruner.html#prune_deletes/1"},{"type":"function","title":"ActivityPub.Pruner.prune_objects/1","doc":"","ref":"ActivityPub.Pruner.html#prune_objects/1"},{"type":"function","title":"ActivityPub.Pruner.prune_orphaned_activities/0","doc":"","ref":"ActivityPub.Pruner.html#prune_orphaned_activities/0"},{"type":"function","title":"ActivityPub.Pruner.prune_removes/1","doc":"","ref":"ActivityPub.Pruner.html#prune_removes/1"},{"type":"function","title":"ActivityPub.Pruner.prune_stale_follow_requests/1","doc":"","ref":"ActivityPub.Pruner.html#prune_stale_follow_requests/1"},{"type":"function","title":"ActivityPub.Pruner.prune_tombstones/1","doc":"","ref":"ActivityPub.Pruner.html#prune_tombstones/1"},{"type":"function","title":"ActivityPub.Pruner.prune_undos/1","doc":"","ref":"ActivityPub.Pruner.html#prune_undos/1"},{"type":"function","title":"ActivityPub.Pruner.remove_embedded_objects/0","doc":"","ref":"ActivityPub.Pruner.html#remove_embedded_objects/0"},{"type":"module","title":"ActivityPub.Pruner.PruneDatabaseWorker","doc":"The worker to prune old data from the database.","ref":"ActivityPub.Pruner.PruneDatabaseWorker.html"},{"type":"module","title":"ActivityPub.Queries","doc":"Contains queries for Object.","ref":"ActivityPub.Queries.html"},{"type":"function","title":"ActivityPub.Queries.activity_by_object_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#activity_by_object_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.by_actor/2","doc":"","ref":"ActivityPub.Queries.html#by_actor/2"},{"type":"function","title":"ActivityPub.Queries.by_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#by_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.by_id/2","doc":"","ref":"ActivityPub.Queries.html#by_id/2"},{"type":"function","title":"ActivityPub.Queries.by_object_id/2","doc":"","ref":"ActivityPub.Queries.html#by_object_id/2"},{"type":"function","title":"ActivityPub.Queries.by_object_in_reply_to_id/3","doc":"","ref":"ActivityPub.Queries.html#by_object_in_reply_to_id/3"},{"type":"function","title":"ActivityPub.Queries.by_type/2","doc":"","ref":"ActivityPub.Queries.html#by_type/2"},{"type":"function","title":"ActivityPub.Queries.exclude_type/2","doc":"","ref":"ActivityPub.Queries.html#exclude_type/2"},{"type":"function","title":"ActivityPub.Queries.find_by_object_ap_id/2","doc":"","ref":"ActivityPub.Queries.html#find_by_object_ap_id/2"},{"type":"function","title":"ActivityPub.Queries.last_follow/2","doc":"","ref":"ActivityPub.Queries.html#last_follow/2"},{"type":"function","title":"ActivityPub.Queries.replies/2","doc":"","ref":"ActivityPub.Queries.html#replies/2"},{"type":"function","title":"ActivityPub.Queries.self_replies/1","doc":"","ref":"ActivityPub.Queries.html#self_replies/1"},{"type":"function","title":"ActivityPub.Queries.with_joined_activity/3","doc":"","ref":"ActivityPub.Queries.html#with_joined_activity/3"},{"type":"function","title":"ActivityPub.Queries.with_joined_object/2","doc":"","ref":"ActivityPub.Queries.html#with_joined_object/2"},{"type":"function","title":"ActivityPub.Queries.with_preloaded_object/2","doc":"","ref":"ActivityPub.Queries.html#with_preloaded_object/2"},{"type":"type","title":"ActivityPub.Queries.query/0","doc":"","ref":"ActivityPub.Queries.html#t:query/0"},{"type":"module","title":"ActivityPub.Safety.Containment","doc":"This module contains some useful functions for containing objects to specific\norigins and determining those origins.  They previously lived in the\nActivityPub `Transformer` module.\n\nObject containment is an important step in validating remote objects to prevent\nspoofing, therefore removal of object containment functions is NOT recommended.","ref":"ActivityPub.Safety.Containment.html"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_child/1","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_child/1"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_origin/2","doc":"Checks that an imported AP object's actor matches the host it came from.","ref":"ActivityPub.Safety.Containment.html#contain_origin/2"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_origin_from_id/2","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_origin_from_id/2"},{"type":"function","title":"ActivityPub.Safety.Containment.contain_uri/2","doc":"","ref":"ActivityPub.Safety.Containment.html#contain_uri/2"},{"type":"function","title":"ActivityPub.Safety.Containment.get_object/1","doc":"","ref":"ActivityPub.Safety.Containment.html#get_object/1"},{"type":"function","title":"ActivityPub.Safety.Containment.is_public?/1","doc":"","ref":"ActivityPub.Safety.Containment.html#is_public?/1"},{"type":"function","title":"ActivityPub.Safety.Containment.restrict_unauthenticated_access?/1","doc":"","ref":"ActivityPub.Safety.Containment.html#restrict_unauthenticated_access?/1"},{"type":"function","title":"ActivityPub.Safety.Containment.restrict_unauthenticated_access?/2","doc":"","ref":"ActivityPub.Safety.Containment.html#restrict_unauthenticated_access?/2"},{"type":"function","title":"ActivityPub.Safety.Containment.visible_for_user?/2","doc":"","ref":"ActivityPub.Safety.Containment.html#visible_for_user?/2"},{"type":"module","title":"ActivityPub.Safety.Keys","doc":"Handles RSA keys for Actors & helpers for HTTP signatures","ref":"ActivityPub.Safety.Keys.html"},{"type":"function","title":"ActivityPub.Safety.Keys.add_public_key/2","doc":"","ref":"ActivityPub.Safety.Keys.html#add_public_key/2"},{"type":"function","title":"ActivityPub.Safety.Keys.cast_uri/1","doc":"","ref":"ActivityPub.Safety.Keys.html#cast_uri/1"},{"type":"function","title":"ActivityPub.Safety.Keys.ensure_keys_present/1","doc":"Checks if an actor struct has a non-nil keys field and generates a PEM if it doesn't.","ref":"ActivityPub.Safety.Keys.html#ensure_keys_present/1"},{"type":"function","title":"ActivityPub.Safety.Keys.generate_rsa_pem/0","doc":"","ref":"ActivityPub.Safety.Keys.html#generate_rsa_pem/0"},{"type":"function","title":"ActivityPub.Safety.Keys.get_public_key_for_ap_id/1","doc":"Fetches the public key for given actor AP ID.","ref":"ActivityPub.Safety.Keys.html#get_public_key_for_ap_id/1"},{"type":"function","title":"ActivityPub.Safety.Keys.http_host/1","doc":"","ref":"ActivityPub.Safety.Keys.html#http_host/1"},{"type":"function","title":"ActivityPub.Safety.Keys.key_id_to_actor_id/1","doc":"","ref":"ActivityPub.Safety.Keys.html#key_id_to_actor_id/1"},{"type":"function","title":"ActivityPub.Safety.Keys.keypair_from_pem/1","doc":"","ref":"ActivityPub.Safety.Keys.html#keypair_from_pem/1"},{"type":"function","title":"ActivityPub.Safety.Keys.maybe_add_fetch_signature_headers/3","doc":"","ref":"ActivityPub.Safety.Keys.html#maybe_add_fetch_signature_headers/3"},{"type":"function","title":"ActivityPub.Safety.Keys.public_key_decode/1","doc":"","ref":"ActivityPub.Safety.Keys.html#public_key_decode/1"},{"type":"function","title":"ActivityPub.Safety.Keys.public_key_from_data/1","doc":"","ref":"ActivityPub.Safety.Keys.html#public_key_from_data/1"},{"type":"function","title":"ActivityPub.Safety.Keys.sign/2","doc":"","ref":"ActivityPub.Safety.Keys.html#sign/2"},{"type":"module","title":"ActivityPub.Safety.Signatures","doc":"Implementation for behaviour from `HTTPSignatures` library","ref":"ActivityPub.Safety.Signatures.html"},{"type":"function","title":"ActivityPub.Safety.Signatures.fetch_public_key/1","doc":"","ref":"ActivityPub.Safety.Signatures.html#fetch_public_key/1"},{"type":"function","title":"ActivityPub.Safety.Signatures.refetch_public_key/1","doc":"","ref":"ActivityPub.Safety.Signatures.html#refetch_public_key/1"},{"type":"module","title":"ActivityPub.Utils","doc":"Misc functions used for federation","ref":"ActivityPub.Utils.html"},{"type":"function","title":"ActivityPub.Utils.activitypub_object_headers/0","doc":"","ref":"ActivityPub.Utils.html#activitypub_object_headers/0"},{"type":"function","title":"ActivityPub.Utils.adapter_fallback/0","doc":"","ref":"ActivityPub.Utils.html#adapter_fallback/0"},{"type":"function","title":"ActivityPub.Utils.ap_base_url/0","doc":"","ref":"ActivityPub.Utils.html#ap_base_url/0"},{"type":"function","title":"ActivityPub.Utils.ap_id/1","doc":"","ref":"ActivityPub.Utils.html#ap_id/1"},{"type":"function","title":"ActivityPub.Utils.as_local_public/0","doc":"","ref":"ActivityPub.Utils.html#as_local_public/0"},{"type":"function","title":"ActivityPub.Utils.cache_clear/0","doc":"","ref":"ActivityPub.Utils.html#cache_clear/0"},{"type":"function","title":"ActivityPub.Utils.cachex_fetch/4","doc":"","ref":"ActivityPub.Utils.html#cachex_fetch/4"},{"type":"function","title":"ActivityPub.Utils.error_json/3","doc":"","ref":"ActivityPub.Utils.html#error_json/3"},{"type":"function","title":"ActivityPub.Utils.format_date/1","doc":"","ref":"ActivityPub.Utils.html#format_date/1"},{"type":"function","title":"ActivityPub.Utils.generate_id/1","doc":"","ref":"ActivityPub.Utils.html#generate_id/1"},{"type":"function","title":"ActivityPub.Utils.generate_object_id/0","doc":"","ref":"ActivityPub.Utils.html#generate_object_id/0"},{"type":"function","title":"ActivityPub.Utils.get_with_cache/4","doc":"","ref":"ActivityPub.Utils.html#get_with_cache/4"},{"type":"function","title":"ActivityPub.Utils.is_ulid?/1","doc":"","ref":"ActivityPub.Utils.html#is_ulid?/1"},{"type":"function","title":"ActivityPub.Utils.is_uuid?/1","doc":"Takes a string and returns true if it is a valid UUID (Universally Unique Identifier)","ref":"ActivityPub.Utils.html#is_uuid?/1"},{"type":"function","title":"ActivityPub.Utils.json_with_cache/6","doc":"","ref":"ActivityPub.Utils.html#json_with_cache/6"},{"type":"function","title":"ActivityPub.Utils.label_in_message?/2","doc":"","ref":"ActivityPub.Utils.html#label_in_message?/2"},{"type":"function","title":"ActivityPub.Utils.make_date/0","doc":"","ref":"ActivityPub.Utils.html#make_date/0"},{"type":"function","title":"ActivityPub.Utils.make_json_ld_header/1","doc":"","ref":"ActivityPub.Utils.html#make_json_ld_header/1"},{"type":"function","title":"ActivityPub.Utils.maybe_put/3","doc":"conditionally update a map","ref":"ActivityPub.Utils.html#maybe_put/3"},{"type":"function","title":"ActivityPub.Utils.maybe_to_atom/1","doc":"","ref":"ActivityPub.Utils.html#maybe_to_atom/1"},{"type":"function","title":"ActivityPub.Utils.maybe_to_string/1","doc":"Handles multiple cases where the input value is of a different type (atom, list, tuple, etc.) and returns a string representation of it.","ref":"ActivityPub.Utils.html#maybe_to_string/1"},{"type":"function","title":"ActivityPub.Utils.ok_unwrap/2","doc":"","ref":"ActivityPub.Utils.html#ok_unwrap/2"},{"type":"function","title":"ActivityPub.Utils.public?/1","doc":"","ref":"ActivityPub.Utils.html#public?/1"},{"type":"function","title":"ActivityPub.Utils.public?/2","doc":"Determines if an object or an activity is public.","ref":"ActivityPub.Utils.html#public?/2"},{"type":"function","title":"ActivityPub.Utils.put_if_present/4","doc":"","ref":"ActivityPub.Utils.html#put_if_present/4"},{"type":"function","title":"ActivityPub.Utils.repo/0","doc":"","ref":"ActivityPub.Utils.html#repo/0"},{"type":"function","title":"ActivityPub.Utils.request_ip/1","doc":"","ref":"ActivityPub.Utils.html#request_ip/1"},{"type":"function","title":"ActivityPub.Utils.return_json/4","doc":"","ref":"ActivityPub.Utils.html#return_json/4"},{"type":"function","title":"ActivityPub.Utils.safe_put_in/3","doc":"","ref":"ActivityPub.Utils.html#safe_put_in/3"},{"type":"function","title":"ActivityPub.Utils.service_actor/0","doc":"","ref":"ActivityPub.Utils.html#service_actor/0"},{"type":"function","title":"ActivityPub.Utils.set_repo/1","doc":"","ref":"ActivityPub.Utils.html#set_repo/1"},{"type":"function","title":"ActivityPub.Utils.single_ap_id/1","doc":"","ref":"ActivityPub.Utils.html#single_ap_id/1"},{"type":"function","title":"ActivityPub.Utils.single_ap_id_or_object/1","doc":"","ref":"ActivityPub.Utils.html#single_ap_id_or_object/1"},{"type":"function","title":"ActivityPub.Utils.stringify_keys/2","doc":"Takes a map or keyword list, and returns a map with any atom keys converted to string keys. It can optionally do so recursively.","ref":"ActivityPub.Utils.html#stringify_keys/2"},{"type":"function","title":"ActivityPub.Utils.ulid/1","doc":"","ref":"ActivityPub.Utils.html#ulid/1"},{"type":"module","title":"ActivityPub.Web","doc":"The entrypoint for defining your web interface, such\nas controllers, views, channels and so on.\n\nThis can be used in your application as:\n\n    use ActivityPub.Web, :controller\n    use ActivityPub.Web, :view\n\nThe definitions below will be executed for every view,\ncontroller, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define any helper function in modules\nand import those modules here.","ref":"ActivityPub.Web.html"},{"type":"macro","title":"ActivityPub.Web.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"ActivityPub.Web.html#__using__/1"},{"type":"function","title":"ActivityPub.Web.base_url/0","doc":"","ref":"ActivityPub.Web.html#base_url/0"},{"type":"function","title":"ActivityPub.Web.channel/0","doc":"","ref":"ActivityPub.Web.html#channel/0"},{"type":"function","title":"ActivityPub.Web.controller/0","doc":"","ref":"ActivityPub.Web.html#controller/0"},{"type":"function","title":"ActivityPub.Web.rate_limit_reached/2","doc":"","ref":"ActivityPub.Web.html#rate_limit_reached/2"},{"type":"function","title":"ActivityPub.Web.router/0","doc":"","ref":"ActivityPub.Web.html#router/0"},{"type":"function","title":"ActivityPub.Web.view/0","doc":"","ref":"ActivityPub.Web.html#view/0"},{"type":"module","title":"ActivityPub.Web.ActivityPubController","doc":"Endpoints for serving objects and collections, so the ActivityPub API can be used to read information from the server.\n\nEven though we store the data in AS format, some changes need to be applied to the entity before serving it in the AP REST response. This is done in `ActivityPub.Web.ActivityPubView`.","ref":"ActivityPub.Web.ActivityPubController.html"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.actor/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#actor/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.ap_route_helper/1","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#ap_route_helper/1"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.followers/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#followers/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.following/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#following/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.inbox/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#inbox/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.inbox_info/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#inbox_info/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.json_object_with_cache/3","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#json_object_with_cache/3"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.noop/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#noop/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.object/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#object/2"},{"type":"function","title":"ActivityPub.Web.ActivityPubController.outbox/2","doc":"","ref":"ActivityPub.Web.ActivityPubController.html#outbox/2"},{"type":"module","title":"ActivityPub.Web.ActorView","doc":"","ref":"ActivityPub.Web.ActorView.html"},{"type":"function","title":"ActivityPub.Web.ActorView.actor_json/1","doc":"","ref":"ActivityPub.Web.ActorView.html#actor_json/1"},{"type":"function","title":"ActivityPub.Web.ActorView.collection/4","doc":"","ref":"ActivityPub.Web.ActorView.html#collection/4"},{"type":"function","title":"ActivityPub.Web.ActorView.render/2","doc":"","ref":"ActivityPub.Web.ActorView.html#render/2"},{"type":"module","title":"ActivityPub.Web.Endpoint","doc":"","ref":"ActivityPub.Web.Endpoint.html"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast!/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast!/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast_from/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast_from/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.broadcast_from!/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.call/2","doc":"","ref":"ActivityPub.Web.Endpoint.html#call/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"ActivityPub.Web.Endpoint.html#child_spec/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"ActivityPub.Web.Endpoint.html#config/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"ActivityPub.Web.Endpoint.html#config_change/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"ActivityPub.Web.Endpoint.html#host/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.init/1","doc":"","ref":"ActivityPub.Web.Endpoint.html#init/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.local_broadcast/3","doc":"","ref":"ActivityPub.Web.Endpoint.html#local_broadcast/3"},{"type":"function","title":"ActivityPub.Web.Endpoint.local_broadcast_from/4","doc":"","ref":"ActivityPub.Web.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"ActivityPub.Web.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"ActivityPub.Web.Endpoint.html#path/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.script_name/0","doc":"Generates the script name.","ref":"ActivityPub.Web.Endpoint.html#script_name/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"ActivityPub.Web.Endpoint.html#server_info/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"ActivityPub.Web.Endpoint.html#start_link/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"ActivityPub.Web.Endpoint.html#static_integrity/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"ActivityPub.Web.Endpoint.html#static_lookup/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"ActivityPub.Web.Endpoint.html#static_path/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"ActivityPub.Web.Endpoint.html#static_url/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"ActivityPub.Web.Endpoint.html#struct_url/0"},{"type":"function","title":"ActivityPub.Web.Endpoint.subscribe/2","doc":"","ref":"ActivityPub.Web.Endpoint.html#subscribe/2"},{"type":"function","title":"ActivityPub.Web.Endpoint.unsubscribe/1","doc":"","ref":"ActivityPub.Web.Endpoint.html#unsubscribe/1"},{"type":"function","title":"ActivityPub.Web.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"ActivityPub.Web.Endpoint.html#url/0"},{"type":"module","title":"ActivityPub.Web.ErrorHelpers","doc":"Conveniences for translating and building error messages.","ref":"ActivityPub.Web.ErrorHelpers.html"},{"type":"function","title":"ActivityPub.Web.ErrorHelpers.error_tag/2","doc":"Generates tag for inlined form input errors.","ref":"ActivityPub.Web.ErrorHelpers.html#error_tag/2"},{"type":"module","title":"ActivityPub.Web.ErrorView","doc":"Standard error view","ref":"ActivityPub.Web.ErrorView.html"},{"type":"function","title":"ActivityPub.Web.ErrorView.render/2","doc":"","ref":"ActivityPub.Web.ErrorView.html#render/2"},{"type":"function","title":"ActivityPub.Web.ErrorView.template_not_found/2","doc":"By default, Phoenix returns the status message from the template name. For example, \"404.html\" becomes \"Not Found\".","ref":"ActivityPub.Web.ErrorView.html#template_not_found/2"},{"type":"module","title":"ActivityPub.Web.LayoutView","doc":"","ref":"ActivityPub.Web.LayoutView.html"},{"type":"function","title":"ActivityPub.Web.LayoutView.render/2","doc":"","ref":"ActivityPub.Web.LayoutView.html#render/2"},{"type":"module","title":"ActivityPub.Web.ObjectView","doc":"","ref":"ActivityPub.Web.ObjectView.html"},{"type":"function","title":"ActivityPub.Web.ObjectView.collection/4","doc":"","ref":"ActivityPub.Web.ObjectView.html#collection/4"},{"type":"function","title":"ActivityPub.Web.ObjectView.render/2","doc":"","ref":"ActivityPub.Web.ObjectView.html#render/2"},{"type":"module","title":"ActivityPub.Web.Plugs.DigestPlug","doc":"","ref":"ActivityPub.Web.Plugs.DigestPlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.DigestPlug.read_body/2","doc":"","ref":"ActivityPub.Web.Plugs.DigestPlug.html#read_body/2"},{"type":"module","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug","doc":"Ensures HTTP signature has been validated by previous plugs on ActivityPub requests.","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.ignore/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#ignore/1"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#init/1"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.maybe_reject!/2","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#maybe_reject!/2"},{"type":"function","title":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.unauthorized/1","doc":"","ref":"ActivityPub.Web.Plugs.EnsureHTTPSignaturePlug.html#unauthorized/1"},{"type":"module","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.HTTPSignaturePlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.HTTPSignaturePlug.html#init/1"},{"type":"module","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html"},{"type":"function","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.call/2","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html#call/2"},{"type":"function","title":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.init/1","doc":"","ref":"ActivityPub.Web.Plugs.MappedSignatureToIdentityPlug.html#init/1"},{"type":"module","title":"ActivityPub.Web.RedirectController","doc":"","ref":"ActivityPub.Web.RedirectController.html"},{"type":"function","title":"ActivityPub.Web.RedirectController.actor/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#actor/2"},{"type":"function","title":"ActivityPub.Web.RedirectController.object/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#object/2"},{"type":"function","title":"ActivityPub.Web.RedirectController.remote_interaction/2","doc":"","ref":"ActivityPub.Web.RedirectController.html#remote_interaction/2"},{"type":"module","title":"ActivityPub.Web.Router","doc":"","ref":"ActivityPub.Web.Router.html"},{"type":"module","title":"ActivityPub.Web.Telemetry","doc":"","ref":"ActivityPub.Web.Telemetry.html"},{"type":"function","title":"ActivityPub.Web.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"ActivityPub.Web.Telemetry.html#child_spec/1"},{"type":"function","title":"ActivityPub.Web.Telemetry.metrics/0","doc":"","ref":"ActivityPub.Web.Telemetry.html#metrics/0"},{"type":"function","title":"ActivityPub.Web.Telemetry.start_link/1","doc":"","ref":"ActivityPub.Web.Telemetry.html#start_link/1"},{"type":"module","title":"ActivityPub.Web.UserSocket","doc":"","ref":"ActivityPub.Web.UserSocket.html"},{"type":"module","title":"ActivityPub.Web.WebFingerController","doc":"","ref":"ActivityPub.Web.WebFingerController.html"},{"type":"function","title":"ActivityPub.Web.WebFingerController.webfinger/2","doc":"","ref":"ActivityPub.Web.WebFingerController.html#webfinger/2"},{"type":"module","title":"AnimalAvatarGenerator","doc":"Generate SVG avatars from a string seed. It should always return the same avatar for the corresponding seed.\n\nBased on https://www.npmjs.com/package/animal-avatar-generator (translated to Elixir, mostly by ChatGPT)","ref":"AnimalAvatarGenerator.html"},{"type":"function","title":"AnimalAvatarGenerator.avatar/2","doc":"","ref":"AnimalAvatarGenerator.html#avatar/2"},{"type":"function","title":"AnimalAvatarGenerator.avatar_face/2","doc":"","ref":"AnimalAvatarGenerator.html#avatar_face/2"},{"type":"function","title":"AnimalAvatarGenerator.brows/0","doc":"","ref":"AnimalAvatarGenerator.html#brows/0"},{"type":"function","title":"AnimalAvatarGenerator.clamp/3","doc":"","ref":"AnimalAvatarGenerator.html#clamp/3"},{"type":"function","title":"AnimalAvatarGenerator.create_background/3","doc":"","ref":"AnimalAvatarGenerator.html#create_background/3"},{"type":"function","title":"AnimalAvatarGenerator.create_blackout/1","doc":"","ref":"AnimalAvatarGenerator.html#create_blackout/1"},{"type":"function","title":"AnimalAvatarGenerator.create_svg/2","doc":"","ref":"AnimalAvatarGenerator.html#create_svg/2"},{"type":"function","title":"AnimalAvatarGenerator.darken/2","doc":"","ref":"AnimalAvatarGenerator.html#darken/2"},{"type":"function","title":"AnimalAvatarGenerator.ears/0","doc":"","ref":"AnimalAvatarGenerator.html#ears/0"},{"type":"function","title":"AnimalAvatarGenerator.empty_shape/0","doc":"","ref":"AnimalAvatarGenerator.html#empty_shape/0"},{"type":"function","title":"AnimalAvatarGenerator.eyes/0","doc":"","ref":"AnimalAvatarGenerator.html#eyes/0"},{"type":"function","title":"AnimalAvatarGenerator.faces/0","doc":"","ref":"AnimalAvatarGenerator.html#faces/0"},{"type":"function","title":"AnimalAvatarGenerator.hairs/0","doc":"","ref":"AnimalAvatarGenerator.html#hairs/0"},{"type":"function","title":"AnimalAvatarGenerator.muzzles/0","doc":"","ref":"AnimalAvatarGenerator.html#muzzles/0"},{"type":"function","title":"AnimalAvatarGenerator.patterns/0","doc":"","ref":"AnimalAvatarGenerator.html#patterns/0"},{"type":"module","title":"Arrows","doc":"A handful of (mostly) arrow macros with superpowers.","ref":"Arrows.html"},{"type":"macro","title":"Arrows.<|>/2","doc":"Like `||`, except only defaults if the left is nil (i.e. false is valid)","ref":"Arrows.html#%3C%7C%3E/2"},{"type":"macro","title":"Arrows.<~>/2","doc":"Like `||`, except with the logic applied by `~>`","ref":"Arrows.html#%3C~%3E/2"},{"type":"function","title":"Arrows.from_ok/1","doc":"","ref":"Arrows.html#from_ok/1"},{"type":"function","title":"Arrows.ok/1","doc":"","ref":"Arrows.html#ok/1"},{"type":"function","title":"Arrows.ok_or/2","doc":"","ref":"Arrows.html#ok_or/2"},{"type":"function","title":"Arrows.to_ok/1","doc":"","ref":"Arrows.html#to_ok/1"},{"type":"macro","title":"Arrows.|>/2","doc":"A more flexible drop-in replacement for the standard elixir pipe operator.\n\nSpecial features are unlocked when using the `...` (ellipsis) on the right hand side:\n\n* The right hand side need not be a function, it can be any expression containing the ellipsis.\n* The ellipsis will be replaced with the result of evaluating the hand side expression.\n* You may use the ellipsis multiple times and the left hand side will be calculated exactly once.\n\nYou can do crazy stuff with the ellipsis, but remember that people have to read it!","ref":"Arrows.html#%7C%3E/2"},{"type":"macro","title":"Arrows.~>/2","doc":"Like `OK.~>`","ref":"Arrows.html#~%3E/2"},{"type":"module","title":"ConsoleHelpers","doc":"","ref":"ConsoleHelpers.html"},{"type":"module","title":"DaisyTheme","doc":"","ref":"DaisyTheme.html"},{"type":"function","title":"DaisyTheme.adjust/5","doc":"","ref":"DaisyTheme.html#adjust/5"},{"type":"function","title":"DaisyTheme.clamp/3","doc":"","ref":"DaisyTheme.html#clamp/3"},{"type":"function","title":"DaisyTheme.darken/2","doc":"","ref":"DaisyTheme.html#darken/2"},{"type":"function","title":"DaisyTheme.darker/5","doc":"","ref":"DaisyTheme.html#darker/5"},{"type":"function","title":"DaisyTheme.default_theme/0","doc":"","ref":"DaisyTheme.html#default_theme/0"},{"type":"function","title":"DaisyTheme.generate/1","doc":"","ref":"DaisyTheme.html#generate/1"},{"type":"function","title":"DaisyTheme.is_dark?/1","doc":"","ref":"DaisyTheme.html#is_dark?/1"},{"type":"function","title":"DaisyTheme.keys/0","doc":"","ref":"DaisyTheme.html#keys/0"},{"type":"function","title":"DaisyTheme.lighten/2","doc":"","ref":"DaisyTheme.html#lighten/2"},{"type":"function","title":"DaisyTheme.style_attr/1","doc":"","ref":"DaisyTheme.html#style_attr/1"},{"type":"function","title":"DaisyTheme.theme/1","doc":"","ref":"DaisyTheme.html#theme/1"},{"type":"module","title":"DummyAdapter","doc":"","ref":"DummyAdapter.html"},{"type":"module","title":"EctoSparkles","doc":"`query_filter` brings convenience and shortens the boilterplate of ecto queries\n\nCommon filters available include:\n\n- `preload` - Preloads fields onto the query results\n- `start_date` - Query for items inserted after this date\n- `end_date` - Query for items inserted before this date\n- `before` - Get items with IDs before this value\n- `after` - Get items with IDs after this value\n- `ids` - Get items with a list of ids\n- `first` - Gets the first n items\n- `last` - Gets the last n items\n- `limit` - Gets the first n items\n- `offset` - Offsets limit by n items\n- `search` - ***Warning:*** This requires schemas using this to have a `&by_search(query, val)` function\n\nYou are also able to filter on any natural field of a model, as well as use\n\n- gte/gt\n- lte/lt\n- like/ilike\n- is_nil/not(is_nil)\n\n```elixir\nquery_filter(User, %{name: %{ilike: \"steve\"}})\nquery_filter(User, %{name: %{ilike: \"steve\"}}, :last_name, :asc)\nquery_filter(User, %{name: %{age: %{gte: 18, lte: 30}}})\nquery_filter(User, %{name: %{is_banned: %{!=: nil}}})\nquery_filter(User, %{name: %{is_banned: %{==: nil}}})\n\nmy_query = query_filter(User, %{name: \"Billy\"})\nquery_filter(my_query, %{last_name: \"Joe\"})\n```","ref":"EctoSparkles.html"},{"type":"macro","title":"EctoSparkles.join_preload/2","doc":"`join_preload` is a helper for preloading associations using joins.\n\nBy default, Ecto preloads associations using a separate query for each association, which can degrade performance.\nYou could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see example below).\n\nWith `EctoSparkles`, you can accomplish this with just one line of code.","ref":"EctoSparkles.html#join_preload/2"},{"type":"macro","title":"Example using just Ecto - EctoSparkles.join_preload/2","doc":"```\nimport Ecto.Query\nInvoice\n|> join(:left, [i], assoc(i, :customer), as: :customer)\n|> join(:left, [i, c], assoc(c, :account), as: :account)\n|> join(:left, [i], assoc(i, :lines), as: :lines)\n|> preload([lines: v, customers: c, account: a], lines: v, customer: {c, [a: account]})\n|> Repo.all()\n```","ref":"EctoSparkles.html#join_preload/2-example-using-just-ecto"},{"type":"macro","title":"Example using `join_preload` - EctoSparkles.join_preload/2","doc":"```\nimport EctoSparkles\nInvoice\n|> join_preload([:customer, :account])\n|> join_preload([:lines])\n|> Repo.all()\n```","ref":"EctoSparkles.html#join_preload/2-example-using-join_preload"},{"type":"macro","title":"EctoSparkles.proload/3","doc":"AKA `join_preload++`. It's more powerful, but it does it with more (and different!) syntax.\n\ne.g.\n```\nproload(query, activity: [\n  :verb, :boost_count, :like_count, :replied,\n  # relations under object will have their aliases prefixed with object_, i.e.\n  # :object_message, :object_post, :object_post_content\n  # the original names will still be used for the associations.\n  object: {\"object_\", [:message, :post, :post_content]}\n])\n```","ref":"EctoSparkles.html#proload/3"},{"type":"function","title":"EctoSparkles.query_filter/4","doc":"","ref":"EctoSparkles.html#query_filter/4"},{"type":"macro","title":"EctoSparkles.reusable_join/5","doc":"`reusable_join` is similar to `Ecto.Query.join/{4,5}`, but can be called multiple times with the same alias.\n\nNote that only the first join operation is performed, the subsequent ones that use the same alias\nare just ignored. Also note that because of this behaviour, it is mandatory to specify an alias when\nusing this function.\n\nThis is helpful when you need to perform a join while building queries one filter at a time,\nbecause the same filter could be used multiple times or you could have multiple filters that\nrequire the same join, which poses a problem with how the `filter/3` callback work, as you\nneed to return a dynamic with the filtering, which means that the join must have an alias,\nand by default Ecto raises an error when you add multiple joins with the same alias.\n\nTo solve this, it is recommended to use this macro instead of the default `Ecto.Query.join/{4,5}`,\nin which case there will be only one join in the query that can be reused by multiple filters.","ref":"EctoSparkles.html#reusable_join/5"},{"type":"module","title":"EctoSparkles.AutoMigrator","doc":"Runs ecto migrations automatically on startup (add this to your app's supervision tree)","ref":"EctoSparkles.AutoMigrator.html"},{"type":"function","title":"EctoSparkles.AutoMigrator.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"EctoSparkles.AutoMigrator.html#child_spec/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.init/1","doc":"","ref":"EctoSparkles.AutoMigrator.html#init/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.start_link/1","doc":"","ref":"EctoSparkles.AutoMigrator.html#start_link/1"},{"type":"function","title":"EctoSparkles.AutoMigrator.startup_migrations/0","doc":"","ref":"EctoSparkles.AutoMigrator.html#startup_migrations/0"},{"type":"module","title":"EctoSparkles.Changesets","doc":"Helper functions for changesets","ref":"EctoSparkles.Changesets.html"},{"type":"function","title":"EctoSparkles.Changesets.change_synced_timestamp/3","doc":"If a changeset includes a change to `bool_field`, we ensure that the\n`timestamp` field is updated if required. In the case of true, this\nmeans setting it to now if it is null and in the case of false, this\nmeans setting it to null if it is not null.","ref":"EctoSparkles.Changesets.html#change_synced_timestamp/3"},{"type":"function","title":"EctoSparkles.Changesets.change_synced_timestamps/5","doc":"If a changeset includes a change to `bool_field`, we change two\ntimestamps columns (representing activated and deactivated) so that\nonly one is set to a non-null value at a time.","ref":"EctoSparkles.Changesets.html#change_synced_timestamps/5"},{"type":"function","title":"EctoSparkles.Changesets.validate_exactly_one/3","doc":"","ref":"EctoSparkles.Changesets.html#validate_exactly_one/3"},{"type":"function","title":"EctoSparkles.Changesets.validate_http_url/2","doc":"Validates that a URL uses HTTP(S) and has a correct format.","ref":"EctoSparkles.Changesets.html#validate_http_url/2"},{"type":"function","title":"EctoSparkles.Changesets.validate_not_expired/4","doc":"Validates that the entity has not expired","ref":"EctoSparkles.Changesets.html#validate_not_expired/4"},{"type":"module","title":"EctoSparkles.Changesets.Errors","doc":"","ref":"EctoSparkles.Changesets.Errors.html"},{"type":"function","title":"EctoSparkles.Changesets.Errors.changeset_errors_string/2","doc":"","ref":"EctoSparkles.Changesets.Errors.html#changeset_errors_string/2"},{"type":"function","title":"EctoSparkles.Changesets.Errors.error/2","doc":"","ref":"EctoSparkles.Changesets.Errors.html#error/2"},{"type":"behaviour","title":"EctoSparkles.DataMigration","doc":"A behaviour implemented by our data migrations (generally backfills).\n\nBased on [A microframework for backfill migrations in Elixir's Ecto](https://tylerayoung.com/2023/08/13/migrations/), in turn based on David Bernheisel's [template for deterministic backfills](https://fly.io/phoenix-files/backfilling-data/#batching-deterministic-data).\n\nA data migration using this behaviour may look like this (which you can put simply put in Ecto migrations, eg. `priv/repo/migrations/priv/repo/migrations/20231019004944_data_onboarding_step.exs`):\n\n```elixir\ndefmodule MyApp.Repo.Migrations.BackfillOnboardingStep do\n  alias EctoSparkles.DataMigration\n  use DataMigration\n  \n  @impl DataMigration\n  def base_query do\n    # NOTE: This works in cases where:\n    # 1. The data can be queried with a condition that not longer applies after the migration ran, so you can repeatedly query the data and update the data until the query result is empty. For example, if a column is currently null and will be updated to not be null, then you can query for the null records and pick up where you left off.\n    # 2. The migration is written in such a way that it can be ran several times on the same data without causing data loss or duplication (or crashing).\n\n    from(u in \"users\", # Notice how we do not use Ecto schemas here.\n      where: is_nil(u.onboarding_step),\n      select: %{id: u.id}\n    )\n  end\n\n  @impl DataMigration\n  def config do\n    %DataMigration.Config{batch_size: 100, throttle_ms: 1_000, repo: MyApp.Repo}\n  end\n\n  @impl DataMigration\n  def migrate(results) do\n    Enum.each(results, fn %{id: user_id} ->\n      # hooks into a context module, which is more likely to be kept up to date as the app evolves, to avoid having to update old migrations\n      user_id\n      |> MyApp.Users.set_onboarding_step!()\n    end)\n  end\nend\n```","ref":"EctoSparkles.DataMigration.html"},{"type":"callback","title":"EctoSparkles.DataMigration.base_query/0","doc":"The core of the query you want to use to SELECT a map of your data.\nThe `DataMigration.Runner` will take care of limiting this to a batch size, ordering\nit by row ID, and restricting it to rows you haven't yet handled.\nThe query *must* select a map, and that map must have an `:id` key for the\nmigration runner to reference as the last-modified row in your table.","ref":"EctoSparkles.DataMigration.html#c:base_query/0"},{"type":"callback","title":"EctoSparkles.DataMigration.config/0","doc":"","ref":"EctoSparkles.DataMigration.html#c:config/0"},{"type":"callback","title":"EctoSparkles.DataMigration.migrate/1","doc":"The callback to operate on a result set from your query.\nImplementers should `raise` an error if you're unable to process the batch.","ref":"EctoSparkles.DataMigration.html#c:migrate/1"},{"type":"module","title":"EctoSparkles.DataMigration.Config","doc":"Configuration for a `DataMigration` behaviour module, used by the `DataMigration.Runner`.\n\nbatch size: how many elements from your table to migrate at a time. \n\nthrottle time: the amount of downtime the runner should sleep between batches.\n\nasync: Whether to run the migration in an async process, meaning the execution of the rest of the migrations (and the app startup if you're auto-migrating on start) won't be delayed. WARNING: this means the migration will be marked as done as soon as it starts, so if the process is interrupted it won't be re-run automatically.\n\nfirst_id: The very first ID when sorting UUIDs in ascending order. If you use integer IDs instead, this would be 0.","ref":"EctoSparkles.DataMigration.Config.html"},{"type":"module","title":"EctoSparkles.DataMigration.Runner","doc":"Runs a `DataMigration`","ref":"EctoSparkles.DataMigration.Runner.html"},{"type":"function","title":"EctoSparkles.DataMigration.Runner.run/1","doc":"","ref":"EctoSparkles.DataMigration.Runner.html#run/1"},{"type":"module","title":"EctoSparkles.ErlangTermBinary","doc":"A custom Ecto type for handling the serialization of arbitrary\ndata types stored as binary data in the database. Requires the\nunderlying DB field to be a binary.","ref":"EctoSparkles.ErlangTermBinary.html"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.cast/1","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#cast/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.cast/2","doc":"Provides custom casting rules for params. Nothing changes here.\nWe only need to handle deserialization.","ref":"EctoSparkles.ErlangTermBinary.html#cast/2"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.dump/1","doc":"Converting the data structure to binary for storage.","ref":"EctoSparkles.ErlangTermBinary.html#dump/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.embed_as/1","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#embed_as/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.equal?/2","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#equal?/2"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.load/1","doc":"Convert the raw binary value from the database back to\nthe desired term.\n\nUses `Plug.Crypto.non_executable_binary_to_term/2` - a restricted version of `:erlang.binary_to_term/2` that forbids executable terms, such as anonymous functions.\n\nBy default this function does not restrict atoms, except if compiled in prod env, then the [:safe] option is set, so only existing (and loaded) atoms will be deserialized.","ref":"EctoSparkles.ErlangTermBinary.html#load/1"},{"type":"function","title":"EctoSparkles.ErlangTermBinary.type/0","doc":"","ref":"EctoSparkles.ErlangTermBinary.html#type/0"},{"type":"module","title":"EctoSparkles.Log","doc":"Log slow Ecto queries","ref":"EctoSparkles.Log.html"},{"type":"function","title":"EctoSparkles.Log.check_if_n_plus_1/1","doc":"","ref":"EctoSparkles.Log.html#check_if_n_plus_1/1"},{"type":"function","title":"EctoSparkles.Log.format_log/4","doc":"","ref":"EctoSparkles.Log.html#format_log/4"},{"type":"function","title":"EctoSparkles.Log.format_stacktrace_sliced/3","doc":"","ref":"EctoSparkles.Log.html#format_stacktrace_sliced/3"},{"type":"function","title":"EctoSparkles.Log.handle_event/4","doc":"","ref":"EctoSparkles.Log.html#handle_event/4"},{"type":"function","title":"EctoSparkles.Log.inline_params/3","doc":"","ref":"EctoSparkles.Log.html#inline_params/3"},{"type":"function","title":"EctoSparkles.Log.log_query/4","doc":"","ref":"EctoSparkles.Log.html#log_query/4"},{"type":"function","title":"EctoSparkles.Log.setup/1","doc":"","ref":"EctoSparkles.Log.html#setup/1"},{"type":"module","title":"EctoSparkles.Migrator","doc":"","ref":"EctoSparkles.Migrator.html"},{"type":"function","title":"EctoSparkles.Migrator.create/0","doc":"","ref":"EctoSparkles.Migrator.html#create/0"},{"type":"function","title":"EctoSparkles.Migrator.create/2","doc":"","ref":"EctoSparkles.Migrator.html#create/2"},{"type":"function","title":"EctoSparkles.Migrator.migrate/0","doc":"","ref":"EctoSparkles.Migrator.html#migrate/0"},{"type":"function","title":"EctoSparkles.Migrator.migrate/1","doc":"","ref":"EctoSparkles.Migrator.html#migrate/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback/2","doc":"","ref":"EctoSparkles.Migrator.html#rollback/2"},{"type":"function","title":"EctoSparkles.Migrator.rollback_all/0","doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/0"},{"type":"function","title":"EctoSparkles.Migrator.rollback_all/1","doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback_to/1","doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/1"},{"type":"function","title":"EctoSparkles.Migrator.rollback_to/2","doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/2"},{"type":"function","title":"EctoSparkles.Migrator.status/0","doc":"Print the migration status for configured Repos' migrations.","ref":"EctoSparkles.Migrator.html#status/0"},{"type":"module","title":"EctoSparkles.NPlus1Detector","doc":"Checks a query against the previous one and increments counter of collisions or swaps previous query with the last one.","ref":"EctoSparkles.NPlus1Detector.html"},{"type":"function","title":"EctoSparkles.NPlus1Detector.check/1","doc":"","ref":"EctoSparkles.NPlus1Detector.html#check/1"},{"type":"function","title":"EctoSparkles.NPlus1Detector.do_check/2","doc":"","ref":"EctoSparkles.NPlus1Detector.html#do_check/2"},{"type":"module","title":"EctoSparkles.SanitiseStrings","doc":"Provides functions for sanitising input on `Ecto.Changeset` string fields.","ref":"EctoSparkles.SanitiseStrings.html"},{"type":"function","title":"EctoSparkles.SanitiseStrings.clean_html/2","doc":"","ref":"EctoSparkles.SanitiseStrings.html#clean_html/2"},{"type":"function","title":"EctoSparkles.SanitiseStrings.sanitise_strings/2","doc":"","ref":"EctoSparkles.SanitiseStrings.html#sanitise_strings/2"},{"type":"function","title":"EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"Sanitises all changes in the given changeset that apply to field which are of the `:string` `Ecto` type.\n\nBy default it uses the `HtmlSanitizeEx.strip_tags/1` function on any change that satisfies all of the following conditions:\n1. The field associated with the change is of the type `:string`.\n2. The field associated with the change is not in the blacklisted_fields list of `opts` as defined using the `:except` key in `opts`.\nNote that this function will change the value in the `:changes` map of an\n`%Ecto.Changeset{}` struct if the given changes are sanitized.","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2"},{"type":"function","title":"Examples - EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"iex> attrs = %{string_field: \" Bad \"}\n    iex> result_changeset =\n    ...>   attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.strip_all_tags()\n    iex> result_changeset.changes\n    %{string_field: \"Bad\"}\nFields can be exempted from sanitization via the `:except` option.\n    iex> attrs = %{string_field: \" Bad \"}\n    iex> result_changeset =\n    ...>   attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.strip_all_tags(except: [:string_field])\n    iex> result_changeset.changes\n    %{string_field: \" Bad \"}\n\n#","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2-examples"},{"type":"function","title":"You can also specify a specific scrubber (by passing a function as reference): - EctoSparkles.SanitiseStrings.strip_all_tags/2","doc":"ies> attrs\n    ...>   |> FakeEctoSchema.changeset()\n    ...>   |> EctoSparkles.SanitiseStrings.sanitise_strings(scrubber: HtmlSanitizeEx.Scrubber.html5/1)","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2-you-can-also-specify-a-specific-scrubber-by-passing-a-function-as-reference"},{"type":"module","title":"Exto","doc":"Configuration-driven Ecto Schemata.","ref":"Exto.html"},{"type":"macro","title":"Exto.flex_schema/1","doc":"Adds additional associations dynamically from app config.\n\nReads config for the given OTP application, under the name of the\ncurrent module. Each key maps to an Ecto.Schema function:\n\n* `belongs_to`\n* `field`\n* `has_many`\n* `has_one`\n* `many_to_many`\n\nEach of these keys should map to a keyword list where the key is the\nname of the field or association and the value is one of:\n\n* A type\n* A tuple of type and options (keyword list)\n\nExample Schema:\n\n```\ndefmodule My.Schema do\n  use Ecto.Schema\n  import Exto, only: [flex_schema: 1]\n\n  schema \"my_table\" do\n    field :name, :string # just normal schema things\n    flex_schema(:my_app) # boom! give me the stuff\n  end\nend\n```\n\nExample configuration:\n\n```\nconfig :my_app, My.Schema,\n  belongs_to: [\n    foo: Foo,                   # belongs_to :foo, Foo\n    bar: {Bar, type: :integer}, # belongs_to :bar, Bar, type: :integer\n  ],\n  field: [\n    foo: :string,                # field :foo, :string\n    bar: {:integer, default: 4}, # field :foo, :integer, default: 4\n  ],\n  has_one: [\n    foo: Foo,                             # has_one :foo, Foo\n    bar: {Bar, foreign_key: :the_bar_id}, # has_one :bar, Bar, foreign_key: :the_bar_id\n  ]\n  has_many: [\n    foo: Foo,                             # has_many :foo, Foo\n    bar: {Bar, foreign_key: :the_bar_id}, # has_many :bar, Bar, foreign_key: :the_bar_id\n  ]\n  many_to_many: [\n    foo: Foo,                         # many_to_many :foo, Foo\n    bar: {Bar, join_through: FooBar}, # many_to_many :bar, Bar, :join_through: FooBar\n  ]\n```\n\nThis one won't work very well because we define `foo` and `bar` 5\ntimes each, but I think you get the point.\n\nReading of configuration is done during compile time. The relations\nwill be baked in during compilation, thus:\n\n* Do not expect this to work in runtime config.\n* You will need to rebuild all dependencies which use this macro\n  when you change their configuration.","ref":"Exto.html#flex_schema/1"},{"type":"module","title":"Import2Alias","doc":"","ref":"Import2Alias.html"},{"type":"function","title":"Import2Alias.import2alias/2","doc":"","ref":"Import2Alias.html#import2alias/2"},{"type":"module","title":"Import2Alias.CallerTracer","doc":"","ref":"Import2Alias.CallerTracer.html"},{"type":"function","title":"Import2Alias.CallerTracer.trace/2","doc":"","ref":"Import2Alias.CallerTracer.html#trace/2"},{"type":"module","title":"Import2Alias.Server","doc":"","ref":"Import2Alias.Server.html"},{"type":"function","title":"Import2Alias.Server.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Import2Alias.Server.html#child_spec/1"},{"type":"function","title":"Import2Alias.Server.entries/0","doc":"","ref":"Import2Alias.Server.html#entries/0"},{"type":"function","title":"Import2Alias.Server.record/6","doc":"","ref":"Import2Alias.Server.html#record/6"},{"type":"function","title":"Import2Alias.Server.start_link/1","doc":"","ref":"Import2Alias.Server.html#start_link/1"},{"type":"module","title":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutLive","doc":"","ref":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutLive.html"},{"type":"function","title":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutLive.class_tree/1","doc":"","ref":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutLive.html#class_tree/1"},{"type":"module","title":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutView","doc":"","ref":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutView.html"},{"type":"function","title":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutView.class_tree/1","doc":"","ref":"LiveViewNative.Internal.ClassTree.Bonfire.UI.Common.LayoutView.html#class_tree/1"},{"type":"task","title":"mix bonfire.account.new","doc":"Creates an account in the database, automatically activated","ref":"Mix.Tasks.Bonfire.Account.New.html"},{"type":"task","title":"Usage - mix bonfire.account.new","doc":"```\nmix bonfire.account.new [email@address]\n```\n\nYou will be prompted for a password and an email if it was not provided.","ref":"Mix.Tasks.Bonfire.Account.New.html#module-usage"},{"type":"function","title":"Mix.Tasks.Bonfire.Account.New.run/1","doc":"","ref":"Mix.Tasks.Bonfire.Account.New.html#run/1"},{"type":"task","title":"mix bonfire.deps.compile","doc":"(re)compiles dependencies.\n\nTODO: check if we still need this now that we treat extensions as umbrella apps in dev...\n\nThis is a modified version of Elixir's `Mix.Tasks.Deps.Compile` which was needed to compile dependencies and extract localisable strings in `Mix.Tasks.Bonfire.Localise.Extract`\n\nBy default, compile all dependencies. A list of dependencies\ncan be given compile multiple dependencies in order.\n\nThis task attempts to detect if the project contains one of\nthe following files and act accordingly:\n\n  * `mix.exs`      - invokes `mix compile`\n  * otherwise skip\n\nIf a list of dependencies is given, Mix will attempt to compile\nthem as is. For example, if project `a` depends on `b`, calling\n`mix deps.compile a` will compile `a` even if `b` is out of\ndate. This is to allow parts of the dependency tree to be\nrecompiled without propagating those changes upstream. To ensure\n`b` is included in the compilation step, pass `--include-children`.","ref":"Mix.Tasks.Bonfire.Deps.Compile.html"},{"type":"function","title":"Mix.Tasks.Bonfire.Deps.Compile.force_compile/2","doc":"","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#force_compile/2"},{"type":"function","title":"Mix.Tasks.Bonfire.Deps.Compile.loaded_by_name/3","doc":"Receives a list of dependency names and returns loaded `Mix.Dep`s.\nLogs a message if the dependency could not be found.","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#loaded_by_name/3"},{"type":"function","title":"Exceptions - Mix.Tasks.Bonfire.Deps.Compile.loaded_by_name/3","doc":"This function raises an exception if any of the dependencies\nprovided in the project are in the wrong format.","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#loaded_by_name/3-exceptions"},{"type":"function","title":"Mix.Tasks.Bonfire.Deps.Compile.run/1","doc":"","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#run/1"},{"type":"function","title":"Mix.Tasks.Bonfire.Deps.Compile.touch_manifests/0","doc":"","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#touch_manifests/0"},{"type":"function","title":"Mix.Tasks.Bonfire.Deps.Compile.try_compile/2","doc":"","ref":"Mix.Tasks.Bonfire.Deps.Compile.html#try_compile/2"},{"type":"task","title":"mix bonfire.localise.extract","doc":"Extracts translations by recompiling the Elixir source code.\n\n    mix gettext.extract [OPTIONS]\n\nTranslations are extracted into POT (Portable Object Template) files (with a\n`.pot` extension). The location of these files is determined by the `:otp_app`\nand `:priv` options given by Gettext modules when they call `use Gettext`. One\nPOT file is generated for each translation domain.\n\nIt is possible to give the `--merge` option to perform merging\nfor every Gettext backend updated during merge:\n\n    mix gettext.extract --merge\n\nAll other options passed to `gettext.extract` are forwarded to the\n`gettext.merge` task (`Mix.Tasks.Gettext.Merge`), which is called internally\nby this task. For example:\n\n    mix gettext.extract --merge --no-fuzzy","ref":"Mix.Tasks.Bonfire.Localise.Extract.html"},{"type":"function","title":"Mix.Tasks.Bonfire.Localise.Extract.run/1","doc":"","ref":"Mix.Tasks.Bonfire.Localise.Extract.html#run/1"},{"type":"task","title":"mix bonfire.release","doc":"","ref":"Mix.Tasks.Bonfire.Release.html"},{"type":"function","title":"Mix.Tasks.Bonfire.Release.main/1","doc":"","ref":"Mix.Tasks.Bonfire.Release.html#main/1"},{"type":"function","title":"Mix.Tasks.Bonfire.Release.run/1","doc":"","ref":"Mix.Tasks.Bonfire.Release.html#run/1"},{"type":"task","title":"mix bonfire.secrets","doc":"Generates secrets and prints to the terminal.\n    mix bonfire.secrets [length]\nBy default, it generates keys 64 characters long.\nThe minimum value for `length` is 32.","ref":"Mix.Tasks.Bonfire.Secrets.html"},{"type":"function","title":"Mix.Tasks.Bonfire.Secrets.main/1","doc":"","ref":"Mix.Tasks.Bonfire.Secrets.html#main/1"},{"type":"task","title":"mix bonfire.user.admin.promote","doc":"Creates an account in the database, automatically activated","ref":"Mix.Tasks.Bonfire.User.Admin.Promote.html"},{"type":"task","title":"Usage - mix bonfire.user.admin.promote","doc":"```\nmix bonfire.user.admin.promote username\n```","ref":"Mix.Tasks.Bonfire.User.Admin.Promote.html#module-usage"},{"type":"function","title":"Mix.Tasks.Bonfire.User.Admin.Promote.run/1","doc":"","ref":"Mix.Tasks.Bonfire.User.Admin.Promote.html#run/1"},{"type":"task","title":"mix docs.deps","doc":"`mix docs.deps`","ref":"Mix.Tasks.Docs.Deps.html"},{"type":"task","title":"Command line options - mix docs.deps","doc":"* `--only` - the environment to include dependencies for\n  * `--target` - the target to include dependencies for\n  * `--exclude` - exclude dependencies which you do not want to see in docs.\n  * any arguments supported by `mix docs` will be passed along","ref":"Mix.Tasks.Docs.Deps.html#module-command-line-options"},{"type":"task","title":"mix import2alias","doc":"","ref":"Mix.Tasks.Import2alias.html"},{"type":"behaviour","title":"Paginator","doc":"Defines a paginator.\n\nThis module adds a `paginate/3` function to your `Ecto.Repo` so that you can\npaginate through results using opaque cursors.","ref":"Paginator.html"},{"type":"behaviour","title":"Usage - Paginator","doc":"defmodule MyApp.Repo do\n      use Ecto.Repo, otp_app: :my_app\n      use Paginator\n    end","ref":"Paginator.html#module-usage"},{"type":"behaviour","title":"Options - Paginator","doc":"`Paginator` can take any options accepted by `paginate/3`. This is useful when\nyou want to enforce some options globally across your project.\n\n#","ref":"Paginator.html#module-options"},{"type":"behaviour","title":"Example - Paginator","doc":"defmodule MyApp.Repo do\n      use Ecto.Repo, otp_app: :my_app\n      use Paginator,\n        limit: 10,                           # sets the default limit to 10\n        maximum_limit: 100,                  # sets the maximum limit to 100\n        include_total_count: true,           # include total count by default\n        total_count_primary_key_field: :uuid # sets the total_count_primary_key_field to uuid for calculate total_count\n    end\n\nNote that these values can be still be overriden when `paginate/3` is called.\n\n#","ref":"Paginator.html#module-example"},{"type":"behaviour","title":"Use without macros - Paginator","doc":"If you wish to avoid use of macros or you wish to use a different name for\nthe pagination function you can define your own function like so:\n\n    defmodule MyApp.Repo do\n      use Ecto.Repo, otp_app: :my_app\n\n      def my_paginate_function(queryable, opts \\ [], repo_opts \\ []) do\n        defaults = [limit: 10] # Default options of your choice here\n        opts = Keyword.merge(defaults, opts)\n        Paginator.paginate(queryable, opts, __MODULE__, repo_opts)\n      end\n    end","ref":"Paginator.html#module-use-without-macros"},{"type":"function","title":"Paginator.cursor_for_record/3","doc":"Generate a cursor for the supplied record, in the same manner as the\n`before` and `after` cursors generated by `paginate/3`.\n\nFor the cursor to be compatible with `paginate/3`, `cursor_fields`\nmust have the same value as the `cursor_fields` option passed to it.\n\n#","ref":"Paginator.html#cursor_for_record/3"},{"type":"function","title":"Example - Paginator.cursor_for_record/3","doc":"iex> Paginator.cursor_for_record(%Paginator.Customer{id: 1}, [:id])\n    \"g3QAAAABZAACaWRhAQ==\"\n\n    iex> Paginator.cursor_for_record(%Paginator.Customer{id: 1, name: \"Alice\"}, [id: :asc, name: :desc])\n    \"g3QAAAACZAACaWRhAWQABG5hbWVtAAAABUFsaWNl\"","ref":"Paginator.html#cursor_for_record/3-example"},{"type":"function","title":"Paginator.default_fetch_cursor_value/2","doc":"Default function used to get the value of a cursor field from the supplied\nmap. This function can be overriden in the `Paginator.Config` using the\n`fetch_cursor_value_fun` key.\n\nWhen using named bindings to sort on joined columns it will attempt to get\nthe value of joined column by using the named binding as the name of the\nrelationship on the original Ecto.Schema.\n\n#","ref":"Paginator.html#default_fetch_cursor_value/2"},{"type":"function","title":"Example - Paginator.default_fetch_cursor_value/2","doc":"iex> Paginator.default_fetch_cursor_value(%Paginator.Customer{id: 1}, :id)\n    1\n\n    iex> Paginator.default_fetch_cursor_value(%Paginator.Customer{id: 1, address: %Paginator.Address{city: \"London\"}}, {:address, :city})\n    \"London\"","ref":"Paginator.html#default_fetch_cursor_value/2-example"},{"type":"callback","title":"Paginator.paginate/3","doc":"Fetches all the results matching the query within the cursors.","ref":"Paginator.html#c:paginate/3"},{"type":"callback","title":"Options - Paginator.paginate/3","doc":"* `:after` - Fetch the records after this cursor.\n  * `:before` - Fetch the records before this cursor.\n  * `:cursor_fields` - The fields with sorting direction used to determine the\n  cursor. In most cases, this should be the same fields as the ones used for sorting in the query.\n  When you use named bindings in your query they can also be provided.\n  * `:fetch_cursor_value_fun` function of arity 2 to lookup cursor values on returned records.\n  Defaults to `Paginator.default_fetch_cursor_value/2`\n  * `:include_total_count` - Set this to true to return the total number of\n  records matching the query. Note that this number will be capped by\n  `:total_count_limit`. Defaults to `false`.\n  * `:total_count_primary_key_field` - Running count queries on specified column of the table\n  * `:limit` - Limits the number of records returned per page. Note that this\n  number will be capped by `:maximum_limit`. Defaults to `50`.\n  * `:maximum_limit` - Sets a maximum cap for `:limit`. This option can be useful when `:limit`\n  is set dynamically (e.g from a URL param set by a user) but you still want to\n  enforce a maximum. Defaults to `500`.\n  * `:total_count_limit` - Running count queries on tables with a large number\n  of records is expensive so it is capped by default. Can be set to `:infinity`\n  in order to count all the records. Defaults to `10,000`.","ref":"Paginator.html#c:paginate/3-options"},{"type":"callback","title":"Repo options - Paginator.paginate/3","doc":"This will be passed directly to `Ecto.Repo.all/2`, as such any option supported\nby this function can be used here.","ref":"Paginator.html#c:paginate/3-repo-options"},{"type":"callback","title":"Simple example - Paginator.paginate/3","doc":"query = from(p in Post, order_by: [asc: p.inserted_at, asc: p.id], select: p)\n\n    Repo.paginate(query, cursor_fields: [:inserted_at, :id], limit: 50)","ref":"Paginator.html#c:paginate/3-simple-example"},{"type":"callback","title":"Example with using custom sort directions per field - Paginator.paginate/3","doc":"query = from(p in Post, order_by: [asc: p.inserted_at, desc: p.id], select: p)\n\n    Repo.paginate(query, cursor_fields: [inserted_at: :asc, id: :desc], limit: 50)","ref":"Paginator.html#c:paginate/3-example-with-using-custom-sort-directions-per-field"},{"type":"callback","title":"Example with sorting on columns in joined tables - Paginator.paginate/3","doc":"from(\n      p in Post,\n      as: :posts,\n      join: a in assoc(p, :author),\n      as: :author,\n      preload: [author: a],\n      select: p,\n      order_by: [\n        {:asc, a.name},\n        {:asc, p.id}\n      ]\n    )\n\n    Repo.paginate(query, cursor_fields: [{{:author, :name}, :asc}, id: :asc], limit: 50)\n\nWhen sorting on columns in joined tables it is necessary to use named bindings. In\nthis case we name it `author`. In the `cursor_fields` we refer to this named binding\nand its column name.\n\nTo build the cursor Paginator uses the returned Ecto.Schema. When using a joined\ncolumn the returned Ecto.Schema won't have the value of the joined column\nunless we preload it. E.g. in this case the cursor will be build up from\n`post.id` and `post.author.name`. This presupposes that the named of the\nbinding is the same as the name of the relationship on the original struct.\n\nOne level deep joins are supported out of the box but if we join on a second\nlevel, e.g. `post.author.company.name` a custom function can be supplied to\nhandle the cursor value retrieval. This also applies when the named binding\ndoes not map to the name of the relationship.","ref":"Paginator.html#c:paginate/3-example-with-sorting-on-columns-in-joined-tables"},{"type":"callback","title":"Example - Paginator.paginate/3","doc":"from(\n      p in Post,\n      as: :posts,\n      join: a in assoc(p, :author),\n      as: :author,\n      join: c in assoc(a, :company),\n      as: :company,\n      preload: [author: a],\n      select: p,\n      order_by: [\n        {:asc, a.name},\n        {:asc, p.id}\n      ]\n    )\n\n    Repo.paginate(query,\n      cursor_fields: [{{:company, :name}, :asc}, id: :asc],\n      fetch_cursor_value_fun: fn\n        post, {{:company, name}, _} ->\n          post.author.company.name\n\n        post, field ->\n          Paginator.default_fetch_cursor_value(post, field)\n      end,\n      limit: 50\n    )","ref":"Paginator.html#c:paginate/3-example"},{"type":"function","title":"Paginator.paginated_query/2","doc":"","ref":"Paginator.html#paginated_query/2"},{"type":"module","title":"Paginator.Page","doc":"Defines a page.","ref":"Paginator.Page.html"},{"type":"module","title":"Fields - Paginator.Page","doc":"* `edges` - a list of entries contained in this page.\n* `page_info` - meta-data attached to this page.","ref":"Paginator.Page.html#module-fields"},{"type":"type","title":"Paginator.Page.t/0","doc":"","ref":"Paginator.Page.html#t:t/0"},{"type":"module","title":"Paginator.PageInfo","doc":"Defines page page_info.","ref":"Paginator.PageInfo.html"},{"type":"module","title":"Fields - Paginator.PageInfo","doc":"* `start_cursor` - an opaque cursor representing the first row of the current page, to be used with the `before` query parameter.\n* `end_cursor` - an opaque cursor representing the last row of the current page, to be used with the `after` query parameter.\n* `limit` - the maximum number of edges that can be contained in this page.\n* `page_count` - the number of edges on the current page.\n* `total_count` - the total number of edges matching the query.\n* `total_count_cap_exceeded` - a boolean indicating whether the `:total_count_limit` was exceeded.","ref":"Paginator.PageInfo.html#module-fields"},{"type":"type","title":"Paginator.PageInfo.opaque_cursor/0","doc":"","ref":"Paginator.PageInfo.html#t:opaque_cursor/0"},{"type":"type","title":"Paginator.PageInfo.t/0","doc":"","ref":"Paginator.PageInfo.html#t:t/0"},{"type":"module","title":"Releaser.Git","doc":"","ref":"Releaser.Git.html"},{"type":"function","title":"Releaser.Git.add_commit_and_tag/1","doc":"This module contains some git-specific functionality","ref":"Releaser.Git.html#add_commit_and_tag/1"},{"type":"module","title":"Releaser.Publish","doc":"","ref":"Releaser.Publish.html"},{"type":"function","title":"Releaser.Publish.publish!/0","doc":"","ref":"Releaser.Publish.html#publish!/0"},{"type":"module","title":"Releaser.Tests","doc":"","ref":"Releaser.Tests.html"},{"type":"function","title":"Releaser.Tests.run_tests!/0","doc":"","ref":"Releaser.Tests.html#run_tests!/0"},{"type":"module","title":"Releaser.VersionUtils","doc":"","ref":"Releaser.VersionUtils.html"},{"type":"function","title":"Releaser.VersionUtils.bump_major/1","doc":"Some utilities to get and set version numbers in the `mix.exs` file\nand to programmatically transform version numbers.\nMaybe the `bump_*` functions should be in the standard library?\nThis script doesn't support pre-release versions or versions with build information.","ref":"Releaser.VersionUtils.html#bump_major/1"},{"type":"function","title":"Releaser.VersionUtils.bump_minor/1","doc":"","ref":"Releaser.VersionUtils.html#bump_minor/1"},{"type":"function","title":"Releaser.VersionUtils.bump_patch/1","doc":"","ref":"Releaser.VersionUtils.html#bump_patch/1"},{"type":"function","title":"Releaser.VersionUtils.bump_pre/2","doc":"","ref":"Releaser.VersionUtils.html#bump_pre/2"},{"type":"function","title":"Releaser.VersionUtils.get_version/1","doc":"","ref":"Releaser.VersionUtils.html#get_version/1"},{"type":"function","title":"Releaser.VersionUtils.set_version/2","doc":"","ref":"Releaser.VersionUtils.html#set_version/2"},{"type":"function","title":"Releaser.VersionUtils.update_version/2","doc":"","ref":"Releaser.VersionUtils.html#update_version/2"},{"type":"function","title":"Releaser.VersionUtils.version_to_string/1","doc":"","ref":"Releaser.VersionUtils.html#version_to_string/1"},{"type":"module","title":"UserAuthLiveMount","doc":"","ref":"UserAuthLiveMount.html"},{"type":"function","title":"UserAuthLiveMount.on_mount/4","doc":"","ref":"UserAuthLiveMount.html#on_mount/4"},{"type":"module","title":"Voodoo","doc":"","ref":"Voodoo.html"},{"type":"macro","title":"Voodoo.def_reverse_router/2","doc":"Generates a reverse router function with the given name based upon a\ncompiled(!) phoenix router module.\n\nMust be used outside of the router module, or else the router won't\nbe compiled yet and we won't be able to look up the routes.\n\nGenerated function wraps the existing phoenix helpers.\n\n```\ndefmodule MyAppWeb.Router do\n  use MyAppWeb, :router\n  # ...\nend\ndefmodule MyAppWeb.Router.Reverse do\n  import Voodoo, only: [def_reverse_router: 2]\n  def_reverse_router :path, for: MyAppWeb.Router\nend\n```","ref":"Voodoo.html#def_reverse_router/2"},{"type":"function","title":"Voodoo.router/1","doc":"Turns a Conn or Socket into the name of the router that routed it.","ref":"Voodoo.html#router/1"},{"type":"module","title":"Zest","doc":"","ref":"Zest.html"},{"type":"function","title":"Zest.each/2","doc":"Iterates over a collections, calling the provided effectful\nfunction with each item.","ref":"Zest.html#each/2"},{"type":"function","title":"Zest.each/3","doc":"Iterates over two collections, calling the provided effectful\nfunction with each pair of items","ref":"Zest.html#each/3"},{"type":"function","title":"Zest.hijack/2","doc":"You take on the role of the `apply` function in this exciting\nfunction that wraps execution of a function such that your function\nis responsible for calling it.","ref":"Zest.html#hijack/2"},{"type":"function","title":"Zest.in_scope/2","doc":"Add some debug information to the context for the duration of a\nfunction's execution. If a `raise`, `throw` or `exit` occurs, the\ncontext will be pretty printed to the screen to aid with debugging.","ref":"Zest.html#in_scope/2"},{"type":"function","title":"Zest.intercept/2","doc":"Catches errors and exceptions, invoking an interceptor function","ref":"Zest.html#intercept/2"},{"type":"function","title":"Zest.rethrow/3","doc":"An interceptor function which simply rethrows/reraises/re-exits","ref":"Zest.html#rethrow/3"},{"type":"function","title":"Zest.rethrowing/1","doc":"Wraps an interceptor or nullary function into an interceptor\nfunction such that after the execution of the provided function, the\nerror or exception will be rethrown.","ref":"Zest.html#rethrowing/1"},{"type":"macro","title":"Zest.scope/2","doc":"Add some debug information to the context for the duration of a\nblock or expression. If a `raise`, `throw` or `exit` occurs, the\ncontext will be pretty printed to the screen to aid with debugging.\n\nExamples:\n  \n  ```scope [foo: :bar[, assert(true == false)```\n\n  ```scope [foo: :bar] do\n       assert true == false\n     end\n  ```","ref":"Zest.html#scope/2"},{"type":"function","title":"Zest.scoped/2","doc":"Wrap a function such that it is as if its body was wrapped in `scope/2`","ref":"Zest.html#scoped/2"},{"type":"type","title":"Zest.intercept_type/0","doc":"","ref":"Zest.html#t:intercept_type/0"},{"type":"type","title":"Zest.interceptor/0","doc":"","ref":"Zest.html#t:interceptor/0"},{"type":"module","title":"Zest.Faking","doc":"Helpers to make random generator functions more useful in tests","ref":"Zest.Faking.html"},{"type":"function","title":"Zest.Faking.forbid/2","doc":"Partner to `unused`. Adds a list of values to the list of used\nvalues under a key.","ref":"Zest.Faking.html#forbid/2"},{"type":"function","title":"Zest.Faking.sequential/2","doc":"Returns the next unused integer id for `name` starting from `start`.\nPermits jumping by artificially increasing start - if start is\nhigher than the last used id, it will return start and set it as the\nlast used id","ref":"Zest.Faking.html#sequential/2"},{"type":"function","title":"Zest.Faking.such_that/4","doc":"Reruns a faker until a predicate passes.\nDefault limit is 10 tries.","ref":"Zest.Faking.html#such_that/4"},{"type":"function","title":"Zest.Faking.unused/3","doc":"Reruns a faker until an unseen value has been generated.\nDefault limit is 10 tries.\nStores seen things in the process dict (yes, *that* process dict)","ref":"Zest.Faking.html#unused/3"},{"type":"extras","title":"README","doc":"# Bonfire \n\n[Bonfire](https://bonfirenetworks.org/) - tend to your digital life in community\n\nCustomise and host your own online space and control your experience at the most granular level.\n\n#","ref":"readme.html"},{"type":"extras","title":"⚠️ Warning - README","doc":"This project is in the beta stage - you're welcome to try out it out (specifically the social features in the classic flavour), but APIs may still change and no guarantees are given about stability. You can keep track of progress [in our milestones](https://github.com/bonfire-networks/bonfire-app/milestones?direction=asc&sort=due_date&state=open)\n\n#","ref":"readme.html#warning"},{"type":"extras","title":"🔥 Flavours - README","doc":"This repo includes configurations to run two main [flavours of Bonfire](https://bonfirenetworks.org/use-bonfire/) you can choose from:\n* [Classic](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/classic) for basic social networking (beta)\n* [Community](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/community) with groups and topics functionality (alpha)\n* [Cooperation](https://github.com/bonfire-networks/bonfire-app/tree/main/flavours/cooperation) with a bunch more extensions and features (pre-alpha)","ref":"readme.html#flavours"},{"type":"extras","title":"📖 Documentation - README","doc":"* [Website](https://bonfirenetworks.org) \n* [Set up an instance](docs/DEPLOY.md) - for testing and evaluation only!\n* [Hacking on Bonfire](docs/HACKING.md) \n* [Code documentation](https://doc.bonfirenetworks.org/api-reference.html#content) \n* [Community chat](https://matrix.to/#/%23bonfire-networks:matrix.org)","ref":"readme.html#documentation"},{"type":"extras","title":"Copyright and License - README","doc":"Copyright (c) 2020-2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"readme.html#copyright-and-license"},{"type":"extras","title":"Bonfire Spark","doc":"# Bonfire Spark\n\nAn essential Bonfire extension that sets up the other extensions and starts the app.\n\nNOTE: this extension uses top-level naming for the OTP app (`:bonfire`) and modules (`Bonfire.`).\n\nDocumentation can be generated with [ExDoc](https://github.com/elixir-lang/ex_doc)\nand published on [HexDocs](https://hexdocs.pm). Once published, the docs can\nbe found at  .","ref":"extension-bonfire.html"},{"type":"extras","title":"Bonfire.Common","doc":"# Bonfire.Common\n\n`Bonfire.Common` is an extension for [Bonfire](https://bonfire.cafe/) that contains:\n\n- Many common functions in `Bonfire.Common.Utils`\n- Path and URL generators in `Bonfire.Common.URIs`\n- Date and time helpers in `Bonfire.Common.DatesTimes`\n- Etc","ref":"extension-bonfire_common.html"},{"type":"extras","title":"Handy commands - Bonfire.Common","doc":"","ref":"extension-bonfire_common.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Common","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_common.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Mailer","doc":"# Bonfire.Mailer\n\nAn library for [Bonfire](https://bonfire.cafe/) that contains:\n\n- Sending email (using [Bamboo](https://github.com/thoughtbot/bamboo))\n- Checking hypothetical email or domain validity","ref":"extension-bonfire_mailer.html"},{"type":"extras","title":"Handy commands - Bonfire.Mailer","doc":"","ref":"extension-bonfire_mailer.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Mailer","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_mailer.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Epics","doc":"# Bonfire.Epics\n\n`Bonfire.Epics` is a way of structuring tasks that is extension and customisability friendly.\n\n<!--","ref":"extension-bonfire_epics.html"},{"type":"extras","title":"Installation --> - Bonfire.Epics","doc":"0.1.0\"} -->","ref":"extension-bonfire_epics.html#installation"},{"type":"extras","title":"Copyright and License - Bonfire.Epics","doc":"Copyright (c) 2022 Bonfire Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"extension-bonfire_epics.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Ecto","doc":"# Bonfire.Ecto\n\n`Bonfire.Ecto` contains Ecto transactional support as acts for `Bonfire.Epics`\n\n \n\n<!--","ref":"extension-bonfire_ecto.html"},{"type":"extras","title":"Installation --> - Bonfire.Ecto","doc":"0.1.0\"} -->","ref":"extension-bonfire_ecto.html#installation"},{"type":"extras","title":"Bonfire.Search","doc":"# Bonfire.Search\n\nAn extension for [Bonfire](https://bonfire.cafe/) to handle:\n\n- Search indexing\n- Ultra-fast search\n- LiveView search UI\n\nYou can implement adapters for your prefered search backend. Currently adapters are included for:\n- [Meili Search](https://www.meilisearch.com/)","ref":"extension-bonfire_search.html"},{"type":"extras","title":"Development & Deployment Documentation - Bonfire.Search","doc":"This extension is meant to be used inside of a Bonfire app, so please refer to the main repo at: https://github.com/bonfire-networks/bonfire-app","ref":"extension-bonfire_search.html#development-deployment-documentation"},{"type":"extras","title":"Copyright and License - Bonfire.Search","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_search.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.Assort","doc":"# Bonfire.Data.Assort\n\nVarious assorted database schemas for:\n- Ranked linked items\n- TODO: move schemas from bonfire_classify and bonfire_tag here?","ref":"extension-bonfire_data_assort.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.Assort","doc":"Copyright (c) 2020 Bonfire Contributors\n    \n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_assort.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Files","doc":"# Bonfire.Files\n\nFile management for bonfire apps.  \n\nBonfire Files wraps [waffle][1] a file management library, \nadding support for media type checking using magic bytes inside of files, \nalong with creating a [pointable][2] table for storage of file data.\n\n[1]: https://github.com/elixir-waffle/waffle \n[2]: https://github.com/bonfire-networks/needle","ref":"extension-bonfire_files.html"},{"type":"extras","title":"Configuration - Bonfire.Files","doc":"","ref":"extension-bonfire_files.html#configuration"},{"type":"extras","title":"TODO's - Bonfire.Files","doc":"- Generate docs\n- More tests","ref":"extension-bonfire_files.html#todo-s"},{"type":"extras","title":"Bonfire.Boundaries","doc":"# Bonfire.Boundaries\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Circles\n- Verbs\n- Accesses\n- ACLs\n- Grants\n- Queries with healthy boundaries","ref":"extension-bonfire_boundaries.html"},{"type":"extras","title":"Handy commands - Bonfire.Boundaries","doc":"","ref":"extension-bonfire_boundaries.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Boundaries","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_boundaries.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Federate.ActivityPub","doc":"# Bonfire.Federate.ActivityPub\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Extensible/configurable tools for translating Bonfire data to/from ActivityStreams\n- Bonfire Adapter for the [ActivityPub federation library ](https://github.com/bonfire-networks/activity_pub)","ref":"extension-bonfire_federate_activitypub.html"},{"type":"extras","title":"Testing - Bonfire.Federate.ActivityPub","doc":"There are unit tests both in this repo, and in the activity_pub lib, but they can't cover every possible federation case, so manual testing with e.g. `curl -H \"Accept: application/activity+json\" -v \"http://localhost:4001/pub/actors/my_username\" | jq '.'` and by trying out federation flows between instances of Bonfire and other ActivityPub implementation is a must.","ref":"extension-bonfire_federate_activitypub.html#testing"},{"type":"extras","title":"Handy commands - Bonfire.Federate.ActivityPub","doc":"","ref":"extension-bonfire_federate_activitypub.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Federate.ActivityPub","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_federate_activitypub.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Invite.Links","doc":"# Bonfire.Invite.Links\n\nAn extension for [Bonfire](https://bonfire.cafe/) to generate invite links","ref":"extension-bonfire_invite_links.html"},{"type":"extras","title":"Handy commands - Bonfire.Invite.Links","doc":"","ref":"extension-bonfire_invite_links.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Invite.Links","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_invite_links.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.AccessControl","doc":"# Bonfire.Data.AccessControl\n\nSee also https://bonfirenetworks.org/docs/boundaries/ for more docs (TODO: merge/deduplicate)\n\nBonfire has a slightly unusual way of dealing with access control.\nIt's not so different from role-based access control (RBAC), but we do\na few things differently and there are quite a lot of pieces to get\nyour head around. We'll start gently.\n\nBonfire has a `Verb` table containing strings like \"comment\" and\n\"delete\" that represent actions a user might wish to perform. They are\na basic part of the bonfire vocabulary within the codebase.\n\nA permission is a decision about whether the action may be performed\nit not. There are 3 decisions we support:\n\n* `true` (permitted)\n* `false` (explicitly not permitted, never permit)\n* `null`/`nil` (not explicitly permitted)\n\nIt may seem odd to have the `null` here. We will come back to this\nafter we've introduced a few more pieces of the puzzle.\n\nA boundary is simply an unordered list or group of permissions. Each\npermission may only occur once. Any permissions that are not specified\nare assumed to be `null`. This loosely corresponds to a `role` in RBAC.\n\nA `Grant` links a `subject` (user or circle) to a boundary. It\ndetermines what permissions are considered for a given subject.\n\nA `Acl` is simply an unordered list or group of `Grant`s. Subjects may\nappear more than once in a list (with different boundaries) and the\npermissions will be merged according to the following truth table:\n\n| input | input | output |\n|-------|-------|--------|\n| false | false | false  |\n| false | true  | false  |\n| false | null  | false  |\n| true  | false | false  |\n| true  | true  | true   |\n| true  | null  | true   |\n| null  | false | false  |\n| null  | true  | true   |\n| null  | null  | null   |\n\nOr in words: take the highest value where `false > true > null`.\n\nAt the end of this combination process, the user is only permitted if\nthe result is true. You can see this as requiring an affirmative\nanswer to permit something, while always allowing you a bigger `no` to\ndeny when things are combined. Null values are additionally not\nrequired to be present in the database, saving us resources. That is\nto say we default to null if there is no relevant record.\n\nFinally, an object is linked to one or more `Acl`s by the `Controlled` multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined in the manner described earlier.","ref":"extension-bonfire_data_access_control.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.AccessControl","doc":"Copyright (c) 2020 James Laver, `bonfire_data_access_control` Contributors\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_access_control.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.ActivityPub","doc":"# Bonfire.Data.ActivityPub\n\n \n\nActor schema.","ref":"extension-bonfire_data_activity_pub.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.ActivityPub","doc":"Copyright (c) 2020 James Laver, bonfire_data_activity_pub Contributors\n    \n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_activity_pub.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.Identity","doc":"# Bonfire.Data.Identity\n\nSchemas for accounts, users, etc.","ref":"extension-bonfire_data_identity.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.Identity","doc":"Copyright (c) 2020 James Laver, bonfire_data_identity Contributors\n    \n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_identity.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.Social","doc":"# Bonfire.Data.Social\n\n \n\nSchemas for social activities, posts, feeds, etc","ref":"extension-bonfire_data_social.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.Social","doc":"Copyright (c) 2020 James Laver, bonfire_data_social Contributors\n    \n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_social.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Me","doc":"# Bonfire.Me\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Account creation\n- Email verification\n- Authentication\n- User/Profile creation\n- User/Profile switching\n- User Profile\n- Settings","ref":"extension-bonfire_me.html"},{"type":"extras","title":"Handy commands - Bonfire.Me","doc":"","ref":"extension-bonfire_me.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Me","doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_me.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Social","doc":"# Bonfire.Social \n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Feeds / Timelines\n- Activities\n- Threads\n- Boosting\n- Liking\n- Flagging\n- etc","ref":"extension-bonfire_social.html"},{"type":"extras","title":"Handy commands - Bonfire.Social","doc":"","ref":"extension-bonfire_social.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Social","doc":"Copyright (c) 2023 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_social.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Social.Graph","doc":"# Bonfire.Social.Graph \n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Following\n- Follow Requests\n- Social graph analysis","ref":"extension-bonfire_social_graph.html"},{"type":"extras","title":"Handy commands - Bonfire.Social.Graph","doc":"","ref":"extension-bonfire_social_graph.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Social.Graph","doc":"Copyright (c) 2023 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_social_graph.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Posts","doc":"# Bonfire.Posts \n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Creating and reading posts","ref":"extension-bonfire_posts.html"},{"type":"extras","title":"Handy commands - Bonfire.Posts","doc":"","ref":"extension-bonfire_posts.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Posts","doc":"Copyright (c) 2020 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_posts.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Messages","doc":"# Bonfire.Messages \n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- DM\n- Group messaging","ref":"extension-bonfire_messages.html"},{"type":"extras","title":"Handy commands - Bonfire.Messages","doc":"","ref":"extension-bonfire_messages.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Messages","doc":"Copyright (c) 2023 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_messages.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Common","doc":"# Bonfire.UI.Common\n\n`Bonfire.UI.Common` is an extension for [Bonfire](https://bonfire.cafe/) that contains:\n\n- Many common functions for web UIs in Bonfire extensions\n- Common and generic re-usable components\n- Etc","ref":"extension-bonfire_ui_common.html"},{"type":"extras","title":"Handy commands - Bonfire.UI.Common","doc":"","ref":"extension-bonfire_ui_common.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Common","doc":"Copyright (c) 2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_ui_common.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Social","doc":"# Bonfire.UI.Social\n![](https://i.imgur.com/XoQvDCW.png)\n\n[Bonfire.UI.Social](http://bonfirenetworks.org/extensions/ui_social.html) is an extension that includes the main User Interfaces (routes, pages and components) required to have a fully working federated social network app.\n\nThis extension is meant to be used by other extensions like [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social), which provides logic for the UI to work with/\n\nYou can customise it by forking, but we recommend creating an extension which uses this one as a dependency, and defines your custom components, views, and/or routes (you can then comment `Bonfire.UI.Social.Routes` from your top-level Router to use your custom routes and views instead).\n\n\n#","ref":"extension-bonfire_ui_social.html"},{"type":"extras","title":"Stack - Bonfire.UI.Social","doc":"So far, Bonfire UI extensions are built with the PETALS stack (note that is not a requirement), which means:\n\n- [Phoenix](https://www.phoenixframework.org/)\n- [Elixir](https://elixir-lang.org/)\n- [TailwindCSS](https://tailwindcss.com/)\n- [Alpine.js](https://alpinejs.dev/)\n- [LiveView](https://github.com/phoenixframework/phoenix_live_view#readme)\n- [Surface](https://surface-ui.org/)\n\nSurface is a server-side rendering component library (built on top of Phoenix and LiveView) that inherits a lot of design patterns from popular JS framework like Vue.js and React, while being almost JavaScript-free compared to common SPAs.\n\n\n#","ref":"extension-bonfire_ui_social.html#stack"},{"type":"extras","title":"Scaffolding - Bonfire.UI.Social","doc":"The relevant folders are:\n- [Components](https://github.com/bonfire-networks/bonfire_ui_social/tree/main/lib/components): Surface stateless and stateful components.\n- [Views](https://github.com/bonfire-networks/bonfire_ui_social/tree/main/lib/views): The main pages that are rendered when navigating to a specific route\n- [Test](https://github.com/bonfire-networks/bonfire_ui_social/tree/main/test): All the unit tests for the specific module.\n\n#","ref":"extension-bonfire_ui_social.html#scaffolding"},{"type":"extras","title":"Other resources - Bonfire.UI.Social","doc":"- [A blog post that introduces the concept of themeable bonfire apps](https://bonfirenetworks.org/posts/let_thousand_bonfires_bloom/)","ref":"extension-bonfire_ui_social.html#other-resources"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Social","doc":"Copyright (c) 2020 Bonfire, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_ui_social.html#copyright-and-license"},{"type":"extras","title":"Bonfire.UI.Me","doc":"# Bonfire.UI.Me\n![](https://i.imgur.com/XoQvDCW.png)\n\n[Bonfire.UI.Me](http://bonfirenetworks.org/extensions/ui_social.html) is an extension that includes the main User Interfaces (routes, pages and components) for functionality around accounts, users, profiles, authentication, etc.\n\nThis extension is meant to be used by other extensions like [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me), which provide logic for the UI to work with.\n\nYou can customise it by forking, but we recommend creating an extension which uses this one as a dependency, and defines your custom components, views, and/or routes (you can then comment `Bonfire.UI.Me.Routes` from your top-level Router to use your custom routes and views instead). \n\n#","ref":"extension-bonfire_ui_me.html"},{"type":"extras","title":"Stack - Bonfire.UI.Me","doc":"So far, Bonfire UI extensions are built with the PETALS stack (note that is not a requirement), which means:\n\n- [Phoenix](https://www.phoenixframework.org/)\n- [Elixir](https://elixir-lang.org/)\n- [TailwindCSS](https://tailwindcss.com/)\n- [Alpine.js](https://alpinejs.dev/)\n- [LiveView](https://github.com/phoenixframework/phoenix_live_view#readme)\n- [Surface](https://surface-ui.org/)\n\nSurface is a server-side rendering component library (built on top of Phoenix and LiveView) that inherits a lot of design patterns from popular JS framework like Vue.js and React, while being almost JavaScript-free compared to common SPAs.  \n\n#","ref":"extension-bonfire_ui_me.html#stack"},{"type":"extras","title":"Scaffolding - Bonfire.UI.Me","doc":"The relevant folders are:\n- [Components](https://github.com/bonfire-networks/bonfire_ui_me/tree/main/lib/components): Surface stateless and stateful components.\n- [Views](https://github.com/bonfire-networks/bonfire_ui_me/tree/main/lib/views): The main pages that are rendered when navigating to a specific route\n- [Test](https://github.com/bonfire-networks/bonfire_ui_me/tree/main/test): All the unit tests for the specific module.\n\n#","ref":"extension-bonfire_ui_me.html#scaffolding"},{"type":"extras","title":"Other resources - Bonfire.UI.Me","doc":"- [A blog post that introduces the concept of themeable bonfire apps](https://bonfirenetworks.org/posts/let_thousand_bonfires_bloom/)","ref":"extension-bonfire_ui_me.html#other-resources"},{"type":"extras","title":"Copyright and License - Bonfire.UI.Me","doc":"Copyright (c) 2022 Bonfire Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_ui_me.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Data.SharedUser","doc":"# Bonfire.Data.SharedUser","ref":"extension-bonfire_data_shared_user.html"},{"type":"extras","title":"Copyright and License - Bonfire.Data.SharedUser","doc":"Copyright (c) 2020 Bonfire Contributors\n    \n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.","ref":"extension-bonfire_data_shared_user.html#copyright-and-license"},{"type":"extras","title":"Bonfire.Tag","doc":"# Bonfire.Tag\n\nAn extension for [Bonfire](https://bonfire.cafe/) that handles:\n\n- Tagging posts or other things (i.e. with a Category from Bonfire.Classify or a location from Bonfire.Geolocate)\n- @ mentions (WIP)\n- Hashtags (WIP)","ref":"extension-bonfire_tag.html"},{"type":"extras","title":"Handy commands - Bonfire.Tag","doc":"","ref":"extension-bonfire_tag.html#handy-commands"},{"type":"extras","title":"Copyright and License - Bonfire.Tag","doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_tag.html#copyright-and-license"},{"type":"extras","title":"ActivityPub","doc":"# ActivityPub\n\nActivityPub Library for elixir.\n\n**WORK IN PROGRESS, TESTING FEDERATION WITH DIFFERENT IMPLEMENTATIONS IS UNDERWAY**","ref":"extension-activity_pub.html"},{"type":"extras","title":"Installation - ActivityPub","doc":"1. Add this library to your dependencies in `mix.exs`\n\n```\ndefp deps do\n  [...]\n  {:activity_pub, git: \"https://github.com/bonfire-networks/activity_pub.git\", branch: \"stable\"} # branch can \"stable\", or \"develop\" for the bleeding edge\nend\n```\n\n2. Create an adapter module. To start, one created at\n   `lib/my_app/adapter.ex` might look like\n\n```elixir\ndefmodule MyApp.Adapter do\n  @moduledoc \"\"\"\n  Adapter functions delegated from the `ActivityPub` Library\n  \"\"\"\n\n  @behaviour ActivityPub.Federator.Adapter\nend\n```\n\nNote that, due to the defined `@behavior`, Elixir will warn you that\nthe required functions\n\n  * `base_url/0`\n  * `get_actor_by_id/1`\n  * `get_actor_by_username/1`\n  * `get_follower_local_ids/1`\n  * `get_following_local_ids/1`\n  * `get_redirect_url/1`\n  * `handle_activity/1`\n  * `maybe_create_remote_actor/1`\n  * `maybe_publish_object/2`\n  * `update_local_actor/2`\n  * `update_remote_actor/1`\n\nhave not yet been implemented though you will be able to start your\napp. Defining these allows `ActivityPub` to handle ActivityPub HTTP\nand database calls and operations. An example of an implemented\nadaptor can be found\n[here](https://github.com/bonfire-networks/bonfire_federate_activitypub/tree/main/lib/adapter\n\"Link to file hosted on GitHub\").\n\nThen set it in config\n\n```\nconfig :activity_pub, :adapter, MyApp.Adapter\n```\n\n3. Set your application repo in config\n\n```\nconfig :activity_pub, :repo, MyApp.Repo\n```\n\n4. Create a new ecto migration and call `ActivityPub.Migration.up/0` from it\n\n5. Inject AP routes to your router by adding `use ActivityPub.Web.Router` to your app's router module\n\n6. Copy the default AP config to your app's confix.exs\n\n```\nconfig :activity_pub, :mrf_simple,\n  media_removal: [],\n  media_nsfw: [],\n  report_removal: [],\n  accept: [],\n  avatar_removal: [],\n  banner_removal: []\n\nconfig :activity_pub, :instance,\n  hostname: \"example.com\",\n  federation_publisher_modules: [ActivityPub.Federator.APPublisher],\n  federation_reachability_timeout_days: 7,\n  federating: true,\n  rewrite_policy: []\n\nconfig :activity_pub, :http,\n  proxy_url: nil,\n  user_agent: \"Your app name\",\n  send_user_agent: true,\n  adapter: [\n    ssl_options: [\n      # Workaround for remote server certificate chain issues\n      partial_chain: &:hackney_connect.partial_chain/1,\n      # We don't support TLS v1.3 yet\n      versions: [:tlsv1, :\"tlsv1.1\", :\"tlsv1.2\"]\n    ]\n  ]\n  ```\n\n7. Change the hostname value in the instance config block to your instance's hostname \n\n8. If you don't already have Oban set up, follow the [Oban installation intructions](https://hexdocs.pm/oban/installation.html#content) and add the AP queues:\n\n```\nconfig :my_app, Oban, queues: [federator_incoming: 50, federator_outgoing: 50, remote_fetcher: 20]\n```\n\nNow you should be able to compile and run your app and move over to integration.","ref":"extension-activity_pub.html#installation"},{"type":"extras","title":"Paginator","doc":"# Paginator\n\n[![Build status](https://github.com/duffelhq/paginator/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/duffelhq/paginator/actions?query=branch%3Amain)\n[![Inline docs](http://inch-ci.org/github/duffelhq/paginator.svg)](http://inch-ci.org/github/duffelhq/paginator)\n\n`Paginator` implements [cursor-based pagination](http://use-the-index-luke.com/no-offset) for Elixir [Ecto](https://github.com/elixir-ecto/ecto).\n\n[Documentation](https://hexdocs.pm/paginator)","ref":"extension-paginator.html"},{"type":"extras","title":"Why? - Paginator","doc":"There are several ways to implement pagination in a project and they all have pros and cons depending on your situation.\n\n#","ref":"extension-paginator.html#why"},{"type":"extras","title":"Limit-offset - Paginator","doc":"This is the easiest method to use and implement: you just have to set `LIMIT` and `OFFSET` on your queries and the\ndatabase will return records based on this two parameters. Unfortunately, it has two major drawbacks:\n\n* Inconsistent results: if the dataset changes while you are querying, the results in the page will shift and your user\nmight end seeing records they have already seen and missing new ones.\n\n* Inefficiency: `OFFSET N` instructs the database to skip the first N results of a query. However, the database must still\nfetch these rows from disk and order them before it can returns the ones requested. If the dataset you are querying is\nlarge this will result in significant slowdowns.\n\n#","ref":"extension-paginator.html#limit-offset"},{"type":"extras","title":"Cursor-based (a.k.a keyset pagination) - Paginator","doc":"This method relies on opaque cursor to figure out where to start selecting records. It is more performant than\n`LIMIT-OFFSET` because it can filter records without traversing all of them.\n\nIt's also consistent, any insertions/deletions before the current page will leave results unaffected.\n\nIt has some limitations though: for instance you can't jump directly to a specific page. This may\nnot be an issue for an API or if you use infinite scrolling on your website.\n\n#","ref":"extension-paginator.html#cursor-based-a-k-a-keyset-pagination"},{"type":"extras","title":"Learn more - Paginator","doc":"* http://use-the-index-luke.com/no-offset\n* http://use-the-index-luke.com/sql/partial-results/fetch-next-page\n* https://www.citusdata.com/blog/2016/03/30/five-ways-to-paginate/\n* https://developer.twitter.com/en/docs/tweets/timelines/guides/working-with-timelines","ref":"extension-paginator.html#learn-more"},{"type":"extras","title":"Getting started - Paginator","doc":"```elixir\ndefmodule MyApp.Repo do\n  use Ecto.Repo,\n    otp_app: :my_app,\n    adapter: Ecto.Adapters.Postgres\n\n  use Paginator\nend\n\nquery = from(p in Post, order_by: [asc: p.inserted_at, asc: p.id])\n\npage = MyApp.Repo.paginate(query, cursor_fields: [:inserted_at, :id], limit: 50)\n\n# `page.edges` contains all the entries for this page.\n# `page.page_info` contains the meta-data associated with this page (cursors, limit, total count)\n```","ref":"extension-paginator.html#getting-started"},{"type":"extras","title":"Install - Paginator","doc":"Add `paginator` to your list of dependencies in `mix.exs`:\n\n```elixir\ndef deps do\n  [{:paginator, \"~> 1.0.4\"}]\nend\n```","ref":"extension-paginator.html#install"},{"type":"extras","title":"Usage - Paginator","doc":"1. Add `Paginator` to your repo.\n\n    ```elixir\n    defmodule MyApp.Repo do\n      use Ecto.Repo,\n        otp_app: :my_app,\n        adapter: Ecto.Adapters.Postgres\n\n      use Paginator\n    end\n    ```\n\n2. Use the `paginate` function to paginate your queries.\n\n    ```elixir\n    query = from(p in Post, order_by: [asc: p.inserted_at, asc: p.id])\n\n    # return the first 50 posts\n    %{edges: edges, page_info: page_info} = Repo.paginate(query, cursor_fields: [:inserted_at, :id], limit: 50)\n\n    # assign the `after` cursor to a variable\n    cursor_after = page_info.end_cursor\n\n    # return the next 50 posts\n    %{edges: edges, page_info: page_info} = Repo.paginate(query, after: cursor_after, cursor_fields: [{:inserted_at, :asc}, {:id, :asc}], limit: 50)\n\n    # assign the `before` cursor to a variable\n    cursor_before = page_info.start_cursor\n\n    # return the previous 50 posts (if no post was created in between it should be the same list as in our first call to `paginate`)\n    %{edges: edges, page_info: page_info} = Repo.paginate(query, before: cursor_before, cursor_fields: [:inserted_at, :id], limit: 50)\n\n    # return total count\n    # NOTE: this will issue a separate `SELECT COUNT(*) FROM table` query to the database.\n    %{edges: edges, page_info: page_info} = Repo.paginate(query, include_total_count: true, cursor_fields: [:inserted_at, :id], limit: 50)\n\n    IO.puts \"total count: #{page_info.total_count}\"\n    ```","ref":"extension-paginator.html#usage"},{"type":"extras","title":"Security Considerations - Paginator","doc":"`Repo.paginate/4` will throw an ArgumentError should it detect an executable term in the cursor parameters passed to it (`before`, `after`).\nThis is done to protect you from potential side-effects of malicious user input, see [paginator_test.exs](https://github.com/duffelhq/paginator/blob/master/test/paginator_test.exs#L820).","ref":"extension-paginator.html#security-considerations"},{"type":"extras","title":"Indexes - Paginator","doc":"If you want to reap all the benefits of this method it is better that you create indexes on the columns you are using as\ncursor fields.\n\n#","ref":"extension-paginator.html#indexes"},{"type":"extras","title":"Example - Paginator","doc":"```elixir\n# If your cursor fields are: [:inserted_at, :id]\n# Add the following in a migration\n\ncreate index(\"posts\", [:inserted_at, :id])\n```","ref":"extension-paginator.html#example"},{"type":"extras","title":"Caveats - Paginator","doc":"* This method requires a deterministic sort order. If the columns you are currently using for sorting don't match that\ndefinition, just add any unique column and extend your index accordingly.\n* You need to add order_by clauses yourself before passing your query to `paginate/2`. In the future we might do that\nfor you automatically based on the fields specified in `:cursor_fields`.\n* There is an outstanding issue where Postgrex fails to properly builds the query if it includes custom PostgreSQL types.\n* This library has only be tested with PostgreSQL.","ref":"extension-paginator.html#caveats"},{"type":"extras","title":"Documentation - Paginator","doc":"Documentation is written into the library, you will find it in the source code, accessible from `iex` and of course, it\nall gets published to [hexdocs](http://hexdocs.pm/paginator).","ref":"extension-paginator.html#documentation"},{"type":"extras","title":"Contributing - Paginator","doc":"#","ref":"extension-paginator.html#contributing"},{"type":"extras","title":"Running tests - Paginator","doc":"Clone the repo and fetch its dependencies:\n\n```\n$ git clone https://github.com/duffelhq/paginator.git\n$ cd paginator\n$ mix deps.get\n$ mix test\n```\n\n#","ref":"extension-paginator.html#running-tests"},{"type":"extras","title":"Building docs - Paginator","doc":"```\n$ mix docs\n```","ref":"extension-paginator.html#building-docs"},{"type":"extras","title":"LICENSE - Paginator","doc":"See [LICENSE](https://github.com/duffelhq/paginator/blob/master/LICENSE.txt)","ref":"extension-paginator.html#license"},{"type":"extras","title":"Voodoo","doc":"# Voodoo\n\n`Voodoo` is a drop-in replacement for [Phoenix path helpers](https://hexdocs.pm/phoenix/routing.html#path-helpers) which is more convenient to use.","ref":"extension-voodoo.html"},{"type":"extras","title":"EctoSparkles","doc":"# EctoSparkles\n\nSome helpers to sparkle on top of [Ecto](https://hexdocs.pm/ecto/Ecto.html) \n\n- [`join_preload`](#join_preload-documentation)\n- [`reusable_join`](#reusablejoin-documentation)\n- `Migrator` to run migrations, rollbacks, etc in a release and `AutoMigrator` to automatically run them at startup.\n- `DataMigration`: a behaviour implemented for data migrations (generally backfills).\n- `Log` to log slow or possible N+1 queries with telemetry (showing stacktraces)\n- `Changesets` with various changeset helpers and validators and `Changesets.Errors` to handle changeset errors\n\nNOTE: you need to put something like `config :ecto_sparkles, :otp_app, :your_otp_app_name` in your app's config.\n\n\n## `join_preload` Documentation\n\nA macro which tells Ecto to perform a join and preload of (up to 5 nested levels of) associations.\n\nBy default, Ecto preloads associations using a separate query for each association, which can degrade performance.\n\nYou could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see examples below).\n\n#","ref":"extension-ecto_sparkles.html"},{"type":"extras","title":"Examples using just Ecto - EctoSparkles","doc":"```\n  query\n  |> join(:left, [o, activity: activity], assoc(:object), as: :object)\n  |> preload([l, activity: activity, object: object], activity: {activity, [object: object]})\n```\n\nEcto requires calling `Query.join/4`, `Query.assoc/3` and `Query.preload/2`. Here's another example:\n\n```\n  Invoice\n  |> join(:left, [i], assoc(i, :customer), as: :customer)\n  |> join(:left, [i], assoc(i, :lines), as: :lines)\n  |> preload([lines: v, customers: c], lines: v, customer: c)\n  |> Repo.all()\n```","ref":"extension-ecto_sparkles.html#examples-using-just-ecto"},{"type":"extras","title":"Example using join_preload - EctoSparkles","doc":"With `join_preload`, you can accomplish this with just one line of code.\n\n```\n  query\n  |> join_preload([:activity, :object])\n```\n\n```\n  Invoice\n  |> join_preload(:customer)\n  |> join_preload(:lines)\n  |> Repo.all()\n```\n\nAs a bonus, `join_preload` automatically makes use of `reusable_join`\nso calling it multiple times for the same association has no ill effects.\n\n\n## `reusable_join` Documentation\n\nA macro is similar to `Ecto.Query.join/{4,5}`, but can be called multiple times \nwith the same alias.\n\nNote that only the first join operation is performed, the subsequent ones that use the same alias\nare just ignored. Also note that because of this behaviour, its mandatory to specify an alias when\nusing this function.\n\nThis is helpful when you need to perform a join while building queries one filter at a time,\nbecause the same filter could be used multiple times or you could have multiple filters that\nrequire the same join, which poses a problem with how the `filter/3` callback work, as you\nneed to return a dynamic with the filtering, which means that the join must have an alias,\nand by default Ecto raises an error when you add multiple joins with the same alias.\n\nTo solve this, it is recommended to use this macro instead of the default `Ecto.Query.join/{4,5}`,\nin which case there will be only one join in the query that can be reused by multiple filters.\n\n#","ref":"extension-ecto_sparkles.html#example-using-join_preload"},{"type":"extras","title":"Creating reusable joins - EctoSparkles","doc":"```elixir\nquery\n|> reusable_join(:left, [t1], t2 in \"other_table\", on: t1.id == t2.id, as: :other_a)\n|> reusable_join(:left, [t1], t2 in \"other_table\", on: t1.id == t2.id, as: :other_b)\n```","ref":"extension-ecto_sparkles.html#creating-reusable-joins"},{"type":"extras","title":"Copyright - EctoSparkles","doc":"- Copyright (c) 2021 Bonfire developers\n- Copyright (c) 2020 Up Learn\n- Copyright (c) 2019 Joshua Nussbaum \n\n- `join_preload` was originally forked from [Ecto.Preloader](https://github.com/joshnuss/ecto_preloader), licensed under WTFPL)\n- `reusable_join` was originally forked from [QueryElf](https://gitlab.com/up-learn-uk/query-elf), licensed under Apache License Version 2.0","ref":"extension-ecto_sparkles.html#copyright"},{"type":"extras","title":"Bonfire.Editor.Milkdown","doc":"# Bonfire.Editor.Milkdown\n\nBonfire composer based on the [Milkdown](https://milkdown.dev/) markdown editor","ref":"extension-bonfire_editor_milkdown.html"},{"type":"extras","title":"ROADMAP - Bonfire.Editor.Milkdown","doc":"- [x] Add emojis using gemoji convention\n- [x] Show emojis suggestions when typing : followed by 2 chars\n- [x] Show mentions suggestions when typing @ followed by 2 chars\n- [x] Show formatting suggestions when typing /\n- [x] Insert emojis from the suggestions list\n- [x] Insert mentions from the suggestions list\n- [ ] Insert formatting from the suggestions list\n- [x] Add placeholder when missing text\n- [ ] Upload images by dragging them in the editor","ref":"extension-bonfire_editor_milkdown.html#roadmap"},{"type":"extras","title":"Copyright and License - Bonfire.Editor.Milkdown","doc":"Copyright (c) 2023 Bonfire, Milkdown, ProseMirror and Remark Contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nAffero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public\nLicense along with this program.  If not, see  .","ref":"extension-bonfire_editor_milkdown.html#copyright-and-license"},{"type":"extras","title":"Arrows","doc":"# Arrows\n\nA handful of (mostly) arrow macros.","ref":"extension-arrows.html"},{"type":"extras","title":"Installation - Arrows","doc":"The package can be installed by adding `arrows` to your list of dependencies in `mix.exs`: -->\n\n```elixir\ndef deps do\n  [\n    {:arrows, \"~> 0.1.0\"}\n  ]\nend\n```\n\nOr via git:\n```elixir\ndef deps do\n  [\n    {:arrows, git: \"https://github.com/bonfire-networks/arrows\", branch: \"main\"}\n  ]\nend\n```","ref":"extension-arrows.html#installation"},{"type":"extras","title":"Documentation - Arrows","doc":"The Elixir [|> (\"pipe\") operator](https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2) is one of the things that seems to get people excited about elixir. Probably in part because you then don't have to keep coming up with function names. Unfortunately it's kind of limiting. \nThe moment you need to pipe a parameter into a position that isn't the first one, it breaks down and you have to drop out of the pipeline format or write a secondary function to handle it.\n\nNot any more! By simply inserting `...` where you would like the value to be inserted, `Arrows` will override where it is placed. This allows you to keep on piping while accommodating that function with the annoying argument order. `Arrows` was inspired by [an existing library](https://hexdocs.pm/magritte/Magritte.html). Here is part of the test suite in lieu of examples:\n\n```elixir\ndefmodule ArrowsTest do\n  use ExUnit.Case\n  use Arrows\n\n  def double(x), do: x * 2\n  def double_fst(x, _), do: x * 2\n  def double_snd(_, x), do: x * 2\n  def add_snd_thd(_, x, y), do: x + y\n\n  test \"|>\" do\n    assert 4 == (2 |> double)\n    assert 4 == (2 |> double())\n    assert 4 == (2 |> double(...))\n    assert 8 == (2 |> double(double(...)))\n    assert 4 == (2 |> double_fst(1))\n    assert 4 == (2 |> double_fst(..., 1))\n    assert 8 == (2 |> double_fst(double(...), 1))\n    assert 4 == (2 |> double_snd(1, ...))\n    assert 8 == (2 |> double_snd(1, double(...)))\n    assert 3 == (2 |> add_snd_thd(1, ..., 1))\n    assert 4 == (2 |> add_snd_thd(1, ..., ...))\n    assert 6 == (2 |> add_snd_thd(1, ..., double(...)))\n    for x   {:ok, ...})\n    end\n  end\nend\n```\n\nA few little extra features you might notice here:\n* You can move the parameter into a subexpression, as in `2 |> double_fst(double(...), 1)` where\n  double will be called before the parameter is passed to `double_fst`.\n* You can use `...` multiple times, substituting it in multiple places.\n* The right hand side need not even be a function call, you can use any expression with `...`.\n\n#","ref":"extension-arrows.html#documentation"},{"type":"extras","title":"Ok-pipe - Arrows","doc":"`Arrows` also provides an `ok-pipe` operator, `~>`, which only pipes into the next function if the result from the last one was considered a success. It's inspired by [OK](https://hexdocs.pm/ok/readme.html), but we have chosen to do things slightly differently so it better fits with our regular pipe.\n\ninput                    | result          |\n:----------------------- | :-------------- |\n`{:ok, x}`               | `fun.(x)`       |\n`{:error, e}`            | `{:error, e}`   |\n`nil`                    | `nil`           |\n`x when not is_nil(x)`   | `fun.(x)`       |\n\nIn the case of a function returning an ok/error tuple being on the left hand side, this is straightforward to determine. In the event of `{:ok, x}`, x will be passed into the right hand side to call. In the event of `{:error, x}`, the result will be `{:error, x}`.\n\nWe also deal with a lot of functions that indicate failure by returning nil. `~>` tries to 'do what I mean' for both of these so you can have one pipe operator to rule them all. If `nil` is a valid result, you must thus be sure to wrap it in an `ok` tuple when it occurs on the left hand side of `~>`.\n\n`|>` and `~>` compose in the way you'd expect; i.e. a `~>` receiving an error tuple or nil will stop executing the rest of the chain of (mixed) pipes.\n\n\nDocumentation can be found at [https://hexdocs.pm/arrows](https://hexdocs.pm/arrows).","ref":"extension-arrows.html#ok-pipe"},{"type":"extras","title":"Needle.ULID","doc":"# Needle.ULID\n\n[![hex.pm](https://img.shields.io/hexpm/v/needle_ulid)](https://hex.pm/packages/needle_ulid)\n[hexdocs](https://hexdocs.pm/needle_ulid)\n\nA ULID datatype and some postgres support for ULID operations (`min`\nand `max` functions and aggregates)\n\nOriginally forked from\n[ecto-ulid](https://github.com/TheRealReal/ecto-ulid) but the internals have been replaced with a dependency on [ex_ulid](https://github.com/omgnetwork/ex_ulid)","ref":"extension-needle_ulid.html"},{"type":"extras","title":"Installation - Needle.ULID","doc":"```elixir\n{:needle_ulid, git: \"https://github.com/bonfire-networks/needle_ulid\", branch: \"main\"}\n```","ref":"extension-needle_ulid.html#installation"},{"type":"extras","title":"Copyright and License - Needle.ULID","doc":"Copyright (c) 2018 The RealReal, Inc.\nCopyright (c) 2020 needle_ulid contributors.\n\nLicensed under the terms of the MIT License.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","ref":"extension-needle_ulid.html#copyright-and-license"},{"type":"extras","title":"Needle","doc":"# Needle\n\n[![hex.pm](https://img.shields.io/hexpm/v/needle)](https://hex.pm/packages/needle)\n[hexdocs](https://hexdocs.pm/needle)\n\nEcto's missing universal foreign key\n\n> One foreign key to rule them all and in the darkness, bind them.\n\n-- Gandalf, paraphrased.\n\nA means of foreign keying many tables in one field. Designed for\nhighly interlinked data in highly dynamic schemata where tracking all\nthe foreign keys is neither desired nor practical.\n\nNote: a universal foreign key is actually a hard problem. Many\napproaches are on offer with a variety of tradeoffs. You should\ncarefully consider a variety of approaches rather than just blindly\nadopting the one that fitted our project's needs the best!","ref":"extension-needle.html"},{"type":"extras","title":"Background - Needle","doc":"A `Table` is a record of a table that may be linked to by a pointer.\nA `Pointer` is a pointer id and a table id.\n\nWith these two ingredients, we can construct a means of pointing to\nany table that has a `Table` entry.\n\n`Pointer` and `Table` IDs are both `Needle.ULID`, a UUID-like type\nthat combines a millisecond-precision timestamp and some randomness to\nreduce the likelihood of a clash. It naturally sorts both in binary\nand text form by time and as far as postgres is concerned, it's a UUID.","ref":"extension-needle.html#background"},{"type":"extras","title":"Installation - Needle","doc":"Aside from the hex dependency, you will also need to write a simple\nmigration to set up the database before you can start writing your\nregular migrations:\n\n```elixir\ndefmodule MyApp.Repo.Migrations.InitPointers  do\n  @moduledoc false\n  use Ecto.Migration\n  import Needle.Migration\n\n  def up(), do: inits(:up)\n  def down(), do: inits(:down)\n\n  defp inits(dir) do\n    init_pointers_ulid_extra(dir) # this one is optional but recommended\n    init_pointers(dir) # this one is not optional\n  end\nend\n```","ref":"extension-needle.html#installation"},{"type":"extras","title":"Defining a Pointable Type - Needle","doc":"Pointable tables require a unique sentinel ULID to identify\nthem. These must be 26 characters long and in the alphabet of\n[Crockford's Base32](https://en.wikipedia.org/wiki/Base32#Crockford's_Base32).\nThey should be easy to identify in a printout and might be silly.\n\nThere is a helper function, `synthesise!/1` in `Needle.ULID` to\nassist with this process - give it a 26-character long binary of ascii\nalphanumerics and it will give you the closest ULID that matches back.\n\nLet's look at a simple schema:\n\n```elixir\ndefmodule MyApp.Greeting do\n  use Needle.Pointable,\n    otp_app: :my_app,\n    source: \"myapp_greeting\",\n    table_id: \"GREET1NGSFR0MD0CEXAMP1E000\"\n\n  pointable_schema do\n    field :greeting, :string\n  end\nend\n```\n\nTo declare a pointable schema, we start by using `Needle.Pointable`,\nproviding the name of our otp application, the source table's name in\nthe database and our chosen sentinel ULID.\n\nWe then call `pointable_schema` and define any fields we wish to put\ndirectly in the table. For the most part, `pointable_schema` is like\nEcto's `schema` macro, except you do not provide the table name and\nlet it handle the primary key.\n\nIf for some reason you wished to turn autogeneration off, you could\npass `autogenerate: false` to the options provided when using\n`Needle.Pointable`.\n\nNow let's define the migration for our schema:\n\n```elixir\ndefmodule MyApp.Repo.Migrations.Greeting  do\n  @moduledoc false\n  use Ecto.Migration\n  import Needle.Migration\n\n  def up() do\n    create_pointable_table(:greeting, \"GREET1NGSFR0MD0CEXAMP1E000\") do\n      add :greeting, :text, null: false\n    end\n  end\n\n  def down() do\n    drop_pointable_table(:greeting, \"GREET1NGSFR0MD0CEXAMP1E000\")\n  end\nend\n```\n\nAs you can see, it's pretty similar to defining a regular migration,\nexcept you use `create_pointable_table` and\n`drop_pointable_table`. Notice that our sentinel ULID makes an\nappearance again here. It's *very* important that these match what we\ndeclared in the schema.","ref":"extension-needle.html#defining-a-pointable-type"},{"type":"extras","title":"Referencing Needle - Needle","doc":"Ecto does not know anything about our scheme, so unless we\nspecifically want something to reference one of the pointed tables, we\ntypically `belongs_to` with `Needle.Pointer`. The table in which we\ndo this does not itself need to be pointable.\n\n```elixir\ndefmodule MyApp.Foo do\n\n  use Ecto.Schema\n  alias Needle.Pointer\n\n  # regular ecto table, not pointable!\n  schema \"hello\" do\n    belongs_to :pointer, Pointer # who knows what it points to?\n  end\nend\n```\n\nYou may choose to reference a specific schema rather than Pointer if it\nwill only point to a single table. If you do this, you must ensure\nthat the referenced record exists in that table in the normal\nway. There may be some performance benefit, we didn't benchmark it.\n\nThe migration is slightly more complex, we have to decide what type of\na pointer it is. Needle come in three categories:\n\n* A strong pointer is not nullable and is deleted when the object it\n  points to is deleted.\n* A weak pointer is nullable and is nilified when the object it points\n  to is deleted.\n* An unbreakable pointer will raise when you attempt to delete the\n  object it points to.\n\n| Type        | Nullable? | On Delete   |\n|-------------|-----------|-------------|\n| Strong      | No        | Cascade     |\n| Weak        | Yes       | Set Null    |\n| Unbreakable | No        | Raise       |\n\nIn this case we will use a strong pointer, because we want it to be\ndeleted if the pointed object is deleted.\n\n```elixir\ndefmodule MyApp.Repo.Migrations.Hello  do\n  @moduledoc false\n  use Ecto.Migration\n  import Needle.Migration\n\n  def change() do\n    create_if_not_exists table(:hello) do\n      add :pointer, strong_pointer(), null: false\n      add :greeting, :text, null: false\n    end\n  end\nend\n```\n\nIf you are pointing to a specific table instead of pointer,\n`strong_pointer/1` allows you to pass the name of that module\n(`strong_pointer/0` calls this with `Needle.Pointer`).","ref":"extension-needle.html#referencing-needle"},{"type":"extras","title":"Dereferencing Needle - Needle","doc":"It is common that even though you have a universal foreign key, you\nwill want to issue different queries based upon the type that is being\npointed to. For this reason, it is up to you to decide how to perform\nan onward query.\n\n`Needle.Pointers.schema/1` turns a `Pointer` into an Ecto schema module name\nyou can switch against. `Needle.Pointers.plan` breaks down a list of Needle\ninto a map of ids keyed by schema module. It is handy to define some\nfunctions in your (non-library) application that can load any type of\npointer in given contexts.","ref":"extension-needle.html#dereferencing-needle"},{"type":"extras","title":"Querying Needle - Needle","doc":"Since `Pointer` has a table, you can use its `table_id` field to\nfilter by pointed type. `Needle.Tables.id!/1` (or `ids!/1` for a\nlist) can be used to obtain the IDs for a table or tables.\n\nThen you run into another problem, that even though you know all of\nthe tables you're working with will have a certain field, you need to\nknow which table they are to work with them! The solution to this is\nwhat we are calling 'mixin tables' for convenience.\n\nA mixin table has a `Pointer` primary key along with any other fields\nyou wish to store in this mixin. By moving fields out to mixin tables,\nyou gain knowledge of the table name to which you need to join.\n\nAn example mixin schema:\n\n```elixir\ndefmodule My.Creator  do\n  use Needle.Mixin,\n    otp_app: :my_app,\n    source: \"creator\"\n\n  mixin_schema do\n    belongs_to :creator, My.User\n  end\nend\n```\n\nMixin tables are not themselves pointable, so there is no need to\nspecify a table id as when defining a pointable schema.\n\nThe migration for this is slightly more complicated:\n\n```elixir\ndefmodule My.Creator.Migration do\n\n  import Ecto.Migration\n  import Needle.Migration\n\n  defp creator_table(), do: My.Creator.__schema__(:source)\n  defp user_table(), do: My.User.__schema__(:source)\n\n  def migrate_creator(index_opts \\\\ []),\n    do: migrate_creator(index_opts, direction())\n\n  defp migrate_creator(index_opts, :up) do\n    create_mixin_table(creator_table()) do\n      add :creator_id, strong_pointer(user_table()), null: false \n    end\n    create_if_not_exists(unique_index(creator_table(), [:creator_id], index_opts))\n  end\n\n  defp migrate_creator(index_opts, :down) do\n    drop_if_exists(unique_index(creator_table(), [:creator_id], index_opts))\n    drop_mixin_table(creator_table())\n  end\nend\n```","ref":"extension-needle.html#querying-needle"},{"type":"extras","title":"Virtual pointables (\"virtuals\") - Needle","doc":"Virtuals are a new addition in needle 0.6.0. They behave like\npointables that you have not added any fields to.\n\nWe noticed it was very common in bonfire to create pointables with no\nextra fields just so we could use the needle system. Virtuals are\nalternative for this case that requires less typing and provides a\nreduced overhead vs pointables.\n\nVirtuals are backed by a writable view onto the `needle` table. This\nmeans that when we can save the cost of maintaining a primary key in\nthat table and the associated disk space.\n\nIn all other respects, they behave like pointables. You can have\nchangesets over them and select and insert as usual.","ref":"extension-needle.html#virtual-pointables-virtuals"},{"type":"extras","title":"Elixir-based logic - Needle","doc":"The practical result of needle is that it pushes a certain amount of\nvalidation and consistency logic back into elixir land. It is\ntherefore your elixir code's responsibility to ensure that data is\ninserted into the appropriate mixin tables when inserting a pointable\nobject and to manage deletions as appropriate.\n\nWhen assembling queries with mixin tables, pay careful attention to\nthe type of join you are performing. An inner join is explicitly\nasking not to be shown objects that do not have a record for that\nmixin. You quite possibly wanted to left join.","ref":"extension-needle.html#elixir-based-logic"},{"type":"extras","title":"Configuration and overrides - Needle","doc":"Every pointable or mixin schema is overrideable with configuration\nduring compilation (this is why using them requires an `:otp_app` to\nbe specified). For example, we could override `Needle.Table` (which\nis a pointable table) thus:\n\n```elixir\nconfig :needle, Needle.Table, source: \"my_pointers_table\"\n```\n\nThe `table_id` is also configurable, but we don't recommend you change it.\n\nIn addition, all pointable and mixin schemas permit extension with\n[Exto](https://github.com/bonfire-networks/exto). See the [Exto\ndocs](https://hexdocs.pm/exto/) for more information about how to\nextend schemas via configuration. You will probably at the very least\nwant to insert some `has_one` for mixins off your pointables.","ref":"extension-needle.html#configuration-and-overrides"},{"type":"extras","title":"Tradeoffs - Needle","doc":"All solutions to the universal primary key problem have tradeofs. Here\nare what we see as the deficiencies in our approach:\n\n1. It forces a ULID on you. This is great for us, but not\n   everyone. ULID exposes a timestamp with millisecond precision. If\n   the time of creation of a resource is sensitive information for\n   your purposes, ULIDs are not going to be suitable for you.\n2. Ecto has no knowledge of the specialty of `Pointer`,\n   e.g. `Repo.preload` does not work and you need to specify a join\n   condition to join through a pointer. Use our functions or add extra\n   associations with exto configuration.\n3. Dereferencing a list of needle requires a select query per table\n   type that occurs in the input set.\n4. Reliance on user attention. You have to follow the instructions\n   correctly to make the system work at all.\n5. There is likely some performance impact from postgres not\n   understanding the relationships between the various tables\n   properly. It's hard to gauge and we haven't even tried.\n\nThese are not likely to change. If you're going to pick\nthis library, do so in the full knowledge of the tradeoffs it makes.\n\nAlternatives include (I'm sure you can think of others):\n\n* Storing the table name in a second column alongside every foreign key.\n* A compound datatype of id and table name.\n* Byte/String manipulation tricks.\n* Evil SQL hacks based upon compile time configuration.\n\nWhile we have our gripes with this approach, once you've gotten the\nhang of using it, it works out pretty well for most purposes and it's\none of the simpler options to work with.","ref":"extension-needle.html#tradeoffs"},{"type":"extras","title":"Copyright and License - Needle","doc":"Copyright (c) 2020 needle Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"extension-needle.html#copyright-and-license"},{"type":"extras","title":"Exto","doc":"# Exto\n\n[![hex.pm](https://img.shields.io/hexpm/v/exto)](https://hex.pm/packages/exto)\n[hexdocs](https://hexdocs.pm/exto)\n\n`Exto` provides configuration-driven Ecto schema extensibility","ref":"extension-exto.html"},{"type":"extras","title":"Usage - Exto","doc":"Example Schema:\n\n```elixir\ndefmodule My.Schema do\n  use Ecto.Schema\n  import Exto, only: [flex_schema: 1]\n\n  schema \"my_table\" do\n    field :name, :string # just normal schema things\n    flex_schema(:my_app) # boom! give me the stuff\n  end\nend\n```\n\nExample configuration\n\n```elixir\nconfig :my_app, My.Schema,\n  belongs_to: [\n    foo: Foo,                   # belongs_to :foo, Foo\n    bar: {Bar, type: :integer}, # belongs_to :bar, Bar, type: :integer\n  ],\n  field: [\n    foo: :string,                # field :foo, :string\n    bar: {:integer, default: 4}, # field :foo, :integer, default: 4\n  ],\n  has_one: [\n    foo: Foo,                             # has_one :foo, Foo\n    bar: {Bar, foreign_key: :the_bar_id}, # has_one :bar, Bar, foreign_key: :the_bar_id\n  ]\n  has_many: [\n    foo: Foo,                             # has_many :foo, Foo\n    bar: {Bar, foreign_key: :the_bar_id}, # has_many :bar, Bar, foreign_key: :the_bar_id\n  ]\n  many_to_many: [\n    foo: Foo,                         # many_to_many :foo, Foo\n    bar: {Bar, join_through: FooBar}, # many_to_many :bar, Bar, :join_through: FooBar\n  ]\n```\n\n  This one won't work very well because we define `foo` and `bar` 5\n  times each, but I think you get the point.\n\n  Reading of configuration is done during compile time. The relations\n  will be baked in during compilation, thus:\n\n  * Do not expect this to work in runtime config.\n  * You will need to rebuild all dependencies which use this macro\n    when you change their configuration.","ref":"extension-exto.html#usage"},{"type":"extras","title":"Copyright and License - Exto","doc":"Copyright (c) 2020 Exto Contributors\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"extension-exto.html#copyright-and-license"},{"type":"extras","title":"Zest","doc":"# Zest\n\nA fresh approach to testing.","ref":"extension-zest.html"},{"type":"extras","title":"Usage - Zest","doc":"Installation:\n\n```elixir\n{:zest, \"~> 0.1.2\"}\n```\n\nExample (taken from our test suite):\n\n```elixir\ndefmodule MyTest do\n  use ExUnit.Case\n  import Zest\n  \n  test \"scope fails spectacularly\" do\n    scope [this: %{is: :a}, test: :case] do\n      scope [error: :this_should_not_show] do\n      end\n      scope [the: :order, must: :be_correct] do\n        scope [to: :pass], assert(true == false)\n      end\n    end\n  end\n\nend\n```\n\nOutput:\n\n```\nZest Context:\n* this: %{is: :a}\n* test: :case\n* the: :order\n* must: :be_correct\n* to: :pass\n\n\n  1) test scope fails spectacularly (ZestTest)\n     test/zest_test.exs:7\n     Assertion with == failed\n     code:  assert true == false\n     left:  true\n     right: false\n     stacktrace:\n       (zest 0.1.0) lib/zest.ex:52: Zest.in_scope/2\n       (zest 0.1.0) lib/zest.ex:47: anonymous fn/1 in Zest.in_scope/2\n       (zest 0.1.0) lib/zest.ex:113: Zest.intercept/2\n       test/zest_test.exs:8: (test)\n```","ref":"extension-zest.html#usage"},{"type":"extras","title":"Contributing - Zest","doc":"Contributions are welcome, even just doc fixes or suggestions.\n\nThis project has adopted a [Code of Conduct](CONDUCT.md) based on the\nContributor Covenant. Please be nice when interacting with the community.","ref":"extension-zest.html#contributing"},{"type":"extras","title":"Copyright and License - Zest","doc":"Copyright (c) 2020 James Laver\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"extension-zest.html#copyright-and-license"},{"type":"extras","title":"Grumble","doc":"# Grumble\n\nA DSL for generating GraphQL queries","ref":"extension-grumble.html"},{"type":"extras","title":"Status: beta - Grumble","doc":"We use this in our tests at work to generate all the queries (because\nwe outgrew string concatenation). I'm not sure I'd want to depend on\nit in production yet because it's hard to feel like it's had a proper\nstress testing.\n\n* Needs (better) tests and documentation.\n* Missing support for some things we don't use.","ref":"extension-grumble.html#status-beta"},{"type":"extras","title":"Usage - Grumble","doc":"Add to your deps:\n\n```elixir\n{:grumble, \"~> 0.1.0\"}\n```\n\nSimple example:\n\n```elixir\nimport Grumble\nalias Grumble.PP\n\nIO.puts(PP.to_string(\n  query(\n    params: [community_id: type!(:string)],\n    fields: [\n      field(\n        :community,\n        args: [community_id: var(:community_id)],\n        fields: [:id, :name]\n      )\n    ]\n  )\n))\n```\n\nOutput:\n\n```\nquery($communityId: String!) {\n  community(communityId: $communityId) {\n    name\n    id\n  }\n}\n```","ref":"extension-grumble.html#usage"},{"type":"extras","title":"Guide - Grumble","doc":"Most of the useful functions are in the `Grumble` module. From there\nyou can read which arguments are understood by the relevant `new`\nfunction. We apologise for the poor documentation, please feel free to\ncontribute better docs!","ref":"extension-grumble.html#guide"},{"type":"extras","title":"Contributing - Grumble","doc":"Contributions are welcome, even just doc fixes or suggestions.\n\nThis project has adopted a [Code of Conduct](CONDUCT.md) based on the\nContributor Covenant. Please be nice when interacting with the community.","ref":"extension-grumble.html#contributing"},{"type":"extras","title":"Copyright and License - Grumble","doc":"Copyright (c) 2020 Grumble contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","ref":"extension-grumble.html#copyright-and-license"},{"type":"extras","title":"Development guide","doc":"# Development guide\n\n_These instructions are for hacking on Bonfire. If you wish to deploy in production, please refer to our deployment guide instead._\n\nHello, potential contributor! :-)\n\nThis is a work in progress guide to getting up and running as a developer. Please ask questions in the issue tracker if something is not clear and we'll try to improve it.\n\nHappy hacking!","ref":"hacking.html"},{"type":"extras","title":"Status: beta - have fun and provide feedback 🙏 - Development guide","doc":"Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances (meaning not using it for your primary fediverse identity) yet because it's not quite ready for that today.","ref":"hacking.html#status-beta-have-fun-and-provide-feedback"},{"type":"extras","title":"Download - Development guide","doc":"Either way, you need to first clone this repository and change into the directory and then do some configuration:\n\n```sh\n$ git clone https://github.com/bonfire-networks/bonfire-app bonfire\n$ cd bonfire\n```","ref":"hacking.html#download"},{"type":"extras","title":"Configure - Development guide","doc":"#","ref":"hacking.html#configure"},{"type":"extras","title":"Pick a flavour - Development guide","doc":"Bonfire is a flexible platform that powers a variety of social networks. The first thing you have to choose is which app (or \"flavour\") you want to hack on:\n\n- `classic` (\"Bonfire Social\", a basic social network that interoperates with the fediverse)\n- `community` (for groups and communities)\n- `cooperation` (for building cooperative economic networks)\n\nNote that at the current time, the core team are focusing most of their efforts on the classic flavour and this is where we recommend you start.\n\nYou first need to install [just](https://github.com/casey/just#packages) which is a handy tool (a `make` alternative) to run commands defined in `./justfile`.\n\nSo for example if you want to run the `classic` flavour, with a fully-docker-managed setup (see the other options available below), run:\n\n- `export FLAVOUR=classic WITH_DOCKER=total` \n\nYou may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time (eg. `~/.bashrc` or `~/.zshrc`)\n\n- Make sure docker daemon is running if you chose a docker managed setup.\n\n- Then run `just config` to initialise some config.\n\n#","ref":"hacking.html#pick-a-flavour"},{"type":"extras","title":"Configure - Development guide","doc":"- Then edit the config (especially the secrets) for the current flavour in `./.env`\n\n#","ref":"hacking.html#configure"},{"type":"extras","title":"Option A - the entry way (fully managed via docker-compose, recommended when you're first exploring) - Development guide","doc":"- Dependencies:\n  - Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n\n- Make sure you've set the environment variable to indicate your choice: `export WITH_DOCKER=total`\n\n- Make sure you've edited your .env file (see above) before getting started and proceed to Hello world!\n\n#","ref":"hacking.html#option-a-the-entry-way-fully-managed-via-docker-compose-recommended-when-you-re-first-exploring"},{"type":"extras","title":"Option B - the easy way (with bare-metal elixir, and docker-managed tooling, database & search index, recommended for active development) - Development guide","doc":"> Note: you can use a tool like [rtx](https://github.com/jdxcode/rtx) or asdf to setup the environment (run `rtx install` in the root directory).\n\n- Dependencies:\n  - Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n  - [yarn](https://yarnpkg.com)\n  - Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n\n- Make sure you've set the env to indicate your choice: `export WITH_DOCKER=easy`\n\n- Make sure you've edited your .env file (see above) before getting started and proceed to Hello world!\n\n#","ref":"hacking.html#option-b-the-easy-way-with-bare-metal-elixir-and-docker-managed-tooling-database-search-index-recommended-for-active-development"},{"type":"extras","title":"Option C - the partial way (with bare-metal elixir and tooling, and docker-managed database & search index) - Development guide","doc":"> Note: you can use a tool like [rtx](https://github.com/jdxcode/rtx) or asdf to setup the environment (run `rtx install` in the root directory).\n\n- Dependencies:\n  - Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n  - Recent versions of [Rust](https://www.rust-lang.org/tools/install) and Cargo\n  - [yarn](https://yarnpkg.com)\n  - Recent versions of Docker & [docker-compose](https://docs.docker.com/compose/install/)\n\n- Make sure you've set the environment variable to indicate your choice: `export WITH_DOCKER=partial`\n\n- Make sure you've edited your .env file (see above) before getting started and proceed to Hello world!\n\n#","ref":"hacking.html#option-c-the-partial-way-with-bare-metal-elixir-and-tooling-and-docker-managed-database-search-index"},{"type":"extras","title":"Option D - the bare metal (if you don't use docker) - Development guide","doc":"> Note: you can use a tool like [rtx](https://github.com/jdxcode/rtx) or asdf to setup your the environment (run `rtx install` in the root directory). You will still need to install Postgres and Meili seperately though.\n\n- Dependencies:\n  - Recent versions of [Elixir](https://elixir-lang.org/install.html) (1.15+) and OTP/erlang (25+)\n  - Recent versions of [Rust](https://www.rust-lang.org/tools/install) and Cargo\n  - [yarn](https://yarnpkg.com)\n  - Postgres 12+ (or rather [Postgis](https://postgis.net/install/) if using the bonfire_geolocate extension)\n  - [Meili Search](https://docs.meilisearch.com/learn/getting_started/installation.html) (optional)\n\n- You will need to set the relevant environment variables in the .env file (see above) to match your local install of Postgres.\n\n- If you want search capabilities, you'll also need to setup a Meili server and set the relevant env variables as well.\n\n- Make sure you've set the environment variable to indicate your choice: `export WITH_DOCKER=no` and proceed to Hello world!\n\n#","ref":"hacking.html#option-d-the-bare-metal-if-you-don-t-use-docker"},{"type":"extras","title":"Option E - the nix one (dev environment with Nix) - Development guide","doc":"Dependencies:\n\n- Run a recent version of Nix or NixOS: https://nixos.org/download.html\n\n- Enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes\n\n- Install [direnv](https://direnv.net/) through nix if you don't have the tool already: `nix profile install nixpkgs#direnv` and add it to your shell: https://direnv.net/docs/hook.html\n\n- Clone the bonfire-app repo if you haven't already and allow direnv to use environment variables:\n  ```\n  git clone https://github.com/bonfire-networks/bonfire-app\n  cd `bonfire-app`\n  direnv allow\n  ```\n\nThe tool direnv is necessary for the nix setup as the nix shell environment will use variables defined on `.envrc` to set itself up.\n\nNote: when you run `direnv allow` on the bonfire-app directory for the first time, nix will automatically fetch the dependencies for bonfire. The process will take a while as it's downloading everything needed to use the development environment. Afterwards you will be able to use just fine. Proceeding times you enter the directory, the shell with automatically set up for your use without downloading the packages again.\n\nYou will need to update the db directory which is automatically created by nix the first time you initialized the shell with `direnv allow`. You can do so with the following steps:\n- Update `props.nix` to the settings you want.\n- Run `just nix-db-init` to create the database and user for postgres defined on `props.nix`.\n- Modify the `.env` file to comment out all `POSTGRES_*` variables. These are populated automatically by nix. So if the variables are set here, you may get issues with overriding your settings in `props.nix` when using bonfire.\n- You can now proceed to Hello World!\n\nNote: if you ever want to shut off the postgres server in nix, simply run the nix-db targets in just:\n\n```\n# stop postgres server running locally\njust nix-db stop\n# start postgres server running locally\njust nix-db start\n```","ref":"hacking.html#option-e-the-nix-one-dev-environment-with-nix"},{"type":"extras","title":"Hello world! - Development guide","doc":"- From a fresh checkout of this repository, this command will fetch the app's dependencies and setup the database (the same commands apply for all three options above):\n\n```\njust setup-dev\n```\n\n- You should then be able to run the app with:\n\n```\njust dev\n```\n\n- See the `just` commands below for more things you may want to do.","ref":"hacking.html#hello-world"},{"type":"extras","title":"Onboarding - Development guide","doc":"By default, the back-end listens on port 4000 (TCP), so you can access it on http://localhost:4000/\n\nYour first step will be to create an account to log in with. The\neasiest way to do this is with our mix task:\n\n```\n$ just mix bonfire.account.new\nEnter an email address: root@localhost\nEnter a password:\n```\n\nYour password must be at least 10 characters long and the output could be more helpful if you don't do that. This task seems to work most reliably if you open a second terminal window with the devserver running. We're not sure why.\n\nYou should then be able to log in and create a user through the web interface.\n\nIf you would like to become an administrator, there is a mix task for that too:\n\n```shell\njust mix bonfire.user.admin.promote your_username \n```","ref":"hacking.html#onboarding"},{"type":"extras","title":"The Bonfire Environment - Development guide","doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of\nconveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back.\n\n* [Architecture](./ARCHITECTURE.md) - an overview of the stack and code structure.\n- [Bonfire-flavoured Elixir](./BONFIRE-FLAVOURED-ELIXIR.md) - an introduction to the way we write Elixir.\n- [Bonfire's Database: an Introduction](./DATABASE.md) - an overview of how our database is designed.\n- [Boundaries](./BOUNDARIES.md) - an introduction to our access control system.\n\nNote: these are still at the early draft stage, we expect to gradually improve documentation over time.","ref":"hacking.html#the-bonfire-environment"},{"type":"extras","title":"Documentation - Development guide","doc":"The code is somewhat documented inline. You can generate HTML docs (using `Exdoc`) by running `just docs`.","ref":"hacking.html#documentation"},{"type":"extras","title":"Additional information - Development guide","doc":"- messctl is a little utility for programmatically updating the .deps files from which the final elixir dependencies list is compiled by the mess script. The only use of it is in the dep-\\* tasks of the Makefile. It is used by some of the project developers and the build does not rely on it.\n\n- `./extensions/` is used to hack on local copies of Bonfire extensions. You can clone an extension from its git repo and use the local version during development, eg: `just dep-clone-local bonfire_me https://github.com/bonfire-networks/bonfire_me`\n\n- `./forks/` is used to hack on local copies of any other dependencies.\n\n- You can migrate the DB when the app is running (also runs automatically on startup): `Bonfire.Common.Repo.migrate`\n\n- You can generate a dependency graph using `just xref-graph` which will generate a DOT file at `docs/` (if Graphviz is installed it will also generate an SVG visualisation using `dot`).\n\n#","ref":"hacking.html#additional-information"},{"type":"extras","title":"Usage under Windows (WSL, MSYS or CYGWIN) - Development guide","doc":"By default, the `justfile` requires symlinks, which can be enabled with the help of [this link](https://stackoverflow.com/a/59761201).\n\nSee the [pull request adding WSL support](https://github.com/bonfire-networks/bonfire-app/pull/111) for details about usage without symlinks.\n\n## `just` commands\n\nRun `just` followed by any of these commands when appropriate rather than directly using the equivalent commands like `mix`, `docker`, `docker-compose`, etc. For example, `just setup` will get you started, and `just dev` will run the app.\n\nYou can first set an env variable to control which mode these commands will assume you're using. Here are your options:\n\n- `WITH_DOCKER=total` : use docker for everything (default)\n- `WITH_DOCKER=partial` : use docker for services like the DB\n- `WITH_DOCKER=easy` : use docker for services like the DB & compiled utilities like messctl\n- `WITH_DOCKER=no` : please no\n\nRun `just help` to see the list of possible commands and what they do.","ref":"hacking.html#usage-under-windows-wsl-msys-or-cygwin"},{"type":"extras","title":"Troubleshooting - Development guide","doc":"#","ref":"hacking.html#troubleshooting"},{"type":"extras","title":"EACCES Permissions Error - Development guide","doc":"If you get a permissions error when following any of the steps, run the following command and it should be fixed:\n\n```shell\ncd bonfire && sudo chown -R yourusername:yourusername .\n```\n\nNote that the command should be modified so your shell is pointing to wherever you have bonfire installed. If you are already in the bonfire directory then you only need to worry about running the `chown` portion of the command.\n\n#","ref":"hacking.html#eacces-permissions-error"},{"type":"extras","title":"Unable to access Postgres database - Development guide","doc":"If you are getting any `:nxdomain` errors, check if you have any firewalls that may be blocking the port on your system.\n\nFor example, if you are running UFW (a lot of Linux distros do), run the following command to allow access to port 4000:\n\n```shell\nsudo ufw allow 4000\n```\n\n### (Mix) Package fetch failed\n\nExample:\n\n```\n** (Mix) Package fetch failed and no cached copy available (https://repo.hex.pm/tarballs/distillery-2.0.12.tar)\n```\n\nIn this case, distillery (as an example of a dependency) made a new release and retired the old release from hex. The new version (`2.0.14`) is quite close to the version we were depending on (`2.0.12`), so we chose to upgrade:\n\n```shell\nmix deps.update distillery\n```\n\nThis respects the version bounds in `mix.exs` (`~> 2.0`), so increment that if required.\n\n### `(DBConnection.ConnectionError) tcp recv: closed`\n\nExample:\n\n```\n** (DBConnection.ConnectionError) tcp recv: closed (the connection was closed by the pool, possibly due to a timeout or because the pool has been terminated)\n```\n\nIn this case, the seeds were unable to complete because a query took too long to execute on your machine. You can configure the timeout to be larger in the `dev` environment:\n\n1. Open `config/dev.exs` in your editor.\n2. Find the database configuration (search for `Bonfire.Common.Repo`).\n3. Add `timeout: 60_000` to the list of options:\n\n```\nconfig :bonfire, Bonfire.Common.Repo,\n  timeout: 60_000,\n  [...]\n```","ref":"hacking.html#unable-to-access-postgres-database"},{"type":"extras","title":"Deployment guide","doc":"# Deployment guide\n\n#","ref":"deploy.html"},{"type":"extras","title":"WARNING: beta status - have fun but don't rely on it yet 🙏 - Deployment guide","doc":"Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances yet (meaning not using it for your primary fediverse identity) because it's not quite ready for that today. \n\n_These instructions are for setting up Bonfire in production. If you want to run the backend in development, please refer to our developer guide instead._","ref":"deploy.html#warning-beta-status-have-fun-but-don-t-rely-on-it-yet"},{"type":"extras","title":"Security Warning - Deployment guide","doc":"We recommend only granting an account to people you trust to minimise the attack surface. Accordingly, Bonfire ships with public registration disabled. The admin panel has an `invite` facility. \n\n---","ref":"deploy.html#security-warning"},{"type":"extras","title":"Step - 0 - Decide how you want to deploy and manage the app - Deployment guide","doc":"* Option A - Install using [Co-op Cloud](https://coopcloud.tech) (recommended) which is an alternative to corporate cloud services built by tech co-ops, and provides handy tools for setting up and managing many self-hosted free software tools using ready-to-use \"recipes\". Very useful if you'd like to host Bonfire alongside other open and/or federated projects. In this case, jump straight to step 4.\n* Option B - Install using Docker containers (easy mode)\n  * Option B1 - Using pre-built Docker images \n  * Option B2 - Building your own Docker image (if you want to make changes to the code)\n* Option C - Manual installation (without Docker)","ref":"deploy.html#step-0-decide-how-you-want-to-deploy-and-manage-the-app"},{"type":"extras","title":"Step 1 - Download and configure the app - Deployment guide","doc":"#","ref":"deploy.html#step-1-download-and-configure-the-app"},{"type":"extras","title":"Option A - Install using Co-op Cloud (recommended) - Deployment guide","doc":"1. Install [Abra](https://docs.coopcloud.tech/abra/) on your machine\n2. [Set up a server with co-op cloud](https://docs.coopcloud.tech/operators/) \n3. Use the [Bonfire recipe](https://recipes.coopcloud.tech/bonfire) and follow the instructions there. \n\n#","ref":"deploy.html#option-a-install-using-co-op-cloud-recommended"},{"type":"extras","title":"Options B and C - Deployment guide","doc":"1. Install dependencies. \nYou may need to install [just](https://github.com/casey/just#packages), and other requirements such as Docker (check the exact list of requirements based on the option you choose in step 2.)\n\n2. Clone this repository and change into the directory:\n\n```sh\ngit clone --depth 1 https://github.com/bonfire-networks/bonfire-app.git bonfire && cd bonfire\n```\n\n3. Specify what flavour you want to run in production:\n\nThe first thing to do is choose what flavour of Bonfire (eg. classic, community, or cooperation) you want to deploy, as each flavour uses different Docker images and set of configs. For example if you want to run the `classic` flavour:\n\n- `export MIX_ENV=prod FLAVOUR=classic` \n\nYou may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time (eg. `~/.bashrc` or `~/.zshrc`)\n\nIf you're not planning on using Docker, you'll also need:\n\n- `export WITH_DOCKER=no`\n\n## Step 2- Prepare the config\n\n* **Option A**: if deploying with co-op cloud, edit the env file at `~/.abra/servers/your_server/your_app.env` instead.\n\n* **Option B and C**: \n- Run `just config` to initialise some default config and then edit the config in the `./.env` file.\n\n#","ref":"deploy.html#options-b-and-c"},{"type":"extras","title":"Config keys you should pay special attention to: - Deployment guide","doc":"The app needs these environment variables to be configured in order to work.\n\n- `FLAVOUR` should reflect your chosen flavour\n- `HOSTNAME` (your domain name, eg: `bonfire.example.com`)\n- `PUBLIC_PORT` (usually 443)\n- `MAIL_DOMAIN` and `MAIL_KEY` and related keys to configure transactional email, for example set `MAIL_BACKEND=mailgun` and sign up at [Mailgun](https://www.mailgun.com/) and then configure the domain name and key (you may also need to set `MAIL_BASE_URI` if your domain is not setup in EU, as the default `MAIL_BASE_URI` is set as `https://api.eu.mailgun.net/v3`). \n- SMTP is supported as well, through the following env vars \n```\nMAIL_SERVER (smtp domain of the mail server)\nMAIL_DOMAIN (the bit after the @ in your email)\nMAIL_USER\nMAIL_PASSWORD\nMAIL_FROM\nMAIL_PORT (optional)\nMAIL_SSL (optional)\n```\n- `UPLOADS_S3_BUCKET` and the related API key and secret for uploads. WARNING: If you want to store uploads in an object storage rather than directly on your server (which you probably want, to not run out of space), you need to configure that up front, otherwise URLs will break if you change it later. See `config/runtime.exs` for extra variables to set if you're not using the default service and region (which is [Scaleway](https://www.scaleway.com/en/object-storage/) Paris).\n\n#","ref":"deploy.html#config-keys-you-should-pay-special-attention-to"},{"type":"extras","title":"Secret keys for which you should put random secrets. - Deployment guide","doc":"You can run `just secrets` to generate some for you.\n\n- `SECRET_KEY_BASE`\n- `SIGNING_SALT`\n- `ENCRYPTION_SALT`\n- `POSTGRES_PASSWORD`\n- `MEILI_MASTER_KEY` \n\n#","ref":"deploy.html#secret-keys-for-which-you-should-put-random-secrets"},{"type":"extras","title":"Further information on config - Deployment guide","doc":"In the `./config/` (which is a symbolic link to the config of the flavour you choose to run) directory of the codebase, there are following config files:\n\n- `config.exs`: default base configuration, which itself loads many other config files, such as one for each installed Bonfire extension.\n- `prod.exs`: default extra configuration for `MIX_ENV=prod`\n- `runtime.exs`: extra configuration which is loaded at runtime (vs the others which are only loaded once at compile time, i.e. when you build a release)\n- `bonfire_*.exs`: configs specific to different extensions, which are automatically imported by `config.exs`\n\nYou should *not* have to modify the files above. Instead, overload any settings from the above files using env variables or in `./.env`. If any settings in the `.exs` config files are not available in env or in the instance settings UI, please open an issue or PR.","ref":"deploy.html#further-information-on-config"},{"type":"extras","title":"Step 3 - Install - Deployment guide","doc":"#","ref":"deploy.html#step-3-install"},{"type":"extras","title":"Option A - Install using Co-op Cloud (recommended) - Deployment guide","doc":"Follow the instructions in the coop-cloud recipe readme.\n\n#","ref":"deploy.html#option-a-install-using-co-op-cloud-recommended"},{"type":"extras","title":"Option B - Install using Docker containers (easy mode) - Deployment guide","doc":"The easiest way to launch the docker image is using the just commands.\nThe `docker-compose.release.yml` uses `config/prod/.env` to launch a container with the necessary environment variables along with its dependencies, currently that means an extra postgres container, along with a reverse proxy (Caddy server, which you may want to replace with nginx or whatever you prefer).\n\nMake sure you have [Docker](https://www.docker.com/), with the [compose](https://docs.docker.com/compose/install/#install-compose) plugin, and [just](https://github.com/casey/just#packages) installed:\n\n```sh\n$ docker version\nDocker Engine - Community - 23.0.1\n\n$ docker compose version\nDocker Compose version v2.16.0\n\n$ just --version\njust 1.13.0\n...\n```\n\nNow that your tooling is set up, you have the choice of using pre-built images or building your own. For example if your flavour does not have a prebuilt image on Docker Hub, or if you want to customise any of the extensions, you can build one yourself - see option B2 below. \n\n##","ref":"deploy.html#option-b-install-using-docker-containers-easy-mode"},{"type":"extras","title":"Option B1 - Using pre-built Docker images (recommended to start with) - Deployment guide","doc":"- The `image` entry in `docker-compose.release.yml` will by default use the image on Docker Hub which corresponds to your chosen flavour (see step 1 above for choosing your flavour).\n\nYou can see the images available per flavour, version (we currently recommend using the `latest` tag), and architecture at https://hub.docker.com/r/bonfirenetworks/bonfire/tags \n\n- Start the docker containers with docker-compose:\n\n```\njust rel-run\n```\n\nRun this at the prompt: \n\n`bin/bonfire remote` to enter Elixir's iex environment\n`Bonfire.Common.Repo.migrate` to initialise your database\n\nThe backend should now be running at [http://localhost:4000/](http://localhost:4000/).\n\n- If that worked, start the app as a daemon next time:\n\n```\njust rel-run-bg\n```\n\n##","ref":"deploy.html#option-b1-using-pre-built-docker-images-recommended-to-start-with"},{"type":"extras","title":"Docker-related handy commands - Deployment guide","doc":"- `just update` to update to the latest release of Bonfire \n- `just rel-run`                        Run the app in Docker, in the foreground\n- `just rel-run-bg`                     Run the app in Docker, and keep running in the background\n- `just rel-stop`                       Stop the running release\n- `just rel-shell`                      Runs a simple shell inside of the container, useful to explore the image \n\nOnce in the shell, you can run `bin/bonfire` with the following commands:\nUsage: `bonfire COMMAND [ARGS]`\n\nThe known commands are:\n- `start`          Starts the system\n- `start_iex`      Starts the system with IEx attached\n- `daemon`         Starts the system as a daemon\n- `daemon_iex`     Starts the system as a daemon with IEx attached\n- `eval \"EXPR\"`    Executes the given expression on a new, non-booted system\n- `rpc \"EXPR\"`     Executes the given expression remotely on the running system\n- `remote`         Connects to the running system via a IEx remote shell\n- `restart`        Restarts the running system via a remote command\n- `stop`           Stops the running system via a remote command\n- `pid`            Prints the operating system PID of the running system via a remote command\n- `version`        Prints the release name and version to be booted\n\nThere are some useful database-related release tasks under `EctoSparkles.Migrator.` that can be run in an `iex` console (which you get to with `just rel.shell` followed by `bin/bonfire remote`, assuming the app is already running):\n\n- `migrate` runs all up migrations\n- `rollback(step)` roll back to step X\n- `rollback_to(version)` roll back to a specific version\n- `rollback_all` rolls back all migrations back to zero (caution: this means losing all data)\n\nYou can also directly call some functions in the code from the command line, for example:\n- to migrate: `docker exec bonfire_web bin/bonfire rpc 'Bonfire.Common.Repo.migrate'`\n- to just yourself an admin: `docker exec bonfire_web bin/bonfire rpc 'Bonfire.Me.Users.make_admin(\"my_username\")'`\n\n##","ref":"deploy.html#docker-related-handy-commands"},{"type":"extras","title":"Option B2 - Building your own Docker image - Deployment guide","doc":"`Dockerfile.release` uses the [multistage build](https://docs.docker.com/develop/develop-images/multistage-build/) feature to just the image as small as possible. It generates the OTP release which is later copied into the final image packaged in an Alpine linux container.\n\nThere is a `justfile` with relevant commands (make sure set the `MIX_ENV=prod` env variable):\n\n- `just rel-build-release` which builds the docker image of the latest release\n- `just rel-build` which builds the docker image, including local changes to any cloned extensions in `./extensions/` \n- `just rel-tag` adds the \"latest\" tag to your last build, so that it will be used when running\n\nOnce you've built and tagged your image, you may need to update the `image` name in `docker-compose.release.release.yml` to match (either your local image name if running on the same machine you used for the build, or a remote image on Docker Hub if you pushed it) and then follow the same steps as for option A1.\n\nFor production, we recommend to set up a CI workflow to automate this, for an example you can look at the one [we currently use](../github/workflows/release.yaml).\n\n---\n\n#","ref":"deploy.html#option-b2-building-your-own-docker-image"},{"type":"extras","title":"Option C - Manual installation (without Docker) - Deployment guide","doc":"##","ref":"deploy.html#option-c-manual-installation-without-docker"},{"type":"extras","title":"Dependencies - Deployment guide","doc":"- Postgres (or Postgis) version 12 or newer\n- [just](https://github.com/casey/just#packages)\n- Elixir version 1.15+ with OTP 25+. If your distribution only has an old version available, check [Elixir's install page](https://elixir-lang.org/install.html) or use a tool like [rtx](https://github.com/jdxcode/rtx) (run `rtx install` in this directory).\n\n##","ref":"deploy.html#dependencies"},{"type":"extras","title":"C-1. Building the release - Deployment guide","doc":"- Make sure you have erlang and elixir installed (check `Dockerfile` for what version we're currently using)\n\n- `export WITH_DOCKER=no` OR add `WITH_DOCKER=no` to the end of `.env` and source it with `source .env`\n\n- Run `just rel-build` to create an elixir release. This will create an executable in your `_build/prod/rel/bonfire` directory. Note that you will need `just` to pass in the `.env` file to the executable, like so: `just cmd _build/prod/rel/bonfire/bin/bonfire  `. Alternatively, this file can be sourced by `source .env` instead. We will be using the `bin/bonfire` executable as called from `just` from here on. \n\n##","ref":"deploy.html#c-1-building-the-release"},{"type":"extras","title":"C-2. Running the release - Deployment guide","doc":"- Create a database, and a user, fill out the `.env` with your credentials and secrets\n\n- You will need to use `just` in order to pass the `.env` file to the executable. This can be accomplished by running `just cmd _build/prod/rel/bonfire/bin/bonfire  `. Just works from the root directory of the `justfile`, not your current directory.\n\n- If you’re using RDS or some other locked down DB, you may need to run `CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;` on your database with elevated privileges.\n\n- You can check if your instance is configured correctly and get to the iex console by running `bin/bonfire start`\n\n- The migrations should automatically run on first boot, but if you run into troubles the migration command is: `Bonfire.Common.Repo.migrate()` in the iex console. \n\n- To run the instance as a daemon, use `bin/bonfire start daemon`.\n\n---\n\n#","ref":"deploy.html#c-2-running-the-release"},{"type":"extras","title":"Option D - with Nix - Deployment guide","doc":"This repo is a Flake and includes a Nix module.\n\nHere are the detailed steps to deploy it:\n\n- run a recent version of Nix or NixOS: https://nixos.wiki\n- enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes\n- add `sandbox = false` in your nix.conf\n- fetch and build the app and dependencies: `nix run github:bonfire-networks/bonfire-app start_iex`\n- add it as an input to your system flake.\n- add an overlay to just the package available\n- add the required configuration in your system\n\nYour `flake.nix` file would look like the following. Remember to replace `myHostName` with your actual hostname or however your deployed system is called.\n\n```nix\n{\n  inputs.bonfire.url = \"github:happysalada/bonfire-app/main\";\n  outputs = { self, nixpkgs, bonfire }: {\n    overlay = final: prev: with final;{\n      # a package named bonfire already exists on nixpkgs so we put it under a different name\n      elixirBonfire = bonfire.packages.x86_64-linux.default;\n    };\n    nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem {\n      system = \"x86_64-linux\";\n      modules = [\n        {\n          environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ];\n          nixpkgs.overlays = [ self.overlay ];\n        }\n        ./myHostName.nix\n        bonfire.nixosModules.bonfire\n      ];\n    };\n  };\n}\n```\n\nThen your `myHostName.nix` would look like the following:\n\n```nix\n{ config, lib, pkgs, ... }:\n\n{\n  services.bonfire = {\n    # you will additionally need to expose bonfire with a reverse proxy, for example caddy\n    port = 4000;\n    package = pkgs.elixirBonfire;\n    dbName = \"bonfire\";\n    # the environment should contain a minimum of\n    #   SECRET_KEY_BASE\n    #   SIGNING_SALT\n    #   ENCRYPTION_SALT\n    #   RELEASE_COOKIE\n    # have a look into nix/module.nix for more details\n    # the way to deploy secrets is beyond this readme, but I would recommend agenix\n    environmentFile = \"/run/secrets/bonfireEnv\";\n    dbSocketDir = \"/var/run/postgresql\";\n  };\n\t\n\t# this is specifically for a reverse proxy, which is primarily used for SSL certs\n\tservices.ngnix = {\n\t\tenable = true;\n\t\tforceSSL = true;\n\t\tenableACME = true;\n\t\tvirtualHosts.\"myHostName\".locations.proxyPass = \"http://localhost:4000\";\n\t};\n\t\n\t# You will need to accept ACME's terms and conditions if you haven't elsewhere in your configuration\n\tsecurity.acme.defaults.email = \"you@myHostName.com\";\n\tsecurity.acme.acceptTerms = true;\n\n  # this is uniquely for database backup purposes\n  # replace myBackupUserName with the user name that will do the backups\n  # if you want to do backups differently, feel free to remove this part of the config\n  services.postgresql = {\n    ensureDatabases = [ \"bonfire\" ];\n    ensureUsers = [{\n      name = \"myBackupUserName\";\n      ensurePermissions = { \"DATABASE bonfire\" = \"ALL PRIVILEGES\"; };\n    }];\n  };\n}\n```\n\n#","ref":"deploy.html#option-d-with-nix"},{"type":"extras","title":"Option C with nixos - Deployment guide","doc":"this repo is a flake and includes a nixos module.\nHere are the detailed steps to deploy it.\n\n- add it as an input to your system flake.\n- add an overlay to just the package available\n- add the required configuration in your system\n\nYour flake.nix file would look like the following. Remember to replace myHostName with your actual hostname or however your deployed system is called.\n\n```nix\n{\n  inputs.bonfire.url = \"github:happysalada/bonfire-app/main\";\n  outputs = { self, nixpkgs, bonfire }: {\n    overlay = final: prev: with final;{\n      # a package named bonfire already exists on nixpkgs so we put it under a different name\n      elixirBonfire = bonfire.defaultPackage.x86_64-linux;\n    };\n    nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem {\n      system = \"x86_64-linux\";\n      modules = [\n        {\n          environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ];\n          nixpkgs.overlays = [ self.overlay ];\n        }\n        ./myHostName.nix\n        bonfire.nixosModules.bonfire\n      ];\n    };\n  };\n}\n```\n\nthen in myHostName.nix would look like the following\n\nTODO: add the caddy config\n\n```nix\n{ config, lib, pkgs, ... }:\n\n{\n  services.bonfire = {\n    # you will need to expose bonfire with a reverse proxy, for example caddy\n    port = 4000;\n    package = pkgs.elixirBonfire;\n    dbName = \"bonfire\";\n    # the environment should contain a minimum of\n    #   SECRET_KEY_BASE\n    #   SIGNING_SALT\n    #   ENCRYPTION_SALT\n    #   RELEASE_COOKIE\n    # have a look into nix/module.nix for more details\n    # the way to deploy secrets is beyond this readme, but I would recommend agenix\n    environmentFile = \"/run/secrets/bonfireEnv\";\n    dbSocketDir = \"/var/run/postgresql\";\n  };\n\n  # this is uniquely for database backup purposes\n  # replace myBackupUserName with the user name that will do the backups\n  # if you want to do backups differently, feel free to remove this part of the config\n  services.postgresql = {\n    ensureDatabases = [ \"bonfire\" ];\n    ensureUsers = [{\n      name = \"myBackupUserName\";\n      ensurePermissions = { \"DATABASE bonfire\" = \"ALL PRIVILEGES\"; };\n    }];\n  };\n}\n```","ref":"deploy.html#option-c-with-nixos"},{"type":"extras","title":"Step 4 - Run - Deployment guide","doc":"By default, the backend listens on port 4000 (TCP), so you can access it on http://localhost:4000/ (if you are on the same machine). In case of an error it will restart automatically.\n\nOnce you've signed up, you will automatically be an instance admin if you were the first to register.\n\n> NOTE: If you are running in a restricted environment such as Amazon RDS, you will need to execute some sql against the database before migrations can run: `CREATE EXTENSION IF NOT EXISTS citext;`\n\n\n##","ref":"deploy.html#step-4-run"},{"type":"extras","title":"Step 5 - Adding HTTPS - Deployment guide","doc":"The common and convenient way for adding HTTPS is by using a reverse proxy like Nginx or Caddyserver (the latter of which is bundled as part of the docker compose setup).\n\nCaddyserver and other servers can handle generating and setting up HTTPS certificates automatically, but if you need TLS/SSL certificates for nginx, you can look get some for free with [letsencrypt](https://letsencrypt.org/). The simplest way to obtain and install a certificate is to use [Certbot.](https://certbot.eff.org). Depending on your specific setup, certbot may be able to get a certificate and configure your web server automatically.\n\nIf you've built from source, you should point the nginx root directory to be `_build/prod/rel/bonfire/lib/bonfire-0.1.0-*/priv/static`","ref":"deploy.html#step-5-adding-https"},{"type":"extras","title":"Admin tools - Deployment guide","doc":"- LiveDashboard for viewing real-time metrics and logs at `/admin/system/`\n- Oban logs for viewing queued jobs (e.g. for processing federated activities) `/admin/system/oban_queues`\n- LiveAdmin for browsing data in the database at `/admin/system/data`\n- Orion for dynamic distributed performance profiling at `/admin/system/orion`\n- Web Observer as an alternative way to view metrics at `/admin/system/wobserver`","ref":"deploy.html#admin-tools"},{"type":"extras","title":"Troubleshooting - Deployment guide","doc":"Some common issues that may arise during deployment and our suggestions for resolving them.\n\n##","ref":"deploy.html#troubleshooting"},{"type":"extras","title":"WebSocket connections not establishing behind a reverse proxy - Deployment guide","doc":"If you are running Bonfire behind your own reverse proxy (e.g. nginx), you might experience issues with WebSocket connections not establishing. WebSocket connections require specific configuration to work, in nginx the following configuration is necessary for websockets to work:\n\n```\nlocation /live/websocket {\n    proxy_pass http://127.0.0.1:4000;\n    \n    # these configurations are necessary to proxy WebSocket requests\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n}\n```","ref":"deploy.html#websocket-connections-not-establishing-behind-a-reverse-proxy"},{"type":"extras","title":"Bonfire Architecture","doc":"# Bonfire Architecture","ref":"architecture.html"},{"type":"extras","title":"Hacking - Bonfire Architecture","doc":"Bonfire is an unusual piece of software, developed in an unusual way. It originally started as a project to create a generic federation library/framework, while building an app for educators to share and collaborate on learning resources with their peers, and has been forked and evolved a lot since then. \n\nHacking on it is actually pretty fun. The codebase has a unique feeling to work with and we've relentlessly refactored to manage the ever-growing complexity that a distributed social networking toolkit implies. That said, it is not easy to understand without context, which is what this document is here to provide.","ref":"architecture.html#hacking"},{"type":"extras","title":"Design Decisions - Bonfire Architecture","doc":"Feature goals:\n\n- Flexibility for developers and users.\n- Extreme configurability and extensibility.\n- Integrated federation with the existing fediverse.\n\nOperational goals:\n\n- Easy to set up and run.\n- Light on resources for small deployments.\n- Scalable for large deployments.","ref":"architecture.html#design-decisions"},{"type":"extras","title":"Stack - Bonfire Architecture","doc":"Our main implementation language is [Elixir](https://www.elixir-lang.org/), which is designed for building reliable systems. We have almost [our own dialect](./BONFIRE-FLAVOURED-ELIXIR.md).\n\nWe use the [Phoenix](https://www.phoenixframework.org/) web framework with [LiveView](https://hexdocs.pm/phoenix_live_view/) and [Surface](https://surface-ui.org/documentation) for UI components and views.\n\nSurface is a different syntax for LiveView that is designed to be more convenient and understandable to frontend developers, with extra compile time checks. Surface views and components are compiled into LiveView code (so once you hit runtime, Surface in effect doesn't exist any more).\n\nSome extensions use the [Absinthe](https://absinthe-graphql.org/) GraphQL library to expose an API.","ref":"architecture.html#stack"},{"type":"extras","title":"The Bonfire Environment - Bonfire Architecture","doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of conveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back.","ref":"architecture.html#the-bonfire-environment"},{"type":"extras","title":"Code Structure - Bonfire Architecture","doc":"The code is broadly composed namespaces such as these, many of which are packaged as \"extensions\" which live in separate git repositories, which are included in the app by way of mix dependencies:\n\n- `Bonfire.*` - Core application logic (very little code).\n- `Bonfire.*.*` - Bonfire extensions (eg `Bonfire.Posts`) containing mostly context modules, APIs, and routes\n- `Bonfire.Data.*` - Extensions containing database schemas and migrations \n- `Bonfire.UI.*` - UI component extensions\n- `Bonfire.*.*.LiveHandler` - Backend logic to handle events in the frontend\n- `Bonfire.Editor.*` (pluggable text editors, eg. CKEditor for WYSIWYG markdown input)\n- `Bonfire.GraphQL.*` - Optional GraphQL API\n- `Bonfire.Federate.*` - Optional Federation hooks\n- `ActivityPub` - ActivityPub S2S models, logic and various helper modules \n- `ActivityPub.Web` - ActivityPub S2S REST endpoints, activity ingestion and push federation facilities \n- `ValueFlows.*` - economic extensions implementing the [ValueFlows vocabulary](https://www.valueflo.ws)\n\n\nContexts are were we put any core logic. A context often is circumscribed to providing logic for a particular object type (e. g. `Bonfire.Posts` implements `Bonfire.Data.Social.Post`). \n\nAll Bonfire objects use an ULID as their primary key. We use the `Needle` library (with extra logic in `Bonfire.Common.Needles`) to reference any object by its primary key without knowing what type it is beforehand. This is very useful as it allows for example following or liking many different types of objects (as opposed to say only a user or a post) and this approach allows us to store the context of the like/follow by only storing its primary key (see `Bonfire.Data.Social.Follow`) for an example.\n\nContext modules usually have `one/2`, `many/2`, and `many_paginated/1` functions for fetching objects, which in turn call a `query/2` function. These take a keyword list as filters (and an optional `opts` argument) allowing objects to be fetched by arbitrary criteria.\n\nExamples:\n\n```\nUsers.one(username: \"bob\") # Fetching by username\nPosts.many_paginated(by: \"01E9TQP93S8XFSV2ZATX1FQ528\") # List a page of posts by its author\nEconomicResources.many(deleted: true) # List any deleted resources\n```\n\nContext modules also have functions for creating, updating and deleting objects, as well as hooks for federating or indexing in the search engine.\n\nHere is an incomplete sample of some of current extensions and modules:\n\n- `Bonfire.Me.Accounts` (for managing and querying local user accounts)\n- `Bonfire.Me.Users` (for managing and querying both local and remote user identities and profiles)\n- `Bonfire.Boundaries` (for managing and querying circles, ACLs, permissions...)\n- `Bonfire.Social.FeedActivities`, `Bonfire.Social.Feeds` and `Bonfire.Social.Activities` (for managing and querying activities and feeds)\n- `Bonfire.Posts` and `Bonfire.Social.PostContents` (for managing and querying posts)\n- `Bonfire.Social.Threads` (for managing and querying threads and comments)\n- `Bonfire.Social.Flags` (for managing and querying flags)\n- `Bonfire.Social.Graph.Follows` (for managing and querying follows)\n- `Bonfire.Classify` (for managing and querying categories, topics, and the like)\n- `Bonfire.Tag` (for managing and querying tags and mentions)\n- `Bonfire.Geolocate` (for managing and querying locations and geographical coordinates)\n- `Bonfire.Quantify` (for managing and querying units and measures)\n\n##","ref":"architecture.html#code-structure"},{"type":"extras","title":"Additional extensions, libraries, and modules - Bonfire Architecture","doc":"- `Bonfire.Common` and `Bonfire.Common.Utils` (stuff that gets used everywhere)\n- `Bonfire.Application` (OTP application)\n- `Bonfire.Me.Characters` (a shared abstraction over users, organisations, categories, and other objects that need to have feeds and behave as an actor in ActivityPub land)\n- `Bonfire.Federate.ActivityPub` and `ActivityPub` (ActivityPub integration)\n- `Bonfire.Search` (local search indexing and search API, powered by Meili)\n- `Bonfire.Mailer`, `Bonfire.Me.Mails`, and `Bamboo` (for rendering and sending emails)\n- `Bonfire.Files`, `Waffle`, `TreeMagic` and `TwinkleStar` (for managing uploaded content)\n- `Bonfire.GraphQL` (GraphQL API abstractions)\n- `Queery` and `Bonfire.Repo.Query` (Helpers for making queries on the database)\n- `Bonfire.Repo` (Ecto repository)\n- `Exto` (to extend DB schemas in config, especially useful for adding associations)\n- `AbsintheClient` (for querying the API from within the server)\n\n\n#","ref":"architecture.html#additional-extensions-libraries-and-modules"},{"type":"extras","title":"General structure - Bonfire Architecture","doc":"- Bonfire app\n  - A [flavour](../README.md#flavours) running `Bonfire.Application` as supervisor\n    - Configs assembled from extensions at `flavour/$FLAVOUR/config`\n    - Phoenix at `Bonfire.Web.Endpoint`\n      - Routes assembled from extensions at `Bonfire.Web.Router` \n    - GraphQL schema assembled from extensions at `Bonfire.GraphQL.Schema`\n    - Database migrations assembled from extensions at `flavour/$FLAVOUR/repo/migrations`\n    - Data seeds assembled from extensions at `flavour/$FLAVOUR/repo/seeds`\n    - Extensions and libraries as listed in `flavour/$FLAVOUR/config/deps.*`\n      - Extensions defining schemas and migrations (usually `Bonfire.Data.*`)\n        - Schemas\n        - Migrations defined as functions in the schema modules in `lib/`\n        - Migration templates calling those functions in `priv/repo/migrations` which are then copied into an app flavour's migrations\n      - Extensions implementing features or groups of features (eg. `Bonfire.Me`)\n        - Config template which is then copied into an app flavour's config (eg `config/bonfire_me.exs`)\n        - Contexts (eg `Bonfire.Me.Users`)\n          - Sometimes LiveHandlers for handling frontend events in the backend (eg `Bonfire.Me.Users.LiveHandler`)\n        - Routes (eg `Bonfire.UI.Me.Routes`)\n          - Controllers and/or Views (eg `Bonfire.UI.Me.CreateUserController` and `Bonfire.UI.Me.CreateUserLive`)\n        - API (eg `Bonfire.Me.API.GraphQL`), refer to [GraphQL API documentation](./GRAPHQL.md)\n          - Schemas\n          - Resolvers\n        - Sometimes Plugs (eg `Bonfire.Web.Plugs.UserRequired` and `Bonfire.Web.LivePlugs.UserRequired`)\n      - Other extensions or libraries (eg `Needle` or `Bonfire.Common` which are used by most other extensions)","ref":"architecture.html#general-structure"},{"type":"extras","title":"Naming - Bonfire Architecture","doc":"It is said that naming is one of the four hard problems of computer science (along with cache management and off-by-one errors). We don't claim our scheme is the best, but we do strive for consistency.\n\n#","ref":"architecture.html#naming"},{"type":"extras","title":"Naming guidelines - Bonfire Architecture","doc":"- Module names mostly begin with `Bonfire.` unless they belong to a more generic library (eg `Needle` or `ValueFlows`)\n- Everything within an extension begins with the context name and a `.` (eg `Bonfire.Social.Migrations`)\n- Database schemas should be named in the singular (eg `Bonfire.Data.Social.Post`)\n- Context modules are named in plural where possible (eg `Bonfire.Posts`)\n- Other modules within a context begins with the context name and a `.` (eg `Bonfire.Posts.LiveHandler`)\n- Modules use UpperCamelCase while functions use snake_case\n- Acronyms in module names should be all uppercase (eg `Bonfire.Social.APActivities`)","ref":"architecture.html#naming-guidelines"},{"type":"extras","title":"Federation libraries - Bonfire Architecture","doc":"### `ActivityPub`\n\nThis namespace handles the ActivityPub logic and stores AP activities. It is largely adapted Pleroma code with some modifications, for example merging of the activity and object tables and new actor object abstraction.\n\n- `ActivityPub` contains the main API and is documented there. \n- `ActivityPub.Federator.Adapter` defines callback functions for the AP library.\n\nIt also contains some functionality that isn't part of the AP spec but is required for federation:\n- `ActivityPub.Safety.Keys` - Generating and handling RSA keys and signatures \n- `ActivityPub.Federator.WebFinger` - Implementation of the WebFinger protocol\n- `ActivityPub.Federator.HTTP` - Module for making HTTP requests (wrapper around tesla)\n- `ActivityPub.Instances` - Module for storing reachability information about remote instances\n\nAlso refer to [MRF documentation](./MRF.md) to learn how to rewrite or discard messages.\n\n### `ActivityPub.Web`\n\nThis namespace contains the ActivityPub Server-to-Server REST API, the activity ingestion pipeline (`ActivityPub.Federator.Transformer`) and the push federation facilities (`ActivityPub.Federator`, `ActivityPub.Federator.APPublisher` and others). The outgoing federation module is designed in a modular way allowing federating through different protocols in the future. \n\n#","ref":"architecture.html#federation-libraries"},{"type":"extras","title":"ActivityPub integration with Bonfire's application logic - Bonfire Architecture","doc":"The callback functions defined in `ActivityPub.Federator.Adapter` are implemented in `Bonfire.Federate.ActivityPub.Adapter`. \n\nWhen implementing federation for a new object type it needs to be implemented for both directions: \nfor outgoing federation using the hooks in `Bonfire.Federate.ActivityPub.Outgoing` and for incoming federation using the hooks in `Bonfire.Federate.ActivityPub.Incoming`.","ref":"architecture.html#activitypub-integration-with-bonfire-s-application-logic"},{"type":"extras","title":"Bonfire-flavoured Elixir","doc":"# Bonfire-flavoured Elixir\n\nBonfire has a few libraries that are widely used in the codebase and make writing Elixir feel a little bit different. To help you get less confused by this, here's a guide on what we can call \"bonfire-flavoured elixir\"!\n\nPlease note this guide assumes you already know [Elixir](https://elixir-lang.org/getting-started/introduction.html).\n\n## `Arrows`\n\nThe Elixir [|> (\"pipe\") operator](https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2) is one of the things that seems to get people excited about elixir. Probably in part because you then don't have to keep coming up with function names. Unfortunately it's kind of limiting. \nThe moment you need to pipe a parameter into a position that isn't the first one, it breaks down and you have to drop out of the pipeline format or write a secondary function to handle it.\n\nNot any more! By simply inserting `...` where you would like the value to be inserted, `Arrows` will override where it is placed. This allows you to keep on piping while accommodating that function with the annoying argument order. `Arrows` was inspired by [an existing library](https://hexdocs.pm/magritte/Magritte.html). Here is part of the test suite in lieu of examples:\n\n```elixir\ndefmodule ArrowsTest do\n  use ExUnit.Case\n  use Arrows\n\n  def double(x), do: x * 2\n  def double_fst(x, _), do: x * 2\n  def double_snd(_, x), do: x * 2\n  def add_snd_thd(_, x, y), do: x + y\n\n  test \"|>\" do\n    assert 4 == (2 |> double)\n    assert 4 == (2 |> double())\n    assert 4 == (2 |> double(...))\n    assert 8 == (2 |> double(double(...)))\n    assert 4 == (2 |> double_fst(1))\n    assert 4 == (2 |> double_fst(..., 1))\n    assert 8 == (2 |> double_fst(double(...), 1))\n    assert 4 == (2 |> double_snd(1, ...))\n    assert 8 == (2 |> double_snd(1, double(...)))\n    assert 3 == (2 |> add_snd_thd(1, ..., 1))\n    assert 4 == (2 |> add_snd_thd(1, ..., ...))\n    assert 6 == (2 |> add_snd_thd(1, ..., double(...)))\n    for x   {:ok, ...})\n    end\n  end\nend\n```\n\nA few little extra features you might notice here:\n* You can move the parameter into a subexpression, as in `2 |> double_fst(double(...), 1)` where double will be called before the parameter is passed to `double_fst`.\n* You can use `...` multiple times, substituting it in multiple places.\n* The right hand side need not even be a function call, you can use any expression with `...`.\n\n#","ref":"bonfire-flavoured-elixir.html"},{"type":"extras","title":"Ok-pipe - Bonfire-flavoured Elixir","doc":"`Arrows` also provides an `ok-pipe` operator, `~>`, which only pipes into the next function if the result from the last one was considered a success. It's inspired by [OK](https://hexdocs.pm/ok/readme.html), but we have chosen to do things slightly differently so it better fits with our regular pipe.\n\ninput                    | result          |\n:----------------------- | :-------------- |\n`{:ok, x}`               | `fun.(x)`       |\n`{:error, e}`            | `{:error, e}`   |\n`nil`                    | `nil`           |\n`x when not is_nil(x)`   | `fun.(x)`       |\n\nIn the case of a function returning an ok/error tuple being on the left hand side, this is straightforward to determine. In the event of `{:ok, x}`, x will be passed into the right hand side to call. In the event of `{:error, x}`, the result will be `{:error, x}`.\n\nWe also deal with a lot of functions that indicate failure by returning nil. `~>` tries to 'do what I mean' for both of these so you can have one pipe operator to rule them all. If `nil` is a valid result, you must thus be sure to wrap it in an `ok` tuple when it occurs on the left hand side of `~>`.\n\n`|>` and `~>` compose in the way you'd expect; i.e. a `~>` receiving an error tuple or nil will stop executing the rest of the chain of (mixed) pipes.","ref":"bonfire-flavoured-elixir.html#ok-pipe"},{"type":"extras","title":"Untangle - Bonfire-flavoured Elixir","doc":"`Untangle` provides replacements for the macros in Elixir's `Logger` module and the `IO.inspect` function to output code location information. The first argument will be `inspect`ed and the second (where provided) will be used as a label:\n\n```\niex(1)> import Untangle\nUntangle\niex(2)> debug(:no, \"the answer is\") # log at debug\n11:19:09.915 [debug] [iex:2] the answer is: :no\n:no\niex(3)> dump(%{a: :map}, \"it\") # inspect something on stdout\n[iex:3] it: %{a: :map}\n%{a: :map}\n```\n\nWhen used in a code file, the location information becomes slightly more useful, e.g.:\n\n```\n[lib/test_untangle.ex:15@Test.Untangle.example/2] Here's an empty list: []\n```\n\nYou may also notice from the iex output that it returns its first argument. This makes it ideal for\ninserting into a pipeline for debugging purposes:\n\n```elixir\ndo_something()\n|> debug(\"output of do_something/0\")\n```\n\nWhen you are done debugging something, the location of the debug statement is already in the output so you know where to remove it or comment it out! Bliss!\n\nYou will find the codebase uses this a lot, though the debugs are frequently commented out. Just uncomment the ones that would help you with a particular debugging task and you're off.","ref":"bonfire-flavoured-elixir.html#untangle"},{"type":"extras","title":"Error handling - Bonfire-flavoured Elixir","doc":"`Bonfire.Fail` is an `Exception` handler, which you can use to stop the show anywhere in the code, e.g:\n\n`id = ulid(object) || raise(Bonfire.Fail, :not_found)` \n\nYou can use this special exception when you want to redirect the user to the login page rather than just show an error:\n`user = current_user(assigns) || raise(Bonfire.Fail.Auth, :needs_login)` \n\nAdvantages include:\n\n- standardised error messages (defaults are defined at https://github.com/bonfire-networks/bonfire_fail/blob/main/lib/runtime_config.ex#L16) which can be overridden in your app's config using `config :bonfire_fail, :common_errors`\n- friendly error messages are defined in one place, which means no duplicated localisation efforts\n- uses the elixir/OTP pattern of \"let it crash\"\n- returns the correct HTTP code when applicable\n- no need to wrap blocks in if/else or the like \n- for users of the LiveView frontend, this will make the corresponding friendly error message appear in a flash overlay (if using `Bonfire.UI.Common.LiveHandlers` and/or `Bonfire.UI.Common.undead/3`)","ref":"bonfire-flavoured-elixir.html#error-handling"},{"type":"extras","title":"Bonfire's Database - an intro","doc":"# Bonfire's Database - an intro\n\nBonfire uses the excellent PostgreSQL database for most data storage. PostgreSQL allows us to make a wide range of queries and to make them relatively fast while upholding data integrity guarantees.\n\nPostgres is a relational schema-led database - it expects you to pre-define tables and the fields in each table (represented in tabular form, i.e. as a collection of tables with each table consisting of a set of rows and columns). Fields can contain data or a reference to a row in another table. \n\nThis usually means that a field containing a reference has to be pre-defined with a foreign key pointing to a specific field (typically a primary key, like an ID column) *in a specific table*. \n\nA simple example would be a blogging app, which might have a `post` table with `author` field that references the `user` table.\n\nA social network, by contrast, is actually a graph of objects. Objects need to be able to refer to other objects by their ID without knowing their type. \n\nA simple example would be likes, you might have a `likes` table with `liked_post_id` field that references the `post` table. But you don't just have posts that can be liked, but also videos, images, polls, etc, each with their own table, but probably do not want to have to add `liked_video_id`, `liked_image_id`, etc?\n\nWe needed the flexibility to have a foreign key that can reference any referenceable object. We call our system `Needle`.\n\nThis guide is a brief introduction to Needle. It assumes some foundational knowledge:\n\n* Basic understanding of how relational databases like Postgresql work, in particular:\n  * Tables being made up of fields.\n  * What a primary key is and why it's useful.\n  * Foreign keys and relationships between tables (1 to 1, 1 to Many, Many to 1, Many to Many).\n  * Views as virtual tables backed by a SQL query.\n\n* Basic understanding of Elixir (enough to follow the examples).\n* Basic working knowledge of the [Ecto](https://hexdocs.pm/ecto/Ecto.html) database library (schema and migration definitions)","ref":"database.html"},{"type":"extras","title":"Identifying objects - the ULID type - Bonfire's Database - an intro","doc":"All referenceable objects in the system have a unique ID (primary key) whose type is the [`ULID`](https://github.com/ulid/spec). It's a lot like a `UUID` in that you can generate unique ones independently of the database. It's also a little different, being made up of two parts:\n\n* The current timestamp, to millisecond precision.\n* Strong random padding for uniqueness.\n\nThis means that it naturally sorts by time to the millisecond (close enough for us), giving us a performance advantage on queries ordered by a separate creation datetime field (by contrast, UUIDv4 is randomly distributed).\n\nIf you've only worked with integer primary keys before, you are probably used to letting the database dispense an ID for you. With `ULID` (or `UUID`), IDs can be known *before* they are stored, greatly easing the process of storing a graph of data and allowing us to do more of the preparation work outside of a transaction for increased performance.\n\nIn PostgreSQL, we actually store `ULID`s as `UUID` columns, thanks to both being the same size (and the lack of a `ULID` column type shipping with postgresql). You mostly will not notice this because it's handled for you, but there are a few places it can come up:\n\n* Ecto debug and error output may show either binary values or UUID-formatted values.\n* Hand-written SQL may need to convert table IDs to the `UUID` format before use.","ref":"database.html#identifying-objects-the-ulid-type"},{"type":"extras","title":"It's just a table - Bonfire's Database - an intro","doc":"The `Needle` system is mostly based around a single table represented by the `Needle.Pointer` schema with the following fields:\n\n* `id` (ULID) - the database-wide unique id for the object, primary key.\n* `table_id` (ULID) - identifies the type of the object, references `Needle.Table`.\n* `deleted_at` (timestamp, default: `null`) - when the object was deleted.\n\nEvery object that is stored in the system will have a record in this table. It may also have records in other tables (handy for storing more than 3 fields about the object!).\n\nDon't worry about `Needle.Table` for now, just know that every object type will have a record there so `Needle.Pointer.table_id` can reference it.","ref":"database.html#it-s-just-a-table"},{"type":"extras","title":"Mixins - storing data about objects - Bonfire's Database - an intro","doc":"Mixins are tables which contain extra information on behalf of objects. Each object can choose to\nrecord or not record information for each mixin. Sample mixins include:\n\n* user profile (containing a name, location and summary)\n* post content (containing the title, summary, and/or html body of a post or message)\n* created (containing the id of the object creator)\n\nIn this way, they are reusable across different object types. One mixin may (or may not) be used by any number of objects. This is mostly driven by the type of the object we are storing, but can also be driven by user input.\n\nMixins are just tables too! The only requirement is they have a `ULID` primary key which references `Needle.Pointer`. The developer of the mixin is free to put whatever other fields they want in the table, so long as they have that primary-key-as-reference (which will be automatically added for you by the `mixin_schema` macro). \n\nHere is a sample mixin definition for a user profile:\n\n```elixir\ndefmodule Bonfire.Data.Social.Profile do\n\n  use Needle.Mixin,\n    otp_app: :bonfire_data_social,\n    source: \"bonfire_data_social_profile\"\n\n  mixin_schema do\n    field :name, :string\n    field :summary, :string\n    field :website, :string\n    field :location, :string\n  end\nend\n```\n\nAside from `use`ing `Needle.Mixin` instead of `Ecto.Schema` and calling `mixin_schema` instead of\n`schema`, pretty similar to a standard Ecto schema, right? \n\nThe arguments to `use Needle.Mixin` are:\n\n* `otp_app`: the OTP app name to use when loading dynamic configuration, e.g. the current extension or app (required)\n* `source`: the underlying table name to use in the database\n\nWe will cover dynamic configuration later. For now, you can use the OTP app that includes the module.","ref":"database.html#mixins-storing-data-about-objects"},{"type":"extras","title":"Multimixins - Bonfire's Database - an intro","doc":"Multimixins are like mixins, except that where an object may have 0 or 1 of a particular mixins, an object may have any number of a particular multimixin.\n\nFor this to work, a multimixin must have a *compound primary key* which must contain an `id` column referencing `Needle.Pointer` and at least one other field which will collectively be unique.\n\nAn example multimixin is used for publishing an item to feeds:\n\n```elixir\ndefmodule Bonfire.Data.Social.FeedPublish do\n\n  use Needle.Mixin,\n    otp_app: :bonfire_data_social,\n    source: \"bonfire_data_social_feed_publish\"\n\n  alias Needle.Pointer\n\n  mixin_schema do\n    belongs_to :feed, Pointer, primary_key: true\n  end\nend\n```\n\nNotice that this looks very similar to defining a mixin. Indeed, the only difference is the `primary_key: true` in this line, which adds a second field to the compound primary key.\nThis results in ecto recording a compound primary key of `(id, feed_id)` for the schema (the id is added for you as with regular mixins).","ref":"database.html#multimixins"},{"type":"extras","title":"Declaring Object Types - Bonfire's Database - an intro","doc":"#","ref":"database.html#declaring-object-types"},{"type":"extras","title":"Picking a table id - Bonfire's Database - an intro","doc":"The first step to declaring a type is picking a unique table ID in ULID format. You could just generate one at the terminal, but since these IDs are special, we tend to assign a synthetic ULID that are readable as words so they stand out in debug output.\n\nFor example, the ID for the `Feed` table is: `1TFEEDS0NTHES0V1S0FM0RTA1S`, which can be read as \"It feeds on the souls of mortals\". Feel free to have a little fun coming up with them, it makes debug output a little more cheery! The rules are:\n\n* The alphabet is [Crockford's Base32](https://en.wikipedia.org/wiki/Base32#Crockford's_Base32).\n* They must be 26 characters in length.\n* The first character must be a digit in the range 0-7.\n\nTo help you with this, the `Needle.ULID.synthesise!/1` method takes an alphanumeric binary and tries to return you it transliterated into a valid ULID. Example usage:\n\n```\niex(1)> Needle.ULID.synthesise!(\"itfeedsonthesouls\")\n\n11:20:28.299 [error] Too short, need 9 chars.\n:ok\niex(2)> Needle.ULID.synthesise!(\"itfeedsonthesoulsofmortalsandothers\")\n\n11:20:31.819 [warn]  Too long, chopping off last 9 chars\n\"1TFEEDS0NTHES0V1S0FM0RTA1S\"\niex(3)> Needle.ULID.synthesise!(\"itfeedsonthesoulsofmortals\")\n\"1TFEEDS0NTHES0V1S0FM0RTA1S\"\niex(4)> Needle.ULID.synthesise!(\"gtfeedsonthesoulsofmortals\")\n\n11:21:03.268 [warn]  First character must be a digit in the range 0-7, replacing with 7\n\"7TFEEDS0NTHES0V1S0FM0RTA1S\"\n```\n\n#","ref":"database.html#picking-a-table-id"},{"type":"extras","title":"Virtuals - Bonfire's Database - an intro","doc":"Virtuals are the simplest and most common type of object. Here's a definition of block:\n\n```elixir\ndefmodule Bonfire.Data.Social.Block do\n\n  use Needle.Virtual,\n    otp_app: :bonfire_data_social,\n    table_id: \"310CK1NGSTVFFAV01DSSEE1NG1\",\n    source: \"bonfire_data_social_block\"\n\n  alias Bonfire.Data.Edges.Edge\n\n  virtual_schema do\n    has_one :edge, Edge, foreign_key: :id\n  end\nend\n```\n\nIt should look quite similar to a mixin definition, except that we `use` `Needle.Virtual` this time (passing an additional `table_id` argument) and we call the `virtual_schema` macro.\n\nThe primary limitation of a virtual is that you cannot put extra fields into one. This also means that `belongs_to` is not generally permitted because it results in adding a field. `has_one` and `has_many` work just fine as they do not cause the creation of fields in the schema.\n\nThis is not usually a problem, as extra fields can be put into mixins or multimixins as appropriate.\n\nUnder the hood, a virtual has a view (in this example, called `bonfire_data_social_block`). It looks like a table with just an id, but it's populated with all the ids of blocks that are not deleted. When the view is inserted into, a record is created in the `pointers` table for you transparently. When you delete from the view, the corresponding `pointers` entry is marked deleted for you.\n\n#","ref":"database.html#virtuals"},{"type":"extras","title":"Pointables - Bonfire's Database - an intro","doc":"The other, lesser used, type of object is called the Pointable. The major difference is that unlike the simple case of virtuals, pointables are not backed by views, but by tables.\n\nWhen a record is inserted into a pointable table, a copy is made in the `pointers` table for you transparently. When you delete from the table, the the corresponding `pointers` entry is marked deleted for you. In these ways, they behave very much like virtuals. By having a table, however, we are free to add new fields.\n\nPointables pay for this flexibility by being slightly more expensive than virtuals:\n\n* Records must be inserted into/deleted from two tables (the pointable's table and the `pointers` table).\n* The pointable table needs its own primary key index.\n\nHere is a definition of a pointable type (indicating an ActivityPub activity whose type we don't recognise, stored as a JSON blob):\n\n```elixir\ndefmodule Bonfire.Data.Social.APActivity do\n\n  use Needle.Pointable,\n    otp_app: :bonfire_data_social,\n    table_id: \"30NF1REAPACTTAB1ENVMBER0NE\",\n    source: \"bonfire_data_social_apactivity\"\n\n  pointable_schema do\n    field :json, :map\n  end\nend\n```\n\nThe choice of using a pointable instead of a virtual combined with one or more mixins is ultimately up to you.","ref":"database.html#pointables"},{"type":"extras","title":"Writing Migrations - Bonfire's Database - an intro","doc":"Migrations are typically included along with the schemas as public APIs you can call within your project's migrations.\n\n#","ref":"database.html#writing-migrations"},{"type":"extras","title":"Virtuals - Bonfire's Database - an intro","doc":"Most virtuals are incredibly simple to migrate for:\n\n```elixir\ndefmodule Bonfire.Data.Social.Post.Migration do\n\n  import Needle.Migration\n  alias Bonfire.Data.Social.Post\n\n  def migrate_post(), do: migrate_virtual(Post)\n\nend\n```\n\nIf you need to do more work, it can be a little trickier. Here's an example for `block`, which also creates a unique index on another table:\n\n```elixir\ndefmodule Bonfire.Data.Social.Block.Migration do\n\n  import Ecto.Migration\n  import Needle.Migration\n  import Bonfire.Data.Edges.Edge.Migration\n  alias Bonfire.Data.Social.Block\n\n  def migrate_block_view(), do: migrate_virtual(Block)\n\n  def migrate_block_unique_index(), do: migrate_type_unique_index(Block)\n\n  def migrate_block(dir \\\\ direction())\n\n  def migrate_block(:up) do\n    migrate_block_view()\n    migrate_block_unique_index()\n  end\n\n  def migrate_block(:down) do\n    migrate_block_unique_index()\n    migrate_block_view()\n  end\n\nend\n```\n\nNotice how we have to write our `up` and `down` versions separately to get the correct ordering of operations. \n\n#","ref":"database.html#virtuals"},{"type":"extras","title":"Pointables - Bonfire's Database - an intro","doc":"As of now, pointables are a little trickier to define flexibly than virtuals because we want to\npreserve the ability for the user to define extra fields in config. There are some questions about \nhow useful this is in practice, so we might go for a simpler option in future.\n\nExample:\n\n```elixir\ndefmodule Bonfire.Data.Social.APActivity.Migration  do\n  @moduledoc false\n  use Ecto.Migration\n  import Needle.Migration\n  alias Bonfire.Data.Social.APActivity\n\n  defp make_apactivity_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_pointable_table(Bonfire.Data.Social.APActivity) do\n        Ecto.Migration.add :json, :jsonb\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_apactivity_table, do: make_apactivity_table([])\n  defmacro create_apactivity_table([do: body]), do: make_apactivity_table(body)\n\n  def drop_apactivity_table(), do: drop_pointable_table(APActivity)\n\n  defp maa(:up), do: make_apactivity_table([])\n  defp maa(:down) do\n    quote do: Bonfire.Data.Social.APActivity.Migration.drop_apactivity_table()\n  end\n\n  defmacro migrate_apactivity() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(maa(:up)),\n        else: unquote(maa(:down))\n    end\n  end\n\nend\n```\n\n#","ref":"database.html#pointables"},{"type":"extras","title":"Mixins - Bonfire's Database - an intro","doc":"Mixins look much like pointables:\n\n```elixir\ndefmodule Bonfire.Data.Social.Profile.Migration do\n\n  import Needle.Migration\n  alias Bonfire.Data.Social.Profile\n\n  # create_profile_table/{0,1}\n\n  defp make_profile_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_mixin_table(Bonfire.Data.Social.Profile) do\n        Ecto.Migration.add :name, :text\n        Ecto.Migration.add :summary, :text\n        Ecto.Migration.add :website, :text\n        Ecto.Migration.add :location, :text\n        Ecto.Migration.add :icon_id, strong_pointer(Bonfire.Files.Media)\n        Ecto.Migration.add :image_id, strong_pointer(Bonfire.Files.Media)\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_profile_table(), do: make_profile_table([])\n  defmacro create_profile_table([do: {_, _, body}]), do: make_profile_table(body)\n\n  # drop_profile_table/0\n\n  def drop_profile_table(), do: drop_mixin_table(Profile)\n\n  # migrate_profile/{0,1}\n\n  defp mp(:up), do: make_profile_table([])\n\n  defp mp(:down) do\n    quote do\n      Bonfire.Data.Social.Profile.Migration.drop_profile_table()\n    end\n  end\n\n  defmacro migrate_profile() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(mp(:up)),\n        else: unquote(mp(:down))\n    end\n  end\n\nend\n```\n\n#","ref":"database.html#mixins"},{"type":"extras","title":"Multimixins - Bonfire's Database - an intro","doc":"Similar to mixins:\n\n```elixir\ndefmodule Bonfire.Data.Social.FeedPublish.Migration do\n\n  import Ecto.Migration\n  import Needle.Migration\n  alias Bonfire.Data.Social.FeedPublish\n\n  @feed_publish_table FeedPublish.__schema__(:source)\n\n  # create_feed_publish_table/{0,1}\n\n  defp make_feed_publish_table(exprs) do\n    quote do\n      require Needle.Migration\n      Needle.Migration.create_mixin_table(Bonfire.Data.Social.FeedPublish) do\n        Ecto.Migration.add :feed_id,\n          Needle.Migration.strong_pointer(), primary_key: true\n        unquote_splicing(exprs)\n      end\n    end\n  end\n\n  defmacro create_feed_publish_table(), do: make_feed_publish_table([])\n  defmacro create_feed_publish_table([do: {_, _, body}]), do: make_feed_publish_table(body)\n\n  def drop_feed_publish_table(), do: drop_pointable_table(FeedPublish)\n\n  def migrate_feed_publish_feed_index(dir \\\\ direction(), opts \\\\ [])\n  def migrate_feed_publish_feed_index(:up, opts),\n    do: create_if_not_exists(index(@feed_publish_table, [:feed_id], opts))\n  def migrate_feed_publish_feed_index(:down, opts),\n    do: drop_if_exists(index(@feed_publish_table, [:feed_id], opts))\n\n  defp mf(:up) do\n    quote do\n      Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table()\n      Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish_feed_index()\n    end\n  end\n\n  defp mf(:down) do\n    quote do\n      Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish_feed_index()\n      Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_table()\n    end\n  end\n\n  defmacro migrate_feed_publish() do\n    quote do\n      if Ecto.Migration.direction() == :up,\n        do: unquote(mf(:up)),\n        else: unquote(mf(:down))\n    end\n  end\n\n  defmacro migrate_feed_publish(dir), do: mf(dir)\n\nend\n```","ref":"database.html#multimixins"},{"type":"extras","title":"More examples - Bonfire's Database - an intro","doc":"Take a look at a few of the migrations in our data libraries. Between them, they cover most\nscenarios by now:\n\n* [bonfire_data_social](https://github.com/bonfire-networks/bonfire_data_social/)\n* [bonfire_data_access_control](https://github.com/bonfire-networks/bonfire_data_access_control/)\n* [bonfire_data_identity](https://github.com/bonfire-networks/bonfire_data_identity/)\n* [bonfire_data_edges](https://github.com/bonfire-networks/bonfire_data_edges/) (feat. bonus triggers)\n\nIf you want to know exactly what's happening, you may want to read the code for\n[Needle.Migration](https://github.com/bonfire-networks/needle/blob/main/lib/migration.ex).","ref":"database.html#more-examples"},{"type":"extras","title":"Boundaries & Access Control","doc":"# Boundaries & Access Control\n\nBoundaries is Bonfire's flexible framework for full per-user/per-object/per-action access control. It makes it easy to ensure that users may only see or do what they are supposed to.","ref":"boundaries.html"},{"type":"extras","title":"Users and Circles - Boundaries & Access Control","doc":"Ignoring any future bot support, boundaries ultimately apply to users.\n\nCircles are a way of categorising users. Each user has their own set of circles that they can add to and categorise other users in as they please.\n\nCircles allow a user to categorise work colleagues differently from friends, for example. They can choose to allow different interactions from users in the two circles or limit which content each sees on a per-item basis.","ref":"boundaries.html#users-and-circles"},{"type":"extras","title":"Verbs - Boundaries & Access Control","doc":"Verbs represent actions that the user could perform, such as reading a post or replying to a message.\n\nEach verb has a unique ID, like the table IDs from `Needle`, which must be known to the system through configuration.","ref":"boundaries.html#verbs"},{"type":"extras","title":"Permissions - Boundaries & Access Control","doc":"Permissions can take one of three values:\n\n* `true`\n* `false`\n* `nil` (or `null` to postgresql).\n\n`true` and `false` are easy enough to understand as yes and no, but what is `nil`?\n\n`nil` represents `no answer` - in isolation, it is the same as `false`.\n\nBecause a user could be in more than one circle and each circle may have a different permission, we need a way of combining permissions to produce a final result permission. `nil` is treated differently here:\n\nleft    | right   | result\n:------ | :------ | :-----\n`nil`   | `nil`   | `nil`\n`nil`   | `true`  | `true`\n`nil`   | `false` | `false`\n`true`  | `nil`   | `true`\n`true`  | `true`  | `true`\n`true`  | `false` | `false`\n`false` | `nil`   | `false`\n`false` | `true`  | `false`\n`false` | `false` | `false`\n\nTo be considered granted, the result of combining the permissions must be `true` (`nil` is as good as `false` again here).\n\n`nil` can thus be seen as a sort of `weak false`, being easily overridden by a true, but also not by itself granting anything.\n\nAt first glance, this may seem a little odd, but it gives us a little additional flexibility which is useful for implementing features such as blocks (where `false` is really useful!). With a little practice, it feels quite natural to use.","ref":"boundaries.html#permissions"},{"type":"extras","title":"ACLs and Grants - Boundaries & Access Control","doc":"An `ACL` is \"just\" a collection of `Grant`s.\n\nGrants combine the ID of the ACL they exist in with a verb id, a user or circle id and a permission, thus providing a decision about whether a particular action is permitted for a particular user (or all users in a particular circle).\n\nConceptually, an ACL contains a grant for every user-or-circle/verb combination, but most of the permissions are `nil`. We do not record grants with `nil` permissions in the database, saving substantially on storage space and compute requirements.","ref":"boundaries.html#acls-and-grants"},{"type":"extras","title":"Controlled - Applying boundaries to an object - Boundaries & Access Control","doc":"An object is linked to one or more `ACL`s by the `Controlled` multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined in the manner described earlier. \n\n\nSee also https://doc.bonfirenetworks.org/extension-bonfire_data_access_control.html for more docs (TODO: merge/deduplicate)","ref":"boundaries.html#controlled-applying-boundaries-to-an-object"},{"type":"extras","title":"GraphQL API","doc":"# GraphQL API","ref":"graphql.html"},{"type":"extras","title":"GraphQL Introduction - GraphQL API","doc":"Go to http://your-app-url/api/ to start playing with the GraphQL API. The GraphiQL UI should autocomplete types, queries and mutations for you, and you can also explore the schema there.\n\nLet's start with a simple GraphQL thoeretical query:\n\n```graphql\nquery {\n  greetings(limit: 10) {\n    greeting\n    to {\n      name\n    }\n  }\n}\n```\n\nLet's break this apart:\n\n- `query {}` is how you retrieve information from GraphQL.\n- `greetings` is a `field` within the query.\n- `greetings` takes a `limit` argument, a positive integer.\n- `greetings` has two fields, `greeting` and `to`.\n- `to` has one `field`, `name`.\n\nThis query is asking for a list of (up to) 10 greetings and the people\nthey are for. Notice that the result of both `greetings` and `to` are\nmap/object structures with their own fields and that if the type has\nmultiple fields, we can select more than one field.\n\nHere is some possible data we could get returned\n\n```elixir\n%{greetings: [\n    %{greeting: \"hello\", to: %{ name: \"dear reader\"}}, # english\n    %{greeting: \"hallo\", to: %{ name: \"beste lezer\"}}, # dutch\n  ]}\n```\n\nWhere is the magic? Typically an object type will reside in its own\ntable in the database, so this query is actually querying two tables\nin one go. In fact, given a supporting schema, you can nest queries\narbitrarily and the backend will figure out how to run them.\n\nThe fact that you can represent arbitrarily complex queries puts quite\na lot of pressure on the backend to make it all efficient. This is\nstill a work in progress at this time.","ref":"graphql.html#graphql-introduction"},{"type":"extras","title":"Absinthe Introduction - GraphQL API","doc":"Every `field` is filled by a resolver. Let's take our existing query\nand define a schema for it in Absinthe's query DSL:\n\n```elixir\ndefmodule MyApp.Schema do\n  # the schema macro language\n  use Absinthe.Schema.Notation\n  # where we will actually resolve the fields\n  alias MyApp.Resolver\n\n  # Our user object is pretty simple, just a name\n  object :user do\n    field :name, non_null(:string)\n  end\n\n  # This one is slightly more complicated, we have that nested `to`\n  object :greeting do\n    # the easy one\n    field :greeting, non_null(:string)\n    # the hard one. `edge` is the term for when we cross an object boundary.\n    field :to, non_null(:user), do: resolve(&Resolver.to_edge/3)\n  end\n\n  # something to put our top level queries in, because they're just fields too!\n  object :queries do\n    field :greetings, non_null(list_of(non_null(:string))) do\n      arg :limit, :integer # optional\n      resolve &Resolver.greetings/2 # we need to manually process this one\n    end\n  end\n\nend\n```\n\nThere are a couple of interesting things about this:\n\n- Sprinklings of `not_null` to require that values be present (if you\n  don't return them, absinthe will get upset).\n- Only two fields have explicit resolvers. Anything else will default\n  to a map key lookup (which is more often than not what you want).\n- `greeting.to_edge` has a `/3` resolver and `queries.greetings` a\n  `/2` resolver.\n\nTo understand the last one (and partially the middle one), we must\nunderstand how resolution works and what a parent is. The best way of\ndoing that is probably to look at the resolver code:\n\n```elixir\ndefmodule MyApp.Resolver do\n\n  # For purposes of this, we will just fake the data out\n  defp greetings_data() do\n    [ %{greeting: \"hello\", to: %{ name: \"dear reader\"}}, # english\n      %{greeting: \"hallo\", to: %{ name: \"beste lezer\"}}, # dutch\n    ]\n  end\n\n  # the /2 resolver takes only arguments (which in this case is just limit)\n  # and an info (which we'll explain later)\n  def greetings(%{limit: limit}, _info) when is_integer(limit) and limit > 0 do\n    {:ok, Enum.take(greetings_data(), limit)} # absinthe expects an ok/error tuple\n  end\n  def greetings(_args, _info), do: {:ok, greetings_data()} # no limit\n\n  # the /3 resolver takes an additional parent argument in first position.\n  # `parent` here will be the `greeting` we are resolving `to` for.\n  def to_edge(parent, args, info), do: Map.get(parent, :to)\n\nend\n```\n\nThe keen-eyed amongst you may have noticed I said the default resolver\nis a map lookup and our `to_edge/3` is a map lookup too, so\ntechnically we didn't need to write it. But then you wouldn't have an\nexample of a `/3` resolver! In most of the app, these will be querying\nfrom the database, not looking up in a constant.\n\nSo for every field, a resolver function is run. It defaults to a map\nlookup, but you can override it with `resolve/1`. It may or may not\nhave arguments. And all absinthe resolvers return an ok/error tuple.","ref":"graphql.html#absinthe-introduction"},{"type":"extras","title":"Patterns - GraphQL API","doc":"","ref":"graphql.html#patterns"},{"type":"extras","title":"Message Rewrite Facility","doc":"# Message Rewrite Facility\n\n**WARNING: Due to how this app currently handles its configuration, MRF is only usable if you're building your own docker image.**\n\nThe Message Rewrite Facility (MRF) is a subsystem that is implemented as a series of hooks that allows the administrator to rewrite or discard messages.\n\nPossible uses include:\n\n- marking incoming messages with media from a given account or instance as sensitive\n- rejecting messages from a specific instance\n- rejecting reports (flags) from a specific instance\n- removing/unlisting messages from the public timelines\n- removing media from messages\n- sending only public messages to a specific instance\n\nThe MRF provides user-configurable policies. The default policy is `NoOpPolicy`, which disables the MRF functionality. Bonfire also includes an easy to use policy called `SimplePolicy` which maps messages matching certain pre-defined criterion to actions built into the policy module.\nIt is possible to use multiple, active MRF policies at the same time.","ref":"mrf.html"},{"type":"extras","title":"Using `SimplePolicy` - Message Rewrite Facility","doc":"`SimplePolicy` is capable of handling most common admin tasks.\n\nTo use `SimplePolicy`, you must enable it. Do so by adding the following to your `:instance` config object, so that it looks like this:\n\n```\nconfig :bonfire, :instance,\n  [...]\n  rewrite_policy: ActivityPub.MRF.SimplePolicy\n```\n\nOnce `SimplePolicy` is enabled, you can configure various groups in the `:mrf_simple` config object. These groups are:\n\n- `media_removal`: Servers in this group will have media stripped from incoming messages.\n- `media_nsfw`: Servers in this group will have the #nsfw tag and sensitive setting injected into incoming messages which contain media.\n- `reject`: Servers in this group will have their messages rejected.\n- `report_removal`: Servers in this group will have their reports (flags) rejected.\n\nServers should be configured as lists.\n\n#","ref":"mrf.html#using-simplepolicy"},{"type":"extras","title":"Example - Message Rewrite Facility","doc":"This example will enable `SimplePolicy`, block media from `illegalporn.biz`, mark media as NSFW from `porn.biz` and `porn.business`, reject messages from `spam.com` and block reports (flags) from `troll.mob`:\n\n```\nconfig :activity_pub, :instance,\n  rewrite_policy: [ActivityPub.MRF.SimplePolicy]\n\nconfig :activity_pub, :mrf_simple,\n  media_removal: [\"illegalporn.biz\"],\n  media_nsfw: [\"porn.biz\", \"porn.business\"],\n  reject: [\"spam.com\"],\n  report_removal: [\"troll.mob\"]\n\n```\n\n#","ref":"mrf.html#example"},{"type":"extras","title":"Use with Care - Message Rewrite Facility","doc":"The effects of MRF policies can be very drastic. It is important to use this functionality carefully. Always try to talk to an admin before writing an MRF policy concerning their instance.","ref":"mrf.html#use-with-care"},{"type":"extras","title":"Writing your own MRF Policy - Message Rewrite Facility","doc":"As discussed above, the MRF system is a modular system that supports pluggable policies. This means that an admin may write a custom MRF policy in Elixir or any other language that runs on the Erlang VM, by specifying the module name in the `rewrite_policy` config setting.\n\nFor example, here is a sample policy module which rewrites all messages to \"new message content\":\n\n```elixir\n# This is a sample MRF policy which rewrites all Notes to have \"new message\n# content.\"\ndefmodule Site.RewritePolicy do\n  @behavior ActivityPub.MRF\n\n  # Catch messages which contain Note objects with actual data to filter.\n  # Capture the object as `object`, the message content as `content` and the\n  # entire activity itself as `activity`.\n  @impl true\n  def filter(%{\"type\" => \"Create\", \"object\" => %{\"type\" => \"Note\", \"content\" => content} = object} = message)\n      when is_binary(content) do\n    # Subject / CW is stored as summary instead of `name` like other AS2 objects\n    # because of Mastodon doing it that way.\n    summary = object[\"summary\"]\n\n    # edits go here.\n    content = \"new message content\"\n\n    # Assemble the mutated object.\n    object =\n      object\n      |> Map.put(\"content\", content)\n      |> Map.put(\"summary\", summary)\n\n    # Assemble the mutated activity.\n    {:ok, Map.put(activity, \"object\", object)}\n  end\n\n  # Let all other messages through without modifying them.\n  @impl true\n  def filter(message), do: {:ok, message}\nend\n```\n\nIf you save this file as `lib/site/mrf/rewrite_policy.ex`, it will be included when you next rebuild Bonfire. You can enable it in the configuration like so:\n\n```\nconfig :activity_pub, :instance,\n  rewrite_policy: [\n    ActivityPub.MRF.SimplePolicy,\n    Site.RewritePolicy\n  ]\n```","ref":"mrf.html#writing-your-own-mrf-policy"},{"type":"extras","title":"Bonfire Changelog","doc":"# Bonfire Changelog\n\n## [0.3.5-beta (2022-09-23)]\n#","ref":"changelog.html"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Coordination MVP [#445](https://github.com/bonfire-networks/bonfire-app/issues/445) by mayel & ivanminutillo\n- UI to enable/disable extensions in settings [#448](https://github.com/bonfire-networks/bonfire-app/issues/448) \n- Static page generator [#444](https://github.com/bonfire-networks/bonfire-app/issues/444) \n- Publish creation of sub-topic in the topic's feed [#439](https://github.com/bonfire-networks/bonfire-app/issues/439) by mayel\n\n#","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Refactor navs/sidebars to use dynamic navigation & widgets provided by extensions [#447](https://github.com/bonfire-networks/bonfire-app/issues/447) \n\n#","ref":"changelog.html#changed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- When I reply to a task, the activity in the feed does not show the parent activity [#449](https://github.com/bonfire-networks/bonfire-app/issues/449) \n- Use same composer for create post / topic / create a new list / create task\n\n## [0.3.4-beta.8 (2022-08-26)]\n#","ref":"changelog.html#other"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Remember position in timeline [#392](https://github.com/bonfire-networks/bonfire-app/issues/392) by mayel\n- Should be able to click on a notification to see the related activity [#412](https://github.com/bonfire-networks/bonfire-app/issues/412) by mayel\n- Actions when someone clicks on follow/boost/like/reply buttons on a profile or feed while logged out [#441](https://github.com/bonfire-networks/bonfire-app/issues/441) \n- Combine duplicate posts [#396](https://github.com/bonfire-networks/bonfire-app/issues/396) by mayel\n\n#","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- User preferences missing a consistent UX structure [#430](https://github.com/bonfire-networks/bonfire-app/issues/430) \n- Bug: pop-ups from compose box are hidden if close to edge [#394](https://github.com/bonfire-networks/bonfire-app/issues/394) \n- reset the CW field after posting [#378](https://github.com/bonfire-networks/bonfire-app/issues/378) \n- On mobile, there should be an obvious way to reply to a single post when viewing it by itself [#371](https://github.com/bonfire-networks/bonfire-app/issues/371) \n- Alerts and feedback messages need to adopt a solid pattern [#305](https://github.com/bonfire-networks/bonfire-app/issues/305) \n\n#","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- i can't see what i'm typing past a certain amount of text. Like rivht now i dont' see what i'm typing. Might be some typos then^^ [#425](https://github.com/bonfire-networks/bonfire-app/issues/425) \n- Bug: When you switch user it *sometimes* stays on the switch user page [#377](https://github.com/bonfire-networks/bonfire-app/issues/377) by mayel\n\n#","ref":"changelog.html#fixed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- Make push notification system more solid [#180](https://github.com/bonfire-networks/bonfire-app/issues/180) \n- Test/fix/improve graceful degradation (usage without JS, or without a LiveView websocket, i.e. when logged out) [#365](https://github.com/bonfire-networks/bonfire-app/issues/365) by mayel\n- use @prop in Surface views/components instead of e(assigns, :prop, default) and declare defaults in props or mount/1 [#414](https://github.com/bonfire-networks/bonfire-app/issues/414) \n\n\n## [0.3.4-beta.6 (2022-08-19)]\n#","ref":"changelog.html#other"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- 3 options for smart input (sidebar, modal, floating) and improve responsive (modal on small screens) [#443](https://github.com/bonfire-networks/bonfire-app/issues/443) \n- Improve feeds async loading [#437](https://github.com/bonfire-networks/bonfire-app/issues/437) by mayel\n- Improve media/link attachments [#440](https://github.com/bonfire-networks/bonfire-app/issues/440) \n\n#","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- Show and count only local users in user directory [#438](https://github.com/bonfire-networks/bonfire-app/issues/438) by mayel\n\n## [0.3.4 (2022-08-09)]\n#","ref":"changelog.html#fixed"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Define & implement granular role & permission system for instance administration and moderation [#406](https://github.com/bonfire-networks/bonfire-app/issues/406) \n\n## [0.3.3 (2022-08-02)]\n#","ref":"changelog.html#added"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Define & implement granular role & permission system for instance administration and moderation [#406](https://github.com/bonfire-networks/bonfire-app/issues/406) \n\n## [0.3.2 (2022-07-30)]\n#","ref":"changelog.html#added"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Pagination topics list & feeds within topics [#431](https://github.com/bonfire-networks/bonfire-app/issues/431) \n- Check boundaries of a topic when tagging and if allowed auto-boost the tagged object in the topic's outbox [#428](https://github.com/bonfire-networks/bonfire-app/issues/428) \n- Show followed topics on a list [#424](https://github.com/bonfire-networks/bonfire-app/issues/424) \n- Topic settings [#423](https://github.com/bonfire-networks/bonfire-app/issues/423) \n- Topic activity preview [#422](https://github.com/bonfire-networks/bonfire-app/issues/422) \n- Browse topics [#421](https://github.com/bonfire-networks/bonfire-app/issues/421) \n- Tag something (eg. post/user) with a topic at any time (depending on boundaries) [#416](https://github.com/bonfire-networks/bonfire-app/issues/416) \n- Tag a post with a topic when writing a new post (or reply) [#415](https://github.com/bonfire-networks/bonfire-app/issues/415) \n- CRUD topics [#410](https://github.com/bonfire-networks/bonfire-app/issues/410) \n- Create a users directory [#159](https://github.com/bonfire-networks/bonfire-app/issues/159) \n\n#","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Optimise LiveView rendering [#426](https://github.com/bonfire-networks/bonfire-app/issues/426) \n- Allow us to scroll from anywhere [#391](https://github.com/bonfire-networks/bonfire-app/issues/391) \n\n#","ref":"changelog.html#changed"},{"type":"extras","title":"Other - Bonfire Changelog","doc":"- Add unique key to encircle [#248](https://github.com/bonfire-networks/bonfire-app/issues/248) \n- Database Question [#3](https://github.com/bonfire-networks/activity_pub/issues/3) \n- Being able to change activity type from the composer [#429](https://github.com/bonfire-networks/bonfire-app/issues/429) \n- use created and extra_info mixins on Category [#433](https://github.com/bonfire-networks/bonfire-app/issues/433) \n- check boundaries for edit and archive topic [#434](https://github.com/bonfire-networks/bonfire-app/issues/434)","ref":"changelog.html#other"},{"type":"extras","title":"0.3.1-beta.9 (2022-07-22) - Bonfire Changelog","doc":"#","ref":"changelog.html#0-3-1-beta-9-2022-07-22"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- BUG:Responsive, navigation goes under the mobile bottom tab [#420](https://github.com/bonfire-networks/bonfire-app/issues/420) by ivanminutillo","ref":"changelog.html#fixed"},{"type":"extras","title":"0.3.1-beta (2022-07-19) - Bonfire Changelog","doc":"#","ref":"changelog.html#0-3-1-beta-2022-07-19"},{"type":"extras","title":"Added - Bonfire Changelog","doc":"- Circles & flexible boundaries [#223](https://github.com/bonfire-networks/bonfire-app/issues/223) by mayel & ivanminutillo\n- Compose box at the bottom of the screen as an alternative to the standard microblogging input box [#419](https://github.com/bonfire-networks/bonfire-app/issues/419) \n- \"Compact layout\" in user preferences [#418](https://github.com/bonfire-networks/bonfire-app/issues/418) \n- Fetch metadata of links included in a post and show previews (of images, videos, etc) in feeds [#314](https://github.com/bonfire-networks/bonfire-app/issues/314) \n\n#","ref":"changelog.html#added"},{"type":"extras","title":"Changed - Bonfire Changelog","doc":"- Pasting images into the editor should upload them [#411](https://github.com/bonfire-networks/bonfire-app/issues/411) \n- Bug: When starting from the feed page, clicking back would exit the site [#400](https://github.com/bonfire-networks/bonfire-app/issues/400) \n- /write page was missing the boundary selector [#398](https://github.com/bonfire-networks/bonfire-app/issues/398) \n- Keep me logged in [#395](https://github.com/bonfire-networks/bonfire-app/issues/395) \n- Font size is too small in compose window [#388](https://github.com/bonfire-networks/bonfire-app/issues/388) \n- UI: moved topbar in the header to sidebar [#362](https://github.com/bonfire-networks/bonfire-app/issues/362) \n- Improved responsive UI for use on small screens\n\n#","ref":"changelog.html#changed"},{"type":"extras","title":"Fixed - Bonfire Changelog","doc":"- Bug: some notifications / live feed updates were making all other activities in the feed disappear [#383](https://github.com/bonfire-networks/bonfire-app/issues/383) by mayel\n- Bug: followed/followers pages remained empty despite having followed people [#373](https://github.com/bonfire-networks/bonfire-app/issues/373) by mayel\n- Bug: followed activity missing the person (in main feeds) [#372](https://github.com/bonfire-networks/bonfire-app/issues/372) by mayel\n- Bug: follow notification clears the home feed except for the \"new follow\" post [#366](https://github.com/bonfire-networks/bonfire-app/issues/366) by mayel\n- Bug: images attached to a post should appear in the feed [#364](https://github.com/bonfire-networks/bonfire-app/issues/364)","ref":"changelog.html#fixed"},{"type":"extras","title":"Changelog","doc":"# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nThis project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html)\n\n## [Unreleased (2022-11-19)]\n#","ref":"changelog-autogenerated.html"},{"type":"extras","title":"Added - Changelog","doc":"- Enable/disable extensions [#448](https://github.com/bonfire-networks/bonfire-app/issues/448) \n- Coordination MVP [#445](https://github.com/bonfire-networks/bonfire-app/issues/445) by mayel & ivanminutillo\n- Static page generator [#444](https://github.com/bonfire-networks/bonfire-app/issues/444) \n- Export my data [#235](https://github.com/bonfire-networks/bonfire-app/issues/235) \n- Customise bonfire without forking [#89](https://github.com/bonfire-networks/bonfire-app/issues/89) \n- Config-driven routing [#88](https://github.com/bonfire-networks/bonfire-app/issues/88) \n\n#","ref":"changelog-autogenerated.html#added"},{"type":"extras","title":"Changed - Changelog","doc":"- Refactor navs/sidebars to use dynamic navigation & widgets provided by extensions [#447](https://github.com/bonfire-networks/bonfire-app/issues/447) \n- LivePush security - efficient version [#234](https://github.com/bonfire-networks/bonfire-app/issues/234) \n- More efficient (batched) insertion of associated data [#233](https://github.com/bonfire-networks/bonfire-app/issues/233) \n- Beta: the great renaming/reorg, a stable API? [#232](https://github.com/bonfire-networks/bonfire-app/issues/232) \n- Improve feeds performance based on benchmark [#226](https://github.com/bonfire-networks/bonfire-app/issues/226) \n\n#","ref":"changelog-autogenerated.html#changed"},{"type":"extras","title":"Other - Changelog","doc":"- UI for federation configuration [#39](https://github.com/bonfire-networks/bonfire-app/issues/39) \n- Publish creation of sub-topic in the topic's feed [#439](https://github.com/bonfire-networks/bonfire-app/issues/439) by mayel\n- When I reply to a task, the activity in the feed does not show the parent activity [#449](https://github.com/bonfire-networks/bonfire-app/issues/449) \n- Feature Proposal: Use prefers-color-scheme [#451](https://github.com/bonfire-networks/bonfire-app/issues/451)","ref":"changelog-autogenerated.html#other"},{"type":"extras","title":"Bonfire Classic","doc":"# Bonfire Classic\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) ecosystem and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places","ref":"classic.html"},{"type":"extras","title":"More information - Bonfire Classic","doc":"See the [main docs](../../README.md).","ref":"classic.html#more-information"},{"type":"extras","title":"Bonfire Community","doc":"# Bonfire Community \n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.UI.Groups](https://github.com/bonfire-ecosystem/bonfire_ui_groups) - groups\n- [Bonfire.UI.Topics](https://github.com/bonfire-ecosystem/bonfire_ui_topics) - topics","ref":"community.html"},{"type":"extras","title":"More information - Bonfire Community","doc":"See the [main docs](../../README.md).","ref":"community.html#more-information"},{"type":"extras","title":"Bonfire Cooperation","doc":"# Bonfire Cooperation \n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire.Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire.ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire.ValueFlows.Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire.API.GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire.UI.ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire.UI.Coordination](https://github.com/bonfire-networks/bonfire_ui_valueflows) - basic coordination UI for projects and communities\n- [Bonfire.Kanban](https://github.com/bonfire-networks/bonfire_breadpub) - coordination tools with drag-and-drop card UI\n- [Bonfire.Breadpub](https://github.com/bonfire-networks/bonfire_breadpub) - needs & offers for mutual aid","ref":"cooperation.html"},{"type":"extras","title":"More information - Bonfire Cooperation","doc":"See the [main docs](../../README.md).","ref":"cooperation.html#more-information"},{"type":"extras","title":"Haha Academy","doc":"# Haha Academy\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) ecosystem and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places","ref":"haha.html"},{"type":"extras","title":"More information - Haha Academy","doc":"See the [main docs](../../README.md).","ref":"haha.html#more-information"},{"type":"extras","title":"Reflow","doc":"# Reflow\n\nThis app is part of the [Bonfire](https://bonfirenetworks.org/) and [ValueFlows](http://valueflo.ws/) ecosystems and bundles the following extensions:\n\n- [Bonfire.Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire.Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire.Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire.UI.Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire.Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire.Federate.ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire.Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify\n- [Bonfire.Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire.Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire.Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire.ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire.ValueFlows.Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire.API.GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire.UI.ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire.UI.Reflow](https://github.com/bonfire-networks/bonfire_ui_reflow) - frontend for the Reflow project","ref":"reflow.html"},{"type":"extras","title":"More information - Reflow","doc":"See the [main docs](../../README.md).","ref":"reflow.html#more-information"},{"type":"extras","title":"Upcycle","doc":"# Upcycle\n\nThis app is a flavour of [Bonfire](https://bonfirenetworks.org/) and bundles the following extensions:\n\n- [Bonfire:Common](https://github.com/bonfire-networks/bonfire_common) - common utils\n- [Bonfire:Me](https://github.com/bonfire-networks/bonfire_me) - accounts, user profiles...\n- [Bonfire:Social](https://github.com/bonfire-networks/bonfire_social) - feeds, activities, posts, boosting, flagging, etc...\n- [Bonfire:UI:Social](https://github.com/bonfire-ecosystem/bonfire_ui_social) - interface for basic social activities \n- [Bonfire:Boundaries](https://github.com/bonfire-networks/bonfire_boundaries) - define circles and associated privacy or permissions\n- [Bonfire:Federate:ActivityPub](https://github.com/bonfire-networks/bonfire_federate_activitypub) - federates activities with ActivityPub to participate in the fediverse\n- [Bonfire:Tag](https://github.com/bonfire-ecosystem/bonfire_tag) - @ mentions, hashtags, and tagging using topics/categories from Bonfire:Classify\n- [Bonfire:Classify](https://github.com/bonfire-ecosystem/bonfire_classify) - categories & classifications in taxonomies\n- [Bonfire:Geolocate](https://github.com/bonfire-ecosystem/bonfire_geolocate) - places\n- [Bonfire:Quantify](https://github.com/bonfire-ecosystem/bonfire_quantify) - units & measures\n- [Bonfire:ValueFlows](https://github.com/bonfire-ecosystem/bonfire_valueflows) - economic activities with ValueFlows\n- [Bonfire:ValueFlows:Observe](https://github.com/bonfire-ecosystem/bonfire_valueflows_observe) - observation of economic resources\n- [Bonfire:API:GraphQL](https://github.com/bonfire-ecosystem/bonfire_api_graphql) - a GraphQL client API\n- [Bonfire:UI:ValueFlows](https://github.com/bonfire-networks/bonfire_ui_valueflows) - reusable frontend components for economic activities \n- [Bonfire:UI:Coordination](https://github.com/bonfire-networks/bonfire_ui_valueflows) - basic coordination UI for projects and communities\n- [Bonfire:Kanban](https://github.com/bonfire-networks/bonfire_breadpub) - coordination tools with drag-and-drop card UI\n- [Bonfire:Breadpub](https://github.com/bonfire-networks/bonfire_breadpub) - needs & offers for mutual aid\n- [Bonfire:Files](https://github.com/bonfire-networks/bonfire_files) - file management for bonfire apps\n- [Bonfire:Data:SharedUser](https://github.com/bonfire-networks/bonfire_data_shared_user) - database models for shared users in the bonfire ecosystem\n- [Bonfire:Upcycle](https://gitlab.com/msoe.edu-public/sdl/y22sdl/upcycle/bonfire_upcycle/-/tree/master) - Upcycle UI","ref":"upcycle.html"},{"type":"extras","title":"More information - Upcycle","doc":"See the [main docs](../../README.md).","ref":"upcycle.html#more-information"},{"type":"extras","title":"Classic","doc":"| Package                      | License                            | Version    | Link                                                             |\n|------------------------------|------------------------------------|------------|------------------------------------------------------------------|\n| absinthe                     | MIT                                | 1.7.0      | https://hex.pm/packages/absinthe                                 |\n| absinthe_error_payload       | BSD-3; Unrecognized license        | 1.1.4      | https://hex.pm/packages/absinthe_error_payload                   |\n| absinthe_phoenix             | MIT                                | 2.0.2      | https://hex.pm/packages/absinthe_phoenix                         |\n| absinthe_plug                | MIT                                | 1.5.8      | https://hex.pm/packages/absinthe_plug                            |\n| activity_pub                 | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/activity_pub                 |\n| argon2_elixir                | Apache 2.0                         | ~> 3.0     | https://hex.pm/packages/argon2_elixir                            |\n| arrows                       | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/arrows                       |\n| bamboo                       | MIT                                | 2.2.0      | https://hex.pm/packages/bamboo                                   |\n| bamboo_smtp                  | MIT                                | 4.2.1      | https://hex.pm/packages/bamboo_smtp                              |\n| benchee                      | MIT                                | 1.1.0      | https://hex.pm/packages/benchee                                  |\n| benchee_html                 | MIT                                | 1.0.0      | https://hex.pm/packages/benchee_html                             |\n| benchee_json                 | MIT                                | 1.0.0      | https://hex.pm/packages/benchee_json                             |\n| bonfire_api_graphql          | MPL 2.0                            |            | https://github.com/bonfire-networks/bonfire_api_graphql          |\n| bonfire_boundaries           | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_boundaries           |\n| bonfire_classify             | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_classify             |\n| bonfire_common               | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_common               |\n| bonfire_data_access_control  | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_access_control  |\n| bonfire_data_activity_pub    | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_activity_pub    |\n| bonfire_data_edges           | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_edges           |\n| bonfire_data_identity        | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_identity        |\n| bonfire_data_shared_user     | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_shared_user     |\n| bonfire_data_social          | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_data_social          |\n| bonfire_ecto                 | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/bonfire_ecto                 |\n| bonfire_editor_ck            | MIT                                | 0.1.0      | https://github.com/bonfire-networks/bonfire_editor_ck            |\n| bonfire_editor_quill         | AGPL v3                            | 0.0.1      | https://github.com/bonfire-networks/bonfire_editor_quill         |\n| bonfire_epics                | Apache 2.0                         | 0.1.0      | https://github.com/bonfire-networks/bonfire_epics                |\n| bonfire_fail                 | MPL 2.0                            |            | https://github.com/bonfire-networks/bonfire_fail                 |\n| bonfire_federate_activitypub | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_federate_activitypub |\n| bonfire_files                | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_files                |\n| bonfire_invite_links         | AGPL v3                            | 0.0.1      | https://github.com/bonfire-networks/bonfire_invite_links         |\n| bonfire_mailer               | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_mailer               |\n| bonfire_me                   | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_me                   |\n| bonfire_search               | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_search               |\n| bonfire_social               | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_social               |\n| bonfire_tag                  | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_tag                  |\n| bonfire_ui_common            | MPL 2.0                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_common            |\n| bonfire_ui_me                | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_me                |\n| bonfire_ui_social            | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/bonfire_ui_social            |\n| cachex                       | MIT                                | 3.4.0      | https://hex.pm/packages/cachex                                   |\n| certifi                      | BSD                                | 2.9.0      | https://hex.pm/packages/certifi                                  |\n| cldr_utils                   | Apache 2.0                         | 2.17.2     | https://hex.pm/packages/cldr_utils                               |\n| combine                      | MIT                                | 0.10.0     | https://hex.pm/packages/combine                                  |\n| comeonin                     | BSD-3-Clause; Unrecognized license | 5.3.3      | https://hex.pm/packages/comeonin                                 |\n| connection                   | Apache 2.0                         | 1.1.0      | https://hex.pm/packages/connection                               |\n| cowboy                       | ISC                                | 2.9.0      | https://hex.pm/packages/cowboy                                   |\n| cowboy_telemetry             | Apache 2.0                         | 0.4.0      | https://hex.pm/packages/cowboy_telemetry                         |\n| cowlib                       | ISC                                | 2.11.0     | https://hex.pm/packages/cowlib                                   |\n| dataloader                   | MIT                                | 1.0.10     | https://hex.pm/packages/dataloader                               |\n| db_connection                | Apache 2.0                         | 2.4.2      | https://hex.pm/packages/db_connection                            |\n| decimal                      | Apache 2.0                         | 2.0.0      | https://hex.pm/packages/decimal                                  |\n| deep_merge                   | MIT                                | 1.0.0      | https://hex.pm/packages/deep_merge                               |\n| earmark                      | Apache 2.0                         | 1.4.28 | https://hex.pm/packages/earmark                                  |\n| earmark_parser               | Apache 2.0                         | 1.4.26     | https://hex.pm/packages/earmark_parser                           |\n| ecto                         | Apache 2.0                         | 3.8.4      | https://hex.pm/packages/ecto                                     |\n| ecto_erd                     | Apache 2.0                         | 0.4.2      | https://hex.pm/packages/ecto_erd                                 |\n| ecto_materialized_path       | Apache 2.0                         | 0.3.0      | https://github.com/bonfire-networks/ecto_materialized_path       |\n| ecto_psql_extras             | MIT                                | 0.7.4      | https://hex.pm/packages/ecto_psql_extras                         |\n| ecto_shorts                  | MIT                                | 1.1.1      | https://github.com/bonfire-networks/ecto_shorts                  |\n| ecto_sparkles                | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/ecto_sparkles                |\n| ecto_sql                     | Apache 2.0                         | 3.8.3      | https://hex.pm/packages/ecto_sql                                 |\n| elixir_make                  | Apache 2.0                         | ~> 0.6     | https://hex.pm/packages/elixir_make                              |\n| email_checker                | MIT                                | 0.2.4      | https://hex.pm/packages/email_checker                            |\n| emote                        | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/emote                        |\n| eqrcode                      | MIT                                | 0.1.10     | https://hex.pm/packages/eqrcode                                  |\n| eternal                      | MIT                                | 1.2.2      | https://hex.pm/packages/eternal                                  |\n| ex_aws                       | MIT                                | 2.3.2      | https://hex.pm/packages/ex_aws                                   |\n| ex_aws_s3                    | MIT                                | 2.3.2      | https://hex.pm/packages/ex_aws_s3                                |\n| ex_cldr                      | Apache 2.0                         | 2.30.0     | https://hex.pm/packages/ex_cldr                                  |\n| ex_cldr_languages            | Apache 2.0                         | 0.3.3      | https://hex.pm/packages/ex_cldr_languages                        |\n| ex_cldr_plugs                | Apache 2.0                         | 1.0.0      | https://hex.pm/packages/ex_cldr_plugs                            |\n| ex_doc                       | Apache 2.0                         | 0.28.4     | https://hex.pm/packages/ex_doc                                   |\n| ex_machina                   | MIT                                | ~> 2.4     | https://hex.pm/packages/ex_machina                               |\n| ex_ulid                      | Apache 2.0                         | 0.1.0      | https://hex.pm/packages/ex_ulid                                  |\n| ex_unit_notifier             | MIT                                | ~> 1.0     | https://hex.pm/packages/ex_unit_notifier                         |\n| exsync                       | BSD 3-Clause; Unrecognized license | 0.2.4      | https://hex.pm/packages/exsync                                   |\n| faker                        | MIT                                | 0.17.0     | https://hex.pm/packages/faker                                    |\n| fast_ngram                   | MIT                                | 1.2.0      | https://hex.pm/packages/fast_ngram                               |\n| fetch_favicon                | MIT                                | 0.1.3      | https://hex.pm/packages/fetch_favicon                            |\n| file_info                    | MIT                                | 0.0.4      | https://hex.pm/packages/file_info                                |\n| file_system                  | WTFPL                              | 0.2.10     | https://hex.pm/packages/file_system                              |\n| flame_on                     | MIT                                | 0.5.0      | https://hex.pm/packages/flame_on                                 |\n| exto                       | Apache 2.0                         | 0.2.3      | https://github.com/bonfire-networks/exto                       |\n| floki                        | MIT                                | 0.32.1     | https://hex.pm/packages/floki                                    |\n| gen_smtp                     | BSD-2-Clause; Unrecognized license | 1.2.0      | https://hex.pm/packages/gen_smtp                                 |\n| geo                          | MIT                                | 3.4.3      | https://hex.pm/packages/geo                                      |\n| gettext                      | Apache 2.0                         | 0.19.1     | https://hex.pm/packages/gettext                                  |\n| grumble                      | Apache 2.0                         | ~> 0.1.3   | https://hex.pm/packages/grumble                                  |\n| hackney                      | Apache 2.0                         | 1.18.1     | https://hex.pm/packages/hackney                                  |\n| html_entities                | MIT                                | 0.5.2      | https://hex.pm/packages/html_entities                            |\n| html_sanitize_ex             | MIT                                | 1.4.2      | https://hex.pm/packages/html_sanitize_ex                         |\n| http_signatures              | GPL v3                             | 0.1.0      | https://git.pleroma.social/pleroma/http_signatures.git           |\n| httpoison                    | MIT                                | 1.8.1      | https://hex.pm/packages/httpoison                                |\n| idna                         | MIT                                | 6.1.1      | https://hex.pm/packages/idna                                     |\n| inflex                       | Apache 2.0                         | 2.1.0      | https://hex.pm/packages/inflex                                   |\n| jason                        | Apache 2.0                         | 1.3.0      | https://hex.pm/packages/jason                                    |\n| jumper                       | MIT                                | 1.0.1      | https://hex.pm/packages/jumper                                   |\n| libgraph                     | MIT                                | 0.13.3     | https://hex.pm/packages/libgraph                                 |\n| licensir                     | MIT                                | 0.7.0      | https://github.com/bonfire-networks/licensir                     |\n| linkify                      | MIT                                | 0.2.0      | https://github.com/bonfire-networks/linkify                      |\n| makeup                       | BSD; Unrecognized license          | 1.1.0      | https://hex.pm/packages/makeup                                   |\n| makeup_diff                  | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_diff                              |\n| makeup_eex                   | BSD; Unrecognized license          | 0.1.1      | https://hex.pm/packages/makeup_eex                               |\n| makeup_elixir                | BSD; Unrecognized license          | 0.16.0     | https://hex.pm/packages/makeup_elixir                            |\n| makeup_erlang                | BSD                                | 0.1.1      | https://hex.pm/packages/makeup_erlang                            |\n| makeup_graphql               | BSD                                | 0.1.2      | https://hex.pm/packages/makeup_graphql                           |\n| makeup_html                  | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_html                              |\n| makeup_js                    | MIT                                | 0.1.0      | https://hex.pm/packages/makeup_js                                |\n| makeup_sql                   | BSD                                | 0.1.0      | https://hex.pm/packages/makeup_sql                               |\n| meck                         | Apache 2.0                         | 0.9.2      | https://hex.pm/packages/meck                                     |\n| metrics                      | BSD                                | 1.0.1      | https://hex.pm/packages/metrics                                  |\n| mime                         | Apache 2.0                         | 1.6.0      | https://hex.pm/packages/mime                                     |\n| mimerl                       | MIT                                | 1.2.0      | https://hex.pm/packages/mimerl                                   |\n| mimetype_parser              | MIT                                | 0.1.3      | https://hex.pm/packages/mimetype_parser                          |\n| mix_test_interactive         | MIT                                | ~> 1.2     | https://hex.pm/packages/mix_test_interactive                     |\n| mix_test_watch               | MIT                                | ~> 1.0     | https://hex.pm/packages/mix_test_watch                           |\n| mix_unused                   | MIT; Unrecognized license          | 0.4.0      | https://hex.pm/packages/mix_unused                               |\n| mochiweb                     | MIT                                | 2.22.0     | https://hex.pm/packages/mochiweb                                 |\n| mock                         | MIT                                | ~> 0.3     | https://hex.pm/packages/mock                                     |\n| mogrify                      | MIT                                | 0.9.1      | https://hex.pm/packages/mogrify                                  |\n| mox                          | Apache 2.0                         | ~> 1.0     | https://hex.pm/packages/mox                                      |\n| nimble_parsec                | Apache 2.0                         | 1.2.3      | https://hex.pm/packages/nimble_parsec                            |\n| nimble_totp                  | Apache 2.0                         | 0.2.0      | https://hex.pm/packages/nimble_totp                              |\n| nodeinfo                     | AGPL v3                            | 0.1.0      | https://github.com/bonfire-networks/nodeinfo                     |\n| oban                         | Apache 2.0                         | 2.8.0      | https://hex.pm/packages/oban                                     |\n| paginator                    | MIT                                | 1.0.4      | https://github.com/bonfire-networks/paginator                    |\n| pane                         | MIT                                | 0.4.1      | https://hex.pm/packages/pane                                     |\n| parse_trans                  | Apache 2.0                         | 3.3.1      | https://hex.pm/packages/parse_trans                              |\n| pbkdf2_elixir                | BSD-3-Clause; Unrecognized license | 2.0.0      | https://hex.pm/packages/pbkdf2_elixir                            |\n| periscope                    | Apache 2.0                         | 0.4.6      | https://hex.pm/packages/periscope                                |\n| phoenix                      | MIT                                | 1.6.10     | https://hex.pm/packages/phoenix                                  |\n| phoenix_ecto                 | MIT                                | 4.4.0      | https://hex.pm/packages/phoenix_ecto                             |\n| phoenix_gon                  | MIT                                | 0.4.1      | https://github.com/bonfire-networks/phoenix_gon                  |\n| phoenix_html                 | MIT                                | 3.2.0      | https://hex.pm/packages/phoenix_html                             |\n| phoenix_live_dashboard       | MIT                                | 0.6.5      | https://hex.pm/packages/phoenix_live_dashboard                   |\n| phoenix_live_reload          | MIT                                | 1.3.3      | https://hex.pm/packages/phoenix_live_reload                      |\n| phoenix_live_view            | MIT                                | 0.17.10    | https://hex.pm/packages/phoenix_live_view                        |\n| phoenix_pubsub               | MIT                                | 2.1.1      | https://hex.pm/packages/phoenix_pubsub                           |\n| phoenix_view                 | MIT                                | 1.1.2      | https://hex.pm/packages/phoenix_view                             |\n| plug                         | Apache 2.0                         | 1.13.6     | https://hex.pm/packages/plug                                     |\n| plug_cowboy                  | Apache 2.0                         | 2.5.2      | https://hex.pm/packages/plug_cowboy                              |\n| plug_crypto                  | Apache 2.0                         | 1.2.2      | https://hex.pm/packages/plug_crypto                              |\n| pointers                     | Apache 2.0                         | 0.6.0      | https://github.com/bonfire-networks/pointers                     |\n| needle_ulid                | MIT                                | 0.2.2      | https://github.com/bonfire-networks/needle_ulid                |\n| postgrex                     | Apache 2.0                         | 0.16.3     | https://hex.pm/packages/postgrex                                 |\n| pseudo_gettext               | Undefined                          | 0.1.0      | https://github.com/tmbb/pseudo_gettext                           |\n| ranch                        | ISC                                | 1.8.0      | https://hex.pm/packages/ranch                                    |\n| recase                       | MIT                                | 0.7.0      | https://hex.pm/packages/recase                                   |\n| redirect                     | Apache 2.0                         | 0.3.0      | https://hex.pm/packages/redirect                                 |\n| scribe                       | MIT                                | 0.10.0     | https://hex.pm/packages/scribe                                   |\n| sentry                       | MIT                                | 8.0.6      | https://hex.pm/packages/sentry                                   |\n| sleeplocks                   | MIT                                | 1.1.1      | https://hex.pm/packages/sleeplocks                               |\n| sobelow                      | Apache 2.0                         | 0.11.1     | https://hex.pm/packages/sobelow                                  |\n| solid                        | MIT                                | 0.12.0     | https://hex.pm/packages/solid                                    |\n| sourceror                    | Apache 2.0                         | 0.11.1     | https://hex.pm/packages/sourceror                                |\n| ssl_verify_fun               | MIT                                | 1.1.6      | https://hex.pm/packages/ssl_verify_fun                           |\n| statistex                    | MIT                                | 1.0.0      | https://hex.pm/packages/statistex                                |\n| surface                      | MIT                                | 0.7.4      | https://hex.pm/packages/surface                                  |\n| surface_heroicons            | Undefined                          | 0.5.3      | https://github.com/rocketinsights/surface_heroicons              |\n| sweet_xml                    | MIT                                | 0.7.3      | https://hex.pm/packages/sweet_xml                                |\n| table_rex                    | MIT                                | 3.1.1      | https://hex.pm/packages/table_rex                                |\n| telemetry                    | Apache 2.0                         | 1.1.0      | https://hex.pm/packages/telemetry                                |\n| telemetry_metrics            | Apache 2.0                         | 0.6.1      | https://hex.pm/packages/telemetry_metrics                        |\n| telemetry_poller             | Apache 2.0                         | 1.0.0      | https://hex.pm/packages/telemetry_poller                         |\n| tesla                        | MIT                                | 1.4.4      | https://hex.pm/packages/tesla                                    |\n| timex                        | MIT                                | 3.7.8      | https://hex.pm/packages/timex                                    |\n| twinkle_star                 | GPL v3                             | 0.1.0      | https://github.com/bonfire-networks/twinkle_star                 |\n| typed_struct                 | MIT                                | ~> 0.3.0   | https://hex.pm/packages/typed_struct                             |\n| tzdata                       | MIT                                | 1.1.1      | https://hex.pm/packages/tzdata                                   |\n| unicode_util_compat          | Apache 2.0                         | 0.7.0      | https://hex.pm/packages/unicode_util_compat                      |\n| unsafe                       | MIT                                | 1.0.1      | https://hex.pm/packages/unsafe                                   |\n| verbs                        | MIT                                | 0.6.1      | https://github.com/shannonwells/verbs_ex                         |\n| voodoo                       | Undefined                          | 0.1.0      | https://github.com/bonfire-networks/voodoo                       |\n| waffle                       | Apache 2.0                         | 1.1.6      | https://hex.pm/packages/waffle                                   |\n| wallaby                      | MIT                                | ~> 0.29.1  | https://hex.pm/packages/wallaby                                  |\n| web_driver_client            | MIT                                | ~> 0.2.0   | https://hex.pm/packages/web_driver_client                        |\n| where                        | Apache 2.0                         | 0.1.0      | https://github.com/bonfire-networks/untangle                        |\n| zest                         | Apache 2.0                         | 0.1.2      | https://hex.pm/packages/zest                                     |\n|------------------------------|------------------------------------|------------|------------------------------------------------------------------|","ref":"deps-classic.html"},{"type":"extras","title":"Cooperation","doc":"| Package                      | License                            | Version  | Link                                                             |\n|------------------------------|------------------------------------|----------|------------------------------------------------------------------|\n| absinthe                     | MIT                                | 1.7.0    | https://hex.pm/packages/absinthe                                 |\n| absinthe_client              | MIT                                | 2.0.0    | https://github.com/bonfire-networks/absinthe_client.git          |\n| absinthe_error_payload       | BSD-3; Unrecognized license        | 1.1.4    | https://hex.pm/packages/absinthe_error_payload                   |\n| absinthe_phoenix             | MIT                                | 2.0.2    | https://hex.pm/packages/absinthe_phoenix                         |\n| absinthe_plug                | MIT                                | 1.5.8    | https://hex.pm/packages/absinthe_plug                            |\n| activity_pub                 | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/activity_pub                 |\n| argon2_elixir                | Apache 2.0                         | ~> 2.4   | https://hex.pm/packages/argon2_elixir                            |\n| arrows                       | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/arrows                       |\n| bamboo                       | MIT                                | 2.2.0    | https://hex.pm/packages/bamboo                                   |\n| bamboo_smtp                  | MIT                                | 4.1.0    | https://hex.pm/packages/bamboo_smtp                              |\n| bonfire_api_graphql          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_api_graphql          |\n| bonfire_boundaries           | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_boundaries           |\n| bonfire_breadpub             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_breadpub             |\n| bonfire_classify             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_classify             |\n| bonfire_common               | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_common               |\n| bonfire_data_access_control  | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_access_control  |\n| bonfire_data_activity_pub    | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_activity_pub    |\n| bonfire_data_assort          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_assort          |\n| bonfire_data_edges           | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_edges           |\n| bonfire_data_identity        | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_identity        |\n| bonfire_data_shared_user     | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_shared_user     |\n| bonfire_data_social          | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_data_social          |\n| bonfire_editor_ck            | MIT                                | 0.1.0    | https://github.com/bonfire-networks/bonfire_editor_ck            |\n| bonfire_epics                | Apache 2.0                         | 0.1.0    | https://github.com/bonfire-networks/bonfire_epics                |\n| bonfire_fail                 | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_fail                 |\n| bonfire_federate_activitypub | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_federate_activitypub |\n| bonfire_files                | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_files                |\n| bonfire_geolocate            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_geolocate            |\n| bonfire_invite_links         | AGPL v3                            | 0.0.1    | https://github.com/bonfire-networks/bonfire_invite_links         |\n| bonfire_mailer               | MPL 2.0                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_mailer               |\n| bonfire_me                   | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_me                   |\n| bonfire_quantify             | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_quantify             |\n| bonfire_search               | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_search               |\n| bonfire_social               | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_social               |\n| bonfire_tag                  | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_tag                  |\n| bonfire_ui_coordination      | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_coordination      |\n| bonfire_ui_kanban            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_kanban            |\n| bonfire_ui_social            | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_social            |\n| bonfire_ui_valueflows        | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_ui_valueflows        |\n| bonfire_valueflows           | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_valueflows           |\n| bonfire_valueflows_observe   | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_valueflows_observe   |\n| bonfire_website              | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/bonfire_website              |\n| cachex                       | MIT                                | 3.4.0    | https://hex.pm/packages/cachex                                   |\n| certifi                      | BSD                                | 2.9.0    | https://hex.pm/packages/certifi                                  |\n| cldr_utils                   | Apache 2.0                         | 2.17.1   | https://hex.pm/packages/cldr_utils                               |\n| combine                      | MIT                                | 0.10.0   | https://hex.pm/packages/combine                                  |\n| comeonin                     | BSD-3-Clause; Unrecognized license | 5.3.3    | https://hex.pm/packages/comeonin                                 |\n| connection                   | Apache 2.0                         | 1.1.0    | https://hex.pm/packages/connection                               |\n| cowboy                       | ISC                                | 2.9.0    | https://hex.pm/packages/cowboy                                   |\n| cowboy_telemetry             | Apache 2.0                         | 0.4.0    | https://hex.pm/packages/cowboy_telemetry                         |\n| cowlib                       | ISC                                | 2.11.0   | https://hex.pm/packages/cowlib                                   |\n| dataloader                   | MIT                                | 1.0.10   | https://hex.pm/packages/dataloader                               |\n| db_connection                | Apache 2.0                         | 2.4.1    | https://hex.pm/packages/db_connection                            |\n| decimal                      | Apache 2.0                         | 2.0.0    | https://hex.pm/packages/decimal                                  |\n| earmark                      | Apache 2.0                         | 1.4.20   | https://hex.pm/packages/earmark                                  |\n| earmark_parser               | Apache 2.0                         | 1.4.18   | https://hex.pm/packages/earmark_parser                           |\n| ecto                         | Apache 2.0                         | 3.7.1    | https://hex.pm/packages/ecto                                     |\n| ecto_erd                     | Apache 2.0                         | 0.4.1    | https://hex.pm/packages/ecto_erd                                 |\n| ecto_materialized_path       | Apache 2.0                         | 0.3.0    | https://github.com/bonfire-networks/ecto_materialized_path       |\n| ecto_psql_extras             | MIT                                | 0.7.4    | https://hex.pm/packages/ecto_psql_extras                         |\n| ecto_ranked                  | MIT                                | 0.5.0    | https://hex.pm/packages/ecto_ranked                              |\n| ecto_shorts                  | MIT                                | 1.1.1    | https://github.com/bonfire-networks/ecto_shorts                  |\n| ecto_sparkles                | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/ecto_sparkles                |\n| ecto_sql                     | Apache 2.0                         | 3.7.2    | https://hex.pm/packages/ecto_sql                                 |\n| eflambe                      | Apache 2.0                         | 0.2.2    | https://hex.pm/packages/eflambe                                  |\n| elixir_make                  | Apache 2.0                         | ~> 0.6   | https://hex.pm/packages/elixir_make                              |\n| email_checker                | MIT                                | 0.2.4    | https://hex.pm/packages/email_checker                            |\n| emote                        | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/emote                        |\n| eternal                      | MIT                                | 1.2.2    | https://hex.pm/packages/eternal                                  |\n| ex_cldr                      | Apache 2.0                         | 2.26.1   | https://hex.pm/packages/ex_cldr                                  |\n| ex_doc                       | Apache 2.0                         | 0.28.1   | https://hex.pm/packages/ex_doc                                   |\n| ex_machina                   | MIT                                | ~> 2.4   | https://hex.pm/packages/ex_machina                               |\n| ex_unit_notifier             | MIT                                | ~> 1.0   | https://hex.pm/packages/ex_unit_notifier                         |\n| exsync                       | BSD 3-Clause; Unrecognized license | 0.2.4    | https://hex.pm/packages/exsync                                   |\n| faker                        | MIT                                | 0.17.0   | https://hex.pm/packages/faker                                    |\n| fast_ngram                   | MIT                                | 1.2.0    | https://hex.pm/packages/fast_ngram                               |\n| file_info                    | MIT                                | 0.0.4    | https://hex.pm/packages/file_info                                |\n| file_system                  | WTFPL                              | 0.2.10   | https://hex.pm/packages/file_system                              |\n| flame_on                     | MIT                                | 0.2.1    | https://hex.pm/packages/flame_on                                 |\n| exto                       | Apache 2.0                         | 0.2.3    | https://github.com/bonfire-networks/exto                       |\n| floki                        | MIT                                | 0.32.0   | https://hex.pm/packages/floki                                    |\n| gen_smtp                     | BSD 2-clause; Unrecognized license | 1.1.1    | https://hex.pm/packages/gen_smtp                                 |\n| geo                          | MIT                                | 3.4.3    | https://hex.pm/packages/geo                                      |\n| geo_postgis                  | MIT                                | 3.4.1    | https://hex.pm/packages/geo_postgis                              |\n| geocoder                     | MIT                                | 1.1.4    | https://hex.pm/packages/geocoder                                 |\n| geohash                      | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/geohash                                  |\n| gettext                      | Apache 2.0                         | 0.19.1   | https://hex.pm/packages/gettext                                  |\n| git_diff                     | MIT                                | 0.6.3    | https://hex.pm/packages/git_diff                                 |\n| grumble                      | Apache 2.0                         | ~> 0.1.3 | https://hex.pm/packages/grumble                                  |\n| hackney                      | Apache 2.0                         | 1.18.1   | https://hex.pm/packages/hackney                                  |\n| html_entities                | MIT                                | 0.5.2    | https://hex.pm/packages/html_entities                            |\n| html_sanitize_ex             | MIT                                | 1.4.2    | https://hex.pm/packages/html_sanitize_ex                         |\n| http_signatures              | GPL v3                             | 0.1.0    | https://git.pleroma.social/pleroma/http_signatures.git           |\n| httpoison                    | MIT                                | 1.8.0    | https://hex.pm/packages/httpoison                                |\n| hut                          | MIT                                | 1.3.0    | https://hex.pm/packages/hut                                      |\n| idna                         | MIT                                | 6.1.1    | https://hex.pm/packages/idna                                     |\n| inflex                       | Apache 2.0                         | 2.1.0    | https://hex.pm/packages/inflex                                   |\n| jason                        | Apache 2.0                         | 1.3.0    | https://hex.pm/packages/jason                                    |\n| jumper                       | MIT                                | 1.0.1    | https://hex.pm/packages/jumper                                   |\n| licensir                     | MIT                                | 0.7.0    | https://github.com/bonfire-networks/licensir                     |\n| linkify                      | MIT                                | 0.2.0    | https://github.com/bonfire-networks/linkify                      |\n| makeup                       | BSD; Unrecognized license          | 1.0.5    | https://hex.pm/packages/makeup                                   |\n| makeup_elixir                | BSD; Unrecognized license          | 0.15.2   | https://hex.pm/packages/makeup_elixir                            |\n| makeup_erlang                | BSD                                | 0.1.1    | https://hex.pm/packages/makeup_erlang                            |\n| mappable                     | New BSD                            | 0.2.4    | https://hex.pm/packages/mappable                                 |\n| meck                         | Apache 2.0                         | 0.9.2    | https://hex.pm/packages/meck                                     |\n| metrics                      | BSD                                | 1.0.1    | https://hex.pm/packages/metrics                                  |\n| mime                         | Apache 2.0                         | 1.6.0    | https://hex.pm/packages/mime                                     |\n| mimerl                       | MIT                                | 1.2.0    | https://hex.pm/packages/mimerl                                   |\n| mimetype_parser              | MIT                                | 0.1.3    | https://hex.pm/packages/mimetype_parser                          |\n| mix_test_interactive         | MIT                                | ~> 1.0   | https://hex.pm/packages/mix_test_interactive                     |\n| mix_test_watch               | MIT                                | ~> 1.0   | https://hex.pm/packages/mix_test_watch                           |\n| mix_unused                   | MIT; Unrecognized license          | 0.3.0    | https://hex.pm/packages/mix_unused                               |\n| mochiweb                     | MIT                                | 2.22.0   | https://hex.pm/packages/mochiweb                                 |\n| mock                         | MIT                                | ~> 0.3   | https://hex.pm/packages/mock                                     |\n| neuron                       | ISC                                | 5.0.0    | https://hex.pm/packages/neuron                                   |\n| nimble_parsec                | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/nimble_parsec                            |\n| nodeinfo                     | AGPL v3                            | 0.1.0    | https://github.com/bonfire-networks/nodeinfo                     |\n| oban                         | Apache 2.0                         | 2.8.0    | https://hex.pm/packages/oban                                     |\n| ok                           | Apache 2.0                         | 2.3.0    | https://hex.pm/packages/ok                                       |\n| paginator                    | MIT                                | 1.0.4    | https://github.com/bonfire-networks/paginator                    |\n| pane                         | MIT                                | 0.4.1    | https://hex.pm/packages/pane                                     |\n| parse_trans                  | Apache 2.0                         | 3.3.1    | https://hex.pm/packages/parse_trans                              |\n| pbkdf2_elixir                | BSD-3-Clause; Unrecognized license | 1.4.2    | https://hex.pm/packages/pbkdf2_elixir                            |\n| phil_columns                 | MIT                                | 3.1.0    | https://hex.pm/packages/phil_columns                             |\n| phoenix                      | MIT                                | 1.6.6    | https://hex.pm/packages/phoenix                                  |\n| phoenix_ecto                 | MIT                                | 4.4.0    | https://hex.pm/packages/phoenix_ecto                             |\n| phoenix_gon                  | MIT                                | 0.4.1    | https://github.com/bonfire-networks/phoenix_gon                  |\n| phoenix_html                 | MIT                                | 3.2.0    | https://hex.pm/packages/phoenix_html                             |\n| phoenix_live_dashboard       | MIT                                | 0.6.5    | https://hex.pm/packages/phoenix_live_dashboard                   |\n| phoenix_live_reload          | MIT                                | 1.3.3    | https://hex.pm/packages/phoenix_live_reload                      |\n| phoenix_live_view            | MIT                                | 0.17.7   | https://hex.pm/packages/phoenix_live_view                        |\n| phoenix_pubsub               | MIT                                | 2.0.0    | https://hex.pm/packages/phoenix_pubsub                           |\n| phoenix_view                 | MIT                                | 1.1.2    | https://hex.pm/packages/phoenix_view                             |\n| plug                         | Apache 2.0                         | 1.13.3   | https://hex.pm/packages/plug                                     |\n| plug_cowboy                  | Apache 2.0                         | 2.5.2    | https://hex.pm/packages/plug_cowboy                              |\n| plug_crypto                  | Apache 2.0                         | 1.2.2    | https://hex.pm/packages/plug_crypto                              |\n| pointers                     | Apache 2.0                         | 0.6.0    | https://github.com/bonfire-networks/pointers                     |\n| needle_ulid                | MIT                                | 0.2.2    | https://github.com/bonfire-networks/needle_ulid                |\n| poolboy                      | Unlicense; Apache 2.0; ISC         | 1.5.2    | https://hex.pm/packages/poolboy                                  |\n| postgrex                     | Apache 2.0                         | 0.16.2   | https://hex.pm/packages/postgrex                                 |\n| ranch                        | ISC                                | 1.8.0    | https://hex.pm/packages/ranch                                    |\n| recase                       | MIT                                | 0.7.0    | https://hex.pm/packages/recase                                   |\n| redirect                     | Apache 2.0                         | 0.3.0    | https://hex.pm/packages/redirect                                 |\n| scribe                       | MIT                                | 0.10.0   | https://hex.pm/packages/scribe                                   |\n| sentry                       | MIT                                | 8.0.6    | https://hex.pm/packages/sentry                                   |\n| sleeplocks                   | MIT                                | 1.1.1    | https://hex.pm/packages/sleeplocks                               |\n| sobelow                      | Apache 2.0                         | 0.11.1   | https://hex.pm/packages/sobelow                                  |\n| sourceror                    | Apache 2.0                         | 0.10.0   | https://hex.pm/packages/sourceror                                |\n| ssl_verify_fun               | MIT                                | 1.1.6    | https://hex.pm/packages/ssl_verify_fun                           |\n| stream_data                  | Apache 2.0                         | 0.5.0    | https://hex.pm/packages/stream_data                              |\n| surface                      | MIT                                | 0.7.1    | https://hex.pm/packages/surface                                  |\n| surface_heroicons            | Undefined                          | 0.5.3    | https://github.com/rocketinsights/surface_heroicons              |\n| table_rex                    | MIT                                | 3.1.1    | https://hex.pm/packages/table_rex                                |\n| telemetry                    | Apache 2.0                         | 1.0.0    | https://hex.pm/packages/telemetry                                |\n| telemetry_metrics            | Apache 2.0                         | 0.6.1    | https://hex.pm/packages/telemetry_metrics                        |\n| telemetry_poller             | Apache 2.0                         | 1.0.0    | https://hex.pm/packages/telemetry_poller                         |\n| tesla                        | MIT                                | 1.4.4    | https://hex.pm/packages/tesla                                    |\n| timex                        | MIT                                | 3.7.6    | https://hex.pm/packages/timex                                    |\n| towel                        | MIT                                | 0.2.1    | https://hex.pm/packages/towel                                    |\n| twinkle_star                 | GPL v3                             | 0.1.0    | https://github.com/bonfire-networks/twinkle_star                 |\n| typed_struct                 | MIT                                | ~> 0.2.1 | https://hex.pm/packages/typed_struct                             |\n| tzdata                       | MIT                                | 1.1.1    | https://hex.pm/packages/tzdata                                   |\n| unicode_util_compat          | Apache 2.0                         | 0.7.0    | https://hex.pm/packages/unicode_util_compat                      |\n| unsafe                       | MIT                                | 1.0.1    | https://hex.pm/packages/unsafe                                   |\n| verbs                        | MIT                                | 0.6.1    | https://github.com/shannonwells/verbs_ex                         |\n| voodoo                       | Undefined                          | 0.1.0    | https://github.com/bonfire-networks/voodoo                       |\n| waffle                       | Apache 2.0                         | 1.1.6    | https://hex.pm/packages/waffle                                   |\n| where                        | Apache 2.0                         | 0.1.0    | https://github.com/bonfire-networks/untangle                        |\n| zest                         | Apache 2.0                         | 0.1.2    | https://hex.pm/packages/zest                                     |\n|------------------------------|------------------------------------|----------|------------------------------------------------------------------|","ref":"deps-cooperation.html"}],"content_type":"text/markdown"}